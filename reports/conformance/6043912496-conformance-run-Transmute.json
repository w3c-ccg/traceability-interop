{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eb2f7408-9221-4814-965b-7a2be4f4f6ed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2224a88f-6b9a-45a7-b1bd-9205fd051c9b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40b87427-14e7-4762-a158-c8934ff7d6d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5115cd47-54f2-4822-ae7b-32ff0541ba22"
                }
              }
            ]
          },
          {
            "id": "4301b394-dd86-48cc-84db-705759d9f703",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a03acbaa-bdff-48ca-87e7-2f22cff41628",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fbf746ac-2afa-4a2e-86ad-f584627cfddb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d67c68ed-1e51-4b22-aef2-7b39629b3878",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0a1ee774-cf87-44b8-867d-4bad5216804d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a27bd61a-438d-48a2-a14f-25db52d24bec",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a67ec012-f908-4644-bf4c-3dc8e245d0a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b356bbdd-e8fb-4e4f-9460-e5d4d8e481dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9eb7194-c242-451e-b608-aa037a146233",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "545bbf63-31b0-4204-8939-9f0e1fde7411"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "253ea84b-ecfc-4f69-a77a-04b95bc0955a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2bf0ab8-fe13-4319-ae20-77378a2487bf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a610317a-eeb9-4f02-b348-f272777935ec",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f251e132-8631-4586-9b58-ad6b2c85af46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ea5b440-d222-41e0-a857-9f3da4863593",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3721ac7-2bbd-45f8-85dc-2f3145cfcc86"
            }
          }
        ]
      },
      {
        "id": "86add99c-b01a-4687-83f8-4e77d650ceaa",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "94af7186-eca3-4497-b9c4-272e2836b847",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fb80dda-126a-4d4c-b999-89b317564f37",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a38eb6d4-f147-44c5-9ec9-428d24611d40",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc76ba6a-27cf-4f0c-95bb-5ab812da6651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95927bd8-537e-4154-8b6d-874d671b602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e54b06-9348-48a2-9d3d-8fd3fbecf036",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ec554a-5e88-4566-8d2e-8ad5b60ab258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "526b893d-6864-433d-bfd8-01ea48ce964b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e800ab04-08e7-4881-a04b-2f22e799bfba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aaf24c-f404-4213-a4c3-bbd3996cd453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85037f68-d4c7-45c8-bf19-6a43ba9c8519"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95cf56aa-6414-4e38-afef-8e47470177dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cb8aee2-fb71-4bbe-b231-f0a885a22a4a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3362caae-ecf4-4129-914c-d45de4bed70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c34e8a84-409f-4699-8169-87204e26a2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b915f93-6675-446e-a417-c75ff63ae6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0973bb94-c242-4ccc-b21a-ea1cfc9a49c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c8fa1e07-974c-4773-a7ef-dcdb296b4502",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b7ff196-ced7-472e-bf23-8978493b74d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b4ddeda-30a0-40fc-9e6b-c8721d59aa9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ee1476b2-b137-4b88-a2d7-0694aa80b4a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa53ad97-de66-4195-b605-d540f48c8ae0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9d4ae390-fdc1-4995-ac7a-83b45d30f6d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e63c1bee-63fe-4792-800f-e9e82c3f4c52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ace30fab-cfde-4f9b-87e6-3e91fd66997d"
            }
          }
        ]
      },
      {
        "id": "cbd1cbc6-74ae-41ca-a859-f7e15a410a7c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aad13622-6e57-4ac5-b339-38de8fb77f01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08789870-1a94-497e-ad9b-da00739ea102",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d1fcf86e-5b34-4359-8e74-a8bdfa7b66b8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93df316d-262c-4e82-835b-9d6d2929509b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1c99e5-a91d-4369-8e90-4be733125869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2631e8-05b0-4f77-8ff9-4ba4ebd00360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9719193a-e30d-4736-841a-3ec5a7e662b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2cd576-3002-4463-8b0d-2637e586d91d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb08d0d-5ff5-4b0f-ba82-f35a2d1db01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad018e4-cca9-41ef-ae3e-21d737dd2686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2b9461-3863-4451-bf40-fc0ce55e334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab85d8ee-1d72-478f-9f04-f8f14dc7b9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2273f56b-f357-4446-a54a-36ef873b9b47",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21eae82-824a-415d-95d9-765e4936a717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d839e7f-38a7-4e2d-9f48-d9f2f4ff7062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda8c7af-b51b-4b9d-a09f-044988b2007e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eb0c92d-5618-4ebf-993d-fbd47c8c5475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f702385-52e1-4a74-9cef-b443fc1b5367",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb3ec6a-b13e-47b4-89c3-1f730610ee98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e2544d-7f8c-4303-873e-45017458dceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e132ab3-11dc-4410-87e5-b6f654517b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53307d5d-b71e-4cae-a870-0dda47f626ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f1d76c-1ab8-43cc-97d1-6b70c01c7237",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f29258-c02d-46ab-99e1-758b99b39491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0613eec-fa70-49b0-b621-783c145a9cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca14cfee-b602-498e-82d1-ec61ecfd11c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff979d4-4a60-4336-b60e-a41c672f9554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f60bbb8-985c-4a70-9bb4-26052f49d761",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98df51f3-04f3-4433-b754-8712df109592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a75f0e-11c4-4052-8aa0-703780710766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3c9efa-9b50-407c-ae69-48d8456c9e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "400f0438-7301-4a90-a0b0-321481bbd6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377d48f1-defa-41fa-a59f-fcf0d9201b13",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba91fb44-0e9f-4d19-8f01-b6f00e5488eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbc4395-8364-487a-bd40-f6ba5b9c8ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9936dcbb-e48d-4de5-aa56-3508aae74184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26a0facf-1cc0-42aa-89a2-997eae0f357e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0252f902-ee50-47f4-b165-7f3310fbfb8c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3c89c0-dab8-496a-85a1-bd371cd32840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e874dd30-4103-486c-8d08-9a9e91c7794a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa209ad-f56e-4564-8cfe-886334a3cb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c3d9722-f295-4182-8ee9-7d8445fdcf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287e70ad-7add-463b-8d9f-bd6487e3cf67",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdff79d-5b36-4a99-b11f-2f4ec107c921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0117720-33ac-4e6c-9907-20744ee80bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b585ae3a-41bf-4604-a187-3dee50f5e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6282a9be-8605-44fc-8bf0-3dd27beee377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2085e7b-ea21-4716-a05c-a66ab1e00b7e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb7b86a-f669-4d46-ac8d-dbc249bdcaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98942b5e-a9f4-4996-85dc-88d1de416381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dac101e-7b2d-4cfc-944c-0284d598db06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f90ff2c8-ae46-4911-b5f9-6f9eac8b34fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44280fd6-d6c8-4a85-b6c4-d5f9875a3c97",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a6eb74-6d21-4798-9108-ec21137210f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ef7b4d-5593-4fca-98bb-0e79e4d3d269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f69f50-0be4-4746-a647-16210179d92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64aae776-3bfa-4696-973f-5dfab1018fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1743592-810d-4be4-ada6-e93fe4e12410",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e5caad-a76e-4b04-9a00-7fb3023fdd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a6570e-5be1-42e8-98dd-7a718321e5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f94b72a-a4b5-4753-96ba-aadb6c851f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d787661f-a6d9-48dd-b813-eace34e8ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128c958d-ae23-47a6-abf7-d1e81a49dfa4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4830f5e6-9a10-4673-87cc-9ec6d00e2f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84383c60-0cc9-4650-a60a-c9cd68c44822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb50acd9-d8db-44d8-96a8-5a5ee2b93926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57c8d4f-1ab0-4bdd-8e2b-d6c53a8636bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff30ea82-be76-45cd-9ffa-a397bcc6e252",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f1a529-161f-4d57-a2ba-3331d0e7dccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bba04d-3e20-4bd9-97f1-3e8fb6ac3ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8396c548-dd6d-4039-bf29-de38528626d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05d7847e-96c3-4860-afc8-e540b6129e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47660b28-8669-4170-8d90-5eebe08a287d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce7a5a5-7b2e-4baa-89fb-b554a7fff17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eeb2d72-fe27-4ceb-8436-2b80cb3424c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d41f384-c8d5-464d-802d-8721645c0ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e458e55-9589-4f3d-aaed-e5467a32998b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b0555-4757-4bbc-b8ed-d45c062df7b0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb479877-860d-4718-a57d-d6bce17d92bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ddc435-fa01-425e-a148-d842018bf432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd32d1-3f85-4105-a29b-78ae9f9b646a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48523ab3-7b7d-407d-a6dc-bd58c6fcbc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1b1f98-39a2-4ce4-ac66-53cfe9ca4763",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ee1ed7-e4c0-4e4b-b931-54e02baccaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b7773b-656c-4b2d-9eb0-561d02a760af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cf51c5-741a-4c3b-8f27-e0b319e70309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9212a7b3-d6c9-4f4d-b7d1-0e936552dbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2514c1f5-414a-45b8-af55-d68bdfbd559d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774d161d-ef52-43b1-a49e-5266dbda66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae30ae2-616c-4f9b-8f23-0c31fc9a1d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69a2f31-2d95-4fee-bd57-51ed50486116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cae008d-ff4f-40fd-b678-8767a1e966a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f271ce1-e85e-4638-ab4c-712be058c992",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7da7ae-be01-4d90-bfe7-a02f5e435d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fa83e0-85bd-4e69-b108-1cb8aefefb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b6d210-1473-4e0f-8b91-d88d4765118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdd4da8-ca88-4713-9257-38cea6e2c56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e2eb16-4fd0-4b40-ad5f-2e1eecf03021",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b3cad4-b78f-4c92-8eeb-b2f156efc4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947b88a9-8920-4289-baed-8a06db4d4463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464f4eab-d637-4b7e-8a80-2f76ab2a1a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a677f45-d9da-4a48-a2d2-153b37cb586d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eca3ba1-f33d-4947-8d28-1fea626d810d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940db94f-7f83-45d9-a58b-bd2e6d084609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c6703a-0517-4ae3-a493-bca5a220fc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e03aa8c-fb13-4335-b6db-61265190077d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1748434e-1b49-4738-860d-cce6cf8171e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf53362d-a78b-4152-b4a6-b6f2dfaaceb8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe76d943-e5c7-4230-9e0e-96b48e867d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8746ff9d-a3f8-496d-9d0e-18064051e151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508fda57-31da-4efe-8cff-703bcc9e3577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7083d669-87c3-469e-bc93-6cb32e609417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e87a7d5-6251-4309-9db1-bf63691b76fb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfab4676-73bc-4f04-aa2f-c1a3eee12aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a481825-3959-4721-b116-261b39740da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d584a7-2a6a-43f4-9761-63129b4bc4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f07e77c-3412-42d0-b5ec-f190481c4c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951612e5-4c45-4d9d-b378-d8ffa419af61",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5922493-8006-4200-980e-1aa18cd74da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697b01a2-9f0f-4741-a48d-e2fac078df03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c825a38e-8655-4b5f-b59a-6a6464da1b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e1ea73-a957-4aa4-b93c-ef577bf5812e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce933a41-4a6a-4b35-bd19-4ee09dd962cb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cd6c7b-4aec-42dd-9a35-2abd1c7c49ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717b2d1d-04d7-4c05-9025-1cfe270a99cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57056897-631e-4b73-aec7-35a976ff6315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0162064c-804d-4fe7-b568-43f94f283ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e07dbfc-3329-49f4-bbef-bfbd3fdd4db5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131ad272-b50d-4d5f-93f7-4bc9462d167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3822fa76-4ae7-4f1b-a231-6629556ff30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52db818-dd8c-44e9-93d3-dba847fd88df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc600ad-9daa-4eaf-9947-c7628e763a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad700f4a-9ff3-4b51-be47-29cdf5492358",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654e99f4-1b01-4954-8a14-5877a7b83a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e654ad0f-fe5b-4be0-b874-cb9f4db8ded1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3b3cc1-3d76-44e4-8566-47ad5df265d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3172e9f-740a-42b5-bc0a-8efebde6f09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffccc2a-a0e3-4048-8188-db8c583d06af",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9904bb74-6922-4b24-a8d5-18013063365a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93764b2-e3f4-474d-8a7a-0e8c371cb02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb02d09f-5171-4b93-9759-c2e81f6aaefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5afed584-36f7-4c93-86ee-71b2242b229d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ada8277-5492-40e4-b6a6-b4d70578be3e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d375f7ca-45f8-4d92-b024-551077fd70c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1f5ecc-6f2f-4450-a39e-75cf4b685e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4f9bdf-66f5-487c-8a74-078162b0b39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8937ced8-af39-4927-9fdf-f5ecd9b8f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d750be97-fb41-40ec-91d2-186d255a8634",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973714d6-6967-4706-9700-48f05a2c08ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2394a75b-16a9-479a-9c29-ad353eb191be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a207164-b8d3-471a-9ec4-95f6dbd5942f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c830c0-997f-422e-a155-a5482ea49507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43290280-0e0d-493c-8ded-e6081107eae9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71cb4d2-4676-47b8-aa4f-04d928182bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96068f7-fe90-42b0-82a3-a9034a145452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce70e3c6-7837-49ec-812a-531ce9337262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "260890b5-d6c2-4789-9688-6c3323fa5b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622e437f-74ee-4436-bdb6-c4e260b87cde",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72894082-5de9-4523-84c0-2277a8d2dbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963eaf1d-bcbf-4bfe-8e4b-9570727994d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96564de1-afd9-449e-be54-77788ab60ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ce65b3-4a06-4521-8b33-a861c757e502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8edfb92-850c-41b4-ab06-34318b4ccfaa",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59bafff-df79-427f-b4d2-413eb6132899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161b0894-4e8a-462b-8d5c-f046787d553a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3f7192-32ec-458d-abe9-17df5c740566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00853dd-e8a3-4395-9d65-fb05248efc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30282a93-33a1-4f07-9138-6abdf9c16865",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a251c77-7312-492f-81ee-e3bebf8e7ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b665cc74-f114-4dc1-926f-d27afc195fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe41c4-f2a8-43ac-800a-61b270229cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac83f89-f621-48b4-ae0c-c48ee07f0c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9837152-9f59-4893-8d09-6425d164c297",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17fea00-40ad-41b3-8165-05b8096dfc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc0fd04-8152-4e26-bc10-fd74df629670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6044e1-ad03-4f66-b202-d43556727f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "235b15ca-b350-4ba7-a717-c091cdb5c129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00da35f8-9055-4b0c-9b7c-45469938450d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c4d7f7-994b-40b5-b9dc-3af77813260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f769582-2065-43fa-bfe6-43ead2b0fc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f008ca5a-8a4a-4938-9013-c06c95730d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f7b630-6859-4ae7-86b3-cd7357b4a464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562d96f9-d7f8-4539-950e-ab3f8f66cc98",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7e71a-afc7-499b-8e25-cdb5556f077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf06ddd8-8341-4ce4-9545-c5c97eeb34ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcd5602-a1fa-4cdc-b702-d131dad611df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa9b4fe-3f65-45ea-a1ff-b1e48f5e7180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa7c671-8901-4633-af2b-986c0cb0ecb7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a404fa61-7b97-452f-b9f1-658a0d384dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a129cf8-6699-4593-a1af-0122ba7177bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729e9082-a0bd-48a5-8b2b-6ce3d0ef7539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a878ca6c-340c-40d0-8ba6-e74079323188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5b7a7e-14b0-4ed7-a698-06d2babe0291",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee7f1bd-756d-495e-b6bf-7bc672a64eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47981b7-4e71-426e-bc87-7578a8364762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ea4848-ca71-48f4-9c29-26c07fb3d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f16989d-06c4-4651-a9e1-79e9e9b2f4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6c49bd-5de2-4e99-bde1-b0186d428ffc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eda734-3f53-4539-b1a8-d0317b9e58dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458b4759-ee86-4a4e-96ec-69578b0c79c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1afe7ea-5c1a-4438-9df9-ec176eaa164a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfdc2a2-c33d-4dcb-a842-825f51c2f18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d096535-95c8-4ad4-b88c-fafcc3080514",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f2e34-f7b3-4aed-ac76-e89a9648ba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ca7bcb-92b1-46a2-ab91-e3c323afba52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbd1160-e718-40a1-9e9c-f7bc4d484856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "784ce895-15f5-4be7-8981-adffbc16904a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fff2139-61d6-4b05-89cf-20c89149c7ce",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f47a16-8907-4c3b-a64c-bfce563cec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c81caca-eabb-447a-aee1-b27804025ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a566649f-4afd-497b-ad89-30ba65b52c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0df835e9-2c65-494a-808d-2b3c4ee93231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5eda84-3f94-4661-bb4a-13d17376b1ac",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecc9364-f588-4a3a-a5fc-60bb6961a574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3b9645-8a03-4977-bf39-0c8f1f9226ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f47cc8-d200-4d2c-ba86-2da9edb4fc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a623623c-9df7-497c-8814-0705d643cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced753f0-0c99-4ce7-968c-99683ab05e5a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317003dc-750e-4a6a-9514-64d651a5d680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fd4cbf-783c-45e3-8a31-0dba1ca684c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83174d7-e5fc-42d9-b238-f0cd7f544e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f47c956-b084-48df-8c34-8f33ac6b2e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635421b0-2237-484e-94f4-8a67fe589646",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624cd34b-ab26-45c2-bf74-62d04d431142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc61dcb2-7431-40ee-8657-ae35e1e9f14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f9422a-e7ec-461d-a5f8-da748b9d68ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13cc77c5-695e-465d-b95e-ce14c6223532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89526d10-4362-48e5-9227-a3707e14ce08",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6829c89-5bfd-4b45-a342-f3ddbf6a4b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477001d1-a7b6-4ee6-86a5-9897f09449bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008c7565-6355-4ce0-b467-28fa280f9415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d41674-bacd-4e56-b0ab-88df4095a01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6994c0-161d-424d-82eb-6e1f38c05ec3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9fa242-2243-4e5e-851e-d5e867deb5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1760127d-cf5b-4261-bbae-a6afd8164e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72df2faf-cf64-4316-836a-eaedada2d4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79ce03d-b606-48aa-b897-761124eeb16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8a319c-0369-4ee4-a424-d929a4cc2baf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158cfae0-9511-427c-a16c-03b6c751546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedac82e-43ea-4c87-a4b4-df976e066a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea0589f-3d1c-4294-a13c-03b0e1467553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05af4fa-6313-41f4-bfa3-4a67e325dd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8563e655-1e45-49bd-ba12-07e4d4d87f98",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc4ae8c-3f7f-4df6-882d-5ba5c22a43ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d816b4-fc15-456a-a5e1-392878962768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dc6939-fb5e-4694-9bc4-acc7baf35ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a65e388-348a-4af2-8ea9-ac809b8cf388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a339c249-a84f-4521-b76a-824143f48a43",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f33b04a-3a03-440b-afee-39e8e527c9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64533de-d856-428a-995c-047d5c7e45c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8f164e-3d95-4753-95ae-5f3e1840e541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a67c9aaf-ff4e-416d-b940-1c45fa9633e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1e92e1-f6f0-4b64-b09d-c15bb9e423be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bd0e25-ab8d-4897-8602-53899639dcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f49eec-e012-46fc-8c1e-424f502a0e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942f4c1a-9358-41bf-bec3-382dd8f81d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea800496-456a-4257-9f58-bbba056c05d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd519ae-558b-4a25-8851-2f1d9c9711c6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4199c4c6-8ca4-4af7-9ec2-0e7af489126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3796fc-25f4-4ec1-ac14-34b500d82073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9895744-5b6e-44b6-aa32-ffd40d5a5f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8ad406-effb-4ec0-9bbe-73f9275395fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05549e0a-83ee-4643-a3dc-1a1abdce1f41",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ace71-b151-4ae0-8d53-004500d42fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd412f3e-7ce1-41a6-a936-99e3b4f97c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad08df8-c580-4b8a-a9e5-aa0cab22626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e68bef-e296-4aec-9b9e-3035f83c7e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cffc402-2392-4d86-8dbe-9b04d38b0bbc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c351555-0d55-46cb-8eba-ee57f0babde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6994781-2b01-4149-ac25-e573619f0212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed969cb-a9bf-4694-9397-e67f1322014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4db994e-0035-414b-b49e-985afba45d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16745e3d-1067-4216-9d64-af1e7871a48d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594bda72-bc2e-4bcf-8622-2a5776e53fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d722c14-71f3-44ce-9b14-fc95d4541eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209a5fc4-2506-494a-ba64-ba706cf3f65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a665a67-6957-4966-af6b-a614a5cc19fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45974ee-0d83-49af-b386-aaccd95fb201",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a33ba0c-c48c-48f4-afeb-fb52d5f3ae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c38792d-4601-4abf-b95a-70376b9422b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79914805-917d-419a-a690-ab0084336413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e436ff4a-6966-4efe-8d50-27ed23937456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143519b3-f380-46f9-9972-05326b9b4833",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01e7e2d-ce51-48c2-9e9e-58efbb634c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90e87a4-b101-4e6e-95e8-95f25ffd39c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c19c62-8de9-46c2-ac3d-c5fb59f232c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54cf6033-ca79-47f4-8926-e54042bda210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5855440-e69b-4142-a480-1f128637aea3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec56dbf-96fc-4346-a803-9a3557834211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8057df35-fab4-475e-a657-69a8db520c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354700cd-d542-4c1d-a94a-89ee976dcf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "713d5236-ea03-44bb-9068-3eb6fff94c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709fbc63-4d6f-44e4-b031-2175c9ee676f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c325755-e575-4658-84e4-e76a261d16db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd83ab3-da8f-4010-b6bc-577020e2c99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd1a9e-6ed5-4c57-ae93-8cf94d98c364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4febe1-1209-461a-a73f-157a4981fbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f9371c-72d1-4eaf-ad8e-59ee3de48127",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d98cfc4-c59e-4469-b515-68ad1676a124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652f9704-04e6-40a2-9d2c-4286c8ac13b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d2126-a8ac-4a5c-a43f-4a16afc29527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e297932-042f-4ec8-b54f-0a359a6a8d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9081c0e0-55d2-42a9-8dee-61ccc3558c26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe5fc64-1871-4f56-a97c-55b066f098e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8587bcbc-ac53-43c6-ba11-cca0c174749d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993760d0-335a-41ec-8f55-7e8c1b09ad4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "002953b4-eb2e-453a-adba-019f0cf63fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473e38db-e01c-4b8a-9f19-90aac8bfe409",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c95c35-fdce-4f7f-b0ea-c89a30d7a59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b3a642-05dd-4b38-873c-cb6ca1e867f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cb01f4-9b5f-4814-94c7-4aa459ac90c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "150992df-8af2-4e9f-b793-4d45bb15b5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ee9c49-fb1a-4de7-8416-16cd5dfc6330",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a3be6e-cce8-41a3-a16a-3e4e45f89c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293b6531-db57-43b6-b99e-9ca53863cd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d729ae24-ecf9-44fc-a137-4542457da1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec453254-eba3-4451-81ff-f08225d9e43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80138b8-4a87-47b2-b1fa-751e9876c843",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e02047-19ca-4d8a-a12a-d82dabda17e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e5ba75-26da-4e4d-a8b3-0e247c59549f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253af9bc-9de1-43bf-b642-2635d8811abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f4f0d5-dec0-4bf5-9a51-c7eca1612b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b221e8d-cca7-4ca0-a3d5-1070c5d1251d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305f4b80-29ac-42c9-adf7-89f8498a7eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f11bce2-ac28-44e3-bb9d-23ff44e9c805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de95ca3d-4aa0-4390-bae8-f57d122efaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa820a38-87e7-48b0-a0cd-fcd9deaa360c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd5b251-3db7-4749-8561-02dac3a970d8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada58e05-a8ce-459b-a1dd-50b9b15d0de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49086921-135c-4ebd-bccd-3bf599f9bb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606f4f21-3ed3-4215-aa89-c2980855fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "689b9662-7666-49f2-98b7-78744cc57edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9def33c2-cd5e-4f46-95e4-bfd6108fdb4e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a098f0a3-cfdf-4efa-b773-5e50af44944a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ba25ae-19d9-44eb-a7ac-2697b358076f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7638653-d9e2-4ffa-8dff-870b0295039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "763b4830-8242-46be-af50-62333922399a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1d932a-d4b6-4c42-a5ff-9a212ae29665",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9a4514-e493-46cd-8e82-1b0c29511849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2b5c35-a388-4246-a1e5-c831e0a63592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71028daf-eaad-4982-9f84-c581bacf7c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "feaa08b7-2e6b-42ee-9f55-9c26969f0d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd41f231-bd84-41df-b896-eafe92c1af24",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370415be-1895-43fc-99a6-558555072d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679bfa6a-419a-451e-bdeb-48081e9c608f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c05721-c342-4228-9d12-000cecb70a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cf3b2f-7503-4909-9e55-4efdfa2ba9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcf278c-926a-48d9-8a74-3afe0f465eef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fab9c0-19e7-4339-8a89-3e1a9c6fa32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4916fd5-2804-471c-8842-741381f599a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3dc14f-de38-47d8-835e-27c40a7f3f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0f9eb1-1054-42f8-9ce3-7cbfe8c810b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8ca1ea-19cd-49a3-936d-c7ea3ece3654",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717f9a67-31ae-4f44-a69e-7688532459c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0b6541-3e4f-4a76-b969-2b2320e972eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f9295a-89e8-498a-9d98-f6261cbacd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93df114-59d8-4825-afec-be4e75c91a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8dbfa7-7ebc-4843-aebd-24535cef8d86",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee92cfb8-4a77-449b-9508-3510bc26b5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68d9a0f-c785-414e-baab-593ab6af1452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9efd7f-c847-494f-9f17-6e0b5f4284dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7a68fa-9826-456f-919e-5d943ec8e5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fbb8e5-7812-4e6a-81c8-61337ab5daac",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0fe1ba-f980-4d46-8c2c-818b3ff7a0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081953a5-9a7f-487d-84c9-93534c8bfd3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb44ea6-c510-462e-9968-c4882c55ccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f310e442-50fc-4e43-b14e-37ffcb6c0873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb86e58-d8d7-427a-9285-7bddeafd9aef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7050a4bb-cf3b-4f2f-a8d5-3ea8445b02f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9edab2-f068-4c3d-881b-26e1d62baf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1f5098-e1cb-46d2-8475-68a12bc71228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86a17eac-08fa-4581-bc54-50a1178e9ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4748f5d-cd15-48fe-a9a6-c3b9e8a85b3b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbf3ba1-e167-421d-b557-dc03701aab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25eb5fc-b897-44ac-8801-5fd7fe627dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e7d623-3335-46ec-9820-aed4317e8305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7871d381-3e51-40a8-b5be-97978b676006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29c1eb-1927-4c15-b164-25c9b8d2f8e1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89ee0ed-7462-4256-9077-bf38e4fdf9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd1c82d-9bb9-4c49-aa7b-316b1cea05f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b86ffd-4bb0-41ce-b1e6-1cce048cda1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d5c009-ec38-4eab-a6b2-2cccf9883577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4033bfb4-74b5-4443-838a-6b0813fb5334",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df5fa59-96cb-4d7f-ade7-02c48606db08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860c026d-364c-4a82-bc75-abd32136b031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d264c1-b1b7-4731-bced-f1940901331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb34e60-123d-45f5-a965-ff891396b245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3791d7ef-329a-43c1-b6ad-2a6ac1593396",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ac1d3-4d2e-47ee-8920-87dd70a2e68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbe56b8-114b-4bf5-8483-86caa6ff812e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca1de4d-fd93-4455-ae06-7bf14a9cb706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36df70d4-d5fe-4888-a0c7-8ee03074eba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd81379-b8fe-4fbb-9290-3a265a8fdb6d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b662c7a7-1f9d-4dc1-9681-589c927cb36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6138263e-bb81-4fb6-a870-ce1d9ef77233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5122f9c9-cf1c-42b4-85af-013a4fec9fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc63da0a-04fe-4327-82b1-45e279ccd9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6159b51-9ccc-4da8-a4f5-423a8560f7d9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4818ee02-4ba4-4868-aa22-3fa46ed6c95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a707d3d6-5ae0-4b62-8b78-3a3cd2d5a593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01002ff7-7fa8-45f3-93ee-21bd1731f135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6584f090-cf64-4b87-bf73-85f421a8247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d62d38-75a5-4fad-8107-0e1989eba4dc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1210a6a1-3e94-4246-976e-680ab2503559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceca2fe0-5043-41d4-8db8-c03c1b08c98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6236350c-2037-44a8-808b-2489fca8886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea109651-3972-4907-8f89-428f80afa382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4269caf-1c22-4d99-8f26-f03c04b9d3e4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee7d4ce-5fba-4a5b-a7eb-44f4467f1096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6f2dc3-755b-4e3d-aa02-6e6c55e8360a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de433dd-772c-496b-b3d1-3621dfff7b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a32ab8-08fc-4c9a-8143-ec1b2288f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1763e2b4-bd96-4764-a5af-72a040fb53be",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cc219f-36e5-4b39-864c-93ed6027681b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30414a29-491f-43bc-9c33-0c9e7625b7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fd22a7-a1b9-4d03-a40c-657c8fee9827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ac8b0e-1b1d-4c2c-ac0e-7fe319e63b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e49f356-1fe9-4d21-bd1c-fcf9e3c394d8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17481de-d3c8-4474-82cf-a688d9826c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f108a0ce-9c8e-417a-b650-910e15f7b952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262747e0-c3d2-4a66-b003-e2e3c0675289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e7ce6d-a173-42ab-8a02-68ad2a10fab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aee574-7d65-4f6e-8a76-6ae7f984babe",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fcf346-b424-4bd1-997e-c08deaa6ee21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e657b24-1ea6-4cdf-84cd-479676f207d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfc88a9-26b8-46bc-aa24-0e1b593d6c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95955002-9294-487c-a21a-08c1cfbf0a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac1dddc-0ec8-4180-a115-3ad4745b509b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e866ea-7817-4671-9173-f2b0dc6bd995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf899bf7-ae13-4bab-b929-b584b022484b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6da307-cae1-46fd-ba99-d08fa7baaba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84a2f88d-74ef-47b3-9ea1-06fe8ecbb1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719619e0-73e1-4f96-87e7-941ecf14899b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94c9096-1cf9-4208-a82f-38b22dccf57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31f2055-6a80-4052-809d-0230e1f72edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16a1aa4-57b8-4a52-b6c5-32202dd56acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87a05f02-5ea0-4b38-908b-6c5280276ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2816304e-ce4a-4fa5-9bfd-547326cbe00b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409446c6-8f00-48bf-b72d-fd0561e1de95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7becd7f8-bbb0-46dd-811d-e67f3fe43cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5b3272-526e-40c8-8a75-c4e0e5870c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61b757ed-9cee-4b0a-9d75-9537641889f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc5bda2-ecc7-49c0-9638-3d412f452588",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a4119-8475-4719-b6bb-d633f4f1f187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc012e9d-5522-4ec4-8677-56c39d1d5134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dbb743-c5ec-4780-b9c9-d22af035eb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20062e87-cd7e-4565-9928-fd1ac5304c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7657e0f9-1513-46f5-9d7c-3a68aa639b00",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c9c0d6-2a2a-457c-956c-90144edf739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69893341-36d2-4b27-b837-53b3459ffaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1242eda-0123-462f-8c23-440e9dc3eba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e668025-74d7-4ead-aacc-a35a0076174d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43735186-d68b-47d5-882a-e88e94edc7f6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c2e39f-ab19-474b-90b2-18ef99158a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a91e6c8-df4f-4235-9f59-61d74d1b6279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b19107-cca4-44ad-94bc-e9c57168e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "559ba777-4194-4d24-88e8-b0c59edb44c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9008de2c-eaff-46b6-bb02-4d9f96981ef0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bc0ac8-0e3b-4676-8f66-1f45bc883847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "334353d8-b759-4055-a7f4-a8216b8410c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98d89bf-8c23-4cc2-9a0d-e63d22279359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e668fb76-b90c-4991-a37f-d3277c3adcff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f9e33a4-7ce9-4859-8dc9-019fcca71f3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfdb44d3-33e6-4314-9981-887bbc107d07",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003c0087-8885-46ea-93e0-b5a4a4bfa26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfd1dc7b-e5d5-4c42-a506-4ee207c4a60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaa4bf2-827f-4244-ba71-eadaf95c58e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2b3da54-3cfe-4418-9194-fc1af087926a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28fafb8d-a19a-4a7a-a9e6-c356c2998fea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "982404af-c120-4b45-89ee-0c9803a37603"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dae0ce24-f60f-40d5-bea2-8c765348130b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fee7a4e9-94b2-4d67-8b39-414dfeda7584"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2bf57bc-de5c-4594-b32b-622fee8cddbe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ce2a37c-8861-49d1-917b-5905290e2505"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aea9f255-b7a0-446e-be0c-cd1866e46ea7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56a0802d-4ddb-4137-81e9-9cfe12468f5a"
                }
              }
            ]
          },
          {
            "id": "26a9d41b-3716-4702-bd65-75674f7bbc66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "057cca9e-2581-4c12-bb10-4e1d8e5bb934",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "caf04989-f1c9-430a-ae12-d6bdce8c2a87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19e36ca5-430e-442d-a3be-20dd32fe57b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdd029c8-54ea-4964-abdf-cbdf86f4445e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0611370-5e8f-44f4-992e-875b8a63e319"
                    }
                  }
                ]
              },
              {
                "id": "1b7474cb-aed5-418b-b33e-bcfa13d602a1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32158596-03ec-482f-974a-fdda1d90bef2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e3c6ace-52ce-43bb-9cb5-470b4704b3a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2eaba0c2-3e8b-427a-bb45-3042c7595f22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5eef801f-0e74-4068-a800-8a329b93249c"
                    }
                  }
                ]
              },
              {
                "id": "2c143db4-045f-42f5-9ab4-8978984623eb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "143f538b-3d88-4fb4-8189-a1f3a25ea4be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "009c2fc6-4b5a-4092-b758-5e147837e732"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3da6aebf-af5d-49ee-98dc-cec95fd5f1d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "555ffb88-a1d9-4f5f-a330-87698e94b0d9"
                    }
                  }
                ]
              },
              {
                "id": "9a8ad7ba-c64f-4725-94bc-e5de37fce1ba",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92e393d5-5a70-4b3b-9b81-475d06e4e1e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7075bb3-5eed-419c-84e4-2298f17476cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab1de5e0-6f71-4390-b222-989d6551e68b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b5aca417-0497-490b-b0d0-67361bcd6b0a"
                    }
                  }
                ]
              },
              {
                "id": "7a30fc0e-e1da-4849-8f19-5697b6f2f951",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e15b9d5-7256-4f98-b8db-eb924efa564c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1e61b54-2a44-4563-83ea-37c5b42ad533"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43d0ba6e-9a63-41bc-8751-bf9a878e2d3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d2204b36-c891-40e6-8249-502cb7956092"
                    }
                  }
                ]
              },
              {
                "id": "92f39a8e-7138-4173-a608-0a22335ddf4d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29af7ba0-faf4-4957-ba1f-d2a1636f1f94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d38ae10e-68a4-48b4-9651-70531a1d2443"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aa542b4-5345-4ffa-9320-0b4fae82b741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad905fdc-a4ca-441f-a80d-486e1782de79"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b3c21e0-1e50-43eb-8076-28e0cd313230",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cf9c69f-1171-4a62-bfde-6726e056c0eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e89fedf3-d051-4786-9214-4726583e8e0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "650db319-b402-4be4-bab5-2cf19b7eaecf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b75161e2-5263-4530-9489-b49f74c21968",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1a20b6d2-89c0-4192-8bad-d2e8b349636e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eafa2332-6624-4ea9-91b2-91d83461b9f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd4d1574-741c-4ec3-a6ce-37611930231d"
            }
          }
        ]
      },
      {
        "id": "02127193-90bf-4ee5-a387-61206549fb42",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aab330b1-975c-4cc6-ba08-866a1fde6075",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8dfb1f05-b647-47e4-bf0f-303336346846",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1481919-f271-4159-b794-c963050412c9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7a0134-9b86-4636-93a8-d72233b07173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f91ae2-e726-47a8-9242-3cd545e3cb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5be5e16-373c-4f9f-9d0e-cab6a18de138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0dcd7b-ca4d-4ffc-b24b-1c42b9ca9b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956d71ad-4a72-4508-b6c1-159ab26cd664",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32338b62-a674-410c-b9d5-ed2a98db765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53410e7a-d019-4335-a1c9-9c54b3a62f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb486e0c-c42a-43a3-bebe-6946bbe12b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9a8910-cf56-4e6c-9929-9b305092205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39740df6-442b-4daf-a870-c0d3ba8ce974",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4548dd74-258b-490e-a907-febbc4074f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a53de0-df9c-4f84-a55d-c5a45425e481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedd28bc-04db-4235-bc1c-b59fc4ec294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "400ee4e8-90af-4623-83c5-bafb6eab4a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3659d9-08ed-4213-ad80-e879119d70b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64da2b2-13a3-4e4a-8dd6-da482b58f87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90af3938-207b-4995-b18f-8fc1e90cc2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183146f4-a3d6-4f48-a284-a3565131e05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2da296-1bca-40ae-938b-0b3731c76586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f90be-37c3-4b3c-905d-2c93aac7f507",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ac038a-6910-4273-b33d-14e883b4cea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e243ff-c12a-4424-81a7-25853417d132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e7eced-3559-4cd2-84c0-27c9e83db1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17bfe9f8-4144-49c9-8cf5-5392c3576542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251f1a36-4bbc-4de2-8da3-c7ef43ca6443",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7ed8c0-5f31-4d46-be8b-4206a3b6c816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf9c760-32c8-41ea-a673-fc7433be0ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6a8730-8bc3-4d22-9e30-4cde2fcc40ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36f2a6b3-9f27-443d-9684-d0f0152582b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeeb531-6cf0-4030-8d1a-902d2852b3c1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e860fa07-ec14-4a11-88e7-fc96b28b5b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cda3ea-6017-4ceb-9a9f-6f573ed41486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a125ab2f-1561-4d7f-973a-b0cadcfc31b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc487c9-4e6c-4347-8e7c-c69f97e213dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2422eb89-9e7c-4b16-b2bf-2be2417f3987",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7ecb14-797f-46f6-b782-a6fa7630ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393871b9-18a3-4a1d-b860-012364f15849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d7c57e-f7d5-4e15-95d9-cc3a040c41f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba13f55-c8a6-41a2-9b53-c4046f2911af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56662d68-7724-4bbf-a792-b2573e6752ac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f32209-ecad-4a11-a08a-253b6b99d6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646e3d3c-045b-4d52-9938-8aace4373c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758c07b9-6ab3-4e8d-bb69-fc88f65ab22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "601ea203-4924-4826-bf57-43691038b5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2a0fb5-3b9a-4d25-9f81-ed0ee72d0caa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a96da2-afc2-4a04-aa7d-01994ffa1852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff4675b-8a90-4003-8410-2ca9c8793a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6698fbe-32d4-4199-b741-feac3ef99d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebd88f9-52e6-4265-9251-9797fe85a6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c851c8-886f-4f38-bb44-ee86829cade9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f369eb21-e31d-4719-ac6d-93f41d0dc263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88873172-c87a-4d57-9781-59b1a2a0f65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817987a6-ec00-44a4-981b-4554bbe953f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "75dcdf6e-e0a8-4aeb-9b25-9dbe3f14c82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098f7cd0-494a-4a1b-beba-de2f31aa7fa0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94050af2-b4c4-46f2-8ff6-ac14d1e98cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f10b349-187d-467b-9bbd-d21e65216ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8024a65a-d1af-42c4-9302-5e8c8804d1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b2e1c9-ffaa-47e0-8ed4-04a9e48c9442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9c9ab0-62aa-405f-9c7f-0ab7cb76de84",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf835a-08a3-4e95-8555-093f4dda1325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2be4e9-1290-4e11-b9b8-e15821e8eae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7772330-a8f0-4515-b9d0-c9c30eb31094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2139b8f-f36d-4846-b4f7-6888b2fe97c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9998b7e3-4489-42ae-a6dc-967ce20e39aa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac7c2cb-43c7-4b5a-b1a2-8ee59829afa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d00f07-8621-44b1-a48c-967946133aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7781784b-a19f-4f96-b615-7d754f5b6aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "26acf051-51d8-4612-b6bb-9aaa8a23664b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c350376a-1514-498d-9795-e180c01ca713",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7051946-028d-4a48-9006-be438accdcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b27e1d-792f-45c4-bedb-05e98009715b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ca816c-5239-4d40-94f6-ef5407a186d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3852ea3f-3020-4b03-a938-bf9dc286ebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20a7ffd-d042-4567-a2f8-befb6d2f0518",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1bdfe2-2c14-4e53-ab32-398a0885d8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b477e06-0cad-4966-99b1-0e7c14a08e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de94a85-405b-49e0-8ca5-f0f8bcf524c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba56728b-3258-4c78-a6a4-8be62a99206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35db62f-7588-45ec-838c-7ca5b7feb547",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bd0c26-95a4-4928-98ab-22b7835a409b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b9d511-9b61-42aa-b40d-00d40c476ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89451502-c16c-4986-aaea-e77f3d544524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa778eb2-b088-4274-9edb-e1c42c53cbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43efb3d-4531-4d7b-92bf-5405858d3acc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1a58e6-14f8-4931-9b6d-10a1a244caeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01615435-0b31-4ebd-9fec-ae93182743f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd655fe-aceb-4d36-bffe-118646273546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b70d90-88c5-469e-bb14-8602c0a3a473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3925e49-c5d2-4a2d-8a5e-0fe08c4ecafc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cde7829-1731-4ee3-be5f-ce8d791c2742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e98e4c-1229-4f9d-80e3-4e362c47bbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4798bdb-6dca-4d65-acdc-1941b437c423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5931b088-1e9f-49c9-bcb8-5a1cfc82b110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066b854d-b127-42ae-bbb4-dd82aaa78106",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028e2811-b2cc-49bc-a577-831beaefcdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264851de-e803-4e5e-b72b-b4a31f5bbb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe635c4-8694-483c-a2b4-1e1fdefb4074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbcbf78-4680-4a9c-8f7e-79ee6ca59125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e638c-2cbf-4436-a80e-75cb7e4f71d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ca63c8-1d54-4880-9496-96824af5fdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ddc5d4-807b-4403-9e18-18a4b034b4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed55049-0a76-4358-ac15-21193067c90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d520bc-81e9-4992-9b72-166aa5d0c762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9f9037-7102-4670-a9c7-232929ea39d9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9bca7d-104a-43e1-8cff-e1f908eda9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48421ec-dac1-48f0-8dbc-66bf15e6dc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dac6fe4-a931-4749-9366-463e97e70464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01e4012-2980-4a07-8f1a-fe0b51a83247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9606d70-35c2-4cf2-b7e5-c59366f22ef6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2491f92-a2a2-4f5f-9b19-4a4114006755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c8d313-c115-40f5-9b0e-7d589755c4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffbb699-8d9f-4278-8fce-031b7db3e46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ef6de5-053f-4215-a249-16e9b59c1872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a4032a-b3a9-4763-8998-0e2270acabb1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4688b6b9-3e9a-4026-9372-9600de3be8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c21b715-0b6f-4f3d-bcaa-e9d15a4114d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f204f2b1-2f43-4c75-abe8-fb081479d89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3a33e0-33bb-47e4-8536-c879d9ae3e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f91be4c-40e8-42d4-ab07-73dc72041650",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec95722-a180-4974-a852-0b76607b71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee84935a-b732-492e-b7c9-ec9c4f9c6159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db327d3-7e67-4a17-b305-5f1f5a59192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "070b2c5f-6900-4d0a-952b-5188a5ae695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d8c523-5ef0-4cd8-8087-506398870848",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107bef01-c3fa-44d9-bad7-ba6385e6b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d8d496-9877-4318-bfbc-7447a5d73c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7253318c-3c8b-46ef-8eb2-867ad1613528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "024964ef-a1ab-4433-bfe2-5597e6fd8d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1435944-7032-4788-819f-0d9b2bd20e57",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f64e93-434e-405b-baff-1a532bf98272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8eb8d9-bdf7-4fda-b97b-4f5a43849f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7482e98f-91e0-4af8-a3f7-c56624935d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45fe937c-eb59-4a45-b7e0-23d1def0a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a4d5b9-e95a-4f5d-a0d1-a76769564bda",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3460cc7-dd60-49c4-b43e-307328041710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43291f62-5008-4607-b1c2-720e62f4ace9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271673cc-ffeb-487d-b19d-bce4b13050c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f204e1fe-7d80-42f5-8e18-d35116881d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0d761c-1f22-4c62-8041-e5422d91852b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d8e2c1-c562-4eac-9685-5ea7728f56e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef70b0ff-c802-424d-9d80-2bb3433226d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2537cdb6-6081-4adc-9478-1f454bdc510c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d67195a4-a528-457a-8f76-b13781c3e4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff2d3e9-2d4b-4574-8fe6-d15235b5657e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee1624a-7cb6-468e-a2e6-d6211b2c5451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4cb3c2-2763-4b5b-b8e1-42ed7fd54d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c03e35-ed91-46e4-8e50-aa16d7edca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fafaf4b8-007c-4577-bbdc-b0881a41d106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813790e0-827d-4b4f-8e5e-a90b339e69fe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29eb77ea-2062-458c-894f-2041d51db507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788148c7-9642-459b-ab38-b7eba7241d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f01ce3-8bfb-416d-8ca0-2742fc45f84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34992b3a-b3db-4a36-a239-71b7de67bc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab176e4-06b0-4e56-8f1a-5b39b72c87f2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f3267f-2ab2-44e8-96ff-7d524077ed37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd8cb0b-8475-48c5-a2f1-13d4d5000e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33c9da3-eb28-4b79-9623-72e47a798545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "177860d6-c38e-4ccc-b9ba-c70fa7ca29db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7457937b-8ff5-4b0d-93da-2d87e8cf2a72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00afade1-af52-48e9-95e7-04470bbf5207",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aac312-8f39-4df0-9dd0-fed74a539ba6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "30497596-3295-4193-b66d-20a4796d3466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48160271-fd92-484a-953a-e0859c6c1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "808e696a-cf87-4cf9-ad7c-c8f90f486e88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96c81419-34f9-42a3-ab7b-544b23c5472f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c675af8-0926-4949-a30a-34c5ee81fcf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d50552e-4942-4669-9937-f8a325fdc83a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4089dc9-1acc-400d-8bbf-d2411155f122"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "262d4c5e-3afc-4e7d-861b-10cd581dbb41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f3bc958-68e6-42ad-b728-f40401524893"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2009803-a8f0-4c9b-9bfd-4cd4d449dcc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d41f92f7-2cbc-4c7a-bf90-b624f302ff33"
            }
          }
        ]
      },
      {
        "id": "85b17b65-9b5f-4b1f-b5d5-5affb63417e7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "26e5ef4a-7acd-4bf5-860a-1379e9060d0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de68dee3-3336-40a3-b83f-cc0c1d0b3d64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "deb0adef-db4e-4805-b674-f12f5c1a1a65",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ded26f-72f8-44ea-aec0-43fc160d9af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8424e7-a807-4375-a377-b83266351655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b064fb-f028-41a8-ad52-2399632c0159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cb79aa-e98f-466e-905e-b170ca41091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edde3309-74fd-4bb9-bdc4-2f5c6704b519",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f010be-a930-41e5-b97a-8d8ddc62665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b14d15-4f6f-46ce-88a5-0772311e3990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6860aa8-0eb3-4467-8b88-06d85617414d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19e892c-dd47-4d4d-8f45-ed0e6cf0b49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593998b6-a3e6-4b38-b1d7-486dc72a182f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21584ffb-866f-48a8-a8cf-be80cad997c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fc0ceb-a5b8-47b6-88f3-48b9753cccd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c167f83b-f952-4166-9325-a9041b8b5e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c97815-e887-455a-a8ec-5bea4a04c5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4430e1ed-59a4-42da-b9d2-0d81dd1e1e23",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f07d8a1-34ee-40ce-8c5f-0d746aac72ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed8c8cf-0c76-4340-a7e2-7e522dafeced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7b97ef-d621-4b02-8dc8-e15086843f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd2ef96-ea12-4c05-9cd2-d5b7824c99a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd6d5cd-f005-44dd-8099-6b655c785299",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88aa826-a58c-4b3c-80ce-f1ffafab2d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636b2526-7ac7-4549-8a54-e597a5dfc65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146ade88-743f-4f41-89d1-8ce4302c070e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ba4b89-d57b-400a-abd9-5f9f651ad07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3796daaf-e5a5-4620-8442-0008eabd07ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67479e71-031e-4e27-b65c-3f77c47bba1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467a18cb-b4a0-4a4e-97da-3f6cf09fea64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d74037e-96ef-4898-af05-1605b390b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d07fe7f6-2800-4cfc-8270-1c78ce71194c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f4cf9e-6317-45c0-9ea4-04945549a5ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8aecdc-9f7a-483d-960f-5ae972acf1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6b396f-5209-4422-a621-1cd61e8c21a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f315aec5-f491-4c8b-a4ce-711925f9e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65bc0391-6c38-4fa7-9fff-4c3fbb2fae3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1745847e-e310-4264-923c-41d1f6f19f14",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bf346f-e843-4299-b0e3-408c78cc50a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37b9803-db9f-45e7-a6c4-fe15aed6216e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04391b69-f425-493c-9ee7-8f4d9173edae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55815634-1124-4b8e-ae55-cf97d64c75d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d55a76-41c5-42f4-b8ae-a9432a1577b1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e490ac5-bea8-40a8-9dbe-e0b3a278d324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa28501d-6389-4ba6-975d-6860a4f4f8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4e8ef4-3115-44f9-a44f-260878055ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fc5e2b-958e-45ae-97ca-54bc5b9a31ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a20d7f-45a7-492d-add4-547450cc944e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51be3def-e5d0-4e07-91c5-53114843a01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c156054-2419-494e-ba7c-f2e42238a5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97c0aa5-69fa-42e8-a28f-4eabf53c0148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27a66ec-45c7-4c48-a8db-21c81238d80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b454680-ed2b-4e50-bfc4-2d022fadbeb0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c5daf3-4371-416e-8e23-589de1a35986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4c1147-6788-41a1-a040-dd60a99c333a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c235452b-ad19-4099-a6e8-a00a19b14244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac707f0-1e0e-45b9-b75a-0dbf27321ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4c8eaa-eccb-40d0-9b13-6969eadf0dd0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3ebcb3-d772-43df-867c-a6157d39de26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d37a46d-9fac-4038-9d56-774fecbd77b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56226721-0c18-45d1-bc17-fc5e46b023a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aca02ee9-825a-466f-8759-b024b9533a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030b701a-8e8c-40e9-ac0d-6c1594f0e7b9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2faefb-31aa-47af-95f0-3b61e79ae128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc8d1f6-caf5-42ab-bf71-c2a3c213e1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb57af7-d2ba-45d9-8add-ecfdab90e116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20522f1c-3e17-423b-bc2f-16d7763c4732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484272ce-f04b-40af-b9ed-c2b12bb85242",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f590ec-49ad-46b1-a52f-24e322ee4a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3530a77-0dad-4c91-8c76-e5d05f70eb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9e88de-5ac4-49ed-a73e-2cf9300c2c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ca052c-c62e-4d71-a31e-9a9c599f7127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341d6c3a-46b5-4c59-82b3-a9dc8b03379f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03862536-ea11-4a3c-93fc-2bbd260f67bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f56857-546a-488d-bb30-7f1cddc58d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91344642-9150-4734-9266-e4bd2165a770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2629e9e7-354d-4230-b600-56fb934ea925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce74724-abb1-456e-ad57-565f658a14b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ce67e8-0c5d-4353-a59f-a26c58f85199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94b7eea-e1e1-4f26-9d82-0ddfab620f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1795ca-c75a-41bd-aa7e-a17577a74eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd7784b-f353-4410-adbe-7025571a7bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dad82af-468e-4375-b655-c7bfbc80edd1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25020b9f-e6aa-4f1b-89c4-657b4bd21910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cbf38b-15cd-46ce-86ab-23979baa9a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8c08c4-e2d2-4d4d-9530-80e4715d744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b74053-fd82-41c2-a492-4f87621b94e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaf3fa8-67bc-4c24-9eae-0dffd3d8bced",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007c2f36-ef95-490a-b7b8-527364c42bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6cf1af-36ec-42af-aa46-ecb25c6cdda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94186ae5-0eee-4201-ae5b-d806cf439c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5423b0b-a216-4843-9b3e-2703472ba27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fef3601-df90-4c52-b46d-fdbdc3421c0d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c3fbe4-3e50-4e84-aeac-ca5e74ba3d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f48aab9-8ec8-4afc-99ab-9cce0300e97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe7cc7f-d26f-466a-a5cd-98e1dadec8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79cc8c7-8b39-4290-914a-17a3b4769392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25359d84-41b3-4f85-b05a-90f6b6c5b98c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df61c277-013e-4d27-b8a9-48e1df17e1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7dd8c2-02f4-429f-a80c-1854e7a4fa68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc1dd4-310d-427b-9bd0-a99a243d5db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b39076-d3bf-4f2f-9397-71f65c149099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89731470-36d7-44f2-99c7-606c4dbb7a04",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bda1c47-9f44-431f-9446-e8af6a7cc8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb63f73-3977-4fdb-b7f3-c4ca89eb2255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f627cac3-f6c5-4c28-a5cd-8066895c62fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf20491-86de-4f6b-97a9-50e03bc01e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ba4f85-3446-4653-8d88-33e13cc43b72",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ba7f47-f73d-422e-8bf7-70d4c91bca4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49146f67-f630-41c6-b04a-15423c9b037b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee5cbb8-15b3-4720-8a91-e85b5bb6187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e370efe-4f85-4d4b-a597-99c97e2d9848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4133e00f-be9a-48cb-88a8-b076459e7c6e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b83b5f9-69aa-4aae-b775-f7f1606d0216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03025b61-8c95-4c9e-915e-da1cda6254f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a986793f-2be7-410f-924b-af9538a95604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcee0d0-8339-4c90-b7ab-943ac23152eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d7b630-f51c-4a35-9655-8cc5dcbc6e6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1226f4af-2b57-4445-a8a0-d4d31a746552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd7bd0a-a168-41e4-b213-55ee7e339021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2f0bf1-5613-4c2f-9903-6462a3cc9b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3930740-dca2-4705-a04a-3d6095ae80ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5665b7-bacc-4ff0-98d1-a02b1575ed28",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0879256-460b-4a77-93fa-43b017a61825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edef8ff9-9989-4646-94a2-fe11f54546e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c37c93-b74d-48fd-b6e8-f04b7df547c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad01f3a-2f2d-4da9-9384-47a053c6fc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f83b50d-b31b-42fa-92b6-a4aed3bf0419",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a05e224-86b1-4b85-97cf-e756dbe3841f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21e5c80-ebd5-4f02-a595-0b47064eaf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9091300d-d030-47f8-ae85-f93ac6571c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "507d76ef-ce31-4320-ae42-92137925b4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2111bc-2363-47b4-97c6-e795be87ee54",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64cf7d8-f05b-4d1a-8448-c5a596fcacab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9b0ba1-5409-43df-8df6-76c780edb91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76848e77-070a-4f00-87e3-0b7313167ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd30b0b-adc3-4598-887b-8c3aba8e0c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963fc5ce-cadc-437f-bfce-b6d56cb9dfd4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe00df0-2d29-4c8d-b078-0076dc58445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7274e0-cca4-4250-8be5-eb30ee16cd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463a9f02-1f4f-44b2-971a-4d838e2113f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8235ce18-b3bc-4384-a81f-101abbaf9721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0ce8a1-8bf7-4608-b2b7-19e0f63f1d6e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e36ab9-a138-4891-a05f-da0191aa235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b500adb3-7043-4ba3-a387-bf7048c88baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3a92e9-d4a7-425d-833e-b8700c5b622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd9a3c3-4ef9-44cd-ab23-917ef454f2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf64c6-f6e8-43ea-a344-10d174d427c9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147ff5d4-15d9-4136-8d5b-970ddcca7b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a569b63c-b2b2-48ea-a771-94a7214632c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a18045-4d63-4e7c-88f1-426aa3f2815c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abdc2646-975a-434b-ad1f-9f63e46b2a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d5c534-99e5-4ddd-8508-27cf339593be",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca77fe7b-315e-4d53-9bed-dda4c322fe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e342ebfe-fc12-4e38-90f6-132b5bc13424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c1a847-1aa4-4429-b82c-15841468039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf1aeb3-76eb-4f40-b89b-420a6fc5be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e56c0af-ccd5-443c-a5ff-f8e2faa4e26b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a551efc-fb4c-489f-a7f4-5802c6f48ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a09db31-e729-4bb9-ae24-18a232af971d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c97c74-512c-41ba-8dae-f2a77c803958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "872b71b0-dbb0-4ffd-bd7c-602bdee6f8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c508d1f4-76e3-4fc7-b14b-0d4554d34922",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1357d48e-aac0-432c-a216-2b0645eef9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d315c6-b452-40f2-b3f9-6e1a69c9b87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2409e942-d801-41ee-8e60-de0554c65aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f46cd8-3200-485e-9555-e87355659003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d665b41-b55f-4d67-a163-e2897735b04c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc40c0eb-1d7e-4b94-8b66-7846e82b6238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f134927-4621-4a89-abb3-49c85882f537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a9fbac-7c69-4432-a917-f3bcf03c0aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf6a2c7-6745-4035-b55c-7d30456b909e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a6aadf-f163-4768-9b1a-db7a8f1fb809",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a24c5f-4205-4f34-894f-1af8238831ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac488dbd-117f-4e08-8a86-2d0fa388e7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995df7ba-bc20-45cc-b8ea-e593453adb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bd2be0-49b6-4396-bdc0-370803142485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a07c99f-568a-493e-a802-18133fad9f48",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46090970-2b3e-4874-853b-46cca81cf3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72d6509-37ce-4b14-b51e-87fa89d8d3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bcecc2-b642-43f4-8de7-fc6c664015dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f8f8e7-639e-4154-9c81-610d92085db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc84ea50-7532-4e02-8c88-9baad6f853c2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4911d2-5bb7-48d6-9a8e-4d54760e738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cf6c30-8593-401e-a718-689510740700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddbb85f-5d90-4320-82bf-289825db1388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ce25c8-7a80-4fae-aa4b-5204f19bbad3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cdecd7cb-b079-4618-a6fc-a476498d39b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db742eeb-d83c-45eb-90b0-c27ea939f22e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935e647f-5693-4604-b406-4f79c36779ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "50118374-5c0e-4cd0-a5d1-03d4bbbf1abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b7f6b2-c778-4532-b63c-5a41a860c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9159a46-b16f-46c1-a1ea-405023e86f70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87979faa-0d9b-4543-8cda-9e20a73c4a9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5aba1cd-8dbb-451e-8482-2eb0d62a7ba7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8e5bf22-0999-429f-b215-ec945908a848",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff0cf301-3621-4205-9cf9-6cb61610b291"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac30199e-0948-443a-b6a6-e9f815c1ac98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "162b3ebd-bcac-4cb0-ad4f-eccc14e92379"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c73b33aa-6df8-4afa-a89a-b826fae8e114",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3afc15cf-6dba-4603-ae7f-263806c8297c"
            }
          }
        ]
      },
      {
        "id": "90b7951a-0adc-4ec8-b7ed-6b7ad67df7a0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "93f47368-3eba-4146-adcc-c9482897fdd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b6a27e5-a439-4dce-9ba9-5819d3b5acf4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf91b576-04d6-42c3-ad28-d34cc1b25540",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e83dfe-5f4f-4426-9d13-150b85b5e417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95445fbe-c65d-4f63-a291-2c75bcfd040f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e4c441-7e73-4f9d-95a3-ac131612b2c8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aa68bd-6533-4841-bd10-64c7a8954ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4945fb3-a67a-4c79-a342-d17b6b7dd434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0410b1d2-f3e0-4ee4-a099-18172e7d3933",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1164393-a2c2-47d5-b37c-7821cc4897b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17f0080-557b-4209-ab7f-3d05e6ca6986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705f815d-cb1b-47c2-99da-78aef900f02e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9582c51c-f984-4f14-820c-c513d027b5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12843b7-c036-4bf7-8ffc-0aff9fe5446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5172c008-3df9-4e85-a4ae-68cfd113fc9d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a09ec33-4aa9-4953-bc7d-99c7f7801a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f51c4c8-7ab3-4c96-93df-3e4ff732e6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e869617-e83e-461d-a84f-625c24be7595",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ca96a-3a84-48a8-93ef-315a90318cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779311b9-6aa4-4f9c-aeb4-1432961c978d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062c1b1c-93ea-4332-ba7e-9a7c9b45053b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d685c48-50d3-449c-bd4a-a2934e6c2ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da217c2f-7ac0-4030-b612-587ba33c2b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a82d2f-a756-4183-b01a-d2bdd889f826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b3f221-1f47-4903-90d3-ba54a1746ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9974c96-612e-4b19-a2d9-689b463f2ee0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ead24f-7b0d-4105-9e94-692ab6c2fa5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64838b81-c1bb-4e85-bbdb-324d86475b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe5ebe3-1203-4727-b437-26d75104e40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2173861-8b63-410b-864b-4aef9935c7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e745c01-0c3c-49fb-abe4-9f9f7f5df5eb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74f5e64-2921-41ae-8d09-6257866f58c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42722a53-ee62-48a4-a4df-a756e76c455e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b17c95d-a25d-4a64-a2ef-b6de82ccc6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e81508b-a3f7-4f8c-8166-cefa24afc682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c35996-4dff-4976-9c7f-fbfd7e7827c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce19142-c546-4d24-b2cd-8fc3e22c3829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ae25ad-8b0d-4b76-80c9-692de0886014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae773bc-0722-41c4-b373-aaff900e80ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4baa9a-6197-4b7a-a57d-4f274bd9eab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfab952b-5134-436f-b241-9c6f868af262",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebd5630-862e-4ab1-8b3e-6b1a9f857a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d019c967-e3c8-466a-bd37-5666659477f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbde192-d776-4707-9616-f8ab41e31765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd3768f-381b-49f1-8179-7ee2430ba980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad3378b-bfc5-4afb-a237-06646f81ecf1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e17d4a-d02a-4e50-8ae9-b0163e3affee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7056d0-2560-4c7b-9eab-afcea3c0b186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c79dc7b-e329-421f-9aa7-28e92c640efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90720895-bd60-423b-a129-6b79a18e3f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4621c26d-ccf7-4d4d-9bbb-1a58491e8a92",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aeb887-f91d-47a4-89aa-749f30c89dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82af53f-965a-432f-aeb6-706b7fb15c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf15f91-600f-410c-91ef-deb1097b131e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed31cf5b-d550-4333-b9d9-191a8ddbc202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a398d4cf-b9a9-46dc-b047-b1f9610ec521",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7690e995-a274-4dc6-b921-3452a45096d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd486065-f09f-41ad-b296-e5a79ac5bd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ca944c-739c-4e9e-8c9b-b84b8f9eedfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcbdb22-55d9-4d0b-a225-180d0d0057a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1670812-f0f2-4f3d-a615-2c9c02f408be",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53a2b27-6b8e-4b94-b00b-b03f7558e80f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8ad8c7-8ba5-4968-9a52-e4d4d01d7141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ce7efd-0c9e-4c4d-9450-735c7645d762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbb9ef3-82b9-4bbc-a27b-11a6c1fa58cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a56bdd-201b-4e28-be4c-3fd67151361a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e81de49-ac0e-4d30-b05b-da9a0ae4982d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f01f9a-7552-4711-8d1e-f66780d87a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b675148d-f12f-4701-90ac-c64f56c376f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4322528-0296-4444-a2d3-48f73e3170c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00bae1e-c074-4493-98fa-a55310ce6261",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c574a05-8f52-47ee-84e9-bf601a98f86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e95029-aba4-4751-bfee-7d24018bade1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f5fead-99d7-4425-8a0a-ef34eaf3d5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a146db8f-f859-4f4b-bfa6-44a4f9e68c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5371b6d9-41c2-4f35-ac4c-5f1bc7fcc5fd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e0a94e-448b-4616-a801-25daa00fe15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a5b606-6a2c-413f-873d-134659c5f486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205a7a22-5876-42cb-85b9-858008050f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec43ee7-3a89-4b4a-a199-4c77b777e8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfe2997-d8f1-4136-bd75-f90afbf77278",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed8c243-713a-4f88-bde1-f49f508af67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c280ca-a15a-4c54-8bde-e8d81fa5547e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64732d6-8140-4431-8b99-1731f1002561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0de113-2225-40d3-a470-8956383b107e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba64fc-ea47-4a31-981e-621c7fff5067",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e915b348-40e5-42ba-adcd-cca2b0bdd41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cb1441-8502-47d5-89bf-775bb658d774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dabc848-7b16-49c5-b9bd-b3f8693d9310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dba5f4-f2ad-4699-ae2a-1f5642488c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa1e3c9-e801-4081-a1b1-4b5b0033aaf6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe1762c-334a-4bb4-94fb-73acb5a32b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dc0714-54fe-4506-b5a2-7fd52fff06b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdecc22d-9756-4bc5-9d5f-e7620c11a462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f241fc7-6a0c-4ff9-a134-5fe209dc8485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83265585-c3bb-43c8-83d1-1430d0a26b6e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bef23ff-ea83-4083-8bb2-b839c9de0a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1814d89-ff5f-4b1b-a4de-1a0a3ec85088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3008e32-f645-4019-ba3b-714000398925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da90174-c4ce-4b4b-ae4c-6baddf8a4ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab226715-a2c8-45c2-b5f6-492cb1a87b19",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fbeeb5-1cdc-4999-8d3f-5adfd7fc73f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca80d520-1857-4da2-9248-595e58add5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a925139-9271-4b3b-aae2-1d5ac9624538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a9842a-b49f-4368-b1ca-1366612bbeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257d1313-390c-45d0-9f1d-567af2f2618a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2b380e-5a05-4bcb-8b8e-b3203805a84a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57551ce3-6e67-4e5a-bf2b-323079d635ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29eb4250-4470-41fa-91bd-4612ec676db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1247a5c0-c4e1-4e5d-b973-f304b330d36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49297908-a7d7-4040-ab53-2fcb8c6aa0a3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c508ad-2660-47f9-bc85-444fd50e1b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839a5e07-205e-4eef-9353-923cd2e00297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480bd747-cd74-4a2d-ba74-af72db3359d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40c42e1-5f39-4d1d-b27b-3a2bcee4be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b64389b-6386-4d5b-9310-a0c4ac33e2f1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6c06d1-2cda-44d5-b82d-880ddba6d63e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f7dac5-259b-4e51-a269-b66b034b753a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6461cb-bf04-49cd-ab07-80128c6b6472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3045f59b-eded-484e-ae6d-05e17979b45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7924e9-95c3-4e02-8772-d5ccef2ff111",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c8e100-edc3-4c8a-bd65-04bff79530f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9238709f-0a39-4a43-96e8-3d7a9e5c80e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7088072-6f1c-4b7a-9c9e-ebc3afc01de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d36c13-0d40-4a4a-9325-6c082d65e49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4071a765-e406-4798-8d5c-2e449f06f15e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dae736-3ec3-4754-8950-11abc9f5d924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d47285c-e821-45f7-b229-929259f14121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dd64c3-4d7d-4657-b8ad-ce8149f382d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79335177-712a-4402-87e2-e56e4d6cd4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34507f3c-bf38-47d0-87e0-3875435b0f88",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d242bbd4-530f-487f-9571-208df3212722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a9532e-a352-4298-9162-ea40bd2d6b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af72eb-b372-4477-9015-5e6637103bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145f011f-fa1d-494a-9e30-1f1365aaa0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38eae6c0-a3cc-44db-aa6e-2a881ae8cdd9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741b6f9f-5e52-40c6-8d63-867bafe5d337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f050f36c-efe7-48e5-aa44-66556dcabb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6f90d9-7161-40c7-a1bb-69b49fc49f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b844fea8-bb5e-4037-be4e-67bf39468b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91baedb7-9de1-47f2-a08a-9616791c501e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385e446f-fb01-4023-b666-0cd34efecb2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ae8ea0-904f-48a4-88da-de80f7f3ad25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c6b073-47ac-4b82-8039-2dc9f3d2386a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c382ac-6cc3-4923-a1a6-dd12291373d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8204a2dc-3fd0-4372-975f-8cb9d8778612",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dded97e3-f944-41fd-9237-0daf580e0e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b62cf10-04e1-4b94-84c5-75c9e5455021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566f3e54-8f8f-4056-b568-948024b31a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86136e3-a302-4245-a8f2-ffbc4f7c5f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ffea5f-898b-4be5-8c6a-46f0fc921cb0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160e4dcb-c9a9-472d-b499-bee55164826f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4179a1f-e98e-449b-a312-4fc883c5c28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5f751f-74a3-4454-baa1-247c3c86eaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac8c7d3-2cd5-49d0-ad43-891ebee97c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b60002-0713-43de-a0e0-efbccc588643",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c943b16c-8cd2-46b3-ae5d-300f38650a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41fee249-7119-4426-a444-32dfe62d822a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8fec7-2fbc-4935-a522-5df7949cdd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888b8c5b-a0eb-4761-80b6-d73200e8643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5f28b7-460d-4a35-b565-30c403c4bb0e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9bb47d-96e2-4063-9305-745c7fb87819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f675c2b2-9d18-4d2e-baa8-22a8dd1be84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fa7ce1-ecda-4b11-8c3f-6cc355ee4ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5ccb78-2c1f-4c6d-8adb-b1fee75a4659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6304b922-8e61-4eb9-9e0d-375fa2a6702e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0274a8b-75fe-45be-b65d-b07387c5a7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b43255-9751-4615-b65d-718c4d5b592d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63977cbb-aef0-4a9a-9d24-d68bb4cd28e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a74cd07-3bec-4227-a1f4-e1825b485f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ccebfc-8913-4c98-bc32-b411352bf336",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3225095-fa5d-4b66-bede-e705cec9e495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816abc12-cec1-47ed-9058-d9bc6839e5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e978768a-6d03-47a9-ba50-1ee70b5b145e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba26d309-af77-4209-831a-582aa766f835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ccd412-bac2-4d54-9e27-6d6366b0991f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcb9f84-a319-4ba4-be7e-e352ba7ebe46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898deaef-c075-4096-93f9-eb77370db844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e557ac-3c45-4279-b080-81fa6bc8259e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7be4fa-665a-4c67-a4b7-2d638142d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00980337-adc6-45b0-951d-798dd7328476",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe448ec-80ad-4695-bcfc-a3011cb8d964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1e770f-687e-4e6a-b4a7-ba9ab3493e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077332b9-003b-40fb-aa0c-515123694685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee78191c-3582-4977-9bc2-fe7970d74a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ee7cff-6a82-42ff-95f7-9d1d5166e4d6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dbb06d-0e28-48f3-96b5-b4667098f053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec1a117-44a1-413a-9b5d-63a8203cbe73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49872c47-a32a-406b-991a-6f6eb703c144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ce3238-d4b4-485a-a2da-891fe6c63635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27b14fd-c9fb-4612-aced-66e6fadef4ec",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1aa7c65-af10-4c6d-9473-0ab20c753e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e60b122-bb99-47c8-839f-f7f58e8205cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf4e09-3334-4194-846b-a3bf76379884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66864d8b-6222-45ba-886b-9a77c0e3a5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4391509-c63d-4089-ab44-42407885d3e3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7346538b-3177-45ff-9380-8944345877ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9274f324-b430-4023-b2a0-0fe82a1c2f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c130d4-f1d4-46d5-9dc3-d0a51b060f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8f28e0-94ba-4666-94ee-da6cf055578b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4da56c-3f28-4683-835d-845c85171fad",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504e5a0a-1341-4208-bd0d-e2c9b92ab38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de3fca8-772a-49ba-8cfe-64a721360aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58280ccf-087d-47a7-a7ce-e188a84b72b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c01046e-9fec-4297-86b1-d0e613e18bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00defb19-67ab-426a-96d7-b7f1273c564f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de78e3c-1990-4af4-8009-645733ae5ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ebf7f0-5de8-41e8-8963-9aabe5365493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b1305f-9154-4196-97cd-fff9e573fd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dc71c1-128e-4f3c-9280-ab7af9f5c11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf988da0-2dc2-40f9-9797-fde3851542ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a2fb02-0435-41a6-9b78-2c0d59c53870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a111181-5bac-4735-b476-dcc23aa5ac2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1d76ff-5a60-468f-a2bf-e2b79afce67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50031803-a94e-4d62-94a6-cf37dac50f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d08fe5-43ab-48bc-835e-8a911c46a3c5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a929c44-a416-40ad-945e-7ea2dd102912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965faac7-070b-4892-a3e2-1920a59849b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63474369-4552-4e1f-a805-43beab37d94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62299526-6adb-45f5-9370-7c335d8f3791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e30099-0252-4be1-aad0-8a586e07bedb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5377426-4da6-49c6-9dac-9294921c8383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5572c6a-117f-4d2c-9072-daccd8d3ac74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f191de-0ffc-43ed-8a69-e4b914980896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b53b7b-8dcf-4cc0-ad49-3fb99fe2f59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190f757e-7258-4080-8c37-e2182b85ccac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a731a65-8c91-41f5-9a37-7690b5e3d90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913c371f-c6ee-4f43-8f8e-3b54377d134b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf57cc-091f-4f36-b524-5d48ae5a5544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9f67ba-2c1d-4197-9fe7-447b8723b045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd72491b-d062-494d-80b4-238a76db272d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ac960b-144e-494f-a0c5-fb7c6fe4b9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aade3ce-2c57-4b12-85b4-290af79aa945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871ef6d8-4430-4c46-875d-f11a95954572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ce3950-6959-46c7-8ad5-e026b5cf43d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae60ce-f956-4b5f-a7c8-cb8d6881c570",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d376c91-e8fe-4017-b93e-1673f3093b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d6e6fa-3116-4875-997d-d0cd3fbedfd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15c941b-65eb-4b1b-9df6-87fd1dea3c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868bdb78-e7fe-48a1-ac7f-4027ec1dadab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098179d8-de78-4ee2-b4fd-378a08be4889",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37ad41c-8fd3-45c1-9568-b9c5996276f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bda22a0-1cff-465c-a2da-27f435f6cb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d67b56c-66b4-4f60-b74a-c7ed6cbce7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27777faa-458c-4198-b7de-91af59d26292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e395f8fa-becc-4d51-ae65-157e7b3a1089",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fe25a4-bc62-4be1-85dd-f5745773f18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1e14b5-386e-4b37-82f3-e3fd027303f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe599d4-e62f-4a12-81a8-bcaddb2e17a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1977448e-eac1-403f-baa7-2416ba15fc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d9067f-5c26-4a36-a220-ab6fde63167e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e0d257-acef-49cd-a658-d505b58743b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c129618e-021d-4a51-9ec2-f11a20b9fbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2489e7de-7518-43ba-bd2e-c6335777e9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac62b697-51f8-4be9-89ba-da97f3b19723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae838c4-8cff-41cd-bd6f-86ea636377de",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8ddc03-9705-404f-94ea-fc79d7ce511f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda64052-710c-4377-97c4-faa267d27221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ea53d9-b136-4021-a1e6-27cc207f4c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1449ae52-b3b1-4147-9d4d-77fefde342bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a8df7f-e167-4d8a-9d4c-316ad800c3db",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d6f8cc-7236-4562-998f-8f4688ceac02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5552fdee-f45c-4769-a827-b0305715b58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bada99-7bb6-449d-8d90-cac3c8b9fa54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6663bc1d-da5f-42eb-8ca2-b2d64273607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c2d5d2-68f1-4364-a01d-6685a0179e3b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eb35c2-7365-43e5-8996-b8a05e9e5bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb931a44-cc2e-4e05-8995-e7d23be17eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47729ea-c788-48fc-b294-d58e450f9f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01df009c-895d-4c1b-be68-ddfc40dda3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d4079e-8ef6-4e5e-901c-61e8ad988883",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab3587d-5edf-4636-88f5-940ff3dee65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a59cae8-f662-4abb-9f0f-2d148806bdbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7747977-2015-427a-b0da-2ce96676dad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c679a0-ca1d-4909-b829-31b4326e68b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5fbea6-bd4b-4348-9cd5-7c97bbca6b7b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf0b893-e1a2-48aa-833a-d9ca6fe0eaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3a5617-cd43-40fb-b579-cc587d34974a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7365842-8314-413f-bd4c-01d477fd6965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2d56c0-de8a-47c5-8edc-59be751d476d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29304190-86f3-46ce-b61e-c49610c99204",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f2df4f-df8f-4a89-9d12-98862ce9b992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adb36f9-1449-4762-9299-d0f13e7c225d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5774ed-5e84-4c0f-9909-7f637bb8f826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ed2c27-c8dd-47af-9a90-f14754d68280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ba1420-e4af-4929-ab24-0240a2a7d483",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ad7b83-6904-4a7b-bc15-715a22c7f434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f08267-6b18-4d53-bac8-1ffb28f2bb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9049e5-1c1e-472b-90fd-ef7e0e1d63f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78ca774-3282-4e4c-bb36-778552800160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809c53d1-4e1a-4ebd-b2b1-29efb6ec5175",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c794eba-0aef-4a0f-82c4-090341022bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe91575d-a16d-428c-a603-7d803788b394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0190d9-5344-48fc-9955-de39963a3c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacf078c-8800-4571-a3f1-10aa599467e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76be4b6-dfaf-4c37-93dd-b99c68e779c4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e218104-3a66-4bca-9e9a-063e25e9304d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d08ecf-b111-4342-af35-01da07a2cae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64a0f0a-1ea9-4873-9d07-abff7576e09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53cb5b3-d991-4c93-b45b-2bbaa80608c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caae454-5cc1-4188-84cf-696466cb6972",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d4ae9b-253f-4f65-979e-397892aaa154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13708c84-fc34-42df-9caf-61f49d0e516b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76c2c5d-7839-4958-9771-c7029b24f1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5226f3c3-f660-4c50-a0e3-3e6aa1295c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8901e5f4-c0af-40a5-a139-cf9a533baeb0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b33562-65d9-422f-ba4b-0f30a2945bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95cdface-7322-46a2-9969-a065de45cfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069184a9-a835-48d9-b34c-bdea34533b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13de5ae6-8f89-42ba-b4a8-74ba74d54766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5cd149-1b0b-4a71-a9e9-9b793c4c753d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d882bd-7170-4f79-b4da-8292603fb4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d75daf2-08eb-4f01-aa95-057133cecd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41120c8c-4c58-4fc5-9cfc-4c368655f934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e575b7-0f90-4fd2-b671-0670adf5dcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710c1263-581a-454f-a087-a6715aa732b6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2bd50f-2b4d-430f-b457-c2bb033f8ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ed1053-cfb0-4d13-b6a9-067901ecab88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cff3a2f-6ca5-4a1b-8aeb-13b8cba5b60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e8847e-41e3-4aec-b236-294de109a1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ad3912-b5df-4212-9db7-4704df919c44",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315fdc81-71c2-414d-8c10-47e0f01dc549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9032886e-9e8a-4da9-a2f7-e7c45565f370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb4fd2b-31ef-4c46-af90-174e9599b915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbfb0a8-8474-4fd2-ac2c-e92b6c9e4bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6bba90-cae8-4e4c-8311-a75685fd722e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3691dbb-9d7f-4973-b732-975277c34588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa14bfcb-54c4-44e5-af7e-7db3d8e16987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaeeccd-adbe-4f3d-a830-00c5f8a1e09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99c5d58-c150-4f47-a185-6db40c8e18da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49d32b8-048c-4f20-a17a-8e44a4f89515",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd9e54d-ebe7-493e-8563-87041e4b1f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306e5b18-930d-4d7a-877a-cd3c41c596b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74172a7c-89e3-4ff1-a2d0-63509ee1aa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f475f73-ce3f-4530-a616-dcfecf1a7f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20017942-8ab5-44f0-b069-3079a42d22a7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeeb128c-517c-45c8-9644-0e9578e729eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f6302d-470f-4ad2-9a7b-fd17cd5a0d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001e858-675d-43f3-9e23-7f9819b84201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ca7d02-0c93-424e-96d6-adf4f8abc271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1a3945-ff85-4c32-9ae5-16eac4e55bc6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde82537-5e84-4192-9def-8967d5f93952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebed6627-2982-4a77-9a90-8a3cc2712bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927a7841-4d3b-47be-a708-ff81addbffc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5c4c2b-e1f4-45c1-b5d8-6c802fc1aec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f25d0a-1644-427d-83b7-df201ec46f01",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7e894b-4aee-428b-9599-2288f55f1e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "030b7621-ec3d-426f-9127-79fd7646bac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d81f5c-9167-4658-a6b3-7b412642f098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd07163-b095-4c14-ba6f-73f955db4b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7763f76d-8ed2-4b08-9fb5-557ac517cf7d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dc6455-c904-4ba1-9f1b-f9f77892e7fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2b9f3c-ec10-44f4-804b-a21a0821adf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6bddf1-41ef-4d34-a6fd-39b8c1181440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccc4e61-1e1a-4bea-9b67-cd9632525da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7f4eb8-9452-4811-a551-7cc3a0cee17b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a058f34e-9281-444e-93ba-7f2679184ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa6a922-30ec-408d-a1ff-1f52ca42714a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6874fb35-21a6-47b6-b95a-ff7c4052cda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1507358-0b8d-4f9e-9e08-dd67f4950a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856aa5af-72ea-4fcf-8783-196d3cdeb880",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58339e33-7f75-4ba2-bfc6-218b31108f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb84ee6-0486-4c9c-9669-f6ce1c351adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b1b373-f4d2-4763-92b8-9a1d77885592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d2994c-e864-458b-94f8-5406932b4564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f073dce8-8d6a-44d1-8d2e-a450a9ad4030",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99af07ac-ece3-45f1-942b-b0a9e3fb133e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87169341-6b1b-40cd-8129-75dcf6ed2dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964f04a8-910c-415c-befa-5f9955b7d553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a2cf9c-8217-4d14-a2ef-2bbc243bc488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c066dfdc-6f51-4e7f-a53e-34d4f64fd4fb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e78b990-f3d7-469d-91b9-8266f34655a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e7fbc3a-f439-4374-a7b4-05b5cacb516f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aa912b-8114-4c6e-a5cb-d976767eac35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c462c6e8-2112-47de-b100-70c34f8df90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76f8866-88ce-42a7-a19c-94d087a47c61",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e9e373-983b-4701-a65c-ea5a9c003df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef836a5-e793-4db4-921b-46648af81e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e175011-2ec4-431c-9e1c-b9b669b06e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0ffe55-8a20-4f90-b456-5f1016ce0124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525102e-04c1-4026-a1b3-3a49b913f5c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a381e2ec-f1e4-45aa-aefa-2647e2c3b1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dde8607-ffeb-4432-a9f3-70f2ba58b840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6045d5-7a97-4da6-a316-62992bbf22af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bc9bc6-00a9-4160-a0f3-7131ec3bf2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82bf068-9ddc-48b8-a5d6-81292f2b8e12",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfcb7c5-9c60-422b-88d5-78e14a0d6110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d1607c-25d0-440b-8066-c66ffdcbcb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4569644-5648-4268-8493-de90cc4f22cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f21b657-3bfa-46f5-958f-f8a7aab9ec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202fbacf-7b8d-4e53-9da7-f6312159d24e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9027e06-04da-4d7b-81d2-a096250230d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79ec96ec-f63a-4ebb-92c0-f31ae8776611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac8d290-67eb-4eb2-b19e-69c462581d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32a158d-57fd-47bf-a019-ddac50f4a4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84e1ca8-30eb-4f2b-8406-677087336bb0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b981a7-8771-4e3b-8f13-c9047e5caf96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae7855d-e878-4720-93ee-2675a657918b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7244aa2-e462-401b-818c-c85d82c6fa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8d03c3-6201-4e6d-95d3-21662c02ef5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cab9d7-1b76-434f-9c49-32780c6db534",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b462d0dd-b349-49ae-b53e-60aff1e5c0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28218887-10d2-4689-838c-f1e96cfd2301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a2413b-68e1-4ade-8f0d-68ca2c9fca27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b05d778-509f-4726-8853-acd26bd694ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2abd42d-c8d3-4130-be7a-baaf342f129e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8d77e2-74cd-4169-a47a-9b58cc35bc95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d37fa00-f97b-46d3-a466-1c563b9dbbc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7199fcd5-cb31-471a-a4e2-9b6f1f57f9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4beead16-ae45-43e2-99b5-2c5e0f9a4bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59d9052-ef7c-4821-b66c-8cbacee70969",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7813cb27-2ad5-4d1e-8986-545dbaac5d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2989b4b-0752-4400-89c8-95da02dad4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff91041-7e3c-4e6a-8641-5c4c07d28425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdc4829-ee6f-428a-ae44-ef14364a37ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d4ff1e-70c8-4baa-a60a-81f1ef3d0269",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0c83fa-5fa0-46cf-9285-a9b51192d928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e888a929-3a20-4e8d-85c8-7133fd2358f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0daa6-b0da-45d2-ba5e-dc046da9396e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4b9dea-64e9-44c7-9053-143ca6e7b479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6205b435-68b9-4a7c-85ae-6d16ea2001a7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16937df1-7aa2-4ac4-a07c-6705678ba857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f30d3897-1a67-4bb1-b204-2cd563e8392c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e8dcdc-1018-4b99-a4cb-dd17246d537b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9744aa0b-f7fb-4ac7-b62c-8787d37654a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b72d2d-da82-4d22-89dc-5231970b4692",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0831c785-cc62-4be3-920a-4da81c923eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9420b8d-72b0-40a6-8bcc-f03f1ceb486d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec9ea6c-e99b-4562-bfeb-b5ee54d22552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d284cb90-7e5a-4d90-81ab-bcc41ee47b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9862d93e-9e40-46dc-a154-6504dc474b86",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8fc0a1-434c-4eb1-9c82-43d569248732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd7d85df-5964-420e-a7fd-fb415c5dfaa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada6b538-2590-4cb8-9fa6-82113dd20409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3235ddab-0b7b-46e1-8acd-807b8f9978e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e34061b-1a79-424a-955b-81a515d363d4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066cb445-baf7-4bf8-bcfa-5dd284bb466c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1cedbf-8f52-4993-a719-a75937416710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35ff21e-a725-4fc0-b237-84f395a71191",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96affe3b-eea3-4e1f-a630-77c562cdfb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332dea4c-011a-4e34-90e9-7bfda3c933a5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e2547f-54f6-43f6-a265-c1cac6be15b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babfeb78-2ad4-40a0-a2ec-415dd507b99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b172ed-3c2c-45d2-848a-fcecef5c4224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f59567-79b0-4685-aea6-5977ba2b0f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dff23e7-ba88-4afa-85ec-dab33168a2d2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dbaa86-832e-455a-abd3-f6736865c418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b615031d-1f75-40eb-9fa6-eaaa55f45c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3395846-f244-4921-9cd6-9c362aef6328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e0db3d-cea4-4e9c-a446-6d7fd0b3a046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171a9986-600b-4b46-8f30-e0098950929c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e911b7f5-6a62-41eb-8309-81f468501f30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e196e4-806c-4d8c-b427-f761fdba5a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340313c7-fc45-4c01-be86-fe22b52d12e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cb278a-2c4e-4f07-ba8f-01795468fc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4805ff-5ae4-4846-abcb-f74c4ef72523",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f11b8e-0f0d-4d9b-81ff-6ede9e63740c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9632270a-8bb5-4657-9b0d-1435d19db5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af4ab62-c117-4f94-82f4-9fbf9d5f2604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d807e17-d157-46eb-870e-9e15cd02e508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a72ebd-9da8-4cb9-a0cd-622cb1566c3c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bce26d-d559-42b9-8fc1-5637df78fbc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6c6441-dd9d-4c96-b9a4-2c90ff52e27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b70267-631c-483b-b02b-090959250167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3c5c8b-bdf2-4f7c-b5a9-bbd14a074c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7700827e-d790-4793-bc70-2c2bfb477004",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed77250f-27e3-485d-b143-e9a72546cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad59400c-e2e6-47d0-9810-b334d1bdea3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c74584-0390-4e94-af63-f1367cd8b449",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51293b45-3c64-470b-8c4d-218f3b0aefeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894fbbf7-1296-4a55-8f29-1976090f2dc1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be32ca2-e230-4af8-8a18-bcd1c7b9eb12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d121b7c-98f2-4499-a282-f1670f57a478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ad9af5-07b2-43a7-9acb-45dcb4aba473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7303c1-f90a-4fc9-a2ca-f7296c390f4a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fbceaa3-5113-4608-a275-cd532818a887",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d23b8353-d3bb-47d7-bc96-557bab39dafc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15b038c4-b5c3-46bd-a282-9086b59558a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ace6ffd-e862-4394-a6b1-c840cd29574c"
                    }
                  }
                ]
              },
              {
                "id": "55604e63-ab4e-43eb-acb4-5d1a1e33efb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fb8e7b3-68c8-4fca-8528-702d1066e6e7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d1b032-e212-458b-a4c8-2d47d2a4d0d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b1ab6b79-7d4a-46a8-a8a1-d0e33abeb43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33f7eb7-46c0-4a37-b5cb-99a31c783c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39074c87-550e-4bbb-a5c5-e1892a1f402e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3990379d-97f8-4309-b259-cbe73ab35106",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52042813-fedf-4d7b-9139-4d924b4dd248"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab2217f0-9736-4241-bafd-73890dd940f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed39d401-361e-4c8f-8d14-436369519bf8"
                    }
                  }
                ]
              },
              {
                "id": "e87b90c6-eed7-4ccc-b618-1853aa4aaadb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "103f7f0d-dbb5-4785-8afb-527449eda663",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1596437e-a35e-42ed-baec-fd7ba72c8ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "359ac8cd-14f1-4fc5-9f36-cff464adc8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16262425-a5ae-4211-855b-d8130fbec6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dbebea-c28d-485e-b1da-0c0125d37ada"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "85653ada-37e2-49c9-b333-61e405756e5d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d21bec8-1669-414a-8281-4ca6dcf845b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "907525be-493f-42c6-be96-86bb9d7f28d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a489ca0-9897-442d-8b3b-6aa0682e31f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a56999a-e66f-4648-89e4-670a7f0b9e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19734119-df41-4c89-8bd2-3a800dd8def5"
                    }
                  }
                ]
              },
              {
                "id": "b71eafb4-ed97-41be-84c0-be51c0578354",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de9179d9-356e-4f29-906b-db71db7f2758",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22eecd0c-626c-42de-813f-537146381f06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88e8f798-613f-4975-8a0f-e1960ca2a544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09263844-bd75-4284-98c6-e2f5d7446780"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb3d6022-f408-4376-b612-e300cb9ac4e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "df0c82b8-01f2-4c62-a83c-a827b32844ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1890786-11b8-4d14-a235-467c23961377",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56b226b5-1bec-47f1-b709-9185b6a3021d"
            }
          }
        ]
      },
      {
        "id": "a9e53442-6034-43e2-b0a7-faf03b8fe159",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a0f7cfa-b6c7-4f7c-bb08-b9db658f8cf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d213a86-b7ba-4879-a088-c4ff1f6948dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ec16a7d-1f00-4441-b31a-d43ca4ec1f8f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dbcd64-3019-4f28-9003-dceb57235695",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "85a31cb9-2bc5-478c-a00b-6dc68e232488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec39724-b985-438b-8314-d127e2ea8dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bafcee81-6ed9-45a1-9b6f-aede14705c45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8969957-a7e3-415b-b081-8471f124b990",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fa2ac57-be75-4783-9895-094fcadbf496"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3385f48-936a-4b6a-b435-38beea71cdb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6ab60e8-5695-4d53-a271-b2d9d8ac2244"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f16c95f5-fdf6-423f-a101-9667b06e55a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3fd1ff0e-75f5-4028-be8e-134d2be9ac9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5771066f-d281-4198-b779-949c9285b2fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c078bfb1-e47c-4e98-abc5-ef9373ba1dbd"
            }
          }
        ]
      },
      {
        "id": "7c06ab97-701f-4d6a-b19e-b9c46ea19877",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a904356b-cad0-49fb-97e4-b00dd0288e7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ece2ea33-8970-4c97-8e39-d9501724bfe5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "168c037e-732b-45de-8130-87f6ed2ebefc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62be048-f331-4020-a683-bedf01d91205",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "293f698c-9b79-433e-b7b7-b012aecf1fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8320b730-ebcb-46a8-a574-c206ca118527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75808f29-fb64-4067-a8c0-b955ba0ea5c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd9224a2-e85e-4bfd-8bfd-2d1e8fb09689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9d28362-79ce-4c6f-8d32-8c0a2cff64a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e455a244-a020-4213-9fe2-cf93c83696f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84134022-999f-4e81-97b6-c6ea14ffed3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b176db6-9a1a-4e51-94ce-09e402ac5b87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1389a9d9-76de-4c57-a289-4cbd88e70ec8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cc16983-5c7e-4c9e-8050-893db4b31ea3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb6fddb8-1001-488c-a3ac-27773e368a1f"
            }
          }
        ]
      },
      {
        "id": "998cc00c-0a8a-4d16-b166-a255299bd465",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "08e69176-3e25-4fe4-a35c-df70c83e5bf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24541bbd-32ea-4ad1-b7ce-27f71c222948",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aa7c124-e7ec-4027-acfb-ff42dc7b45f0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db6bb05-4720-45fa-b8ba-9fbd403c9aa5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80447e9d-d157-4c78-8c91-b2845d0c0430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748a3954-478f-4b30-b926-34f7e7f8242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e58cd312-4a07-432c-8dba-2ec07a8b44d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55bcf380-f1d9-4e96-bf76-3544016a7164",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f55c57a4-d7ff-4d3c-a5fa-47f81f79e1f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7dfd674-d17c-4d06-bbbe-f5af598e5806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f60c749-5cf3-4baa-8f0b-d4ad943a1783"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4160a1f2-2f22-4eca-a04b-8dc906b42582",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "556ed7b7-c108-4c5d-b707-9084d817ffaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65ae552f-b9ec-48be-b205-997acee96668",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e786da73-76c1-47d0-92aa-d06a7b5786cf"
            }
          }
        ]
      },
      {
        "id": "d2726a10-b607-49c2-ba94-6cbdae34c408",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0943779d-288f-4c7e-983b-a404e34fdd99",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2696e952-85ad-4ed4-a1f9-a740dde339b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d5214749-e509-4a7c-b912-f149f979f662",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6c85922-6a12-4e83-924f-ac1ea4208524",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1d18510-12e2-4634-8213-e607d32865c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 306.1091549295773,
      "responseMin": 10,
      "responseMax": 6870,
      "responseSd": 817.0362957101333,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693528508149,
      "completed": 1693528607131
    },
    "executions": [
      {
        "id": "2224a88f-6b9a-45a7-b1bd-9205fd051c9b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d6df9bbc-7ed2-4367-b0c7-555b096fc8e9",
          "httpRequestId": "6e42cc8f-a4d8-4d98-9c78-b8992d559606"
        },
        "item": {
          "id": "2224a88f-6b9a-45a7-b1bd-9205fd051c9b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d330a8fe-92bd-4f32-984c-523903cb4c73",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "4301b394-dd86-48cc-84db-705759d9f703",
        "cursor": {
          "ref": "102199ea-858e-448b-9ef3-da6aaae0ff34",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "81a3cf50-24db-4aef-b51b-476176c13f86"
        },
        "item": {
          "id": "4301b394-dd86-48cc-84db-705759d9f703",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c77636e5-49c1-41d2-b534-c4721d0a3370",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a27bd61a-438d-48a2-a14f-25db52d24bec",
        "cursor": {
          "ref": "fe2cdcc6-fb8a-4bce-86b9-390b94a0f720",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d3f2df6b-8acb-4d1a-8c2a-95aad85d5e95"
        },
        "item": {
          "id": "a27bd61a-438d-48a2-a14f-25db52d24bec",
          "name": "did_json"
        },
        "response": {
          "id": "4fa70948-a60f-4628-bf1f-dc36af97523a",
          "status": "OK",
          "code": 200,
          "responseTime": 1494,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38eb6d4-f147-44c5-9ec9-428d24611d40",
        "cursor": {
          "ref": "30a25bee-33b1-4f25-91af-660e59340668",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1366912d-c01f-45da-be6b-118e717497ab"
        },
        "item": {
          "id": "a38eb6d4-f147-44c5-9ec9-428d24611d40",
          "name": "did:invalid"
        },
        "response": {
          "id": "e325c5c0-ff2b-4b01-9ea1-bd15c5ea6da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38eb6d4-f147-44c5-9ec9-428d24611d40",
        "cursor": {
          "ref": "30a25bee-33b1-4f25-91af-660e59340668",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1366912d-c01f-45da-be6b-118e717497ab"
        },
        "item": {
          "id": "a38eb6d4-f147-44c5-9ec9-428d24611d40",
          "name": "did:invalid"
        },
        "response": {
          "id": "e325c5c0-ff2b-4b01-9ea1-bd15c5ea6da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e54b06-9348-48a2-9d3d-8fd3fbecf036",
        "cursor": {
          "ref": "41aabc1b-4771-4d80-8442-6a1563fa2726",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "850cc761-968b-4d16-aac3-867297d632be"
        },
        "item": {
          "id": "e0e54b06-9348-48a2-9d3d-8fd3fbecf036",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "da439aa9-18a2-49e7-990e-cb2435539976",
          "status": "Not Found",
          "code": 404,
          "responseTime": 328,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e800ab04-08e7-4881-a04b-2f22e799bfba",
        "cursor": {
          "ref": "0aebd830-9912-463a-9e19-e2569a278265",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e6823c16-6d8c-4bb6-80e1-a5c535827309"
        },
        "item": {
          "id": "e800ab04-08e7-4881-a04b-2f22e799bfba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7716cb76-c256-4564-afb6-e214a09fcc78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 335,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb8aee2-fb71-4bbe-b231-f0a885a22a4a",
        "cursor": {
          "ref": "ba16d970-8f88-4d4e-bf21-778dc7aafd5f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6edf6592-ce6b-4373-a33f-f8a2b75dd228"
        },
        "item": {
          "id": "8cb8aee2-fb71-4bbe-b231-f0a885a22a4a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6fabb544-7444-464e-b34b-cab3ded0c037",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7ff196-ced7-472e-bf23-8978493b74d5",
        "cursor": {
          "ref": "d974f9ab-e1e8-4a38-93f5-0215de7d8146",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "52ad550c-bd6b-4195-9857-7e515f6926d2"
        },
        "item": {
          "id": "6b7ff196-ced7-472e-bf23-8978493b74d5",
          "name": "identifiers"
        },
        "response": {
          "id": "4f89d269-71cf-4448-9a88-a829fbe373bf",
          "status": "OK",
          "code": 200,
          "responseTime": 1307,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fcf86e-5b34-4359-8e74-a8bdfa7b66b8",
        "cursor": {
          "ref": "4faea165-6e0f-421c-a3f6-e601d745768c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9cecb8ea-1b9a-46c3-8251-aab070367b02"
        },
        "item": {
          "id": "d1fcf86e-5b34-4359-8e74-a8bdfa7b66b8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4e53c98e-b6bb-4196-9cbc-ad9426818216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2cd576-3002-4463-8b0d-2637e586d91d",
        "cursor": {
          "ref": "3f6483fe-0930-4e3a-9973-460ab2e2fa22",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5fae9d0f-a641-49f6-b78d-580044428f6c"
        },
        "item": {
          "id": "de2cd576-3002-4463-8b0d-2637e586d91d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c9eef988-a452-4f82-9542-4c9def37d2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2273f56b-f357-4446-a54a-36ef873b9b47",
        "cursor": {
          "ref": "6f9dd662-c9da-414a-988a-8e23962327d4",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c6527d9-aca9-417b-8b25-09363ab0af8c"
        },
        "item": {
          "id": "2273f56b-f357-4446-a54a-36ef873b9b47",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7192766d-93a5-4d55-8aaf-f4a47f7aee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f702385-52e1-4a74-9cef-b443fc1b5367",
        "cursor": {
          "ref": "3ce0f494-65d7-4fd3-a0fe-d5bae4c730dd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "60617b89-869c-452d-b29e-aa2a2c658b85"
        },
        "item": {
          "id": "4f702385-52e1-4a74-9cef-b443fc1b5367",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "270598d2-200c-4e65-831b-7b7a9e27ec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f1d76c-1ab8-43cc-97d1-6b70c01c7237",
        "cursor": {
          "ref": "80adeacc-b75d-4bd3-a2d6-0ac897892e67",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ec824549-46ba-4297-9adb-db8b23f7d6e9"
        },
        "item": {
          "id": "e3f1d76c-1ab8-43cc-97d1-6b70c01c7237",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "84e4f8a3-53a5-4d56-8bcc-1c5f7f5c119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f60bbb8-985c-4a70-9bb4-26052f49d761",
        "cursor": {
          "ref": "8fb76283-c660-4811-a064-bff6c64acd3f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ebc382ad-d386-4a15-8f28-fd23a14a1fbe"
        },
        "item": {
          "id": "8f60bbb8-985c-4a70-9bb4-26052f49d761",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3cbaad8d-5460-4936-a539-a686fd97e98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377d48f1-defa-41fa-a59f-fcf0d9201b13",
        "cursor": {
          "ref": "716c9990-54ca-490b-9ffe-8491b7fa692a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "722d9c6b-112d-4420-970a-51b5ef96a2b7"
        },
        "item": {
          "id": "377d48f1-defa-41fa-a59f-fcf0d9201b13",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7e542456-116e-478c-96ae-e331eda98b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0252f902-ee50-47f4-b165-7f3310fbfb8c",
        "cursor": {
          "ref": "5ccb2cbe-cf49-4287-a426-8c489760b216",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "93c53c05-decc-4a3b-b0d5-658ee2fb1561"
        },
        "item": {
          "id": "0252f902-ee50-47f4-b165-7f3310fbfb8c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "45a559fd-80ef-4464-aafd-8bb7e8baf601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287e70ad-7add-463b-8d9f-bd6487e3cf67",
        "cursor": {
          "ref": "430c4826-d49f-4540-b47b-1571ca5576ae",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eea85537-e5fa-4cb1-a539-0c3cb524d722"
        },
        "item": {
          "id": "287e70ad-7add-463b-8d9f-bd6487e3cf67",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "566673e4-afc3-4072-92e6-607742fa033e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2085e7b-ea21-4716-a05c-a66ab1e00b7e",
        "cursor": {
          "ref": "9e0a6020-946b-4783-a76d-beace5d25857",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "07d3b494-521a-497f-9c14-c9dded60d704"
        },
        "item": {
          "id": "b2085e7b-ea21-4716-a05c-a66ab1e00b7e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3e0e6a0d-0cb5-4eff-96be-c5e3a9120459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44280fd6-d6c8-4a85-b6c4-d5f9875a3c97",
        "cursor": {
          "ref": "71dc190e-cb39-4364-8f44-816fd691db28",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2b9ba9fa-7830-4d54-a906-0a07a5c94b1c"
        },
        "item": {
          "id": "44280fd6-d6c8-4a85-b6c4-d5f9875a3c97",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1df11e5d-3e85-4c82-9cdc-01494920e872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1743592-810d-4be4-ada6-e93fe4e12410",
        "cursor": {
          "ref": "6bc42091-6835-48e4-aa8b-154bf6df26b7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "156c75fe-c152-47f5-bf7d-0760d3729599"
        },
        "item": {
          "id": "f1743592-810d-4be4-ada6-e93fe4e12410",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b2cf565c-a612-4b5e-bc7a-2ab5698a867d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128c958d-ae23-47a6-abf7-d1e81a49dfa4",
        "cursor": {
          "ref": "0de21b5d-ffd1-4e1b-8c00-e86973b92f3a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a21dc167-c346-4972-aeb8-442c0f1878a2"
        },
        "item": {
          "id": "128c958d-ae23-47a6-abf7-d1e81a49dfa4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "82d456e3-99a1-40bb-a917-969a702ffd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff30ea82-be76-45cd-9ffa-a397bcc6e252",
        "cursor": {
          "ref": "07cd821e-00c9-4894-9e65-c276684b32fd",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1c553b86-a9c1-4583-a661-7e63a7cc855a"
        },
        "item": {
          "id": "ff30ea82-be76-45cd-9ffa-a397bcc6e252",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d38e2902-ec27-4e77-8411-f5b5543423a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47660b28-8669-4170-8d90-5eebe08a287d",
        "cursor": {
          "ref": "cfbdcdfc-7426-4db9-8b4a-57c248cd065e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "87b54fef-c289-4834-a24a-a40b4c8aa76a"
        },
        "item": {
          "id": "47660b28-8669-4170-8d90-5eebe08a287d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "327bb169-9b68-4b75-a67d-cc7fe7a26963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b0555-4757-4bbc-b8ed-d45c062df7b0",
        "cursor": {
          "ref": "c5ada9df-13e0-4719-a5c7-adad63da6785",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bed04edc-2d52-4e03-bd5b-ff519f0d5e0b"
        },
        "item": {
          "id": "8a6b0555-4757-4bbc-b8ed-d45c062df7b0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d260d881-92ab-4580-aeab-ea38041c471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1b1f98-39a2-4ce4-ac66-53cfe9ca4763",
        "cursor": {
          "ref": "11373abc-a9f2-4140-b5e8-03679be5af6d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8764b07f-602b-45e3-90b9-e6ed4e9d0e86"
        },
        "item": {
          "id": "3d1b1f98-39a2-4ce4-ac66-53cfe9ca4763",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0918611b-c32a-4042-bbfb-3f44c2d377df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2514c1f5-414a-45b8-af55-d68bdfbd559d",
        "cursor": {
          "ref": "2a3d3583-394e-453a-b8c5-46ba626d14e4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "141b1289-0980-4f91-9e82-fed85f6c20f8"
        },
        "item": {
          "id": "2514c1f5-414a-45b8-af55-d68bdfbd559d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "addacdde-02d3-417e-96f1-8f79f3b45d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f271ce1-e85e-4638-ab4c-712be058c992",
        "cursor": {
          "ref": "692439f4-6209-4886-b5ae-9503634c7965",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b78f7be4-4265-47f2-97e7-d9b61634ffca"
        },
        "item": {
          "id": "1f271ce1-e85e-4638-ab4c-712be058c992",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "57a5d15c-dc85-4f2c-b6e5-c750c611fa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e2eb16-4fd0-4b40-ad5f-2e1eecf03021",
        "cursor": {
          "ref": "9b54b04a-ee53-4741-9944-3ca1e8cada27",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8249e14b-c6c4-4490-a3f0-2c8bc20c56be"
        },
        "item": {
          "id": "46e2eb16-4fd0-4b40-ad5f-2e1eecf03021",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c63423f0-e26f-46ef-9474-b6864ced0be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eca3ba1-f33d-4947-8d28-1fea626d810d",
        "cursor": {
          "ref": "725b0fbc-2575-40d3-9f64-ad68ed8ac60c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e7159404-222d-4cd7-b112-ad6082c7e623"
        },
        "item": {
          "id": "1eca3ba1-f33d-4947-8d28-1fea626d810d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5020f33a-fb7d-44d0-bae7-54fa6e1eddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf53362d-a78b-4152-b4a6-b6f2dfaaceb8",
        "cursor": {
          "ref": "b8737c68-628e-443f-8a44-9681390563f6",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d7b52e0e-830b-44bf-9e16-4ab8156ed757"
        },
        "item": {
          "id": "bf53362d-a78b-4152-b4a6-b6f2dfaaceb8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f64dd24a-e245-4e4a-b850-47be1ebb7810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e87a7d5-6251-4309-9db1-bf63691b76fb",
        "cursor": {
          "ref": "2f6e246e-be9b-4c79-81ea-b3ec3a422396",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7b7e23ad-390c-4b80-ba3d-2cae52d03a42"
        },
        "item": {
          "id": "6e87a7d5-6251-4309-9db1-bf63691b76fb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dc90f567-a9a0-49d0-b876-a1ce0eb33770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951612e5-4c45-4d9d-b378-d8ffa419af61",
        "cursor": {
          "ref": "6c18ad39-3c8d-449c-ba64-c780e9c8b5fa",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "38a4204d-10b8-459e-8814-07b4806d1e49"
        },
        "item": {
          "id": "951612e5-4c45-4d9d-b378-d8ffa419af61",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c4cd2423-32fd-4e67-b88c-241ad17afa9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce933a41-4a6a-4b35-bd19-4ee09dd962cb",
        "cursor": {
          "ref": "99bcf987-c50a-47d4-b87f-470d1b7065bc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "83484a05-bfd6-4eec-aabc-0b695a83ee51"
        },
        "item": {
          "id": "ce933a41-4a6a-4b35-bd19-4ee09dd962cb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "22862898-db16-464c-99cc-2efb3521bd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e07dbfc-3329-49f4-bbef-bfbd3fdd4db5",
        "cursor": {
          "ref": "fbbae508-c7bf-4e01-ad5f-c0e8b1268155",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "778f7680-791d-4dfb-9dc0-407f0c1f08b6"
        },
        "item": {
          "id": "0e07dbfc-3329-49f4-bbef-bfbd3fdd4db5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "29cb74a6-a351-4b32-b63c-115a69c4425e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad700f4a-9ff3-4b51-be47-29cdf5492358",
        "cursor": {
          "ref": "baa0cb26-24dc-4fa3-8219-98420ace5780",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0896f262-714e-4019-86bf-17cc5689dbf7"
        },
        "item": {
          "id": "ad700f4a-9ff3-4b51-be47-29cdf5492358",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d013724a-373a-476c-8f94-794b87075a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffccc2a-a0e3-4048-8188-db8c583d06af",
        "cursor": {
          "ref": "be4466b0-1524-4134-9da0-2f8b42dc404f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "837cf13b-c081-4f0a-a9f2-3a331b2e0a3d"
        },
        "item": {
          "id": "7ffccc2a-a0e3-4048-8188-db8c583d06af",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "40262498-8ad9-42db-9092-3fc43d3b59f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ada8277-5492-40e4-b6a6-b4d70578be3e",
        "cursor": {
          "ref": "75f33226-f410-4030-94a1-edc3da53004a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ce8eb3d1-e413-4f65-af36-6aa9edbc3686"
        },
        "item": {
          "id": "6ada8277-5492-40e4-b6a6-b4d70578be3e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a8038a79-0d17-4bf2-a511-f53e0fb9acb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d750be97-fb41-40ec-91d2-186d255a8634",
        "cursor": {
          "ref": "e91a3406-3545-495b-bc59-547996930afa",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6f148b9f-f2a8-4d35-86e8-e2ecb39f3a6e"
        },
        "item": {
          "id": "d750be97-fb41-40ec-91d2-186d255a8634",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1e57a775-2362-4d93-aad6-690e1aa8161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43290280-0e0d-493c-8ded-e6081107eae9",
        "cursor": {
          "ref": "cfda07a5-6729-47b5-b5a4-1a6fb728cf84",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8babc27b-2c5f-4124-90ee-278d07516c5d"
        },
        "item": {
          "id": "43290280-0e0d-493c-8ded-e6081107eae9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d28d377d-c19e-4364-8a6f-772a93aea603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622e437f-74ee-4436-bdb6-c4e260b87cde",
        "cursor": {
          "ref": "49253ca3-1d3b-468c-b6ab-e8b3c1521496",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ceb8aee5-916e-46ac-9d30-a9fd27bee576"
        },
        "item": {
          "id": "622e437f-74ee-4436-bdb6-c4e260b87cde",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f83b20d0-cc1d-4860-bafb-a38cafb9deff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8edfb92-850c-41b4-ab06-34318b4ccfaa",
        "cursor": {
          "ref": "5eaf49c6-1e26-4eac-9d7f-4d7f7a031cb1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "12f0b499-04c9-417a-9e0d-29aac9310568"
        },
        "item": {
          "id": "c8edfb92-850c-41b4-ab06-34318b4ccfaa",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b606d7a2-9583-410e-9d93-ef4f7469ee84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30282a93-33a1-4f07-9138-6abdf9c16865",
        "cursor": {
          "ref": "a991064c-dc1f-4e9f-b4c3-73fabb2eeff7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8e40e169-427f-4263-939f-e50ad9c0cbf1"
        },
        "item": {
          "id": "30282a93-33a1-4f07-9138-6abdf9c16865",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e7df2849-af51-4101-aa2d-019acff98790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9837152-9f59-4893-8d09-6425d164c297",
        "cursor": {
          "ref": "e4d0f5b6-ac4a-46cd-941d-70119a95e36c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b484ea40-e355-4ee9-a2a9-f060bbca6a52"
        },
        "item": {
          "id": "b9837152-9f59-4893-8d09-6425d164c297",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "54200806-9d36-406c-b783-b852f3ec11f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00da35f8-9055-4b0c-9b7c-45469938450d",
        "cursor": {
          "ref": "6d33a32d-3172-40a6-ba73-27db5109a147",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "87b2139c-adaa-428b-9e54-92455798064a"
        },
        "item": {
          "id": "00da35f8-9055-4b0c-9b7c-45469938450d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "509f7327-0e27-4210-8174-c5d92d7629b9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 578,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562d96f9-d7f8-4539-950e-ab3f8f66cc98",
        "cursor": {
          "ref": "290974f8-ce47-4fd7-a073-98ee3479f011",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c565ab9f-5896-44ff-adf2-31a37602972e"
        },
        "item": {
          "id": "562d96f9-d7f8-4539-950e-ab3f8f66cc98",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "84976624-d2c2-4658-8c7d-f0c23aa08a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa7c671-8901-4633-af2b-986c0cb0ecb7",
        "cursor": {
          "ref": "641d6760-ae7d-4e65-8bd3-ecff0628c5f6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c8f0662a-9ea3-4688-872f-9951b9d0e2b1"
        },
        "item": {
          "id": "4fa7c671-8901-4633-af2b-986c0cb0ecb7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3c8df336-3ba4-405d-90cd-12ceede131e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5b7a7e-14b0-4ed7-a698-06d2babe0291",
        "cursor": {
          "ref": "c4603e9f-f3c0-4b55-ac76-f210b594a021",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eb6414ce-ed5f-40c3-8e6b-26ba0be9c534"
        },
        "item": {
          "id": "ad5b7a7e-14b0-4ed7-a698-06d2babe0291",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "92afed5b-3df4-412f-b84f-c4503bd0e693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6c49bd-5de2-4e99-bde1-b0186d428ffc",
        "cursor": {
          "ref": "0d94b0d9-69ae-4a8a-81f7-7dc55286b1e0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1b600449-6b7c-445e-8831-21167fcfe54f"
        },
        "item": {
          "id": "ff6c49bd-5de2-4e99-bde1-b0186d428ffc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ea5662c8-36f3-4c84-bfb2-22652522fc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d096535-95c8-4ad4-b88c-fafcc3080514",
        "cursor": {
          "ref": "e176d3fc-a433-420c-bb1b-3c004a53d3b9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cd5aa605-8c34-4186-aff5-3da1727069ea"
        },
        "item": {
          "id": "0d096535-95c8-4ad4-b88c-fafcc3080514",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9edb5014-9d62-4d2b-a859-70ebf582c659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fff2139-61d6-4b05-89cf-20c89149c7ce",
        "cursor": {
          "ref": "fd02c7e4-a725-4d38-840c-c0658adf341e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "596c1c87-bfe6-455a-85fe-912310a7c8c3"
        },
        "item": {
          "id": "1fff2139-61d6-4b05-89cf-20c89149c7ce",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9fafbce6-e576-45a9-b964-d2b3bf60678d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5eda84-3f94-4661-bb4a-13d17376b1ac",
        "cursor": {
          "ref": "5b836ff0-d7ed-47e7-9fad-31babb88fe2e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bb3ef458-ef7f-4f3d-b2fc-be579216f429"
        },
        "item": {
          "id": "fd5eda84-3f94-4661-bb4a-13d17376b1ac",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b5a8a82b-ef1d-44cb-9853-7af3fc0e71ce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 578,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced753f0-0c99-4ce7-968c-99683ab05e5a",
        "cursor": {
          "ref": "bdcc2018-e52f-4392-ab3f-086e87d032b0",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ec4f855e-fbbf-4d5c-87b9-2018c05fa5bf"
        },
        "item": {
          "id": "ced753f0-0c99-4ce7-968c-99683ab05e5a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "422aa4b9-3c7c-48f0-a525-27e1a2573a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635421b0-2237-484e-94f4-8a67fe589646",
        "cursor": {
          "ref": "e7c144dc-36ce-4e64-96a8-afbfff98710d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "43ad43f8-171e-4351-ae02-8f294321cf7b"
        },
        "item": {
          "id": "635421b0-2237-484e-94f4-8a67fe589646",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "de494562-d83e-4acb-a479-28d333bcfb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89526d10-4362-48e5-9227-a3707e14ce08",
        "cursor": {
          "ref": "30c9af5f-b2bd-4edb-877f-0f69adb9c552",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7e729b9e-3ab3-4c9f-8e9b-439400444580"
        },
        "item": {
          "id": "89526d10-4362-48e5-9227-a3707e14ce08",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e4261dec-eb8f-430c-a542-2f9e58050ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6994c0-161d-424d-82eb-6e1f38c05ec3",
        "cursor": {
          "ref": "546e0b5e-b367-4e9f-8a26-db0c6e2a8bd5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a8e7d5b1-6c45-4884-82e7-565b97bb0652"
        },
        "item": {
          "id": "ce6994c0-161d-424d-82eb-6e1f38c05ec3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "523f2714-33fb-4cc9-b31a-f12934017151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8a319c-0369-4ee4-a424-d929a4cc2baf",
        "cursor": {
          "ref": "3e9b1da5-0059-486f-8f07-ebc698fdab6d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "18322d7c-6b10-411d-8b08-653f6e8e5a5d"
        },
        "item": {
          "id": "2b8a319c-0369-4ee4-a424-d929a4cc2baf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4b105428-d045-40f2-8776-5e0380057f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8563e655-1e45-49bd-ba12-07e4d4d87f98",
        "cursor": {
          "ref": "595ba730-f8bf-49b0-ad92-ec4d83a67750",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "25d9669e-36ef-4892-8adc-edde93009c93"
        },
        "item": {
          "id": "8563e655-1e45-49bd-ba12-07e4d4d87f98",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e2b9c620-9cdc-4942-8aec-8659a9beacbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a339c249-a84f-4521-b76a-824143f48a43",
        "cursor": {
          "ref": "f033c150-2770-4a8f-bb9c-73f8ddd85f17",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "41005df0-c544-4672-bcf4-ccc910b48b7e"
        },
        "item": {
          "id": "a339c249-a84f-4521-b76a-824143f48a43",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a6578a4c-e3c7-42a1-8159-b9f07430bb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1e92e1-f6f0-4b64-b09d-c15bb9e423be",
        "cursor": {
          "ref": "9dac2fbf-b297-42b8-8ae3-a336ad3f2c07",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dd232344-839d-42ee-9fcb-10816188e3cb"
        },
        "item": {
          "id": "0f1e92e1-f6f0-4b64-b09d-c15bb9e423be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "73b4f53a-9a5e-425e-97ce-fe8bef723f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd519ae-558b-4a25-8851-2f1d9c9711c6",
        "cursor": {
          "ref": "b3aac68c-278e-4c6d-ada8-3fd5702607c5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2d1bdf3d-c679-404b-b054-b54fb573c087"
        },
        "item": {
          "id": "ffd519ae-558b-4a25-8851-2f1d9c9711c6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "31470fc8-dc96-40bf-aea7-bae36d97827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05549e0a-83ee-4643-a3dc-1a1abdce1f41",
        "cursor": {
          "ref": "6a144318-34ab-41e1-bc21-db3c19787fe9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "183c6681-2f62-42e6-bbc3-c664c7346776"
        },
        "item": {
          "id": "05549e0a-83ee-4643-a3dc-1a1abdce1f41",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "59cf2e4a-ec50-4944-8712-7ae7e445d350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cffc402-2392-4d86-8dbe-9b04d38b0bbc",
        "cursor": {
          "ref": "762a3ef2-50fa-41c1-b42f-f1a61e544beb",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2c5c65e4-453d-4bf8-8539-6ee7695ba8e1"
        },
        "item": {
          "id": "7cffc402-2392-4d86-8dbe-9b04d38b0bbc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7a06411e-2b86-44b4-971c-94215a1795e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16745e3d-1067-4216-9d64-af1e7871a48d",
        "cursor": {
          "ref": "d6b0d2b8-b09c-40bb-9cc5-32153895fd69",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "52ad6980-0f64-4371-b8f2-8c01f7d2520f"
        },
        "item": {
          "id": "16745e3d-1067-4216-9d64-af1e7871a48d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f18a4896-581a-4ede-a41a-a2c626cf8c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45974ee-0d83-49af-b386-aaccd95fb201",
        "cursor": {
          "ref": "f4597470-15b4-4461-a248-1bc2730e9dbb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cd523e21-156b-404e-98a0-60f4fef783d6"
        },
        "item": {
          "id": "b45974ee-0d83-49af-b386-aaccd95fb201",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3d506ac9-3200-42d2-9d8d-aa87d01fface",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143519b3-f380-46f9-9972-05326b9b4833",
        "cursor": {
          "ref": "40fa4a0b-d917-4f53-a3aa-5fa236aa7f1d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "98e3bc57-e43b-4d1b-a765-a2559afbccd4"
        },
        "item": {
          "id": "143519b3-f380-46f9-9972-05326b9b4833",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "628d6bce-df3a-4eeb-b5df-a0c459d8526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5855440-e69b-4142-a480-1f128637aea3",
        "cursor": {
          "ref": "20c7f279-f8f5-49b9-81ff-3dd23cea1fa6",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5355084e-53bc-4c55-ab57-242b033ed0dc"
        },
        "item": {
          "id": "a5855440-e69b-4142-a480-1f128637aea3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dae3a18c-43b5-45d4-bd96-2ca4b48dbe06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709fbc63-4d6f-44e4-b031-2175c9ee676f",
        "cursor": {
          "ref": "fb5c1b2a-40ac-4315-bfc9-bd34dd128e64",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ccadce5-ebc9-493f-8421-be93b9abfda0"
        },
        "item": {
          "id": "709fbc63-4d6f-44e4-b031-2175c9ee676f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8adb9823-b5e3-4fd5-b014-885375bbf5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f9371c-72d1-4eaf-ad8e-59ee3de48127",
        "cursor": {
          "ref": "2f3a87be-4c12-4b06-82cd-8bc0f548c825",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f69a7e2f-18cd-4ead-abd2-4f4aa40d82ef"
        },
        "item": {
          "id": "d0f9371c-72d1-4eaf-ad8e-59ee3de48127",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dcffb325-48ee-4cc3-ad38-6ba79f8314e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9081c0e0-55d2-42a9-8dee-61ccc3558c26",
        "cursor": {
          "ref": "1b023309-f857-4c18-8d38-dcb6e14cf55e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "285a2efd-a21d-40b7-80b7-6566ddbc5337"
        },
        "item": {
          "id": "9081c0e0-55d2-42a9-8dee-61ccc3558c26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "93205d80-012c-4319-a857-76bee68d15a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473e38db-e01c-4b8a-9f19-90aac8bfe409",
        "cursor": {
          "ref": "59dcb1ae-6cd2-4ee6-8bb8-3943d81fb664",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d517c28b-dd46-4c03-8c0a-0407b9fededa"
        },
        "item": {
          "id": "473e38db-e01c-4b8a-9f19-90aac8bfe409",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f27e137f-e0bc-484b-b78d-bca438c72238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ee9c49-fb1a-4de7-8416-16cd5dfc6330",
        "cursor": {
          "ref": "f71c9713-0e02-498c-b8c8-9532fbbb45ce",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1bd6010a-fe57-42ba-8881-6f67f2531946"
        },
        "item": {
          "id": "c4ee9c49-fb1a-4de7-8416-16cd5dfc6330",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "22a622e7-42f5-48c1-9a2e-431b2022f16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80138b8-4a87-47b2-b1fa-751e9876c843",
        "cursor": {
          "ref": "faf63f6e-8856-4d04-9a29-53d682a15215",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a903922f-895f-415d-8931-6ad96ce49e0d"
        },
        "item": {
          "id": "e80138b8-4a87-47b2-b1fa-751e9876c843",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "13e15d6b-3438-4bf4-bd2b-7ec5341bfdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b221e8d-cca7-4ca0-a3d5-1070c5d1251d",
        "cursor": {
          "ref": "39ccb96f-f1eb-479e-a48e-3073125231d7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "469107c8-1a22-42e1-85ca-e4a32f10c343"
        },
        "item": {
          "id": "6b221e8d-cca7-4ca0-a3d5-1070c5d1251d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "df0a5d07-21b2-480f-97ff-cba42ea78ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd5b251-3db7-4749-8561-02dac3a970d8",
        "cursor": {
          "ref": "b0b5dbfb-c6e7-4009-bdf4-8c65ccf1ccd2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d1742099-957d-49f9-bdf7-76bf9b8a5d6a"
        },
        "item": {
          "id": "5cd5b251-3db7-4749-8561-02dac3a970d8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8b2b094b-937e-4510-857a-d4b6a4d12d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9def33c2-cd5e-4f46-95e4-bfd6108fdb4e",
        "cursor": {
          "ref": "f6d4c437-be4c-42fe-84c4-0503c3104f0b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a5e8fdfc-0241-4177-81a5-c3258614fdf8"
        },
        "item": {
          "id": "9def33c2-cd5e-4f46-95e4-bfd6108fdb4e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "98b4b78e-b0ae-47ba-95bc-279fe73f9e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1d932a-d4b6-4c42-a5ff-9a212ae29665",
        "cursor": {
          "ref": "92a6732c-e6da-470c-9a7f-c731c2eb89e4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1f150494-cd37-4787-af69-a306f719475e"
        },
        "item": {
          "id": "3e1d932a-d4b6-4c42-a5ff-9a212ae29665",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "33dbc78b-63b6-481e-a908-0865507a3cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd41f231-bd84-41df-b896-eafe92c1af24",
        "cursor": {
          "ref": "b74d8b89-9616-4a37-820b-977984c5930d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "516ff8f2-6595-48ad-8c17-c89d89eb4c86"
        },
        "item": {
          "id": "fd41f231-bd84-41df-b896-eafe92c1af24",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8f99d3b7-7367-4a4f-b917-23b7d74d1354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcf278c-926a-48d9-8a74-3afe0f465eef",
        "cursor": {
          "ref": "f5c97b2d-effa-411a-9128-75381827972f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "02e5db10-5cc1-4718-a075-f03743db32e5"
        },
        "item": {
          "id": "abcf278c-926a-48d9-8a74-3afe0f465eef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "86975019-dd3a-4f17-814f-ca70b54a48c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8ca1ea-19cd-49a3-936d-c7ea3ece3654",
        "cursor": {
          "ref": "05ba1e18-1072-490e-8403-174724a98488",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a1a64a6e-84c9-4157-aba7-41c5c43687ee"
        },
        "item": {
          "id": "6a8ca1ea-19cd-49a3-936d-c7ea3ece3654",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ad7b7702-9281-4016-8c05-fe301c8e0096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8dbfa7-7ebc-4843-aebd-24535cef8d86",
        "cursor": {
          "ref": "bb81e404-b1d7-427f-a4a8-95adfbad7058",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "10be4421-25b9-495d-a166-d53710969cd5"
        },
        "item": {
          "id": "fb8dbfa7-7ebc-4843-aebd-24535cef8d86",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9212fa52-639b-4387-9cc8-6a20b61d3b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fbb8e5-7812-4e6a-81c8-61337ab5daac",
        "cursor": {
          "ref": "5209ce73-91e7-438c-a667-476e328ec4cf",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9e3480a4-6367-46bc-b3bf-a02d406309df"
        },
        "item": {
          "id": "c1fbb8e5-7812-4e6a-81c8-61337ab5daac",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8e5659f9-df9c-4eeb-96c5-3db66cf45c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb86e58-d8d7-427a-9285-7bddeafd9aef",
        "cursor": {
          "ref": "62c33b25-fce1-46fd-8350-904744d98387",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fa0dc88c-4c53-4494-befd-e1a66dbd01b4"
        },
        "item": {
          "id": "8eb86e58-d8d7-427a-9285-7bddeafd9aef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d374246c-5819-43d7-bc26-fa115540f733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4748f5d-cd15-48fe-a9a6-c3b9e8a85b3b",
        "cursor": {
          "ref": "bb243867-8869-4af9-a31b-c10ee37e13d1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1fd5515d-a2be-4d15-aded-2ff1fc15110d"
        },
        "item": {
          "id": "d4748f5d-cd15-48fe-a9a6-c3b9e8a85b3b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d824d916-9832-4ad0-b1ef-d9aec5529d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29c1eb-1927-4c15-b164-25c9b8d2f8e1",
        "cursor": {
          "ref": "302af8d9-86bc-4061-bd96-69b613b0594d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e911923a-fb5c-47e3-80b4-7c6d3473020c"
        },
        "item": {
          "id": "fe29c1eb-1927-4c15-b164-25c9b8d2f8e1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "57833f55-ff0c-4a29-ae10-b53352ccec6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4033bfb4-74b5-4443-838a-6b0813fb5334",
        "cursor": {
          "ref": "1941b34e-96aa-4968-ab2d-50ece595a2bf",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ea49411d-5c97-40a4-9f43-136dbb847aed"
        },
        "item": {
          "id": "4033bfb4-74b5-4443-838a-6b0813fb5334",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ea9a6fb6-d739-4909-9b54-709158ed9e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3791d7ef-329a-43c1-b6ad-2a6ac1593396",
        "cursor": {
          "ref": "99419973-b2a5-48f0-8b5d-d30cbe580d53",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "119718b8-594a-47f7-985d-3b79d4f81275"
        },
        "item": {
          "id": "3791d7ef-329a-43c1-b6ad-2a6ac1593396",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "50f6b290-f76e-452c-a8ea-b77db1aba63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd81379-b8fe-4fbb-9290-3a265a8fdb6d",
        "cursor": {
          "ref": "55db6490-ef82-47ab-9bed-6c40457b42b8",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8be15a87-f61c-4e9c-91ae-162c5df71611"
        },
        "item": {
          "id": "6dd81379-b8fe-4fbb-9290-3a265a8fdb6d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ff0cbe3c-3b8d-4172-bbd8-d618c55b2f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6159b51-9ccc-4da8-a4f5-423a8560f7d9",
        "cursor": {
          "ref": "41f0bf96-b2ec-47e4-ba9e-97e97bbd4dac",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d90e6e78-03aa-447e-8b37-d33c3bcbd2a6"
        },
        "item": {
          "id": "f6159b51-9ccc-4da8-a4f5-423a8560f7d9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a5dd36e9-d455-42da-874f-d8dd85bb4b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d62d38-75a5-4fad-8107-0e1989eba4dc",
        "cursor": {
          "ref": "dfafd9c7-c61b-45b6-a416-763d7095cb0c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e43a86f6-7967-475d-ac37-60c901be68c0"
        },
        "item": {
          "id": "93d62d38-75a5-4fad-8107-0e1989eba4dc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "919364df-38f2-4cae-84b4-b9fd445d01af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4269caf-1c22-4d99-8f26-f03c04b9d3e4",
        "cursor": {
          "ref": "e8432744-aa31-43ab-9f3b-399fb5a95bd2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d52aa001-4de4-4282-a5dd-e7e9e1b08b50"
        },
        "item": {
          "id": "f4269caf-1c22-4d99-8f26-f03c04b9d3e4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2458943b-69da-4a08-9028-8bf8b08a2957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1763e2b4-bd96-4764-a5af-72a040fb53be",
        "cursor": {
          "ref": "f0dc0b37-6050-400e-bad3-5e5f524ffd69",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e511c1ec-6d3c-4b1f-bbb4-e752327671bc"
        },
        "item": {
          "id": "1763e2b4-bd96-4764-a5af-72a040fb53be",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7e4fde99-f64a-443f-8de4-2332d2497c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e49f356-1fe9-4d21-bd1c-fcf9e3c394d8",
        "cursor": {
          "ref": "7dd65ef1-e72a-4815-94cc-9da7b8a6266b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bec00634-9e56-42ed-88ff-02f3789b6a02"
        },
        "item": {
          "id": "7e49f356-1fe9-4d21-bd1c-fcf9e3c394d8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c9b5307e-65e1-44e6-ab54-6f511347d412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aee574-7d65-4f6e-8a76-6ae7f984babe",
        "cursor": {
          "ref": "402ecf19-febb-486a-9d9d-7da7960cbec9",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b9d4180f-0f43-452c-bf21-cdaabd8be13f"
        },
        "item": {
          "id": "26aee574-7d65-4f6e-8a76-6ae7f984babe",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "43593ba5-6628-4e85-be02-b70958da369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac1dddc-0ec8-4180-a115-3ad4745b509b",
        "cursor": {
          "ref": "f04ec91e-9352-4323-978d-6ea188023b73",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8b913775-6f1a-4312-938e-efcb45bbeb53"
        },
        "item": {
          "id": "eac1dddc-0ec8-4180-a115-3ad4745b509b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6531ad23-26f2-44bb-b6a6-c5bc246bfe70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719619e0-73e1-4f96-87e7-941ecf14899b",
        "cursor": {
          "ref": "39989a0f-e3e5-453d-9b0c-26886da1015a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5a192cec-658a-4e18-a197-4f2a57aaa324"
        },
        "item": {
          "id": "719619e0-73e1-4f96-87e7-941ecf14899b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7b8d95be-1f82-43c5-8f34-cfe96aa1512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2816304e-ce4a-4fa5-9bfd-547326cbe00b",
        "cursor": {
          "ref": "6534e113-ce28-4b42-b90f-46d3db8c1ad9",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db299fe7-dc7e-44c0-849f-31240353056a"
        },
        "item": {
          "id": "2816304e-ce4a-4fa5-9bfd-547326cbe00b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9f14d3d4-a298-48c7-ab98-c8514a97cfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc5bda2-ecc7-49c0-9638-3d412f452588",
        "cursor": {
          "ref": "d7aad370-58d4-4688-8138-7b897269264f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "989e3db2-5e83-48cf-ad3b-9bad51c2e899"
        },
        "item": {
          "id": "efc5bda2-ecc7-49c0-9638-3d412f452588",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f743dc85-437e-4483-bf93-753b31755351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7657e0f9-1513-46f5-9d7c-3a68aa639b00",
        "cursor": {
          "ref": "6ab546ab-dc89-4f42-9008-e48fa63fccc5",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2c706e93-eeb0-42cd-8b80-5f9bb622c5fe"
        },
        "item": {
          "id": "7657e0f9-1513-46f5-9d7c-3a68aa639b00",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0bcce2a0-12af-49e6-aa3d-3453f108159c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43735186-d68b-47d5-882a-e88e94edc7f6",
        "cursor": {
          "ref": "a29505ba-0ec1-471e-a7ec-678fcb0c07b9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "01a6fd48-ed24-4319-9d3d-5a06d0d7411a"
        },
        "item": {
          "id": "43735186-d68b-47d5-882a-e88e94edc7f6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "95f44106-e6f2-44e1-a13d-dd802eae4598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9008de2c-eaff-46b6-bb02-4d9f96981ef0",
        "cursor": {
          "ref": "8c547ccb-e7aa-4b0c-812e-4ba908f71979",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "79d4c182-857d-4988-9f45-6f6931853013"
        },
        "item": {
          "id": "9008de2c-eaff-46b6-bb02-4d9f96981ef0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "770f9ceb-dcd1-490d-b84a-1c75c8fb32a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdb44d3-33e6-4314-9981-887bbc107d07",
        "cursor": {
          "ref": "60ec1d07-2979-46d7-adc5-7bbc21205093",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e27355ed-2d40-4439-b398-156b82a1f4e6"
        },
        "item": {
          "id": "dfdb44d3-33e6-4314-9981-887bbc107d07",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "518c65f2-106c-46e5-b0af-20fd11245a68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057cca9e-2581-4c12-bb10-4e1d8e5bb934",
        "cursor": {
          "ref": "b8fcdc86-eb30-4286-bc63-55355d35bb53",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c5d36c76-3b2d-4aed-a7ed-6c9189536543"
        },
        "item": {
          "id": "057cca9e-2581-4c12-bb10-4e1d8e5bb934",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4f33c546-208a-4af9-a85e-36e184694c45",
          "status": "Created",
          "code": 201,
          "responseTime": 6870,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7474cb-aed5-418b-b33e-bcfa13d602a1",
        "cursor": {
          "ref": "2cdeccae-09e2-4274-930c-c438209cdd41",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3a0905fd-fdd1-4733-b85c-b748c9e020f2"
        },
        "item": {
          "id": "1b7474cb-aed5-418b-b33e-bcfa13d602a1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5d0c3666-54dc-4845-b17c-500b241a0f97",
          "status": "Created",
          "code": 201,
          "responseTime": 6065,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c143db4-045f-42f5-9ab4-8978984623eb",
        "cursor": {
          "ref": "f6f47dd8-9b5f-4203-bc4b-f4269d8c091a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eecf2aef-5790-41b2-81d0-df2bfa0ecd85"
        },
        "item": {
          "id": "2c143db4-045f-42f5-9ab4-8978984623eb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc946a73-aada-41a4-b0cb-a0534fcd8292",
          "status": "Created",
          "code": 201,
          "responseTime": 6501,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8ad7ba-c64f-4725-94bc-e5de37fce1ba",
        "cursor": {
          "ref": "3195a3eb-8d2c-4bcb-aa66-73e8e3532293",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7c7487d4-7e69-433e-9ab7-6e4e66e0fa43"
        },
        "item": {
          "id": "9a8ad7ba-c64f-4725-94bc-e5de37fce1ba",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fdf970c1-be9d-483b-9f5b-35578b345b0a",
          "status": "Created",
          "code": 201,
          "responseTime": 5717,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a30fc0e-e1da-4849-8f19-5697b6f2f951",
        "cursor": {
          "ref": "0f338666-5f11-48c2-9563-07ffa7dd108f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "031c57a8-42c1-437b-b787-a86cc427047f"
        },
        "item": {
          "id": "7a30fc0e-e1da-4849-8f19-5697b6f2f951",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "daea43b2-ca09-4f39-a83e-ed7d680d8d09",
          "status": "Created",
          "code": 201,
          "responseTime": 6050,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f39a8e-7138-4173-a608-0a22335ddf4d",
        "cursor": {
          "ref": "b96f14e4-35f9-4439-920f-f02d1837fcf6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c141e313-f7a6-4dba-ac92-47dadda5981e"
        },
        "item": {
          "id": "92f39a8e-7138-4173-a608-0a22335ddf4d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e63e72cb-ee7d-43d7-b909-20ac99c200db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b1481919-f271-4159-b794-c963050412c9",
        "cursor": {
          "ref": "a67b04c4-3768-40ca-bf1e-9c84dfc5e449",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fb30e860-b7d3-4d34-802e-b0a6c200c9aa"
        },
        "item": {
          "id": "b1481919-f271-4159-b794-c963050412c9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2e27735a-27df-4239-92c2-abe80ff7c8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956d71ad-4a72-4508-b6c1-159ab26cd664",
        "cursor": {
          "ref": "66f5424a-426b-47ba-8b1f-0efcb539d403",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c4d24092-5d20-49ca-a181-b38cbf8590f5"
        },
        "item": {
          "id": "956d71ad-4a72-4508-b6c1-159ab26cd664",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "96c039a6-31ca-4ded-a3ab-04302280f19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39740df6-442b-4daf-a870-c0d3ba8ce974",
        "cursor": {
          "ref": "2f776281-d215-4b28-95e4-98865eae6c1f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7ee51375-74b4-4988-ae75-1c50d9399e82"
        },
        "item": {
          "id": "39740df6-442b-4daf-a870-c0d3ba8ce974",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e8ffcc9a-f285-464b-b5c1-5ae455fe633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3659d9-08ed-4213-ad80-e879119d70b0",
        "cursor": {
          "ref": "062b9900-4b87-4ac2-a80b-ae9c34273449",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b64e67f4-108e-403f-96ac-cbd28d22e029"
        },
        "item": {
          "id": "8c3659d9-08ed-4213-ad80-e879119d70b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "91645938-e2b4-4f2e-a91b-81a56f1c033f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f90be-37c3-4b3c-905d-2c93aac7f507",
        "cursor": {
          "ref": "1940e197-c3b6-431e-8d63-04e27fa66d6a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0dc4513c-a35f-4437-acc1-234b83dc801c"
        },
        "item": {
          "id": "e60f90be-37c3-4b3c-905d-2c93aac7f507",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e4c63f26-71fd-4c27-8df5-8edaf3200554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251f1a36-4bbc-4de2-8da3-c7ef43ca6443",
        "cursor": {
          "ref": "06854e74-3d38-4ebe-90cc-8edc4f5fa48e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b70aec6d-1e7d-4ca3-9eb2-1205dee6e3b5"
        },
        "item": {
          "id": "251f1a36-4bbc-4de2-8da3-c7ef43ca6443",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bfab66a2-1dfc-4e5d-831e-005ded5865e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeeb531-6cf0-4030-8d1a-902d2852b3c1",
        "cursor": {
          "ref": "34da0bc4-279b-4906-8a85-b368d06cee73",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fee54d83-d12d-4179-bd66-53df2ab3057c"
        },
        "item": {
          "id": "bbeeb531-6cf0-4030-8d1a-902d2852b3c1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a7ad0584-7d5b-4b88-bf53-60c00bac5b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2422eb89-9e7c-4b16-b2bf-2be2417f3987",
        "cursor": {
          "ref": "639860f4-750f-43bd-9f00-433c05ef12f4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0f5eab99-8f27-4e09-97c0-66036c770b99"
        },
        "item": {
          "id": "2422eb89-9e7c-4b16-b2bf-2be2417f3987",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "02805836-8db2-46f7-9e15-72fb2cef39c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56662d68-7724-4bbf-a792-b2573e6752ac",
        "cursor": {
          "ref": "de318f10-b21f-40b8-b380-426e4e51a2c2",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f0d865d0-3a6a-4be9-b995-1fdf25fbd8fb"
        },
        "item": {
          "id": "56662d68-7724-4bbf-a792-b2573e6752ac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "37c3194f-43b3-4bd7-83c1-a3a020fc2597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2a0fb5-3b9a-4d25-9f81-ed0ee72d0caa",
        "cursor": {
          "ref": "6eb00cd2-aae8-462f-98f4-bf40d1408d6e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3e7b5df0-dc9b-4c5b-9a07-3ddd50c5b569"
        },
        "item": {
          "id": "6b2a0fb5-3b9a-4d25-9f81-ed0ee72d0caa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9907adbd-b08f-44fa-a08e-37f8e777ee01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c851c8-886f-4f38-bb44-ee86829cade9",
        "cursor": {
          "ref": "02955e69-8378-4626-81be-3222b076a6c8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5d807bbf-9fc8-4762-bfb2-2af8a99227cb"
        },
        "item": {
          "id": "c6c851c8-886f-4f38-bb44-ee86829cade9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e1d644d0-3f04-4b6e-b515-43c05aa7cb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098f7cd0-494a-4a1b-beba-de2f31aa7fa0",
        "cursor": {
          "ref": "46fec58e-3f7b-41b7-a1cc-b5603f867559",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "802c4618-d1a4-4ab4-b904-4ec9068c3571"
        },
        "item": {
          "id": "098f7cd0-494a-4a1b-beba-de2f31aa7fa0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c96f037-6963-4d96-be68-f6e5a640ad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9c9ab0-62aa-405f-9c7f-0ab7cb76de84",
        "cursor": {
          "ref": "be2201bf-244f-41ec-876e-d91c282e3d24",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "632bb05c-ae5e-4372-adcf-057719ea7a59"
        },
        "item": {
          "id": "5e9c9ab0-62aa-405f-9c7f-0ab7cb76de84",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40c9f7b2-42cd-41ac-89f8-92a0f7bcc975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9998b7e3-4489-42ae-a6dc-967ce20e39aa",
        "cursor": {
          "ref": "2dc1e10c-957f-4e92-b36c-08af7d9a90f0",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7349dc38-47db-4002-823c-01c3c2e55661"
        },
        "item": {
          "id": "9998b7e3-4489-42ae-a6dc-967ce20e39aa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "87bd8168-cc73-4cf4-ba0e-7cc67fbc6efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c350376a-1514-498d-9795-e180c01ca713",
        "cursor": {
          "ref": "4dfb3dc5-fb92-4ded-b1f1-3733d2c66970",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0dd890d7-72d4-49e9-959f-26a73314d407"
        },
        "item": {
          "id": "c350376a-1514-498d-9795-e180c01ca713",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2063b943-ecb2-4d0a-b584-375b393fb578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20a7ffd-d042-4567-a2f8-befb6d2f0518",
        "cursor": {
          "ref": "4dc45515-597a-4af9-a514-43be4a2b236d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1000171f-a43b-4566-b403-8cd2f826f42b"
        },
        "item": {
          "id": "e20a7ffd-d042-4567-a2f8-befb6d2f0518",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fae005ad-c135-45c0-9e9c-b243fef34937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35db62f-7588-45ec-838c-7ca5b7feb547",
        "cursor": {
          "ref": "981b9213-2480-4de0-a4d1-3097ed68514d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a9eeddcd-1a58-4809-b84a-e4a7c1aa743e"
        },
        "item": {
          "id": "b35db62f-7588-45ec-838c-7ca5b7feb547",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b8951f94-5a54-4f51-8a1a-7e85b359ab2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43efb3d-4531-4d7b-92bf-5405858d3acc",
        "cursor": {
          "ref": "b1fb4efe-04d0-4f33-b3ac-08d62b03d6e9",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6eda221e-9f8f-4020-be6c-d8026c11a3de"
        },
        "item": {
          "id": "e43efb3d-4531-4d7b-92bf-5405858d3acc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5a762f28-519d-41e9-bc1f-1cf79771be4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3925e49-c5d2-4a2d-8a5e-0fe08c4ecafc",
        "cursor": {
          "ref": "9d5648d1-6bba-47da-bfea-b039568ad92d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6b06f0ae-3dcc-4c2e-8d94-ea0e82266c56"
        },
        "item": {
          "id": "a3925e49-c5d2-4a2d-8a5e-0fe08c4ecafc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4d7167ff-ab0b-4653-89c1-7adc2119ec5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066b854d-b127-42ae-bbb4-dd82aaa78106",
        "cursor": {
          "ref": "ac5063f1-1209-4e21-a2f2-9d78a304ca23",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "16cbcf41-8bd0-4bda-ad37-f693af9ffcf4"
        },
        "item": {
          "id": "066b854d-b127-42ae-bbb4-dd82aaa78106",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "010ef67c-fcd9-40c1-83dc-254684c50111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e638c-2cbf-4436-a80e-75cb7e4f71d0",
        "cursor": {
          "ref": "cb0689c7-250e-467f-b955-ae94a5f787f4",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9c2c8b6e-ebff-450f-97e2-f6acff7ff31e"
        },
        "item": {
          "id": "817e638c-2cbf-4436-a80e-75cb7e4f71d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "918226fd-bb6b-49d1-a144-20f9420cbbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9f9037-7102-4670-a9c7-232929ea39d9",
        "cursor": {
          "ref": "235ee378-f6cb-44d1-ae8d-97e579ead25c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b2f65be8-4a3f-4fa4-9f9f-6acaaae97524"
        },
        "item": {
          "id": "9d9f9037-7102-4670-a9c7-232929ea39d9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5e544470-f0bd-4f5f-92f7-4aeb1d366ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9606d70-35c2-4cf2-b7e5-c59366f22ef6",
        "cursor": {
          "ref": "edb009cc-6312-4f88-acf3-e0b6cd905080",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "90fa5629-7a00-427e-a3bc-36d2d146d6cf"
        },
        "item": {
          "id": "b9606d70-35c2-4cf2-b7e5-c59366f22ef6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "15aceb3b-81c4-4b55-a44d-690fe3581028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a4032a-b3a9-4763-8998-0e2270acabb1",
        "cursor": {
          "ref": "ed176b6d-5e47-444b-85b0-923289c186a6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bf16cc49-0eb2-4166-8dd2-da3a7d4ee8c1"
        },
        "item": {
          "id": "98a4032a-b3a9-4763-8998-0e2270acabb1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bde1b722-bb76-4358-837f-05b31afe9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f91be4c-40e8-42d4-ab07-73dc72041650",
        "cursor": {
          "ref": "8a3e6438-a4e9-4d01-9e4b-9dc4f1ea4cb0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "abc228de-4239-4694-b1f1-e3be908bdce2"
        },
        "item": {
          "id": "9f91be4c-40e8-42d4-ab07-73dc72041650",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "66d90ec9-db0b-4859-810e-9df3289cbac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d8c523-5ef0-4cd8-8087-506398870848",
        "cursor": {
          "ref": "1b8a14e1-8d85-4639-a35c-f992be045eb7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9da30cf8-241a-423a-86a9-7ebfa359c101"
        },
        "item": {
          "id": "d6d8c523-5ef0-4cd8-8087-506398870848",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "973c578e-50df-4be7-9ef4-0f824b88a06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1435944-7032-4788-819f-0d9b2bd20e57",
        "cursor": {
          "ref": "397fa5a7-ee8a-40e7-a06d-af9adca7e0ae",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "46f14b9b-73bc-4818-a495-42f7a7c351d3"
        },
        "item": {
          "id": "d1435944-7032-4788-819f-0d9b2bd20e57",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d8304096-7bed-4987-9e9e-512f36dcefb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a4d5b9-e95a-4f5d-a0d1-a76769564bda",
        "cursor": {
          "ref": "967e0986-22cb-4f8f-a7ad-0863c2a3fa50",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "665f4aa5-04f4-49e9-8164-118a51c77bb4"
        },
        "item": {
          "id": "14a4d5b9-e95a-4f5d-a0d1-a76769564bda",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0c8596b0-cd8e-455c-85f0-115623bf2908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0d761c-1f22-4c62-8041-e5422d91852b",
        "cursor": {
          "ref": "27b86afb-6fed-4562-9105-1aecba76589f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b939caaa-dcd8-4648-9b66-d6f8b4e381cd"
        },
        "item": {
          "id": "ae0d761c-1f22-4c62-8041-e5422d91852b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "78037ab8-b7ef-4408-94e5-d572a2d6b74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff2d3e9-2d4b-4574-8fe6-d15235b5657e",
        "cursor": {
          "ref": "5359a31f-633c-493e-bdac-b564b3fdf922",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1a74551e-944e-4bde-bb81-fa2e123cbe86"
        },
        "item": {
          "id": "9ff2d3e9-2d4b-4574-8fe6-d15235b5657e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1cf91167-0801-4b20-83e5-578c75385b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813790e0-827d-4b4f-8e5e-a90b339e69fe",
        "cursor": {
          "ref": "bcb519f7-6c36-4bfa-bac8-de2870231c72",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7795fe3c-4624-4d64-a1eb-2f02e49a0d3a"
        },
        "item": {
          "id": "813790e0-827d-4b4f-8e5e-a90b339e69fe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "86bd54a0-d0dd-498b-8d19-f1fc9d7bdd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab176e4-06b0-4e56-8f1a-5b39b72c87f2",
        "cursor": {
          "ref": "0c2fcc8a-fb63-4ddc-ba1a-f2445cd80031",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1c52c3ae-ff89-4059-8d99-3161bd259754"
        },
        "item": {
          "id": "8ab176e4-06b0-4e56-8f1a-5b39b72c87f2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "78a3b00c-62a0-47a7-87dc-a830bad63ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00afade1-af52-48e9-95e7-04470bbf5207",
        "cursor": {
          "ref": "8055095b-1a22-4adf-9067-29ff31ad03ab",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "39a841c8-5d1a-4e18-9a0c-3245ccdb6568"
        },
        "item": {
          "id": "00afade1-af52-48e9-95e7-04470bbf5207",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9aaabd40-4199-4141-a6c8-132a4fb4469c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb0adef-db4e-4805-b674-f12f5c1a1a65",
        "cursor": {
          "ref": "f85ff3b1-d6e5-42fc-9386-07d044573dc5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e7e6f00d-69af-4244-85b3-7b81abbd049e"
        },
        "item": {
          "id": "deb0adef-db4e-4805-b674-f12f5c1a1a65",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6b30c57e-36b1-48cf-b7e7-43d8ce96d7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edde3309-74fd-4bb9-bdc4-2f5c6704b519",
        "cursor": {
          "ref": "40ad0ec7-098e-4cc4-a22f-5038ee3ab419",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "632ef5c3-d9b3-4dbe-903c-68c209529316"
        },
        "item": {
          "id": "edde3309-74fd-4bb9-bdc4-2f5c6704b519",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e09d2fe7-973a-47eb-acd5-5a847eccb4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593998b6-a3e6-4b38-b1d7-486dc72a182f",
        "cursor": {
          "ref": "2c359a84-b323-4ade-923e-d3d0da817248",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d205c1cc-c23a-4472-bed6-19a7a13f694f"
        },
        "item": {
          "id": "593998b6-a3e6-4b38-b1d7-486dc72a182f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "57936115-ef18-4446-8604-bf667f049655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4430e1ed-59a4-42da-b9d2-0d81dd1e1e23",
        "cursor": {
          "ref": "d9f68732-c502-48e0-801d-08e9220a3df5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e6404c94-128b-48cf-9515-0f59ff0a79b9"
        },
        "item": {
          "id": "4430e1ed-59a4-42da-b9d2-0d81dd1e1e23",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c230d104-79d5-4ba1-9d80-4d5441bbcb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd6d5cd-f005-44dd-8099-6b655c785299",
        "cursor": {
          "ref": "c890c3cb-a7e6-46d4-b559-8a92f87970a2",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0d2fc6c0-f3b6-484e-bda1-618c9dd989f7"
        },
        "item": {
          "id": "bfd6d5cd-f005-44dd-8099-6b655c785299",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1a1a0ab2-947e-4f12-8fa1-41f65e270b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3796daaf-e5a5-4620-8442-0008eabd07ef",
        "cursor": {
          "ref": "67b0f406-620f-45c8-ae52-10619fc1da7a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "92f9f3f8-af14-446a-9374-109a02cb5db4"
        },
        "item": {
          "id": "3796daaf-e5a5-4620-8442-0008eabd07ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "93e4c688-bea8-4e24-ac2b-d96c85cbb319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f4cf9e-6317-45c0-9ea4-04945549a5ea",
        "cursor": {
          "ref": "fc0b4836-835a-4c0a-9a0e-d5864118ea50",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3fade57f-0113-434d-b01a-c0ffe259b711"
        },
        "item": {
          "id": "70f4cf9e-6317-45c0-9ea4-04945549a5ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26b82ee2-e7e3-452f-9807-1ecf689a7b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1745847e-e310-4264-923c-41d1f6f19f14",
        "cursor": {
          "ref": "88068639-fa8d-41e0-9cc9-815992212cb7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "330ac413-d84a-4566-847d-fb504f5874b9"
        },
        "item": {
          "id": "1745847e-e310-4264-923c-41d1f6f19f14",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "19eeb6e3-55cf-428d-998d-bbe211322c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d55a76-41c5-42f4-b8ae-a9432a1577b1",
        "cursor": {
          "ref": "2ca7c42f-dff1-4129-b7dd-ecb02d71f22f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8f1c2640-d7a0-4673-a828-b65046e7377a"
        },
        "item": {
          "id": "69d55a76-41c5-42f4-b8ae-a9432a1577b1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c121e5f3-a1ed-4b0e-91bc-1b9a22c30c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a20d7f-45a7-492d-add4-547450cc944e",
        "cursor": {
          "ref": "8402d7b9-73a2-4aba-8116-41f0361b011d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7f71a74b-274e-46dc-a57d-a56a3be976a1"
        },
        "item": {
          "id": "71a20d7f-45a7-492d-add4-547450cc944e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fad437a1-b8fe-4435-af2c-81d861542f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b454680-ed2b-4e50-bfc4-2d022fadbeb0",
        "cursor": {
          "ref": "e6c2a866-2370-462c-8465-5b46ca6a5798",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c92e4140-6efa-455f-940c-634ebfb4b7a7"
        },
        "item": {
          "id": "5b454680-ed2b-4e50-bfc4-2d022fadbeb0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fd9b1083-4d3f-43f4-818c-5ccea06dc477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4c8eaa-eccb-40d0-9b13-6969eadf0dd0",
        "cursor": {
          "ref": "a95862d9-d8a6-497c-a967-cd5e1a90a256",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "68bc8afe-d135-48ef-a6c2-7920984ba1ae"
        },
        "item": {
          "id": "2c4c8eaa-eccb-40d0-9b13-6969eadf0dd0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "128ed7c7-d11e-457d-bb37-f17762878c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030b701a-8e8c-40e9-ac0d-6c1594f0e7b9",
        "cursor": {
          "ref": "971534c0-19f9-4aea-89a8-fef5f7fee1e9",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "643630fe-cda7-477b-a8f2-f6cbd020e6cf"
        },
        "item": {
          "id": "030b701a-8e8c-40e9-ac0d-6c1594f0e7b9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ffa10f0-2c6a-4655-a4da-77096ee7145a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484272ce-f04b-40af-b9ed-c2b12bb85242",
        "cursor": {
          "ref": "2a3a713e-aa15-4fa6-9efc-f623c2e870fc",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8b4dda8c-b8b4-4648-947f-9ae04181c0d2"
        },
        "item": {
          "id": "484272ce-f04b-40af-b9ed-c2b12bb85242",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3b533ca9-15e2-40d9-b03c-c7a42bfc57e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341d6c3a-46b5-4c59-82b3-a9dc8b03379f",
        "cursor": {
          "ref": "bbad794a-2fcc-438c-a79f-0fa80fc6adc1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "afd6992d-1ddd-48e6-a3ab-caed61e215c9"
        },
        "item": {
          "id": "341d6c3a-46b5-4c59-82b3-a9dc8b03379f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "da3e86ea-25a0-4cb1-9908-994cc59119f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce74724-abb1-456e-ad57-565f658a14b8",
        "cursor": {
          "ref": "e3a90415-ae7a-4b2a-a1b4-58dfd19cdf00",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "87699f3b-e218-4764-9cd2-46910774386b"
        },
        "item": {
          "id": "8ce74724-abb1-456e-ad57-565f658a14b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5beaaf64-2067-4a0d-aac4-f063a6adc75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dad82af-468e-4375-b655-c7bfbc80edd1",
        "cursor": {
          "ref": "37f4a7e4-5156-4910-b7cf-c5738f5e869a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "309e0637-58e5-44c4-83c8-09fc393db895"
        },
        "item": {
          "id": "0dad82af-468e-4375-b655-c7bfbc80edd1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "993a9d0f-85b8-4327-ac5a-d464ab596de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaf3fa8-67bc-4c24-9eae-0dffd3d8bced",
        "cursor": {
          "ref": "c4c9606c-84c9-44cb-8495-25651ca45e93",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "01d1792b-e7ff-482c-be48-7228f2c10c43"
        },
        "item": {
          "id": "9eaf3fa8-67bc-4c24-9eae-0dffd3d8bced",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc173a54-f2dd-4c8a-81fd-f326738c6df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fef3601-df90-4c52-b46d-fdbdc3421c0d",
        "cursor": {
          "ref": "f324d8b7-1514-4e17-b95d-bdf5b9ca685c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d9ff3844-4704-4a2b-8093-6d4cc89e8c15"
        },
        "item": {
          "id": "6fef3601-df90-4c52-b46d-fdbdc3421c0d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c97879a1-270d-41cc-a95a-41f53cf8bdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25359d84-41b3-4f85-b05a-90f6b6c5b98c",
        "cursor": {
          "ref": "923153f9-41ed-4324-8eff-e5705288922a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ae16df74-4e54-4f06-91c9-1a5aa793a5b3"
        },
        "item": {
          "id": "25359d84-41b3-4f85-b05a-90f6b6c5b98c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b72308f8-381e-4f67-b5b4-df61fd9ceaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89731470-36d7-44f2-99c7-606c4dbb7a04",
        "cursor": {
          "ref": "0470a4f5-a783-46ce-908e-c359c05c2076",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d8ae805f-de9d-4b24-b70d-147adf59fa51"
        },
        "item": {
          "id": "89731470-36d7-44f2-99c7-606c4dbb7a04",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20f7a32c-6fe2-4fec-af74-706c451e8152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ba4f85-3446-4653-8d88-33e13cc43b72",
        "cursor": {
          "ref": "023d6161-c075-4b83-b5dc-9de9c77f437c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4e020522-892b-4e3e-b5d9-b46475fcc701"
        },
        "item": {
          "id": "35ba4f85-3446-4653-8d88-33e13cc43b72",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83e815a3-2709-465e-9352-559068d2ae5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4133e00f-be9a-48cb-88a8-b076459e7c6e",
        "cursor": {
          "ref": "28ec8fa2-543c-47ff-a396-d40a47c017be",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "972cd846-c5ee-416b-b71d-d44c8d21c6d5"
        },
        "item": {
          "id": "4133e00f-be9a-48cb-88a8-b076459e7c6e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b7b9d705-5d34-4ca4-bf43-a822faf42a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d7b630-f51c-4a35-9655-8cc5dcbc6e6d",
        "cursor": {
          "ref": "737ddfc8-d947-4103-b60d-200e4c4df5ad",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8339ede6-996a-40ab-8a32-d24e454e36d3"
        },
        "item": {
          "id": "e5d7b630-f51c-4a35-9655-8cc5dcbc6e6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6bd1fdfa-edbc-46e0-9979-5c21b3966690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5665b7-bacc-4ff0-98d1-a02b1575ed28",
        "cursor": {
          "ref": "dd6c140f-2151-4f23-9fd6-e9bf24225d86",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5123330d-7c06-4af0-9d78-8f5618caa8fe"
        },
        "item": {
          "id": "de5665b7-bacc-4ff0-98d1-a02b1575ed28",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e16b15ec-4425-434a-99b2-5805ffe22d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f83b50d-b31b-42fa-92b6-a4aed3bf0419",
        "cursor": {
          "ref": "25dfc703-98c3-442a-81bc-c094e29d2726",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7827edf4-bef4-4e6e-a6aa-19b710918dc8"
        },
        "item": {
          "id": "0f83b50d-b31b-42fa-92b6-a4aed3bf0419",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eed01190-4f30-4335-b082-274a933b74fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2111bc-2363-47b4-97c6-e795be87ee54",
        "cursor": {
          "ref": "7325b0ee-47bc-4c28-9305-95c2883b03ba",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9fb5fc35-3317-43ed-a718-b8683c82c5d7"
        },
        "item": {
          "id": "3e2111bc-2363-47b4-97c6-e795be87ee54",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "67a57a77-d83c-4af5-ab1b-f5f18050b687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963fc5ce-cadc-437f-bfce-b6d56cb9dfd4",
        "cursor": {
          "ref": "b9c63978-7259-4e6c-9f3f-b784793bd5c3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "80877954-f2a3-4b70-a1e7-99c538e1dd2a"
        },
        "item": {
          "id": "963fc5ce-cadc-437f-bfce-b6d56cb9dfd4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "da84f89f-b302-46ee-8da0-54a0737e9a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0ce8a1-8bf7-4608-b2b7-19e0f63f1d6e",
        "cursor": {
          "ref": "25489ea5-d40f-4a9a-be6f-4e04b0f132de",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a8417bab-2bca-49f5-83d9-a8a53c740ed9"
        },
        "item": {
          "id": "4b0ce8a1-8bf7-4608-b2b7-19e0f63f1d6e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "59368ff8-c74c-4d7a-b668-82c7efd7d900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf64c6-f6e8-43ea-a344-10d174d427c9",
        "cursor": {
          "ref": "fd6d4bb8-9bf1-47c6-b681-b44b3ebd32fe",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2c76347e-aec9-40c7-9e08-1a279b567aa5"
        },
        "item": {
          "id": "40bf64c6-f6e8-43ea-a344-10d174d427c9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fd52c7f1-9994-416c-b315-bbeeba8c87b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d5c534-99e5-4ddd-8508-27cf339593be",
        "cursor": {
          "ref": "83a4a594-3e8d-4e13-aa7b-05450e1b38ff",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f0adb9cc-5461-4b59-81a0-208e8ef09dc0"
        },
        "item": {
          "id": "c0d5c534-99e5-4ddd-8508-27cf339593be",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0294aba4-f7a5-4be1-aedc-2068ef619d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e56c0af-ccd5-443c-a5ff-f8e2faa4e26b",
        "cursor": {
          "ref": "41faf4ba-c2e9-4ab1-b53c-ec7b36150e49",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "29e04104-5ff3-48c1-a7be-9ede03ea29d6"
        },
        "item": {
          "id": "4e56c0af-ccd5-443c-a5ff-f8e2faa4e26b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3917319a-87f3-4de7-8993-39ea60023f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c508d1f4-76e3-4fc7-b14b-0d4554d34922",
        "cursor": {
          "ref": "39db280f-818f-4ead-b3e9-170f439229f7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4f1ecb8-9cc6-4aa0-9137-39ac2bd6560b"
        },
        "item": {
          "id": "c508d1f4-76e3-4fc7-b14b-0d4554d34922",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e69d3b86-e9b1-45cd-9024-930facf47e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d665b41-b55f-4d67-a163-e2897735b04c",
        "cursor": {
          "ref": "e73884ad-da0c-41b1-93e0-338d1edfa0fe",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fa86c6e7-bf68-4e62-bca6-5047e9fc4474"
        },
        "item": {
          "id": "6d665b41-b55f-4d67-a163-e2897735b04c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ad233542-67c5-4ac7-8989-026efb349660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a6aadf-f163-4768-9b1a-db7a8f1fb809",
        "cursor": {
          "ref": "1aa1d455-d929-42ff-8545-9db391ab9967",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a06685f0-3bfa-490a-b23b-419287e12500"
        },
        "item": {
          "id": "a0a6aadf-f163-4768-9b1a-db7a8f1fb809",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7c6e991b-85bf-4457-8a82-732b09d9cc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a07c99f-568a-493e-a802-18133fad9f48",
        "cursor": {
          "ref": "131d3ba8-75af-4618-8b5d-b7e12862f894",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "25f9867f-20cd-4680-b0fc-9a8249e0c3e1"
        },
        "item": {
          "id": "7a07c99f-568a-493e-a802-18133fad9f48",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0c4a3628-9eb0-4800-bb48-2b559510dafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc84ea50-7532-4e02-8c88-9baad6f853c2",
        "cursor": {
          "ref": "86b6aae2-d454-4c3f-bf07-54391beb1f23",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "564f46bc-999f-4658-9eb3-6d44cc4f5c59"
        },
        "item": {
          "id": "fc84ea50-7532-4e02-8c88-9baad6f853c2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "221cf7b9-7b03-4033-8ea7-e943426f0cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db742eeb-d83c-45eb-90b0-c27ea939f22e",
        "cursor": {
          "ref": "b503b05e-6afe-49e1-a342-bb31691762b0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9af9ac87-e0b6-4ca3-87ab-b5b5e78bec3d"
        },
        "item": {
          "id": "db742eeb-d83c-45eb-90b0-c27ea939f22e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fc50b48f-cb04-45bd-92da-3ea2b9db859b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf91b576-04d6-42c3-ad28-d34cc1b25540",
        "cursor": {
          "ref": "d5896c86-5524-49c3-af29-882c9e049481",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "93bb6bad-5d98-4667-99b6-a13c26722d1d"
        },
        "item": {
          "id": "bf91b576-04d6-42c3-ad28-d34cc1b25540",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fb2d2fe0-91a1-41ca-bf14-3b90a9385e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e4c441-7e73-4f9d-95a3-ac131612b2c8",
        "cursor": {
          "ref": "81faab7b-a438-4ffb-be8c-5b1841e626af",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e0a3b151-17b5-4941-bba4-e6d725ce0af7"
        },
        "item": {
          "id": "b2e4c441-7e73-4f9d-95a3-ac131612b2c8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8400acee-24f0-4857-a2b7-9ae7f06af173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0410b1d2-f3e0-4ee4-a099-18172e7d3933",
        "cursor": {
          "ref": "c698c5c9-e562-46f9-8c60-37ad701fbce2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6b3c7fb7-db63-4624-8cc9-6a168551cd71"
        },
        "item": {
          "id": "0410b1d2-f3e0-4ee4-a099-18172e7d3933",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "32243fd3-ebfe-4cd1-948a-8af2dd579bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705f815d-cb1b-47c2-99da-78aef900f02e",
        "cursor": {
          "ref": "da3962d7-9bd7-4b1e-b2d1-287134f1928e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e741760b-45f7-4a63-b152-0d969aff3bc2"
        },
        "item": {
          "id": "705f815d-cb1b-47c2-99da-78aef900f02e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3d3ba597-7994-45fd-b0f4-0972a0ed25c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5172c008-3df9-4e85-a4ae-68cfd113fc9d",
        "cursor": {
          "ref": "a9723ac2-cb42-4346-8f28-c663860e738f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "80bc6d2e-7bb4-489a-9149-f533a3fc6ed1"
        },
        "item": {
          "id": "5172c008-3df9-4e85-a4ae-68cfd113fc9d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2676a113-0957-4456-ad1e-ad4d43726acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e869617-e83e-461d-a84f-625c24be7595",
        "cursor": {
          "ref": "9c2e61ad-deb4-4a03-b443-ab75c35dabb8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ef99135d-506d-4b2e-aafc-fe0cda123859"
        },
        "item": {
          "id": "5e869617-e83e-461d-a84f-625c24be7595",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "490a1d00-9fe5-464c-962c-ca8370e4dd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062c1b1c-93ea-4332-ba7e-9a7c9b45053b",
        "cursor": {
          "ref": "5b492808-dbdc-4b5f-a28b-02dff324ac12",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "65bd62ed-581f-47fd-91de-5875cc06d1c8"
        },
        "item": {
          "id": "062c1b1c-93ea-4332-ba7e-9a7c9b45053b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "97352fe9-df92-4a33-aea5-5c7d62188f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9974c96-612e-4b19-a2d9-689b463f2ee0",
        "cursor": {
          "ref": "a47509bd-bb4b-4f98-bbf9-641a10cf2116",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "29e504c9-7f68-4628-b27d-a1cdf38b501c"
        },
        "item": {
          "id": "e9974c96-612e-4b19-a2d9-689b463f2ee0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9980d455-f72d-4865-b64b-214d327cf8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e745c01-0c3c-49fb-abe4-9f9f7f5df5eb",
        "cursor": {
          "ref": "91572804-d912-4245-8647-6f434e4fcdde",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "662eeec7-d33f-4a00-bebb-dc6d3d593b78"
        },
        "item": {
          "id": "9e745c01-0c3c-49fb-abe4-9f9f7f5df5eb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c9567a95-522a-4ad6-81c3-823efec11d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c35996-4dff-4976-9c7f-fbfd7e7827c4",
        "cursor": {
          "ref": "fe88a8e4-25e1-4dca-b82f-47f86941de86",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7ad590f5-9f60-4e86-9d05-a660571c6127"
        },
        "item": {
          "id": "82c35996-4dff-4976-9c7f-fbfd7e7827c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cf5b2363-3f2e-4243-a821-6201c01cfbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfab952b-5134-436f-b241-9c6f868af262",
        "cursor": {
          "ref": "5c2901bb-e63e-488d-869b-27a379d8cd2c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "906bd89a-5bee-4672-adfd-1c5ef503fa33"
        },
        "item": {
          "id": "cfab952b-5134-436f-b241-9c6f868af262",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c6f741df-7f23-4ef9-9e96-354c499a1e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad3378b-bfc5-4afb-a237-06646f81ecf1",
        "cursor": {
          "ref": "87e1c8e5-e71d-4ee3-b0b6-514122c0e47d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2f51e901-fdd9-41dd-9427-2f00cd78609d"
        },
        "item": {
          "id": "bad3378b-bfc5-4afb-a237-06646f81ecf1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ff6ba322-3e77-4c4e-bc13-8f46c96a51c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4621c26d-ccf7-4d4d-9bbb-1a58491e8a92",
        "cursor": {
          "ref": "92aeef8b-fae9-4ccf-a436-e898ff91d22a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7d8f357d-5c50-4d2c-9ea2-76f0db91a17b"
        },
        "item": {
          "id": "4621c26d-ccf7-4d4d-9bbb-1a58491e8a92",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cee954b5-940d-4f40-91ab-715d16f4e3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a398d4cf-b9a9-46dc-b047-b1f9610ec521",
        "cursor": {
          "ref": "c46da07b-7de3-4034-a8f2-633ab34e5928",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b0bdb155-deda-4bc6-8d90-6ef7d3a63a4e"
        },
        "item": {
          "id": "a398d4cf-b9a9-46dc-b047-b1f9610ec521",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f231568b-53d6-40cc-9f36-d19f64c25b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1670812-f0f2-4f3d-a615-2c9c02f408be",
        "cursor": {
          "ref": "d3753b27-cd83-49bf-b3af-8217ef456856",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "09633ee1-7d1a-4456-b53c-48e082a80259"
        },
        "item": {
          "id": "c1670812-f0f2-4f3d-a615-2c9c02f408be",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8b961139-6886-480c-af38-5376932207db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a56bdd-201b-4e28-be4c-3fd67151361a",
        "cursor": {
          "ref": "73ea07e4-55f0-40d8-b752-0ca7faab8fb0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d114eb4a-a27c-4898-8e7c-9513631c6127"
        },
        "item": {
          "id": "02a56bdd-201b-4e28-be4c-3fd67151361a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dda9c296-b4c9-4aa2-a0b0-6ccfbc610b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00bae1e-c074-4493-98fa-a55310ce6261",
        "cursor": {
          "ref": "2d556011-91e8-482d-a7bd-eaaf4f14803c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bc9704af-02dc-4035-9231-afc4e19e1edd"
        },
        "item": {
          "id": "e00bae1e-c074-4493-98fa-a55310ce6261",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7a1df975-4b25-4825-a2a7-48158cbbea5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5371b6d9-41c2-4f35-ac4c-5f1bc7fcc5fd",
        "cursor": {
          "ref": "e8b7f7d4-632f-431c-97ff-f4eb2608eb5e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8f1e3a65-8fbd-4693-af89-b264f0c08257"
        },
        "item": {
          "id": "5371b6d9-41c2-4f35-ac4c-5f1bc7fcc5fd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "799dd87e-1aee-43c7-af1c-1463100aad94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfe2997-d8f1-4136-bd75-f90afbf77278",
        "cursor": {
          "ref": "7e8ab1ac-5736-4b13-9f64-3be10b2749fc",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9ef822e8-68c9-4284-be11-057de6815df7"
        },
        "item": {
          "id": "2cfe2997-d8f1-4136-bd75-f90afbf77278",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a01498fa-8bc5-4028-8aab-5f70425b23a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba64fc-ea47-4a31-981e-621c7fff5067",
        "cursor": {
          "ref": "218c5aec-de9f-4b8f-b37e-bdb690e681ea",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "60f186eb-9952-446e-82de-75a64441043f"
        },
        "item": {
          "id": "c4ba64fc-ea47-4a31-981e-621c7fff5067",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "54aa107c-647c-4b4b-8e6a-41a9c0397d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa1e3c9-e801-4081-a1b1-4b5b0033aaf6",
        "cursor": {
          "ref": "d29ce15e-a24f-4072-80a8-f7772edada73",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cc1cc049-9e56-46a1-8443-f578a0bd6d84"
        },
        "item": {
          "id": "6aa1e3c9-e801-4081-a1b1-4b5b0033aaf6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "24b1e68c-720f-436d-9365-4a08b5677105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83265585-c3bb-43c8-83d1-1430d0a26b6e",
        "cursor": {
          "ref": "33365302-15d9-47b5-98ca-670227f6546c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0746435e-dad8-4010-88f1-1add9e4f59fb"
        },
        "item": {
          "id": "83265585-c3bb-43c8-83d1-1430d0a26b6e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "14ce2e33-c5d5-4938-bf9c-5e3f55906904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab226715-a2c8-45c2-b5f6-492cb1a87b19",
        "cursor": {
          "ref": "0ea7d54b-afd3-4ddb-a2d6-8acf3bd64691",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2bcbca8c-978a-43fd-b44c-ad291e43d712"
        },
        "item": {
          "id": "ab226715-a2c8-45c2-b5f6-492cb1a87b19",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a899044-14ca-4993-90a6-9ff1353b140d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257d1313-390c-45d0-9f1d-567af2f2618a",
        "cursor": {
          "ref": "78d27312-f897-4338-8f5b-480850a0de71",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "71982d9a-b960-415e-ab9a-60b9318478a1"
        },
        "item": {
          "id": "257d1313-390c-45d0-9f1d-567af2f2618a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "16b65754-99b1-49ba-9750-48ff475a318d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49297908-a7d7-4040-ab53-2fcb8c6aa0a3",
        "cursor": {
          "ref": "6a32f81f-b5e1-450b-a294-59c65f58b3dd",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ebcc1808-147d-4fba-ba7c-20a450be1a3b"
        },
        "item": {
          "id": "49297908-a7d7-4040-ab53-2fcb8c6aa0a3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "548e35fa-bf53-43ee-a50d-5e25dde1f458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b64389b-6386-4d5b-9310-a0c4ac33e2f1",
        "cursor": {
          "ref": "8f6761a4-1d4e-4360-8b5e-eec165b05a74",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "46509901-9b8c-4404-bd1c-d6e929d41b84"
        },
        "item": {
          "id": "9b64389b-6386-4d5b-9310-a0c4ac33e2f1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fec77fd6-1461-461b-8389-071576f03bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7924e9-95c3-4e02-8772-d5ccef2ff111",
        "cursor": {
          "ref": "bcb72c33-ab84-4d43-9bc5-154e68fb4a93",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f50b8f9b-2973-4cab-ae18-fa8cf78807d2"
        },
        "item": {
          "id": "9a7924e9-95c3-4e02-8772-d5ccef2ff111",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "df287d9d-0975-4697-b06d-5a05100ea404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4071a765-e406-4798-8d5c-2e449f06f15e",
        "cursor": {
          "ref": "3dda7dcb-31cc-4bf0-b89e-f7696346bf46",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bb445bf2-025a-46ff-9532-f235fa1934cd"
        },
        "item": {
          "id": "4071a765-e406-4798-8d5c-2e449f06f15e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "49e86829-912f-4f4c-a197-e9d6aa3d667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34507f3c-bf38-47d0-87e0-3875435b0f88",
        "cursor": {
          "ref": "1a8d24df-bfee-48ef-a8b2-344b3e1e6f98",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7b2cb667-0908-4885-875d-b3a43a5c3d33"
        },
        "item": {
          "id": "34507f3c-bf38-47d0-87e0-3875435b0f88",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b18e9d81-af35-4c7b-96ca-c0cfb60c912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38eae6c0-a3cc-44db-aa6e-2a881ae8cdd9",
        "cursor": {
          "ref": "81f32dc0-8467-4822-9d0e-c4303a153104",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "56898bec-7332-4d73-baa9-b11303c3a230"
        },
        "item": {
          "id": "38eae6c0-a3cc-44db-aa6e-2a881ae8cdd9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bdfc0d05-8e21-4896-951b-d49ea6458994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91baedb7-9de1-47f2-a08a-9616791c501e",
        "cursor": {
          "ref": "07d8a8d2-e111-41bc-b463-147008e841b1",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3c160ef6-2bc0-4bef-b7e3-834cde4c279c"
        },
        "item": {
          "id": "91baedb7-9de1-47f2-a08a-9616791c501e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "61110860-8474-4adf-820e-8a263f91b5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8204a2dc-3fd0-4372-975f-8cb9d8778612",
        "cursor": {
          "ref": "e507c762-8ae1-42a6-be1b-8b5380deff3c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "69afd6de-99c3-4321-9139-b2e1a01b7708"
        },
        "item": {
          "id": "8204a2dc-3fd0-4372-975f-8cb9d8778612",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a5e612b1-6703-426e-bd64-717a7238a82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ffea5f-898b-4be5-8c6a-46f0fc921cb0",
        "cursor": {
          "ref": "12929edd-0c0f-4ab8-be2e-987b3c6f2a26",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c252059c-ceec-47be-a20a-ba5d60c3c4c9"
        },
        "item": {
          "id": "77ffea5f-898b-4be5-8c6a-46f0fc921cb0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "08b43125-1a37-408a-9088-8bd9ef47e366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b60002-0713-43de-a0e0-efbccc588643",
        "cursor": {
          "ref": "28522a0f-8728-4faf-bd4d-d733f5d53386",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2fdac291-657d-469a-9cbe-d17c85f780f2"
        },
        "item": {
          "id": "d6b60002-0713-43de-a0e0-efbccc588643",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "374544e6-0249-4e08-8009-ffc681e73fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5f28b7-460d-4a35-b565-30c403c4bb0e",
        "cursor": {
          "ref": "5a4e1669-9cb3-47b5-9c13-bedbf92a7b33",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "42a5a80d-4815-447b-afd3-a96dde59485c"
        },
        "item": {
          "id": "7f5f28b7-460d-4a35-b565-30c403c4bb0e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "61acbf48-4a14-497d-bab6-5b0b068c06c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6304b922-8e61-4eb9-9e0d-375fa2a6702e",
        "cursor": {
          "ref": "569a13e3-cf69-4e7b-aa41-553fa6383bb2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3b0037e8-2a56-49c6-b8c5-7fb3849a7a0f"
        },
        "item": {
          "id": "6304b922-8e61-4eb9-9e0d-375fa2a6702e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7cc602cf-1c12-4c0e-946a-88a2fe35d06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ccebfc-8913-4c98-bc32-b411352bf336",
        "cursor": {
          "ref": "290bead5-d20c-40da-aba3-34eb48a452b6",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f81f5360-bc76-496b-a4a0-71687eca61a8"
        },
        "item": {
          "id": "91ccebfc-8913-4c98-bc32-b411352bf336",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1a59be8b-00d6-41cf-95e3-3700ff20f9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ccd412-bac2-4d54-9e27-6d6366b0991f",
        "cursor": {
          "ref": "d82b9a23-e2d4-4afb-b4ea-97e527eaf875",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3e70d77a-ee50-4689-888f-897390408c2a"
        },
        "item": {
          "id": "f5ccd412-bac2-4d54-9e27-6d6366b0991f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bab06fec-b32e-4b81-b07b-d5bbae587452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00980337-adc6-45b0-951d-798dd7328476",
        "cursor": {
          "ref": "e1da800a-9878-4eb9-9c12-93b0dbab478b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e413faba-22a4-4490-add3-5cede8f49330"
        },
        "item": {
          "id": "00980337-adc6-45b0-951d-798dd7328476",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9a64f4bf-888a-43a2-b528-ffea6c255e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ee7cff-6a82-42ff-95f7-9d1d5166e4d6",
        "cursor": {
          "ref": "18375360-a248-46b5-9076-0fdabe4471ae",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eccf220e-20e1-47d4-8a5d-eca7e07e9b20"
        },
        "item": {
          "id": "88ee7cff-6a82-42ff-95f7-9d1d5166e4d6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "efca92f9-dc1f-4d50-b179-6e716d25fca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27b14fd-c9fb-4612-aced-66e6fadef4ec",
        "cursor": {
          "ref": "658b5f91-c615-4868-8b11-ca2ccf545fac",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4370ede2-0635-413b-af76-e3f6b7be692f"
        },
        "item": {
          "id": "a27b14fd-c9fb-4612-aced-66e6fadef4ec",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b2f6ee44-a27f-433f-908d-60164e81d594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4391509-c63d-4089-ab44-42407885d3e3",
        "cursor": {
          "ref": "95b47a2a-5954-4b1f-86fb-ae0b4183dc0e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b8714c50-4132-4b0c-a679-ba5395744290"
        },
        "item": {
          "id": "f4391509-c63d-4089-ab44-42407885d3e3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a064f184-c628-4096-aa16-41a23cf227e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4da56c-3f28-4683-835d-845c85171fad",
        "cursor": {
          "ref": "80bd8816-9a25-4a1b-8769-f702a0a604c1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8feecf75-470d-4b42-b515-a13fbd190194"
        },
        "item": {
          "id": "ea4da56c-3f28-4683-835d-845c85171fad",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f95959b7-f2ee-47ca-a870-b0b8abd73ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00defb19-67ab-426a-96d7-b7f1273c564f",
        "cursor": {
          "ref": "cde4b2ec-9021-4da4-8862-a1068ae6da3c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ebe6288b-3470-47aa-b2c5-6071bd1fa182"
        },
        "item": {
          "id": "00defb19-67ab-426a-96d7-b7f1273c564f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a7320fb8-99de-4b9f-830a-18dfc21ac149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf988da0-2dc2-40f9-9797-fde3851542ab",
        "cursor": {
          "ref": "c709419f-35c0-4fe4-a8ec-dce9d559bb84",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5a6527ce-3a16-4b37-beb2-e6f56b277e1a"
        },
        "item": {
          "id": "bf988da0-2dc2-40f9-9797-fde3851542ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "53f1d41f-7dcf-47e0-bc80-c4075bd28dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d08fe5-43ab-48bc-835e-8a911c46a3c5",
        "cursor": {
          "ref": "348dde29-0925-4f3f-b72c-a3650361cd98",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eefca5d1-ce8e-42c5-99ca-36f818c4d729"
        },
        "item": {
          "id": "26d08fe5-43ab-48bc-835e-8a911c46a3c5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9fb6c383-dfbe-4607-b7bf-19a2784ed201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e30099-0252-4be1-aad0-8a586e07bedb",
        "cursor": {
          "ref": "d84cb92e-bab4-4f7a-be99-6496ff06dea8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6c8bbcc0-6f44-4d75-8e11-6b9ce5f75b30"
        },
        "item": {
          "id": "b9e30099-0252-4be1-aad0-8a586e07bedb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "72d8153d-6d62-49f5-8cba-e8d8fe6a9b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f757e-7258-4080-8c37-e2182b85ccac",
        "cursor": {
          "ref": "4a41b75d-2e08-44a3-ae67-92f67a76f38b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "386bf226-4d18-4978-bac4-9d6261a61322"
        },
        "item": {
          "id": "190f757e-7258-4080-8c37-e2182b85ccac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "84b21e4b-e486-4f07-8271-f1b9a54d67e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd72491b-d062-494d-80b4-238a76db272d",
        "cursor": {
          "ref": "446b2598-0be4-45dd-82e0-a14a1bfff1ea",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ef20ae80-ddc9-4b94-a37c-814cfa8a292d"
        },
        "item": {
          "id": "cd72491b-d062-494d-80b4-238a76db272d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0db4605-01f2-4310-ad4e-97244e0a1ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae60ce-f956-4b5f-a7c8-cb8d6881c570",
        "cursor": {
          "ref": "fe6e0856-dd3f-4a8d-9898-5393d0e889e3",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "126f8554-f1a8-45a6-bb60-a9dfedb349a4"
        },
        "item": {
          "id": "7bae60ce-f956-4b5f-a7c8-cb8d6881c570",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0a381747-7798-4153-beb2-c967fba1904f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098179d8-de78-4ee2-b4fd-378a08be4889",
        "cursor": {
          "ref": "0b36c368-1360-44f8-b362-3838b19ff2c8",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4469d26d-7a93-4d5f-8428-28aea61d3f3c"
        },
        "item": {
          "id": "098179d8-de78-4ee2-b4fd-378a08be4889",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "30063b23-2535-42ad-b2e2-b9ddbe69afc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e395f8fa-becc-4d51-ae65-157e7b3a1089",
        "cursor": {
          "ref": "08591602-f5e9-4f0e-9d15-3e87ce9a0880",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9d2b0dff-0bfd-45a3-8593-75f15300e033"
        },
        "item": {
          "id": "e395f8fa-becc-4d51-ae65-157e7b3a1089",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c55b085f-e2b7-4631-9861-af3ac31d16b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d9067f-5c26-4a36-a220-ab6fde63167e",
        "cursor": {
          "ref": "e54c5f71-adf0-4375-a150-b3987e2ade9f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "248f935b-d99d-4683-b13c-f7124e765b69"
        },
        "item": {
          "id": "36d9067f-5c26-4a36-a220-ab6fde63167e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cec4a59e-163c-4b94-b07a-ebd5ddd58a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae838c4-8cff-41cd-bd6f-86ea636377de",
        "cursor": {
          "ref": "42df2beb-efe5-4cae-9dfb-5f40840885ad",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f0951255-6145-4d42-9ab0-9a066a0ef57c"
        },
        "item": {
          "id": "2ae838c4-8cff-41cd-bd6f-86ea636377de",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "00e2fbef-db8f-4fb2-b847-61c5e8dd7732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a8df7f-e167-4d8a-9d4c-316ad800c3db",
        "cursor": {
          "ref": "ffeca369-a7a8-461f-aeed-d76ddf5dad41",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "29af08a5-8e78-4f23-87d5-fe14f42a4044"
        },
        "item": {
          "id": "49a8df7f-e167-4d8a-9d4c-316ad800c3db",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e710f04c-6870-46f4-bc8c-44f33bde9497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c2d5d2-68f1-4364-a01d-6685a0179e3b",
        "cursor": {
          "ref": "aeb30dd1-57b3-4551-847d-9984b085b973",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7a50ee13-9152-4bfb-9dc9-6f9e2b843b6c"
        },
        "item": {
          "id": "e3c2d5d2-68f1-4364-a01d-6685a0179e3b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0ed4498a-7d02-4bdd-a818-42b778ff874b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d4079e-8ef6-4e5e-901c-61e8ad988883",
        "cursor": {
          "ref": "d45f625d-c927-4530-8986-18450b0c3909",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "deca26eb-a034-4379-8d9f-f3e3901a9e3a"
        },
        "item": {
          "id": "59d4079e-8ef6-4e5e-901c-61e8ad988883",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3641e567-e962-45cb-9949-ac7996a315fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5fbea6-bd4b-4348-9cd5-7c97bbca6b7b",
        "cursor": {
          "ref": "aaebf77a-45ac-4b0c-bb3d-89c4aa002a4a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c5f7b34-c82e-476e-b539-4f6359be7872"
        },
        "item": {
          "id": "fb5fbea6-bd4b-4348-9cd5-7c97bbca6b7b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ee87e7d6-c605-44f3-b735-86c56c576bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29304190-86f3-46ce-b61e-c49610c99204",
        "cursor": {
          "ref": "21c691fb-73dd-4756-8374-d7b7a0e8b7f6",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a5f1cc0f-bf8c-4789-a056-fb82ab4d8d33"
        },
        "item": {
          "id": "29304190-86f3-46ce-b61e-c49610c99204",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5245ebd2-7a9e-4950-a40d-72f60b7032d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ba1420-e4af-4929-ab24-0240a2a7d483",
        "cursor": {
          "ref": "e312801f-d7bb-46d5-8a63-9e1f35f83d0a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ddb0e9a3-3c61-421f-a57c-755191c3c745"
        },
        "item": {
          "id": "00ba1420-e4af-4929-ab24-0240a2a7d483",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d771ed88-ca43-4f7b-ab2a-01b0f6721664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809c53d1-4e1a-4ebd-b2b1-29efb6ec5175",
        "cursor": {
          "ref": "78c5a39b-1495-4028-a6f0-071e01ea0a3d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "220f1ff1-521a-4211-8d33-0c5dca35ee66"
        },
        "item": {
          "id": "809c53d1-4e1a-4ebd-b2b1-29efb6ec5175",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6ef1be5a-d960-451e-a1b3-03de2cdd16dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76be4b6-dfaf-4c37-93dd-b99c68e779c4",
        "cursor": {
          "ref": "777bc43a-d200-409f-ab0f-e7d67d172b70",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "08bd3ee5-a1a0-48a2-af63-9272dad407c2"
        },
        "item": {
          "id": "b76be4b6-dfaf-4c37-93dd-b99c68e779c4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "40e982d1-77f8-46cf-8aa9-a01baba8e5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caae454-5cc1-4188-84cf-696466cb6972",
        "cursor": {
          "ref": "4773909b-3ae6-4dbb-b018-13b988c6c78c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "14b33878-ff71-4e68-99eb-01684d6805fb"
        },
        "item": {
          "id": "4caae454-5cc1-4188-84cf-696466cb6972",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0099f84c-5e32-4915-abd9-ace97d242f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8901e5f4-c0af-40a5-a139-cf9a533baeb0",
        "cursor": {
          "ref": "006c6a80-d35e-4fc6-b86c-b14e570efc63",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e27b4079-2634-4b92-aa97-f346a0a00354"
        },
        "item": {
          "id": "8901e5f4-c0af-40a5-a139-cf9a533baeb0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "04550aae-a9b0-415f-8815-c377abcbd907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5cd149-1b0b-4a71-a9e9-9b793c4c753d",
        "cursor": {
          "ref": "9780ab34-7ffa-4f17-aae7-27e623898dc1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "67dbdfd3-b797-473d-86ac-609c55300286"
        },
        "item": {
          "id": "ee5cd149-1b0b-4a71-a9e9-9b793c4c753d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8d6b8ecd-7c13-43b1-becd-df76f4a0a152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710c1263-581a-454f-a087-a6715aa732b6",
        "cursor": {
          "ref": "321af2bd-f027-4989-a371-454c73b07be7",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e5e6d86c-7e98-4dfa-a314-a7bb73d27951"
        },
        "item": {
          "id": "710c1263-581a-454f-a087-a6715aa732b6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1264df25-b906-480f-8082-95076389bbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ad3912-b5df-4212-9db7-4704df919c44",
        "cursor": {
          "ref": "dd4a6012-1129-49cf-8e75-23040f9141e6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e13f2026-4298-410f-981f-b25dd33441fb"
        },
        "item": {
          "id": "39ad3912-b5df-4212-9db7-4704df919c44",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "05ae7aa5-d47f-42b6-b3f6-d373fb1a2075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6bba90-cae8-4e4c-8311-a75685fd722e",
        "cursor": {
          "ref": "d11b1fe7-49f3-4d9f-acbf-13e293d1df9a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a3c59445-3b08-48fd-a21d-44074d01b9ef"
        },
        "item": {
          "id": "1b6bba90-cae8-4e4c-8311-a75685fd722e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ce5c7a86-ded0-4d11-acaf-2f970e4715e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49d32b8-048c-4f20-a17a-8e44a4f89515",
        "cursor": {
          "ref": "a28c2d54-23f9-44b5-a4fb-a3ac02f5142c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5a3b67e3-71c5-4e3b-9510-bf133216bf44"
        },
        "item": {
          "id": "f49d32b8-048c-4f20-a17a-8e44a4f89515",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "551fb760-23fd-4bc4-9648-6f767ae65f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20017942-8ab5-44f0-b069-3079a42d22a7",
        "cursor": {
          "ref": "cba965f9-9deb-42e7-abf2-1a3339da3581",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "42ad9c28-431b-402d-b0f8-0d8e62191cd0"
        },
        "item": {
          "id": "20017942-8ab5-44f0-b069-3079a42d22a7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1c0a7574-2073-427a-b194-866750e683e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1a3945-ff85-4c32-9ae5-16eac4e55bc6",
        "cursor": {
          "ref": "37bd0720-9ed2-4835-aefb-9bff415751f0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bec749b2-19f5-4d5c-a3f7-7e3aa0bc6607"
        },
        "item": {
          "id": "ed1a3945-ff85-4c32-9ae5-16eac4e55bc6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f843d702-1e99-4393-81c8-bb9aa1796255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f25d0a-1644-427d-83b7-df201ec46f01",
        "cursor": {
          "ref": "43fd478c-2fc8-4ba0-a77c-99f13811fb9d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7dfcbbb3-83c4-444f-b802-c7f8bf6031e1"
        },
        "item": {
          "id": "78f25d0a-1644-427d-83b7-df201ec46f01",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "30b8c586-04ac-4cbb-9764-4383bc1eba58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7763f76d-8ed2-4b08-9fb5-557ac517cf7d",
        "cursor": {
          "ref": "7d7d6f0d-a67a-4118-9580-534fe04bc98e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "df2fc4a2-3bbb-4262-9383-41a9e64c164f"
        },
        "item": {
          "id": "7763f76d-8ed2-4b08-9fb5-557ac517cf7d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2174d30e-309d-48a2-8fb3-0056e06131c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7f4eb8-9452-4811-a551-7cc3a0cee17b",
        "cursor": {
          "ref": "39aacbe0-68bc-4982-b6cd-2ece6ddfc0ee",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "74046558-6ce8-4292-b2d2-f94ad177a30e"
        },
        "item": {
          "id": "aa7f4eb8-9452-4811-a551-7cc3a0cee17b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a9368594-0a1f-4119-bff6-346835ca426d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856aa5af-72ea-4fcf-8783-196d3cdeb880",
        "cursor": {
          "ref": "75904afe-7558-4931-91ba-96d696235d31",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2938a8d8-9354-4c6b-90ca-6e1e75c0f92c"
        },
        "item": {
          "id": "856aa5af-72ea-4fcf-8783-196d3cdeb880",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b3baf747-f4b0-4af0-a9e7-6640b3887e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f073dce8-8d6a-44d1-8d2e-a450a9ad4030",
        "cursor": {
          "ref": "4e530187-5258-49dc-8e1e-5bc85dd15851",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9eabd4a5-c410-4571-b692-cfa8ecebec69"
        },
        "item": {
          "id": "f073dce8-8d6a-44d1-8d2e-a450a9ad4030",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2a97b605-4bd4-404f-ae7e-9bda05948117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c066dfdc-6f51-4e7f-a53e-34d4f64fd4fb",
        "cursor": {
          "ref": "bda6f9fb-9873-4ebc-a0a3-f81d7e5d11ab",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "de0417d2-ee0f-4d01-8014-999ceaf493e7"
        },
        "item": {
          "id": "c066dfdc-6f51-4e7f-a53e-34d4f64fd4fb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dbed7531-1abb-47f8-9664-5fad6628b049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76f8866-88ce-42a7-a19c-94d087a47c61",
        "cursor": {
          "ref": "c49b7ca3-9ebf-4a75-8f4f-ecc462edcf50",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7112c011-e75d-44e7-a549-938a46f2c3fa"
        },
        "item": {
          "id": "a76f8866-88ce-42a7-a19c-94d087a47c61",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a6d45c66-ba1c-4f6c-9fc0-eb98a06519eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525102e-04c1-4026-a1b3-3a49b913f5c9",
        "cursor": {
          "ref": "99aa7f61-11e8-4dc9-be31-e151e6266d9f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2cb2e9d1-57fe-44be-baab-13bc48b12467"
        },
        "item": {
          "id": "b525102e-04c1-4026-a1b3-3a49b913f5c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dae23090-3f5c-4a51-9caa-14fcd21b1150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82bf068-9ddc-48b8-a5d6-81292f2b8e12",
        "cursor": {
          "ref": "06527651-b77b-47c6-98b8-02f6b983d0c3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "095f85e8-948b-42e3-aa7c-8b3dcc5977a5"
        },
        "item": {
          "id": "e82bf068-9ddc-48b8-a5d6-81292f2b8e12",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "14220127-173c-4103-b0b6-e9338f5ed049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202fbacf-7b8d-4e53-9da7-f6312159d24e",
        "cursor": {
          "ref": "c727be4a-2233-4eae-8934-d901f138cd5a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2d79b0a4-dfee-4631-aa60-a51cace65f7f"
        },
        "item": {
          "id": "202fbacf-7b8d-4e53-9da7-f6312159d24e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3b9ff5ca-1224-4619-a84b-8fd70db30ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84e1ca8-30eb-4f2b-8406-677087336bb0",
        "cursor": {
          "ref": "a39f7ed4-f57d-4412-b68a-b8d72569f18d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "11256426-9058-4364-9754-41ff0bf27ea6"
        },
        "item": {
          "id": "d84e1ca8-30eb-4f2b-8406-677087336bb0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "07a75907-e7e2-42b9-9ccb-f157017d3807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cab9d7-1b76-434f-9c49-32780c6db534",
        "cursor": {
          "ref": "985f66d1-606e-48e6-a4bd-7f8d16fd93cf",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "395d8fe8-dabd-4eb6-81d4-86eb47128cca"
        },
        "item": {
          "id": "a9cab9d7-1b76-434f-9c49-32780c6db534",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "366f900b-0bd7-4a4b-af22-475525161c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2abd42d-c8d3-4130-be7a-baaf342f129e",
        "cursor": {
          "ref": "eb2a5ca1-6ab5-404c-901e-635b49e8d0f4",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5544f502-5e35-443c-a938-bd598c5b827a"
        },
        "item": {
          "id": "a2abd42d-c8d3-4130-be7a-baaf342f129e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "00446ac9-e741-45f2-ad82-b4011884914f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59d9052-ef7c-4821-b66c-8cbacee70969",
        "cursor": {
          "ref": "516a6f1c-fba7-40fe-ad8c-af6a8df8e580",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d1b480e9-21f1-4097-aff0-a1c3b0af2b05"
        },
        "item": {
          "id": "e59d9052-ef7c-4821-b66c-8cbacee70969",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "37032dce-555e-4821-a253-b51a07d3082b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d4ff1e-70c8-4baa-a60a-81f1ef3d0269",
        "cursor": {
          "ref": "304003dd-5089-402c-8268-0ebe739b3ebc",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "34350b68-4928-4f11-a562-1094b2f6a59a"
        },
        "item": {
          "id": "71d4ff1e-70c8-4baa-a60a-81f1ef3d0269",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b9c24609-287d-4b58-b89a-33db7f236eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6205b435-68b9-4a7c-85ae-6d16ea2001a7",
        "cursor": {
          "ref": "a76c566f-ba31-49bc-a353-dc251016a9f5",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "98c183eb-a221-4dc7-ab2e-02e50c7aaa49"
        },
        "item": {
          "id": "6205b435-68b9-4a7c-85ae-6d16ea2001a7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "70d3a34e-8bba-440c-ab14-03aafcc7b8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b72d2d-da82-4d22-89dc-5231970b4692",
        "cursor": {
          "ref": "803f2d57-78c7-4ab1-9d30-c3e2475089ec",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8ae35485-92d9-499e-9fb0-6f93d60839b6"
        },
        "item": {
          "id": "c2b72d2d-da82-4d22-89dc-5231970b4692",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "65041e9a-ad2b-47c3-b65e-a385cae098b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9862d93e-9e40-46dc-a154-6504dc474b86",
        "cursor": {
          "ref": "7f2bf01c-71f5-43c2-8d3c-35e20df3f431",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dd9f1dd7-8a10-48dc-a20c-ea099fd9ec86"
        },
        "item": {
          "id": "9862d93e-9e40-46dc-a154-6504dc474b86",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e252d104-3140-4cbc-86b1-b05d0b246458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e34061b-1a79-424a-955b-81a515d363d4",
        "cursor": {
          "ref": "3491a2e5-7a46-4601-9866-d2475aa5fa4d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "29a07bac-5dd3-4fb8-b2e1-db36291ad4f9"
        },
        "item": {
          "id": "8e34061b-1a79-424a-955b-81a515d363d4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2af96817-da18-4724-9cde-6adc9a806748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332dea4c-011a-4e34-90e9-7bfda3c933a5",
        "cursor": {
          "ref": "0f1b1112-0fd6-4448-9a7a-0ed0083f179d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7dda865a-ce7b-486d-9b10-49b9c7fc3b04"
        },
        "item": {
          "id": "332dea4c-011a-4e34-90e9-7bfda3c933a5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ba8f2d20-9973-4567-8df3-3e4b585207d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dff23e7-ba88-4afa-85ec-dab33168a2d2",
        "cursor": {
          "ref": "e8092e02-7d7e-49c6-8a10-d9b974a27cda",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "050e3615-6ec4-4659-a268-af38461e5525"
        },
        "item": {
          "id": "9dff23e7-ba88-4afa-85ec-dab33168a2d2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7822a057-8fb2-45f3-a0d3-db1629ee9f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171a9986-600b-4b46-8f30-e0098950929c",
        "cursor": {
          "ref": "e75f711a-421e-4e35-88d3-4c99261e5181",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "26b39e6c-9711-4ed8-a116-a241b0a452c0"
        },
        "item": {
          "id": "171a9986-600b-4b46-8f30-e0098950929c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "48811891-b22e-4cec-ae38-b54081cb10aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4805ff-5ae4-4846-abcb-f74c4ef72523",
        "cursor": {
          "ref": "6b23c088-6e03-4580-8e04-7e20191f8da0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1bb748ee-5c7b-47f1-8bae-1ea570cbd4bd"
        },
        "item": {
          "id": "bd4805ff-5ae4-4846-abcb-f74c4ef72523",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52e3ff7a-0efe-46de-b03b-271c5d4f57a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a72ebd-9da8-4cb9-a0cd-622cb1566c3c",
        "cursor": {
          "ref": "332188f5-936f-440d-bae2-292040e87bd8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6c8e27a2-bf8e-4022-8fea-13895d6bce0c"
        },
        "item": {
          "id": "b8a72ebd-9da8-4cb9-a0cd-622cb1566c3c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ab5dff7f-43a6-4bd1-adca-32a979b6d0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7700827e-d790-4793-bc70-2c2bfb477004",
        "cursor": {
          "ref": "83cd9a94-3e8c-4642-9722-89312dab32cb",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bd7d5543-cae1-4aed-b3c5-90e6f591aa15"
        },
        "item": {
          "id": "7700827e-d790-4793-bc70-2c2bfb477004",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1b7c1e90-ee4a-4416-a43e-c29633147030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894fbbf7-1296-4a55-8f29-1976090f2dc1",
        "cursor": {
          "ref": "63293906-a276-491e-a44e-7bf3ef30793e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "41af5ab7-8602-4bbf-9b10-f31a89eda565"
        },
        "item": {
          "id": "894fbbf7-1296-4a55-8f29-1976090f2dc1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "54d16b27-4e6f-4d10-8a93-7d26d32aac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb8e7b3-68c8-4fca-8528-702d1066e6e7",
        "cursor": {
          "ref": "27756bf5-a8be-40e9-8530-41e4bb5e3d72",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bbae0b43-220d-4e82-b9c8-25562a431e18"
        },
        "item": {
          "id": "5fb8e7b3-68c8-4fca-8528-702d1066e6e7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41aaace2-ff01-46af-9884-98790ecf4334",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103f7f0d-dbb5-4785-8afb-527449eda663",
        "cursor": {
          "ref": "299abae0-c917-48a3-9bc2-c12c098bc92e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4376d82d-5bdf-4889-969c-dafd6f439611"
        },
        "item": {
          "id": "103f7f0d-dbb5-4785-8afb-527449eda663",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "14eb4987-0d38-402d-b2af-26670b8516fc",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d21bec8-1669-414a-8281-4ca6dcf845b3",
        "cursor": {
          "ref": "2bc46e99-8dc7-45b1-8ce6-f900e68c4299",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bd7304d1-52c7-42a8-88ea-e6f570a66b3c"
        },
        "item": {
          "id": "1d21bec8-1669-414a-8281-4ca6dcf845b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2a560240-bde5-4761-a763-887e2e820793",
          "status": "OK",
          "code": 200,
          "responseTime": 1508,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71eafb4-ed97-41be-84c0-be51c0578354",
        "cursor": {
          "ref": "bc0b8612-17fe-4224-bb83-a406564774f8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0a1afe32-d31d-43f1-b419-938c62257e57"
        },
        "item": {
          "id": "b71eafb4-ed97-41be-84c0-be51c0578354",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3a8a98a1-a25f-41f6-95cb-fef64efe9d2f",
          "status": "OK",
          "code": 200,
          "responseTime": 1271,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec16a7d-1f00-4441-b31a-d43ca4ec1f8f",
        "cursor": {
          "ref": "dce13f7c-0923-43f2-b86f-a789cbe8d22f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c6c4d762-b9f6-4275-8948-c3955b9c3d53"
        },
        "item": {
          "id": "6ec16a7d-1f00-4441-b31a-d43ca4ec1f8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "031611d3-93e2-499a-9d72-a07b6c881071",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec16a7d-1f00-4441-b31a-d43ca4ec1f8f",
        "cursor": {
          "ref": "dce13f7c-0923-43f2-b86f-a789cbe8d22f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c6c4d762-b9f6-4275-8948-c3955b9c3d53"
        },
        "item": {
          "id": "6ec16a7d-1f00-4441-b31a-d43ca4ec1f8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "031611d3-93e2-499a-9d72-a07b6c881071",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168c037e-732b-45de-8130-87f6ed2ebefc",
        "cursor": {
          "ref": "7ece215d-0004-46f0-9c64-ac7d30d345cc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1df8ff15-ffc8-4516-a929-ee7242129684"
        },
        "item": {
          "id": "168c037e-732b-45de-8130-87f6ed2ebefc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bfc73f87-91f4-4ef0-80a3-f4d5cfee2b5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa7c124-e7ec-4027-acfb-ff42dc7b45f0",
        "cursor": {
          "ref": "823b288c-4564-4062-9f80-83073857200a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "724c111b-beae-4cce-b196-0831be50ca22"
        },
        "item": {
          "id": "0aa7c124-e7ec-4027-acfb-ff42dc7b45f0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ff835fca-b9df-4f11-ab61-f93abcfb0441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}