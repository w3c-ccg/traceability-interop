{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6b2a8063-7860-43ca-ac30-7180a3eb3703",
        "name": "Clear Cache",
        "item": [
          {
            "id": "478f8d8f-88ee-43d3-97c7-5544c4a82c29",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f6ec95e-8b9d-4d9b-a44f-369493ac2cee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e4ab1c6a-11a5-4b40-b687-fd03a61c9119"
                }
              }
            ]
          },
          {
            "id": "51d61ef1-f0b0-4ab9-803e-464628b33986",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd3f319c-04b9-4607-8572-f1fcc0767f0f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "854e174d-f1a4-4872-b76c-67665bbe4888"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a8e39121-a3d4-43c3-a1fc-8a515144aed9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "00f99b1b-c7e8-4af7-be21-ee07e73a638a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d6cfbe1c-b3df-43b0-ac74-8108d3fce2c8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1903ddd-0c8e-4877-87e9-50a594bb76fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7fad82e-e0a6-4f23-8053-f40221c8fe52"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17926b58-5648-4be2-978b-52377373f4f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4ec5922-2cdf-4216-8871-191f9c14e5fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a9302d7-84c6-4973-ae52-c90c7fdf4ce7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6db4dd3b-c946-45f2-a9ca-bd2d8ecbe7d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "061a0417-a358-48b6-b3d1-1e4a4408fbb8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2f522a9d-372a-4407-a9e6-29ffcfba796c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "504a9e63-8e97-4700-a783-d9d4c1d031aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c05f3c98-0d52-4bd4-9f4f-b36f6319d843"
            }
          }
        ]
      },
      {
        "id": "b6e75b20-581f-4bf7-a8d1-f766fb779f5b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cb590c51-91b9-4a54-8528-d1503172c2c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "857138df-bc97-4193-ac5a-f4a7ec7b4f45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e1ad3c5-c98d-4545-8f1c-85fc6b98670b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a4772f-bc72-4bde-919d-0cb84222b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa07c4ba-2cee-4f44-a12a-628b51f0f4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d07cd83-4372-4856-89c9-1a3b0435665e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9159d3a8-800d-45a8-9c5b-b1a4600b2ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2946b5d6-ad06-4bde-aa50-2ac113214394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfaf484-13ad-49b8-8073-3255cf81b8ef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65906781-5b41-438a-a145-c60e83b93ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65982475-cbfb-49d1-92ab-dadb0a3086d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df79d087-dea8-42da-bcf2-23491c35cc24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd67e6f4-eb68-427e-9e62-ccdd4d1df84b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd28ea6-7f3c-4321-9fac-e1308aeea084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba196ad1-2187-41bd-b0fe-f1150a8c6e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a33605-3e33-43d2-b9ef-9e845ad20702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e977c4d-dd6f-45c3-8105-4591615ce008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0b6a1b-d2d2-4979-89aa-ba4fc6bddaac",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec13e2ce-3f12-4405-b6a1-eccaf7372216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fba189e3-d0bb-4024-8519-e47481b1f37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a37ee64-c1ef-4dc0-801b-4e60e692871b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "2f27b846-417a-4a4c-98c7-0e4343c550df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "648d3599-5de5-4971-91d1-ad5f364fe18a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce0373f5-1aee-40d4-b863-257788ab7440",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ac38374-6684-43a9-b351-404fff356a65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "208791a1-9f15-4c09-8e90-331a4f538140"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0409439-e21e-4d00-8381-1c4a744b3a92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "aef13394-fe00-4b3b-8308-f64fb7380a14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07afda56-fe44-4e35-b483-b2337d6e2b7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afc867d6-263b-411a-a27d-3e51ce601a0f"
            }
          }
        ]
      },
      {
        "id": "a65093f0-88ce-48bc-81ed-b1bfe3d23ca1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4685ab4d-2098-4e21-a83b-43313e7392e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f83daf9f-7f3d-42b2-b142-f03d69da3a22",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "43fb245f-4ba1-47c7-8845-fbdb1b0efc37",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b800268-dd06-4571-a8c6-9605cafd1d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7530c025-9e8d-43a1-9d8c-ca9db2fe1688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b616894-f838-4b5e-ab41-2586614a6b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af99c229-bd11-4154-bbb9-b8ae724c9305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc788080-1222-494d-bb76-c818c221e388",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a655faa-27ef-4674-ae8a-97ebfae08868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26c90fa-9785-4c7a-8af9-31b1c0448968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd85890e-056f-4e8e-9bc4-123cad2291b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3ee080d-3469-4e0a-ae97-6513f006c17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec44c82b-3b61-4350-9271-ba6972dfe64e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4104655e-491e-4dc4-b729-9064ac6890f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b3aeb1-da83-4d21-8ebd-c9b7e0c26cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789210db-e573-4259-8d9c-9b407888d58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d93e80c7-7c92-4f23-ae2b-8b85d5d3a90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fa9ac2-049b-492f-a14c-e589cf2ac164",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09fea95-720f-49fe-b18e-4bd3bd79d7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a091e7ad-5a7c-4904-8d76-f0569eb8f5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95676d5-7c2c-45e2-89b3-e71af2b4cb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a8f12a-114f-4211-8416-dc9c61bd5936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e29843-89f7-440d-9683-b7f0683b80a7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a306b68-0cb6-4ed9-b00d-0e44b3fbf077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50165e80-978a-4238-a0a2-d583c38aeccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c64725-d0a1-4164-93a3-baa6aa731580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e03bdfb-35d0-481e-a7b3-6087a00ea336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4bec0c-373d-4e82-91fe-24db88e02c5b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13948011-1171-4334-945f-c795e59cac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c60488-c29b-440d-b2c3-1f9f99718827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d454910-700b-4afd-8164-40b4fe04d249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a937683-8222-4393-aba7-fdf018807ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bf7117-bf51-4216-9628-3275d5d6d889",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee24350d-6ef3-4c4e-ba86-99480059f3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736b6860-61ca-4c8f-9491-b5c19258a4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feddf180-61f7-4141-8276-7086ae247e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32483cc3-c54d-4239-97ec-369f037c28f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bb8f7e-d441-44c0-bc92-374b585e7a80",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27870b83-2db0-4144-9e89-1858fa9a7d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5921b256-b817-42d0-9314-7bec8f9af50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ceec9d-37fc-45e1-8903-776c3da936f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f07c82f-c8a2-49f2-92e5-eb37f1010891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2996ea26-2571-4ffb-97a5-445dac1e5606",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6527a48f-0a62-4277-8d31-9fdd5f54e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e420d7b-9268-4fbe-9c11-c53c8b05a311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6f2ba-92ea-4073-9848-a3c1888f2c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7968669-4ebc-425d-9898-4e63505fb9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ca5831-2637-45a8-a11e-b9a2aafa947e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352be1ea-0a9c-4432-8ccd-6e9ea52ae0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e6c185-b72e-4206-8e87-707792d0aa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f4a67c-c781-43ac-8eb1-0c6df07e90dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "308ceb78-0fa9-4df2-bace-1612fa5878a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53511741-f0dc-4511-80ae-ac5dbd69270a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871e05b0-0289-4d5d-bcd2-9d31d9c3bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955b09ee-fdfe-4e4e-8f05-010ae054d218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45fdcc4-3674-496b-9e15-22eea535e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "301e2f96-926e-4988-a6c3-ba7e4cf784db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07beab2d-839b-4b29-be02-de1a5b791d79",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bfac8e-38ca-4db9-8602-2ce60fb0368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f49a2b1-f847-40f7-a66d-84958e56ef4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da034d0-1853-41cf-a45b-60f0ef48793a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61ac0138-7ba8-435d-8891-bd647eae57cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b246fa79-eed1-4563-8b67-18205d747682",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423782b1-4620-4054-9d06-f229ad48567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf589c4f-31b2-46e6-a53a-2a1b6f6f70c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33092081-29d9-48eb-88a9-803ad8ab8fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6bfbaaa-6952-49f9-b4c4-44ce052c6898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa3349e-f9af-4c48-a7fc-9b2c8e731667",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3169ab-3932-4a30-95b6-958eb4de8a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bf34bb-b4ae-4d2a-9039-e9fcece5def7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2311bc-df01-4ab7-9c7b-0d60f1c84352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c01f020c-a7a5-4af9-9d62-6a52fe7175c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e26943-37f3-4aa5-810f-c67cef2609e7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5f8333-1dbc-4720-b67d-b806fcb8d411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90fd29f-6deb-43ee-b869-9600fd106d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e505b53-2283-4129-b708-714f352aec0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a6fb5f2-a5d8-4dcf-9e66-fb87cfe7d55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f194260a-be83-462d-b835-eb372295f9e6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb65d220-9a51-4e88-97c6-cc7a53ad1789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb03ffe-b1be-4a56-8a7f-de6b8da290f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a112fabb-61cc-4928-8a12-6351c0c5c0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87a46ea7-d0e2-4e16-9df4-0baae78a4c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f7a440-c3b4-4a5e-a29a-efc811bf8307",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3780b73-2ea9-4789-a376-52bf1880cef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9afdfc-6a49-4947-ad04-40d0f4231e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62404f6f-29b4-41a9-a2a9-4bedc7adb43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e1def80-2db9-4472-8c34-c5bdc4291e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63ecabc-03d8-43e5-835f-19e41c584787",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bb2281-a217-4d88-b296-2a2672a2f2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50710488-3d10-408e-9a1b-9de12256c2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a786ec0-bde7-4b95-84f6-aa861efc6a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc25f3b6-205a-4425-ac5c-42e8e5781ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4127b800-19e4-4afb-a943-f1ebdd80be4e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0ff8d6-2d8e-4056-b540-0be2d8e507d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60a86af-f3e4-466c-8a02-f45806028903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a757f9e7-07c8-47d9-abbf-ada26def814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c4599f-824e-469d-9363-c7a31a754345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af85d583-b868-4a99-ada7-bddae9e12bd0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda71766-edab-4fe9-9dbf-c840c7043004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ea75be-a7cb-4d4e-8d19-3e7debac175c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed76d13-4c0d-405d-9fcb-63a593b85777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb2ddea-393d-4db8-aa66-0ab148c371ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee7cdcd-ca06-4da0-8515-ed91f01269cf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e217ad6-9d50-41be-96ab-2aeb9f586eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d81a8d-70db-4d27-ba33-6d95cbd7df23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ea16b0-fb37-499b-b7d0-4c6072071544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25de890d-47a6-40a8-be40-bf7e0c7e1d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3ad27a-3544-4f79-953e-bce279a79ed0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5049336e-927c-4607-941d-d03c3bfc0ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c947f9ae-d5e2-4124-abd4-669730140783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6d65c0-1fc1-4bcb-a1bd-b221814c28cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e80fb6c-bb42-4799-a4ea-28bf6c6055f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee357bf-2078-432a-810a-998cdee6a44e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0733cb2-620a-4671-a912-48576b3f8d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1936f509-e9ab-4df2-8c3b-29b4861572c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6c5eb2-f5a6-45cb-b7ad-16139107ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d7e9a7-af48-46a3-a0d2-3f32c8516ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a4bed8-26e5-4791-b9a5-bffab54ce56a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e81fc4-b73e-4b28-97e1-84b8e78486eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adef6ec0-fdbe-42bf-bd00-e12b7a6e500e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306ba00c-dee9-4c92-b765-61091262f470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7aa1841-9321-414d-bba0-ec1ac9a137bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32386648-15db-44be-8a9d-81a40f4d3414",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ca305d-8ba7-4a76-b01f-f3b6db06654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bb13c0-3740-4e92-b7e6-1ed03d63c99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76e5c53-2ed7-4a5f-975f-686239ab9889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "810f9726-4da1-4353-8407-7e30e2064f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778cb48f-f4ad-4fbe-b753-ad848c1f9e44",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a94e7c1-5e8d-4c62-8290-71206eda6627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddaf34d-b15f-40a0-a928-586733f0a13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2069c26-7e2d-423d-9a1c-728541389b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9592cf5-1773-4e3b-b5aa-a65a92ab4492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27da1e9-277d-4d08-8fc0-7cb40c4e94c3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07e7ebf-7c83-46b8-959d-577df00fcd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fa0af4-1cc7-4129-a226-1a68d21a763b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89d5633-128b-4900-9762-7fa426c1f583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2249794c-b8b2-486b-88ff-2faa2ae98f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9241642b-c2d2-45b4-bfc7-14bf495b4a64",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3c93e6-f47a-4372-b11b-19597f2aa83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da0322b-ded5-46de-819a-53c333f1332d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01900a05-181a-4915-bd32-db7110aa2589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "804241c0-d0b9-43fb-9f4e-9377f5fb0642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663f7a6b-25c5-4be5-817f-796e3d9d3a5f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287f11e5-8cb8-4370-8b6b-05a61ff5c1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ead57e-0a4d-4230-a24c-4360533a378b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603d9561-5bab-44c9-bcfc-a634da9822ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c690d82e-7f7a-4e84-a295-707cfe2683db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c214fc2-d5a2-460c-b0df-ed6e0b664e17",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57727f1d-78a7-411a-9508-06fbe73aa97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759af079-94e2-42c2-97e0-7b5cfc268554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1030daa3-d6d7-47cf-ac02-fded83b42d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f24a0ac6-684d-4968-a4fa-6c03257f9af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a409545-6f82-441e-a87f-baeddf2d0a7a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d630a5-ff55-4876-8028-4029c17002f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21599d5b-efd7-49c8-b8d9-042d300ae0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c245150d-81ad-4062-b9ce-8460344f500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b09058e-8565-4b45-854d-335ce10c564f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171823f3-6833-4904-b552-25e31516f359",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50285b87-d804-4be9-8f87-fa18d2b66435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8f9dca-2409-405c-a818-f2791eb9d499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c364ed36-36a5-491e-af66-c60818b90e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3eb886c-dcce-4f57-a995-fc537601dfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c5c6b7-362a-4a6f-854b-633cff600525",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456ab5b3-a5eb-487d-9c3d-7bfec4b40563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4e3e20-dda8-44c3-a7e2-38aa016149dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb965fbd-187b-47f8-90d3-850aac84e836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfdbc20-9dfc-4a39-a2d8-2a17d1d43d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9327f5e-517c-4059-a342-4a4f6998d9db",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b01e34f-4690-4b09-8681-a141d8eb0c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc527142-5741-40bc-9c27-232740af6036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a9aef4-bf85-4954-a76b-35ad11945aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bda57d1-4714-49e1-90e2-277b532d3da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca45332-4bbd-4877-b7f6-99253aa675a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fc02de-658b-4f4f-b1f2-6434db63e621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f84580c-b4f9-4920-8a20-6c8555142d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b0b9be-4881-43b6-9772-5d7d94c76d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "052ec95f-100d-4719-b0cc-115f3c4947c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa68981a-1445-40fd-83ea-fed335e59f4b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94f0a8f-f7b3-43a0-b96d-456c9b04f493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09ccd208-b00d-4d83-bc26-4c7fd47ce240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b6050d-05b6-4f55-a1f8-87a133806d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8268a4-766f-4252-82e6-b2031e940c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667372bd-3540-46bd-842a-d629dc6cf4c8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6afe0a8-1c6e-4ad9-bd6a-5cbec862e13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2040c5-0526-44be-a99b-42fbc9a13962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c58d118-b402-4948-a284-5ec8e3c2d27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82d81ec5-7d4d-4c06-993a-e133f494b3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd282621-74cb-4f6d-8578-39bb9197f9eb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1350be7e-4031-438c-8756-adcb0ca93dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62b1c8b-67d6-4282-9157-5770e1d44ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c63cb7-4493-4d39-aef7-f6e5ad710904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92696d8b-d54f-42f3-b2d0-57ecaf8d093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7cd3be-3329-4ba2-8cd8-8f2f72422eca",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f030d1-fe6b-4ccf-b8c8-efe94fc35217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352850f0-1565-458a-a621-1e358dbe4de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5340e3f-80f2-4ae4-a638-eeee9ea25bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "52dafa44-6639-4a26-afb2-02b7e6c445fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6069ef1a-064d-4499-b396-441fab5b9876",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba087dbd-520e-43b7-97ad-ab9d7b45904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0e9efd-df04-45e0-a8e9-6b389d311c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c39ff3a-8df2-4ace-a8a8-5cd0597ca837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8139978-8d5d-4c61-b026-69f27813c0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece1e75d-bac8-4828-844c-90097a193f0c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f960d67-3871-4527-9693-f399088d9238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd97921-6841-4a31-845e-891f1d33e491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6d9a3c-2ade-41c8-b3fe-63345b1ffe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2587788-a239-4c65-88c1-8a64e26797a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a051da-8830-43c3-b004-9647844eb572",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ea9fd8-e2ac-4c85-ac79-780eae80a2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726bcb15-9bc9-4069-a21e-7703436afe47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f03188-5a77-4987-ac59-f62d07a4284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a81551d4-fd12-467f-9305-65e1e52e1c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f100ac9-0c6e-4bfb-9901-b63a63c61d9c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220052b7-d457-427a-ae0f-803b6532d5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218eea39-017b-405b-963d-699ffe33a1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707c9db5-25d0-4b31-92eb-e400d3db63c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee73f92c-44f3-4d46-b7b8-65757fd59380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c610d3-09c9-41d6-ae42-77d5dbf69c8d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d30151-a50e-4263-b35d-005032a28f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1128ab63-438b-466a-aeb7-6c29e7139d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45601dc-b61c-4c2d-9d78-5e433edca0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c9d02f-1cbd-43d2-88f2-c43584aab996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a3b8b3-9296-4f1a-800c-20a7511aedf0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621ebd4d-269a-4d6a-8da1-34b115925713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96df5e80-fb7e-4df3-ae58-f43defecaddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d4f14d-d785-441e-8aa2-4d041dc339e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea209bf-978d-4902-a3c1-4dd04955f2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a3a42c-4558-4d55-b020-b969ec829ee6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca22570-89ef-4ba5-9545-05f35fd0f6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecab68e-c64b-48ac-8abf-929e77cc99c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0e3a15-3910-4e25-99ba-6ff380c77485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a14fb6e-7a97-49dc-86a2-22de6beb682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035371fe-7978-4e35-ba5c-eeebe4093a98",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d488f7-969d-4e2f-8bbc-f379bc67b548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfa114a-ca80-47cf-a1f0-1cce79e1fb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdb05ca-96a6-42eb-99c3-106d8781344a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27df1eb-7a33-4550-929e-3c247594764c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd095ce-0ca2-47ca-a8ad-0feae196c0c2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59be69c-3fb4-4d31-a0d2-2cb63bd294b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8edf51-a561-4383-87ad-03198347e19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285aab8c-3963-487f-bc6e-a2fd408b1f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec93125c-e4c4-490f-8f44-34ca680c5f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9b2d95-4f32-4f96-ae61-86e54bd15c85",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a9def1-01e9-4fe8-8700-2c47d3a3d9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5006b6bc-af29-407f-a0d1-c1dd5553ac89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7dfff5-daa7-4a95-9743-3ba480360172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f205445-dda7-49f2-ad7f-765d85f98887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdda5e9-6440-49df-ad55-e1366fa38ea7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a680767-8d31-4de3-97c4-68c4e24f7c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c98c3fa-b1bb-4813-8d6b-46cfa7445ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576bd9f4-f88e-4141-8271-a15af9826027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dca555d7-698d-4ef4-91af-d8254f7f3b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fc3e31-1e6f-4173-a276-30850b6c5c11",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80808e39-b985-43fb-84ec-3be8489f9714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a567d58-82e5-419b-a01c-3c819be37140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be54b5e-0414-4a5e-8c9a-6e41a594e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c77d9ee3-62a2-44d6-a37e-d70d1686f696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7981e4-ae14-49d5-b5d4-e88b89995e19",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f729e93-f5a0-4770-8a9e-eff273163fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc54e372-5df2-4583-b53f-075b460c1ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80193c18-c656-487f-9dac-bc85e398dff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb87d52-f524-49bf-a488-3dd47fcd029c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7150814b-3c0e-4b0f-b9d2-aff5485aabb2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5e92b7-e9fe-43b6-9778-fa3b1087893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c90f8dd-eaf0-4227-90b3-3fc5a94ad265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d41fb2-3aba-4b4a-942c-6032d15573bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8ac461-8437-44d2-b15f-3e7ff055acee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee0bc59-0851-4038-9d92-d7674d083138",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e097acdc-23aa-464d-b32f-4a2a72033c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fdd960-11fc-48b4-8463-8db19596f19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1e77d0-f5bb-4e30-832d-f6088bc7899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7c42db-3475-4e20-846d-caf851115843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbab8d2d-c2ad-4ac0-b0b7-2eaf9e4089b4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f028d19-49e2-4fab-99e2-2eb9f5e05b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce897b1-e11f-4357-b645-646b00679306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf1a242-ad2d-40e4-8335-ee3eafc0d175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9e0df3-c2b4-46a9-baca-6a8932c4606a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4f7d76-605e-436a-9a06-9401c3da341d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f861658-b4f3-4d8a-8c86-a3c6540807f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f33a15b-9857-44fe-ad64-69aec5e9cd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16229150-be66-4f53-996e-1489bfc1fa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4690ee62-1e4b-4f8b-b83e-4f98ae0cb602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c677811-3073-4819-bbb3-90d4a62bd4bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac796279-90e5-497d-890b-14e4cecc78d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0f95c4-791f-4e27-904d-259642fd8e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196a61c6-14cc-4f06-9a3c-ce6d73dd952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f6f150-cce7-4ffd-8b7d-184e00db59ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ea45e5-fe95-4f1c-b63a-c440593788f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3121bb19-0c10-4063-ac66-d71e82e96bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd11c2c-59c0-4918-ad41-0c0b1d437771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405d646c-2542-43a5-a42e-f8d555e7950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "69ef23d7-7ba5-4423-a15d-fabb60e1cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46832515-513a-4d16-b4a5-a9e48ea75f24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ccfb4e-c22a-4fc3-acfa-d62b82735649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26280ceb-f81d-4ac3-a3ae-93ac0f21dd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a886e2e5-d25b-47c6-814c-4c606da7d0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f605ee-e456-4af3-8c42-e6ee6e884473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a01bb72-07f9-44e3-bc10-360c90a1ee2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757b4e9f-57fc-43ff-ae6a-b10f2368f511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc85710-16e6-4d4f-b8f2-a082b1a0cd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f62a61-a8ea-4af5-9f70-d1db75538693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7891ec-1819-46e1-a9ee-b31309903db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca370d8-b8e2-40d1-94cc-47e6953df837",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a9ef1d-a1ff-4875-bad3-003f76334780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2869892f-22a9-4907-b9d9-674ef2c0e65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4291f3f9-1421-4a81-9868-fbbc0df70758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a736e616-764e-4f3e-b52e-4b66fcdd4cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a39930-2b0d-4dbd-b26e-0dc59c42aecc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68786cc-2f49-4c91-9aee-d3459b801072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e387aa4-5b54-4fbc-9b62-52e4b3c89e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22655dea-55cc-4d90-9845-c2a3adffbdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ab4056-4f01-4724-a432-6781caee7921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858302cc-6e28-4ace-a039-8c7e95c24e49",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e064370d-f16e-49a6-b6e2-2751a77ceb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f0ac42-3c09-4996-b9aa-7f72d2a4f10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bfca72-47a1-4bb0-aeb9-6a4e9bdb3716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec36e60f-4c50-4735-b49d-6496e7ce9ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500f76a0-5f17-47b5-a04e-3f4ba4d259f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8645505-9553-42c2-820e-4f71677a6737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fec24c0-bf90-4f48-a92c-e04755adb807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc8a86f-2e68-4a0f-848b-1c32c531ddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5379e48-9fcb-49bd-8d82-4c06ce8ae051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d243b87-71d9-4aae-9599-c563cee67ed3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5a4aab-bb76-421a-9886-7a9c18bcf6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7216e66f-7363-4b6b-a561-650f22595aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2371f5-ade7-438f-bd48-c29584184893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af42079-5636-4ffd-8c95-8b250814e960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c988cfec-1d20-4538-8f8b-216a4ce63fc9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e876847-1634-4383-837f-c5b1f5b49ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9832b15-730a-44d9-b9a5-850645b29405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910a7df4-d2c2-435f-9fdb-bed4cc91d71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfa3236-8e57-4f99-9841-36e9083729f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240dd8a5-cdad-40dc-9308-d5054cf4f1d6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb162fb5-866e-4004-a24b-c42529867bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d1ff9f-0a6d-457e-899c-2ba6e32c3861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba0d4cc-d8a6-4c00-be36-45cd111cdc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdc1387-144f-4156-84fe-212483dfc182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d637f14-09e2-4337-af90-7f5938d3b765",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f1f8e4-74a1-4ba0-aa32-d82f19cc242e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50608a22-3aba-47e6-a376-4a4185366167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4916c55c-c57f-4f35-8117-687fcd59681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "736bf6e5-0935-40fe-adcc-f838e3ef324b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50428a78-365b-45ff-92df-211f37529029",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5914ad1d-3a3c-454a-8be0-debc7696bae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bbaed0-afdd-4743-8418-fa587cd083d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97268073-a69c-4e0a-9c16-11e61cbddc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7226d180-951f-4e9e-95d0-7ace23598fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea04add7-48d2-4322-8f66-7ba19f6c18be",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7d482c-3f3e-45b8-a628-49724c328897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca23b5a-0e04-4ccb-b966-b30a6af0dea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90063c4-3c0e-4ed4-b0e2-06f0838c63d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb33d7e-3997-455b-9ddc-2405ccd27e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7336547c-9f5c-4cb4-bd45-d67c0461fe40",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdba4f6-76d1-498b-9c66-88381a1b8bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ee53d6-5eab-4184-a200-6015222d397e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ffc1fe-63bc-4c9e-9379-1bb901b7a94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a52d6e0e-f0db-44a6-8658-f01c8425d9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c55190-ab34-4bba-b194-bf7af12bd276",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3146976d-7d59-41ab-a64f-ae8c9523e725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a8c469-8865-47ce-b6fb-700e81a490e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31f2dad-03fa-4be1-ac0b-5cba943a7f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3d4f31-6411-43fa-9d7e-10cb16641fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd862a-d431-48b0-8ffe-31c8422d2b83",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b76cfc-4122-4c73-8f2e-e04df66a0223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58605349-2799-4ce9-bf52-6d0ccab2bdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f78348-6ff4-4339-b0d1-68f86037dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07b4987e-3b4b-4186-8492-4041dc713276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815d1b73-6701-4535-a5a3-878ba32ff97a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4396a69f-c7e9-4b0d-a682-1f575f169140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9b0f7a-7504-45e3-810f-f587f79978bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cd6610-288c-4eac-b223-3684e230cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd609cb2-2c7a-4559-abd3-75812c794998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee275e0-d70d-4739-8e7f-79b72e59f9c4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66722096-00f0-416b-97fd-b5346ba1397c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce6dbce-be00-4300-872d-dd47a8f96aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090cef02-4d1a-49f9-a121-e916b5a346f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6681b10-ec0a-4b63-ae11-ee3aade25b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d89978b-9cd7-44ce-ae21-c4d1f523780e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7b6530-f59e-4fea-b55c-f1ded6e7d264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6a36cc-3565-4665-98d6-1c8c10a5889b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e48bf8-cdf5-4922-9338-a9af8932e73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6705c48c-56dc-40b7-a4ad-f4ec869d6b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220c7368-1041-4d19-96a4-0642349d3b6a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cfd29f-daa6-4617-9a23-3af3b16d7684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86899cd7-f930-422b-b053-f0baee83efae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15612e13-cbfa-4d90-9ef6-d960863eee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b187c7-4226-43ff-a00c-a815327141b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b94eba7-f0d6-48e3-b551-3198f993943b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8054ac95-a3e9-46fa-ba8e-53de55abe424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c85ec11-b044-4d3a-9f1d-a0b5308584e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461ff10e-8c6d-425c-a7e0-6c042d8dbfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aef978a-c5bb-432f-8b2e-8e2acc9aecb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1971e46-b458-40b6-b464-54b29e6e0900",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbf00b4-7e02-4c74-abd0-0809e893d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb93531-5569-44fd-8a18-dc0b5d8f3a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a616d7b-91d5-4b77-bd72-269354cbee41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "318b016b-398f-4305-8de1-84f8fbfd6c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9c1428-74bb-46f5-86d0-7fea4a39fea2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd724e65-f413-4902-b93f-8a3d3c39c5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8ae475-7271-44db-b92c-70368c04f8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03690c5-266f-4930-bef9-b21da272908c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "471690eb-fe3e-4452-a054-2d42b51ad499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c2c8c4-61fa-4572-8522-35eb0300ef5f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cd46a5-e853-40e7-8f5f-1b6e54594bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9982f7-5c77-440f-a676-8abe4e00bcc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b25dd9-b429-487f-9035-54d2cbd7d4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b055b288-88ae-49d1-b031-51fb0e173157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341366e4-6c3a-45bc-8db4-98f19cc0da2e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d866a4ce-485f-40c7-ad1d-3d6b220a8ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38724947-2385-4b57-9782-0e4cde810260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956cb287-fd43-4faa-be20-d170d34db556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa824b74-0696-404f-9986-45ed88c00fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ac011f-3b3d-4a23-9a7c-b5bff0bb39ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba60d30-38af-481c-97dc-04dcceb556f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2ea502-e9c2-46e2-87dc-354ba3be7abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe86dcb-b86b-475c-933a-70551a02b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ef99f3-03d4-45aa-8c26-8f0eb7bd8594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1ca364-7d66-4ace-92c8-43ab20e38244",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c918b4f1-841e-421f-b2d3-b8419a5fbc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fa2852-8e7e-4ad8-ad5c-ee00669146f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a7465a-b95a-402d-9c3f-94deb0781147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "384a0671-859b-46ca-8118-b58860212e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2a5983-925c-4fb0-b8ae-d259df75ab78",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68842e05-7379-4195-b925-ca282e150c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145001fd-a399-4b69-86d6-5ba522f97bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d837c3-67b0-446b-b410-31f0e5606e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fc952c-e732-4395-8bb8-394996c6aca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f063dc-b6e1-4b88-a760-85a14cd487dd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2009f4a-a94d-4b4d-93e8-4fef228fdd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2564369e-ea26-44fc-bb93-66edd4e6c2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d05db8f-fc06-43c9-8f26-4dd506cfa181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a5412f-6ff8-4f85-8b9a-b5582f185d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba9572-700d-4672-b633-7a957d92e0f1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a4e598-393f-4d8b-ad05-19e741abf0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61807e33-f86f-43a1-bcda-c8540c1612f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbce2a87-a5c7-40a3-b00c-053fce96ea58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57499c82-d40e-4cf1-b1f3-ab676fa2cb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52732203-79ca-42c0-9e71-329db9df90ed",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5643fa2d-697e-4928-914c-2594a9f1f1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53387acd-ee3c-4b09-a8d7-e9d6d1263001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a27df4-4f1a-45b5-9040-aa469b96788e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48acc8d7-c5fa-49c4-a102-77dcdbac1182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4650b9b3-98e8-4a7f-80b1-4334fcf28525",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c641b414-2d95-470c-9489-77e465014e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7849228-ba4e-4aa3-adae-1e620dfb2426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c8b84-2da2-4191-9581-cbba355b0513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3bd6ce-75a3-4eb4-9491-c972392abb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5978bc-ed60-4a4b-998e-69863baadc69",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d89081a-ca36-4b6e-81ab-eb2649f21482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea68c89a-329a-40f5-820e-71b13cd23207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2f4c9d-f623-4746-8515-f774bfbe73a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc0808a-f9d5-417d-9e48-d4f39b24281f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ed8764-f521-4398-9b7b-66c6b1fe5ec2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded4acb9-cb0b-4ff0-90da-6b0a863b840b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8a7b93-cdf8-4d7f-b873-c897a91d7bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd822b9-656b-463f-8607-0c706756f9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9594c27-8a32-42f6-b51e-b558c62156a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7799599a-54f9-4c97-9182-49f41d18a56c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e6e777-1e53-46cb-8e05-8c8a2773b297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd38c0b1-4bf4-42b3-8051-06b9dfb38638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b37cdc-83a5-464b-bd33-9e7dba2b6949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8345874-e0e7-4259-97f7-ef26afc7e978"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9e79a71-370f-4663-b8dc-1a8e994106e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5489b028-6337-4e6f-a6c9-e05c4f34f145",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a057d10-c04b-4dc4-aaf8-e1ebd614058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a84febe-4316-46d1-89ba-c2461ab0103c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597e8900-1c55-4dd5-8eae-ebd6091a5167",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c470c1a-3d07-4805-81da-8c149b8c2468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47c2c50-77da-4c93-99eb-9e1713653027",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16a5702-3328-4073-bd80-02461f089656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61fbd18d-108d-4e13-8d74-92bd7a914033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a90b91-6a5a-4bcf-b19b-a525f60fab33",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c431997-6b30-41b0-aef8-c6ece5f508e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "492290ab-0939-49cd-8005-c235a365c43e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4139e8d-787c-4521-beda-5c36358bf84c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "279ef09e-472f-4f26-9838-a0385148c757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ce8dac2-67ac-4b0b-9920-883ec1585202"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dc763cf-75fc-4687-8bd8-2fbe70702884",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11549455-e0f8-4996-b6ec-4f9165efab11"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d3b392e-6d0f-4431-a34a-0ee702ad94af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b76cea57-6b30-4aa9-8420-ce0b8e3b8080"
                }
              }
            ]
          },
          {
            "id": "0d220569-3ce1-47bd-8d71-a5bd74a63610",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10706c01-efbf-4c35-82ab-7e611810ee93",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fab322af-c628-418b-b5ac-14603e43da35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4124f6e0-8398-4714-a910-55971b0ee1c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "264f2fb3-de06-43c0-bb10-139383c1e16e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2ce5918-142e-4464-bb05-1127cb840f5d"
                    }
                  }
                ]
              },
              {
                "id": "dce02243-b7c8-4751-b663-b0116783a273",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3b27a4c-45f8-423a-ac0c-f257ec38f865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e88ab36a-5485-48e9-81b7-89a57b094421"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4aa99c9-e4a6-44ec-bdf9-2ac00707f4a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4fbba1e-88dd-4d8f-bffb-409aefe5590e"
                    }
                  }
                ]
              },
              {
                "id": "cf931fe4-dc19-480c-87f0-13ef8c77e51c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8df2200b-3869-492c-ab39-dc6e585b280b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13f0be07-c172-4b15-b76d-934dea5ce55c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcf3a1b4-503a-4493-9ac4-dfb9012ecf9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8fd25c1-5357-4dee-aa00-b0cbfc21caf2"
                    }
                  }
                ]
              },
              {
                "id": "f5c60b6b-21aa-4c6f-9c06-d3a3472542ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b7ac4e-45ce-4afb-904a-43512136272c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c4cdc4a-c965-4621-bddb-752ccd61d430"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78d288d3-3846-4dbf-af6d-0b0364e858b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "82d38c9a-4e69-4bf8-b18e-1a8fe96ab7bf"
                    }
                  }
                ]
              },
              {
                "id": "8828410b-58c9-4cc5-af17-b75e48556983",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f035c143-6dea-444c-99e1-bbff0293ecbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19474fb0-d6f6-400d-aa05-563c76a18ad3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52e1bb21-1556-4d22-864a-9d0663e3cf07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b4a5609b-4654-4b50-a66e-8b53503fb2c1"
                    }
                  }
                ]
              },
              {
                "id": "bfbff576-fd4d-4f34-a080-037dda60bdbd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87bb2ae7-266d-40c2-af16-9c94601d5c4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5c278c5-2d3c-4447-8951-d7c7118dadbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a62335b8-f42c-4833-949e-73934f72e936",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81be146d-2a13-4454-b0f8-6108d0a8d6f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61f0cd66-f4fe-47e0-925d-28cf4e68f02c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ec33468-a55a-460a-bf24-893e935f977e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "39c9af48-900b-4a16-9339-8d592be7434f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35810669-4aa6-49a4-8976-121d3161b4a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bce8872-1e74-4cbf-ba5a-401c751bf235",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d0c2f632-e410-4fea-aff9-8eb33afb393f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faf1c8c7-f5d6-4d3c-8b08-d20a27ddffe5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c2fe2b2-97fe-4f5b-b24e-b463ec01da72"
            }
          }
        ]
      },
      {
        "id": "df6f80ba-a619-4da3-b05f-85609653472c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "181391fd-2457-4b2b-8d2a-808c96fcf703",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9becc33b-8d04-4a61-b3a0-048fda17f37b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "189c3606-cbc8-40d5-b8d1-ca76ca304d66",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308f2199-368c-49e2-a235-03337dbd873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859c2a63-0f1e-422c-8d49-37290c51afb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216df0db-ab22-4a92-949c-85ec4d461fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "78445ad4-5891-4b33-8391-3e4e1067039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f602d2-614f-4033-83df-a391839f2ccd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16a6d08-d969-461a-89d9-f42efb71b672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4721dd67-7122-4249-b252-cca16ba2035a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d16d7d-e35d-47b4-b979-593cfaeb8fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b80e90-7d6d-4624-8fcf-a56e7625a583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06f7bb0-2297-424b-bb88-0acf78e275d9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3cac1e-48ab-4023-97df-786428c05064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d91ad6a-a500-45d1-a337-e04286f01f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3c798a-2101-4547-ae72-b09756b72294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c557e5-8e24-47ed-b6de-1a1fff727807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164d1d07-9aac-411c-8826-7111ec1d1faf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c725280b-9dfe-4a8e-b12f-e231c5e18b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d39a74b-f6ed-48b2-a636-96add3aa3c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aae9071-5f10-4118-b7ba-7f49d3de0f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06513738-62f3-432c-a269-698d370559c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7fb6fc-ddd1-4c3f-8dc5-1827cfa16a6c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d451c7-9d48-4164-98a6-591a8b37c16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88c49ef-ace9-4d9a-a5cf-c93339b8304e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dc21fd-690a-4717-b4a9-1ec04cecceec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5aecd9-90af-49f4-ae2b-95d483f8609d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c275e0b6-0bdd-4e75-97d7-483ff2f3bcc8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f83dfd-c06f-4b12-a7a0-68f36404bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870a491e-d41b-45a9-88e6-c6357d8edc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8128a3e8-b043-4c60-bb86-f3101b6075b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b912ba-42fe-45ba-b789-4e19b6dbcb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7af02b-665f-41f0-9486-2f3269c47ede",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfa99e1-d6c7-41ce-8d41-cae1cff7e90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d651441-5714-4e0d-9639-49db9b9a3e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2412983c-c4a5-40d6-9f0e-57dd0fee9684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97434f0d-323b-438d-978b-181f2234b205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71661e10-e51b-45a7-b841-f7e4d161e277",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12563495-1fd8-4479-a7ac-d9b019c144ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a80f7b-5fa7-4f8f-a320-b1a271449fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd6041-8649-4740-997a-64fe37493d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d4cd8b-ccae-4c29-b0cf-1fd1e756c32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda7ca88-3ceb-4e2a-ad29-aba4ef49fa0a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61fa0f9-a54d-481d-ab0d-9992a97f9b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdad4d84-fe66-4540-905b-0e606aec594f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800913dc-3876-442d-bbf5-a89f181157c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1496f7-bf06-4a4a-a1d2-1ab06b0b2231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118784f4-6cbd-43ef-9d2f-76ea21e5bfd7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd884950-9e85-4268-b8ec-8b62d742fb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2652ce1-6ea8-4e0b-88f9-b129e6e9dfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9a4fcf-495e-40db-91c0-79f76b7f1732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0b52c6-e6b8-4bd2-98ec-de92ebf9cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8aa5e8-f1a0-4e83-877a-9d2c975bc972",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3e867f-ddfb-462d-a143-e364124c9aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1b9210-8056-44e1-a2d1-c044cf8dd61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52c59db-7041-4b59-9353-4296001a255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cee66ada-0c67-46fe-aa53-bd937bf88c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda581bb-6a9c-4419-b3b9-a072d88dd1d6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643f41eb-e48c-4200-8dac-6168881b7567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9967296-1f73-4e41-b6ac-29e36220721c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028eb8ec-4538-4e95-8703-0e0250d859a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "757ce144-74c4-428c-ad47-d58baef0df68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176fb3e0-2b23-41c4-9857-a1b34c187754",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b186e00b-760f-4748-a80a-bc6c8abeaf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da5f69c-3205-4e73-b85b-f3e578f71226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4197c295-a05d-4668-a40f-cc129557316f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e1bbf6-fa6d-4182-8ac9-40a1851a2925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35010f0d-2588-4d36-9a4b-92f8c5e51bd2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c998ea3-308b-4fa3-bc78-a070d2e42a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4d85cf-8132-493c-9b98-621779ec5c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6779ab-71d2-4606-a601-04bd45e67255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b367c8d-8bf4-44d2-af2d-a4d33d78c55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfd7230-4e85-4ebc-8332-68418ec69dad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b9e2d4-b75c-477b-8e62-77e965f0def2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c77965-93e4-4ecc-b3fb-34f2e3971995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aa1777-9590-46b3-8279-214d0715ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb3d5bf-9821-4567-9354-b967fbd9f8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad7a788-a438-49ba-a951-a14ba8843748",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0124e089-4c92-45a6-b5f5-fd87fb609319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9e9836-50c8-4b2a-bb2d-7582fdf181bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca0da00-2f59-4771-aaba-1a418aa1ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a978ee4-3593-4326-b821-033115f6170c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e27907-425a-413d-99cb-351f01a7ebb4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947e3c88-9d56-44c3-9838-b98fd58b5896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20893b1b-34b1-44ba-a71a-4170b31e88ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66c7f32-a2bc-4852-9c7f-bcf08cb88681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f4d0e1-6b82-4ced-b863-82cfa8c43f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210befd3-0c10-4c43-9bc5-79fae75e1fa7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1fd4e-ee0e-4def-8f88-26ef8e73059a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4849bb4-434a-4e00-87cd-d3a7020a4dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e46cb-21fb-4cae-8b02-6dd3fbca5170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7c49a7-3746-4850-b6ab-28be84146fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb3b265-b6c5-45be-bcfb-3e757000d1ab",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f4fbe2-fcd0-4713-bf9f-9da9afe0d129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d945b3a7-5dc0-431b-8a00-c45effb0798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66b1d9e-2a04-4ea1-b5e7-86b002245bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a172df6-c997-4fe7-8a35-3a7cc9ac8cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fdbd13-ac49-442a-8e1b-42f42cdfd18a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c6d003-dfff-4f1b-99e3-03801035514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6c9227-598c-49ff-890e-bcb1b75a1b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b82d66c-e33b-4bd8-b3ad-bddf16018efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83e4467-faff-4f5f-b656-4adfe72692f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7706d56-eff1-44dd-87f2-269637e9727b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef2f535-1090-4eb1-b4ba-91d65d0c0700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb407416-8c9e-4a16-a9d6-508f4397c6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbea052c-84e8-43a6-977a-a15d729ef523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb15073-c36b-4d03-a72e-0ad4fd2a462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21e4ada-d44a-4625-9c91-d9352cd813c2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b946bc0-d2ab-4cf6-90f5-356ec02c4e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0381eb45-eca2-4c8c-87ad-e492693ce31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdb7fc1-23d5-450c-bb6f-2438a4fa1430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe50036-916d-4ab6-91e7-803e2735b91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36e6530-b76a-4b78-a22e-2d0a1be80b52",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a69b24f-1a28-47bc-bbcb-6fe52d71e2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9175d606-26fc-4128-8a61-53105b971a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69883ece-1921-4c1b-b490-6fb52041c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bec254-fd65-47f4-876d-9c3aefaee8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7c579e-5c6f-4a9e-86ab-4007ac3d0534",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeae82d-7efc-4208-8f2f-f07d0d0c2037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c28562-c0ab-447d-aa80-c5a61fbcbc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff95976d-46ab-4036-98af-414073e2dc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd0d807-8c00-4834-bc1f-cb393f39cc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17783b62-a60d-4486-a57b-d879fdd2fa95",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194491a3-4b8c-486b-a5ac-cf09bc247674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a78ec84-e34f-4db5-8309-98a47c687438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fbabfa-e59b-417d-b9a0-e43ad3b7f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4c15ba-2826-4195-aec8-8b8ddb68fd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c5ad83-ddc6-4d94-84aa-4232dc012ef1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb0a7a-13cf-4987-8ff2-ff177b3a2cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe424e9-a4f3-4219-ae25-a40a8d9a51ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab44dd7-1254-424d-ad22-3c8fbafca47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "722fdf95-9a8a-4864-ab6a-386b19044a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def05888-e01a-4dd1-89ab-ec8b134c4a2e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796f8c64-a2b6-4c9f-879d-489e4603a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7929cae-a579-4e57-a825-718c34305fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ac83f6-fcb7-40d0-90cb-002cdfff2f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bd4328-ebc9-4a79-abf5-090588044a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040e0943-26a2-4ebb-9457-bbb8f43eb0ca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f9b70c-249c-47fc-b1d4-705e0b7057bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a66648-2675-4ed2-86d3-4a2c6f7d4ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77191c35-3503-4fbc-a4c0-34fe9efb489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc79127-64c9-4b21-9f8f-06da4d1552c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6881d9-f1c3-4d98-bd11-39676ee50dec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d002f70-0f3b-4d5b-af29-8c44cdc24801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0360cafd-f75e-47c9-b9fb-c58b9411c1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91fc847-4751-4048-9988-90a721b2fcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7235394b-5b9c-4d10-8586-d92e15b2d52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694e4788-db67-4c04-902f-e351285c010b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c900b939-f6ed-468c-a633-5f656bcc029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51d47dc-d117-4757-990f-89c03dcc7536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d11f9bc-5cc4-40d7-a5cf-72893b4bd0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b56341f4-1704-45e9-894a-b0dd08a7543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cee996-b66e-4f42-af1f-f6f4021f3b59",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b268b3b-53b1-4459-813d-4cf84b279e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11a2088-b017-4e94-a0f6-ddbcd2a39de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd53467f-4d68-4610-b558-e6774872e104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc05aa27-614a-4139-8ace-5920069b2939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee755ca-c598-4ba8-ba45-39e9e3133ab4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40895950-5c9d-4bcd-a60c-fefa71a3a2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffe008f-4a3f-43e8-8b5f-dc39e0194cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1233100-b622-465c-8930-b4f8132598fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07c7eb49-b44a-44a5-9ca9-fce257193c4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f123e0d6-4c77-43ea-83b8-63d7464d624b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cab8603-a48b-4e8c-9d5e-caf83ee8b55b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea8ec41-7010-4eb5-9917-7655c8dcf6e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81adf519-1125-48ca-b306-5ba25cae0628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16f1936-ed65-454b-8358-4c63507750b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b0fe3ea-a7ba-4242-a046-2c97c870d578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df39bf8a-91c1-45cb-bc04-6a4dda4e74ce",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab499ac9-84a2-4fec-8bf9-ad023eedc9cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "80ab2147-a591-4982-8478-a4d6fe34b8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f35cfa0-6535-4c1a-8bfa-faae2eec77dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d68500f-d980-4e13-933d-d1e16048a4bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4c484da-3575-49ff-9e7f-1710f83cb6f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c07ab24d-45f2-4bfb-afa5-d57f317383e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d28bf804-6a8f-4ad3-8bbf-e70ee8666a1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "805cb330-036a-4062-a35a-6961d2418a6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5abf60e0-0273-4031-8e4b-563de8d21195",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d89be20-38c9-411d-9edd-164fd3fd62df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96dc6223-ced6-43f0-a574-059250f1fccf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "772fb0ff-f25d-4fa5-861e-b5b3c552e7b7"
            }
          }
        ]
      },
      {
        "id": "7a62e56f-3611-48f7-9dbc-840c2eb346ec",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ba5b38d3-5274-4212-81c0-2ad082b2a57e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24bcca3f-6ad8-4cd3-96c9-03afc46f10d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "70cc7d13-332f-4bf8-b915-8b20f67e5335",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001ad060-ec6b-4845-ae69-829daf89f527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dbd374-a96e-404e-ac3b-d77562778764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d044b9c9-8c3b-471e-93ba-cfde8b3f73d3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eee706f-6be6-406f-80a9-233bd68421d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060fa22c-512f-4dc8-9186-a50422e4e1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310854bd-e4e2-42a2-928d-a64de95c01da",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2392708-582f-4cc2-83c9-ddd92f442841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551b76c4-7beb-4b5a-b84b-e37c7337f636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9beb73d-b341-46dd-852c-4d2dfb7e4aa4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d9b752-8aed-4d95-b950-3e70e3f5946e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c9b5ed-adde-4c6e-83f9-2065142e3959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4dc401-46ed-4c59-9061-8167912968cf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05e47a6-0839-4aa9-a658-9e464c44150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0640fbc-3019-4014-a926-599f26f78330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8d28f9-ad0d-4a1e-a7b7-f9c5a7aeb89a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3f8bc6-2c86-4972-a814-9c0fed73045c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873f8c9f-bc7e-43f8-b22d-5b0b4ed6811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec72ded9-cc19-4202-94fe-b82537c95642",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fa8162-5283-497c-ad1e-bacd01b82211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95f2300-3834-4aa0-83f6-6c835676e9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd355ba2-d1ad-4aa6-b0bb-3afb75cbf4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809577a6-7272-4eef-807f-ee8dc4f3412e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2490a88a-d2ee-40fe-a0d2-6b5a55177e34",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483e520b-8448-4574-a4d1-34278e856f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20c535d-7a9a-42cb-af0f-a1dd5a270158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14a65d3-e873-4acd-b507-012ba62937a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe3be1c-2ec7-4eb4-957d-062bff975136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a81d47-3cdc-4191-8870-54c9d3ae1487",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a289687c-6b13-4e97-9671-0fbfddda00ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650d9eb6-13b5-40c4-aa4c-c79cc526c14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1452f6cb-7595-434b-9263-7ff6de8e7b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77481ec-fe9c-43bd-8692-be766bead407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5959a532-7f19-4b8d-9a77-55f1421124cf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e3046d-5fff-460b-bea1-55e0f025d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35653266-692f-486c-bec5-597feb2cda08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaa40ae-296e-4eb1-85d7-667023a3e239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb6aaed-0012-4067-846d-b6e7c9f79601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d36558-5899-43a7-a563-caf5163eff05",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25186946-4775-4aff-b75a-7afc8ab53bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b06bea-716d-4265-96f1-1b9a7711e517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3471974a-8e0c-4082-9ecc-d5550d881b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8660ec55-43a6-4c0c-accf-a2326904f138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6018cb9f-4866-4669-91db-87303f13297e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aca0b7-a8e3-427d-a1bc-fbd8d01e4bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fee9f3c-2cff-48cb-920d-31325f12a79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547b7a74-14f9-4632-be5a-3d3de790d33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b0d552-4c47-44a8-b0f7-4ec2e663b038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ff1c7f-edb9-4f0d-a1a6-250d4d412849",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffed69a7-0faa-453b-90d1-27c40c20042c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e178ea-82b0-4a4b-9f61-be5a5a1f131e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8972fd-5252-4f81-a983-0889dadb6f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c494371b-0fb1-475c-adf1-ef4f4e03b490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62156a48-5dba-4258-841b-015210a56bc8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0126b32d-9fb5-4f37-a23f-81fc43ba3b63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560327f2-ed21-41e8-8d3a-106be861dbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3ffe34-602b-428d-98e0-21159566c417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35d79bc-01a8-4d9a-82f6-013ac47658a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471c10a0-2920-4cf0-9c16-c06ac17adaf9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e366b40-349b-452b-beb1-70b21957a692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130af84d-b621-44be-a83d-c9144323de19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c80d572-891d-4f9f-ab97-4f8004abcf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a6e756-cf48-4fc2-b7ce-2dae3d5d2f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9c3c26-f467-41bf-a421-fc32aaa11522",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b7475-1673-46c3-bf98-29581644bac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7646d48-55e6-47e9-8aee-fae1fdadea4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da6f363-b903-4053-aa9c-aa67b6ee2cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b5a606-e116-43d3-b4d7-7b397c34e677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403a0fed-6f1e-444c-a0d0-e21373254853",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb2dfb9-0ba9-4140-b19c-13d4df7a7fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d603cd9-cfda-4fde-9d44-d782c91d9f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8924b096-d205-4a3a-9f57-bdbca7a251e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7877ead5-5734-4c84-82ac-b2295dbb352c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052b6eb7-b445-40ca-9959-d576ce46e711",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f15e9f8-6baa-46e3-956b-267b462604a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86c041b-cdfb-4464-9a67-b2adb8f3e23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eb98c2-1c71-4b19-b3c1-e809107e098c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe97ac9-14f0-441b-88e2-5eea4b196ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced227ba-a56e-4554-b0b1-7a1ed48f850d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841e9447-26ea-4671-ad2f-613073dbc12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06c2460-c25e-4a49-8c27-a6c6ad61bbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e3c9f1-0c22-451a-83a1-566244f18a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7c4f2a-8fdb-4ded-b096-2f046819ffa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64b6d16-79b5-4111-b685-d21818235677",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92382237-7191-4158-a92a-6a31ee664072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d712ebd-97f3-4c54-8b3f-54297fa87abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5d3fb7-3a33-4b84-9e48-a1d71a2ea9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53df705b-6eb8-4aea-85f3-82558fabfa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42616140-40e4-41c0-bf0c-d379bb322620",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dee7d6f-dddb-4c2b-b742-90b579687eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8137c1-1128-47b0-a3b2-03f1521c4993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c823ad-48ba-463b-ba3e-c7881ad83f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0526b478-1236-4be0-97c3-95f60e2d138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91578ae-20a4-4eb7-81bb-6ed8a2293fbe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8040bf49-4de1-4d3d-81dd-56ae1bc74db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e111f5b-43a0-4476-bdf7-9a1589d5adc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d69888-8a25-40d9-9b0f-05b8dbe095d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70c4d95-e5b8-43d3-8466-bc0c226542e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d0def5-7031-4985-9986-ceddceee0ca1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e49228-fc79-49f4-8590-a38dd32cc559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5d4246-50ec-4f05-a2c3-266cca1f0a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24ec009-dc8d-4b63-82da-a9ed518c0f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f823ada2-614d-44bd-bd97-f742a030260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3281067a-4d73-4bdf-ad49-7b3e1f6931c1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2e87ee-09dc-42d8-a6ef-c87b1c6e6c75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f6f8c98-5866-4751-8423-32fd07151039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2006855-d80d-4614-93ae-a5bcccd6a33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f14c95-2778-4110-bca8-321ddded97e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ba5e59-ebd7-4caf-8fd3-5e132cb1829b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb4521d-cc34-411f-ac3b-b1a9e2149b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656f0726-2dcf-461a-99d9-69b8d5b1a82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287a9219-7b79-4a20-a553-cc3c95083e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be49de0d-b1a0-4b32-ab9a-42a1305946b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9664d3-9839-4f7b-b8f9-1d6a46c2ac34",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f1d03c-0aa2-4c96-ba6b-fd634de8603d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f9d491-4a11-4f29-a4e1-141625a5ed83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f7d9cc-41d7-40cd-b2d1-d8ce01418e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351748fc-ea0e-4a44-9d05-1d8993a7ff82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c76f53-ff9c-4780-8a6a-f087c65b6dcb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b848cc71-f2a7-4cf2-9e4b-34bed71d678c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84224c9b-27e9-4523-a569-3d927c385e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43052fb4-0624-487b-8d07-2b3cea80e61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e09be1-3649-4029-94d7-7040bdfca990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e8d714-265a-48c7-be6f-087069ef0f0a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0921bbdc-7026-4a38-82cd-a436aafed9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d633394-c33b-437b-8079-7217768c921d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fa1832-4943-452c-b1cd-db75db4680c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbd715e-9746-4838-ae60-0ff0c88df3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1f4336-7ed6-4537-b953-fd6dcf0f3471",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52f8e11-3209-451b-98bb-8ed80abaac95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6753d999-d2c8-457c-a8ce-0aca2babc454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3393ba7b-1fdc-4843-b25c-50eefc11679c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea3bd17-792e-4c94-b108-9ec2e22ef03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcdaf21-1b72-47cf-a35b-c9a576146e99",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a194eeeb-7e76-4900-b3ce-b561667588f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658d5277-049f-41aa-97b0-07856933784c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016c0733-7dd3-4401-bd42-94cd0c69cac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8466cdc-f8a9-4b9a-a4b6-344dfcec929a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ba0087-d830-40a2-80f7-dda79fd39d27",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cec05d-4448-4240-b16d-8d3ac87406e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4648eb14-939b-4b50-bb2c-f72f3c568986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33cc74d-f584-4e21-bf13-ad5d22189cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc60cf01-0549-4462-b527-b616cc828b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948cc882-ac32-4e29-8d7f-ff60d4fcb5a0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06de37dd-4ec2-473f-ace9-e99efe9daadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f69762-6d58-4ea0-8fbf-8f2f5c47a608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adc829f-2c72-4629-87e2-43ecbe6e2047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa1035d-25d3-4dd5-ab7c-2a0b597695eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8156bda8-a220-474f-a4d4-05fc164512b9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ca13bd-24c1-4156-9bc6-488c026e4b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf70f71d-9c15-4b9a-af33-c3d685f69111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0211cce3-4800-41c2-9bfd-3402cd31c431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff3c500-cb4d-4f5c-a92a-cccf9660dd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fd7ba2-6189-4004-8b93-a5546537f9ab",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1421c0c-abe3-4049-833a-17f29fbae229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35dfb1b5-8aba-46a0-8f01-81f8de93ef77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39504c6f-66e6-4221-a5f6-21e933780780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b2f355-5f2f-41f8-a50a-2b48ecb46725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba5bee-f42a-484a-a58d-a87d3f039d27",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8bb8ee-08a7-4c01-bd0a-89661bd6e622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92708747-d670-4eba-b458-ea5dce5ebed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7412040-a065-4f3d-9910-8dfa09d0d17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe2c410-7b1b-4645-a546-63c3e29b99ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f0dfd2-95cf-4f91-8c29-4295866c2046",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f74f9a6-3e77-4991-8f8c-8dfb24fbd486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f866075-2960-4930-a82f-7ca07f4efca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72361ed-59f4-4af2-8523-e792d4f2b17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740ac8a9-0340-4001-8d67-e7c6934d1b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dacc178-61c3-42f6-89e4-ac76f9f4a0db",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc3d3a1-e8e7-447a-9c88-e7c2888537e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d08e4e8-bb85-4db1-a7ea-4e750af9c87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572d92df-bfdd-4a0b-a36d-19dde51f5202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c575a17f-b378-469b-bb40-067add4f7817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b8eadb-6ae1-4cd5-a583-b4ff3e7cf99e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fab1cf-96cd-4fe6-888d-59fcf50eead4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cc8f52-0fe3-48dc-8233-3e3acea5826f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64b9a13-8102-4161-b747-88cc16339e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7066e8b1-2cd6-4560-9518-f6f2487c1895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc27756-8a5c-4391-979a-ce9ae2c5e42f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413303ba-20c2-43d8-b01b-96de0ae8d911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185a890f-f880-4acd-84d5-e30479edb45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88c67b4-5c58-4d4d-91ce-48b5660ae243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa52d95-7907-43e8-80fb-5656778f3018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1383d509-60bb-43af-a832-ff9f57dbd84b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878dcbe3-45aa-491a-9e0c-3361ae5c8255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf28ae67-31d8-486a-a11c-7b9c025cc6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25392ca7-9286-405c-8952-f2ce8dd24fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ed6399-12e7-4e4f-ac92-65650c7be8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c90bf2-5ede-4d4c-8211-535a0aec5e36",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28407e3-0f75-4fac-b445-3aa64a4fe93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599df5a0-9265-4a8a-bb6a-571964775cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ebfccc-5e71-4c93-b306-69169cb05132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d8c712-2f6c-4a8d-ae79-98bb9eb8e487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b668a6e-935a-4edb-aae2-6e20cc4d476d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e4f3f7-8a1c-45d8-9ec5-43ef7b2792eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8b28a2-9fef-49bd-aed2-7c08d7a00577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d9ff74-4c6f-4958-a84e-78d69f2b632c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86567e45-0c47-4135-8248-8a9de3ba1af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917099cb-ac97-4226-8228-ff871e64b223",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9039b558-2554-42aa-941e-6d51106ed0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efd2721-aec1-4cf2-a7a0-14ecff21e2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76fe0f1-d73e-4858-b98d-d464f2a74410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9b9e80-452f-4cf4-be95-1650b939f7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257307e6-32fe-43f5-88ba-3b190f68766b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6360a7-8410-4cfe-b0e6-caf5e13299da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cbf748-8ce7-4e70-8dab-825a826994f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45321f06-4cb1-4505-bc33-e174231a66e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b479c8-491c-4197-900d-035dd29c7baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0ba463-4024-4fe4-8c40-a9ea97c81f94",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149f2a9f-0f73-47e1-97d8-52d3c2c52ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36537aae-c193-4edd-a66b-845e6b9c864f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3278c0af-b2a2-4e4c-9366-7700ce9337f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7432f72c-3cad-4843-a0ae-f263eb6b3d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12d9f89-9e6f-41f6-868a-1502e98c9486",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020be860-218d-4534-80bf-9986222ea4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71437848-638a-4f52-8c53-2a95b6d95065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474ef619-4607-4988-909c-4027a25661d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f8da7c-3c6b-424c-b453-9c81d114fdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e6aa00-29e4-40ab-b0b8-c2807211879d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794b3b12-0d41-42ec-be5d-8ec49e2263ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f09209b-f885-4827-a600-09cf4c349803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2d16e3-925d-4d91-adf4-4875c5ac9e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d2f968-93a5-409d-bb78-b281b0b2ac19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896afc2c-11c0-48ec-a704-a004d31eb644",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbe9f68-dd7f-4907-ae25-41f0108f3416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21446ce9-4df6-41ec-94dc-51aafb9844f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855f23b7-9479-4aa3-b04d-674789060712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc75d3f7-eb9a-4b84-8122-d4cdb230ae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dc657c-dd96-4a39-bc00-f9057722d67d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362d30c2-74e5-42ad-beff-e5add727f52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb798cf-d73a-4d5a-87d5-aa63139a0344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e3ddca-2528-439d-88dd-49cadcb42f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b5c483-7b74-4619-a72a-6da1e6cae23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e39676d-8e14-4ef5-8619-ddcf3e32f38f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b411b926-b0bd-4902-aa49-a214a9f97616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0728f2d6-4ea8-4a93-a2d0-3b3e235f5b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06c87a8-79b8-4452-94c1-ed9556a27278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d1dfd1-6f84-423e-b32d-d4486660938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eee7f5d-0fcd-4ee5-a3c2-e02dba538287",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c58c15-4bd9-4922-a931-94e8d54f8e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2177280-db0e-4ce5-a3ca-75dbebb50aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cadbafe-b450-495a-a70d-2ad26d7050b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc00a290-c517-43a1-bee7-b5cb2cb4a206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd0d201-38e4-42e6-b0f6-98044613affa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6f1ebb-baa2-4c52-a4e3-1cd13bb10270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8020957-1dce-4e2d-8b0f-0d55f2c7ca22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2a625c-4548-4ad1-8b1f-f457f4ece025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456f83e6-9c73-464b-b0fe-306933278317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af82586e-3ab8-4c95-88e0-8e4a75c6fa0e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497334d-a6b3-4e73-9ae0-24a2cd1fdb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0005e96-362e-4af4-af9f-eca7b566c4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f5324e-ac7c-4661-812a-caed43eaa1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d63c57-5a51-46a1-995a-1b1eebf3d280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c4b1b9-a716-4ac8-89cc-d8cb0cef8db1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095efcf0-4893-417c-89b9-ffaabd5cedbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638392dc-9bf2-4e58-afd5-643d0f3f385c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d744f30-8b36-424e-8365-44d037723e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba6fe2b-59b1-4838-9588-8035282cba24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c100d62b-03ba-424e-9210-6df40e096d04",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d76ad9-e9ca-4c0b-b355-71809d95fc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287b1128-2c72-4f53-a681-75d5e1ae981d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b58f12-661a-4ca0-9603-edb390693cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbc25fd-1615-466e-b263-fc9976ad1c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddac194b-be42-4168-96cd-b9838b1065db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9627a5a8-2698-4911-84d8-c6054d9c75ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dec7ee3-90ff-45f6-be07-3db7ab40f977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba65f70-1c1e-4b35-bcef-78541a476769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2fad37-275b-4d1b-95d0-d3345528030c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d91749-5fb4-4180-b05f-991c5c7b8261",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d5bef0-aaf1-4e29-8f20-11b89238d207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374262ff-5b76-46f1-9e8a-8e4e30442656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fff1c0f-1cdc-4591-ab26-2bb53573efb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc8fd62-dd9e-4b58-8294-f41de4a6b928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cec191-fc8c-4f7c-8ca0-4d1606a17feb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06de5957-6f34-4f3e-a11c-f81439e29968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d6bfe2-24df-4906-a02f-ce494e51c08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d7a887-9a04-4eea-a984-629f1ddba9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289a8c62-a87c-446b-ad47-2d99bb5799f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a3433c-40e0-470d-b0e3-386d17e1fae5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cdbb59-a123-4005-9c0d-9c765d338c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f55e0f0-53af-42df-9619-6a82510e3967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599275b2-a8e0-4d2a-aaea-97ad51e3040f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad3c8d5-1090-4d67-abe7-f95aca199989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca099cd8-e735-421c-9867-3fdb81bd3a7b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de841260-37ec-46f6-9ef2-938bc936ee38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ed940e-3198-44c3-90cf-ab15bc1e634d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529fa8bb-ea7e-4e60-b203-39616465508c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a81e6e-88cd-4f6c-b3a9-3758a51b3511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db04ef68-050b-4a39-8ba5-54058e38cbda",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dce56a-efae-49f3-a735-58511b65dfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d35343-e618-4ae9-82e0-319113ce1bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9afe35-df88-4ef3-aacb-0adbe7f121dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5746251f-0ef5-467f-ab70-b5bf2c7a3024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92da0f16-12b5-4e4b-883f-5f1454397ce6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a75128-fb01-43aa-9e08-7e918cfbea50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d83ff3-3821-4002-92c1-193d0e229494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b15b22-f8a4-4f2a-9092-dbda2dcb1577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc30733-f91c-4622-ae24-3f78bd7790fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c85a75-ab81-441d-8e49-bda6703d6ae9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904ea439-131d-4107-a2e0-a0343d0a5a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a812ff-38d3-479b-8294-b7cbdad50edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e320da-1a44-4a8f-b7e3-decaa6c37a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d26743-92f6-42e7-88b0-6a3d15b11c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44328c61-1847-45e7-b11d-4c01c1938a2c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9ba44e-67a9-4034-b8ef-bd0532a5ffe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9819b995-df47-4664-9929-dec4be515ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a318cd-efe4-4d3a-888d-64c5249df96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e439cd-c65a-4e47-8056-16b23345aad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d6b86d-d089-42d3-b6c0-1148d51bd545",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a326f48a-1201-4b24-9d22-6ae925758c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd0786c-57cd-4845-bd54-d3aafbf9085c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfe6ff2-4b80-4036-9e3f-5d59c4fb2b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea53539-8d98-44e0-9f5f-b3bcea83379e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca48353-206e-4acb-b578-d4f5f1ab81cc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caec8c8d-b3fc-4efd-968d-f27bc2300053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41250657-f350-4afb-9ffc-3f46d38c2f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63145a2-1955-49b3-ae49-749cbb7612b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905579ff-b4e9-4a8f-9eda-7a6c7e21ec1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0544e10-e8e3-4bec-8ac1-ba4c983f740a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c99843-1c43-4578-b963-071b9d6683e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe25d60-0c48-4b47-968a-bd54807a131b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52486646-5547-46ab-a90a-f86a674121d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564534f5-ae12-4da0-a9ed-60fa32d29b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2873e35-73f3-4ca9-939a-7d6d2dcffa73",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a77684a-bee5-49ea-9459-4ceff562f448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5098f1a7-89b7-4b9d-9d77-90b0212ec2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9597a7b-4818-41ab-bf6e-83381bfdff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4c5354-8322-4857-b5d7-8f284021c8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fd8f44-3b6f-4447-bae6-f304b510ad31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843dd842-318a-4170-a12d-cbb55e3177e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ea28b4-8535-4d7f-bff0-fd8ba26a1412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa45aa91-2283-43ac-8c7b-3a79cd866a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd89032e-3610-4b47-bc57-3268830b651b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6d85b8-ad70-4707-a53b-667b0c117360",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e834d3-b88c-41ff-b6f8-a0e558220875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6b6113-647a-4007-811e-097bbf9f565d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aae76d0-321b-4489-9413-ce28e719b597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f62cd6-7914-46a9-b7c5-2aa645a6885e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c5546-6e82-43d2-80f4-e7a82922e2f6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3603fe-5b63-4e23-871c-bcd595cdaaad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43fa96c-fe40-4b2e-b055-14c37e85e7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e958128-f01d-41d5-b258-0997c7e27a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d57689-c09c-48c7-afa2-c671cdd13d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcc5eb6-028b-48db-81ed-219146861b8f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1a92ec-7a06-47a6-a8fb-7cf3cad61589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9675579a-b5c8-43b7-8143-0f742e324b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d8cc3a-0521-446d-b9e8-feab2c9ef02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9e45d1-7336-4f3a-a142-a5975331e708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23822536-6d16-4783-8519-807e532617f1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a217634-2105-4b30-999e-7dfbdfbd5fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59df547a-34e9-4c87-a57a-75e7d77518df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88366e1c-a997-4118-aef1-14aeb2a1d1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d44b700-fbfc-4372-9067-570c19bbe001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a79d88c-4970-4b98-8081-5e32d982e862",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c4326e-390d-4658-a4f6-15feab393034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5f6b07-967b-4f59-b1db-11c2e398f9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f2e6f5-b529-4a99-ae16-29cb41c1e22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11650824-ca77-4878-a7fb-51a408c0afcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6877bd1-ffc4-479e-9e4b-2450ec3e28d7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ff11f5-9efd-4ecd-8c18-d77f96ffd928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a1b3f1-cd4b-430a-a6bf-c675c7ccb923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c4d8e1-1f0c-4f14-9fa7-002e7eab9ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77da9cab-d19f-4ea1-826f-4572d6b1ce49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd8a832-6da3-4eee-b896-b0d58a5c88b2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa56f90a-0336-4e33-a937-ce2f487a9e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7263cfc2-8483-41b0-9655-e586ebec7644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621550b5-ca5b-49a9-9833-18dd965c5ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d8ed21-a151-46b1-93cd-fdfeb53facf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decc7b22-db6c-41cd-ae64-2bd50946c0b1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf85141-9091-421d-8911-a13bf8436d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796d3f7b-c023-4c7d-9453-1145a247b1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1a32bf-7628-4f35-803e-0132ca9a8358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbb42b5-9594-45d7-baad-640a9ded0115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2815b906-6a61-495f-be16-fb672c746987",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf07004-71c3-423a-a677-1df1b6a0e15c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9c3743-eb92-434d-bf63-54fb2e94c7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e7d4ba-7115-4847-92c7-aeb81ae5f1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23446d6-5b95-4568-ae63-0d7289296723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d5e418-093f-44f1-8c9b-7f5a164ceb49",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e5ed6e-bf87-444b-9387-02981ebfa19c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0e9b13-3eed-4ee1-ae0e-85f991b0cff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc04751b-726c-4319-b70f-c21204189668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c0441b-2192-47fc-a69a-c3b6f80af11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3dcda5-c98f-47b4-9d49-9a6e12aed60e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0506ee1-897f-4797-8bfa-4d946dfc9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f00115-3e5f-436d-8a0f-d22a5390059e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1704a442-5bf3-4735-bc52-1d488d912afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0bf2e2-4213-4245-93f3-9edcd47bf950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3172e0-b88f-48a0-80f6-3f7055e0856d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf609ac-524c-4a50-931f-af95c88827ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e86112-7151-4973-be3d-aed9d118a535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a993a5-25f5-432e-8056-4c6236e42c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c532fd-365b-4612-8864-59326b38ecb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34ea756-70af-41e0-b7f1-a751dd1596d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cc62fb-ad71-415d-8ebc-465195be2b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aafd88a-6405-47cf-bd2a-072a94f35c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3674c5-6c5b-470a-ae3d-53bbbdcf088c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66e665a-255d-458b-aef1-10539d80c6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f686d-6c05-4173-a936-26d602012b06",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525eb2ba-8d72-4742-b82b-dd7dc1f3607b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84589f9-3c5a-4135-82ae-a1c358630faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8bcb7b-e056-4274-9e42-15ab0445ec12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef773aa0-6a1e-4d22-a3bc-a1289d9db6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dfb5cd-206b-40b8-ac9b-cc473234cc62",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b783209-b39d-49a9-b3fe-b398b43d7bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7f7e01-bf5c-40d3-b411-d8fb984e2b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78640b5c-cd51-4dcb-8050-0d68b1ea8802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47eb1d4b-2faa-46db-b618-3b0215d63bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72df0888-96fd-4aa2-8ee7-21254a7f1f63",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c1f459-a22d-4b7c-9671-d66f5c2454f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf91cf2c-197c-48f1-91c9-da2fdc49b009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c888f212-3be7-4e2f-8a17-79c9443bb855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef3df0d-fcb6-4dff-a92d-c0fd1c5576dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84bee6b-1d00-490e-8711-8cade67c24a5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c6e751-4882-4bce-8221-3cb851bedb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f93953-e06d-43de-b74b-d69f7aa49883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e464ed4-459f-4898-9c37-64df911521b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b43072-6289-423e-9f46-c485ca0283fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f80945-9a06-447b-966e-9f9801522b13",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5334ef2-321c-4a56-8ea0-13431eec44c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44524983-ff44-4528-a4cd-dfd687afb336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8508c6de-f529-4559-a676-15861f7ebb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5f3bca-13a0-4168-a62f-4c23b1fefaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5637eb6c-44af-4683-87ca-88358597fda3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4fadf3-f94a-4b8c-a5b2-f6821c9c8288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a31d715-f9af-457e-ad20-b9d077eb2749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3a54ad-4745-402f-9f42-c16c883d1301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d40e23-804a-468a-a96a-b22fb95e81d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b04799-742a-49d7-8454-9589d2d82cac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5920b49-9d0c-4ab1-ba97-de7683382787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a7b1f5-fcb5-4c94-b326-8b4818f28dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ffc594-bcac-48bd-ae1e-1d6059b408fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3779f6b4-0700-4715-942c-21e3a1604e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d358df00-bcbc-428a-88c5-a004bfe045c7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b226f8c-d395-423c-a2ca-b7e0e58a6095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924ccea5-b98d-4fb8-adee-517556c0ea7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43e8511-65cf-4755-a0a0-84ecb3d8df7b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea00dd4-21f8-49ef-ad02-332fab95d0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b6dee0-e5ea-4838-8d63-a31255141c67",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0683fb26-2933-4eda-a3ea-82232732f826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa5a95d8-df12-4408-9b65-e211db2827a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fa2691-3f36-40ff-b555-723b01007629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc5fa70-d7ec-4292-8773-3215b9e58b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e41d549-38d9-4524-96ed-ac4c8f4f98cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0735ebb-e230-4194-b027-10511da796e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538e01b5-1108-40b5-b724-4e349aef1938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c605ab-c2c5-42a1-965c-fef3c3f17271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b448a46e-28a2-4685-95a2-fe0831b2b202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15639bd5-d407-4287-8e28-0727b61d9144",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb02e0-01bd-4bb3-afd3-ada38d717f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a162958-b848-4d9b-ba23-dc225429c62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457f4c8a-fe70-4931-88af-93841ffca59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3325ee-1693-47ab-ac03-377ad5439cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1b6b32-ed39-4e6d-9d6a-6ebe00311b48",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3384281-aac4-4ff2-a951-4f0cf299b31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d34495a-e521-4a96-a1ee-688fc8dd404c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d14b0da-f116-4125-aff1-8705b3387d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8856f7fa-ab9c-478f-8eb4-61053d8be92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b0ebd0-1fee-44ae-94b3-5b2146d489a9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc21d098-9173-451b-b2f9-abdc90b261b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873531c9-c179-4e1e-a725-3ae273c0e805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a52e51-6743-4011-9bf3-d8562e41352f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810fdff3-d99b-4e65-b72d-3314b9fb8d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29acc262-5eb7-4c03-aa81-589614f827e5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e43a4cf-03dc-45ec-91fa-9dbfb855b0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a0ac88-9840-4eea-a2ad-96f50d96304a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a57e12-cb67-40b5-9cc4-979222f1a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ab28c8-665c-412f-9703-96e0ad8b0698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6178472-9120-466c-ada6-8916845b09c7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d152a4-8f92-4ede-b4be-21fbb7e4caf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e95df59-33ed-4f29-9a72-b0a3380a8a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d3c516-5d0a-4b32-b498-bdeebf5a4b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dc74fe-67dd-479a-947c-7be27c3c8191"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8937e718-3a5b-4c4b-b076-611491b0d97b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ea61a3b-9dd3-413c-85f0-dcf1164e6987"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0124462-e7e0-47d8-a805-7220d7d3d203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3599ee7-4158-40a1-b986-0264c4184aa2"
                    }
                  }
                ]
              },
              {
                "id": "87233f4e-019c-489e-8155-748e0685f29c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6741428c-40c3-43a1-8b10-43765c9f11b9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ae5496-a9fe-4acb-bc95-1e6689b5bf94",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d0ee4de9-e018-4bff-8799-bf17bb747adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6080b1c8-09fd-4720-9420-11c2f7d41ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "374ce9be-0406-41c1-b6bd-7e8871d0bb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c49c4d-3143-4e0a-9ac8-d39d11faf7c2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5323f3a-713a-40ee-96ef-8feb5cbbcffd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a06ef252-e979-4b98-89f7-b5273304fe30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43637146-4e9d-4985-84fb-965339306a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3fe2282-77ab-4307-9961-1da77fe7964f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca60d4e3-6aa5-4369-a69d-2673154dc99b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84f54da6-298e-40e0-ae5d-6dd84e8bcdcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d0c8e48-4b68-4000-8905-4977ba350d32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0e6078d-9938-4ee9-85fa-c4b9fb102323"
                    }
                  }
                ]
              },
              {
                "id": "e74b577c-8787-4595-81a4-97896cbd401a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c0fe62f2-5052-479d-ac85-21b35cd0caff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77635e5-c7c8-4639-a047-1b94e184e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d5772db4-243f-4a01-8b03-b3ce8505fd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee541c6b-bb7c-445d-88b4-5ef29233c320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8be5f13-0afc-4f2c-979c-dfaa8a0f5e63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d0eebd87-4697-4493-a140-a3f1e24c700e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7538009a-4a48-4a49-b55f-3a345562a55d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "706630ca-c785-498c-9bae-0f5c9ddf45a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6bae9a5f-9162-4a7b-b1c3-c6d9711bf69d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a628c909-c658-4edf-9270-08e2db6ffaec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d71f809-5ccd-4392-b9dc-49e83b212f85"
                    }
                  }
                ]
              },
              {
                "id": "9a15831c-2e8a-4472-b66e-e0adb82c3255",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cdb4b96-e1f3-4001-8932-7e7555d61d0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d7a2032d-6b83-4af2-8d1f-e37cfaef11bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c1654aa-e449-4e03-9d70-a5a22a116b8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3c5b3de-22cd-47ce-ae75-346c268171cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6eb8cc4-de78-448e-9d2e-73c2f932e4b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6d3b160e-9ece-49b4-8141-6c7fcc9367d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "debd0891-92c8-4c21-aa1f-66a3df4e25fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61cd61a0-671c-47ce-a30c-dfbfe62f81c6"
            }
          }
        ]
      },
      {
        "id": "a37a9194-ad65-44f1-b410-f33e1eca256d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a9fdf14e-580c-40ab-bad8-7c6f9229981e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50810f17-87f2-463b-8d0d-8d2dbf5af79b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24a785ea-d55d-4bca-9e09-c2672f96e4c5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b12a98-d219-4eaf-b970-46b596fc80bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7c76c2ac-44ea-4123-8435-28d10b5343e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4fb1bc-408d-4f09-9385-1658bcb8556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c42fba26-0dd2-4bc6-a772-83ed214cde1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed314a5-6408-44d9-8e06-541d6ff7188f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb607a6f-1254-4560-80c5-85dea6bfdb8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ff4baef0-359f-4786-b27d-e50207498521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2621d9-e6c7-46fc-9a38-e54e73a2982d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5cf46fc-d812-4001-88ef-8b184a423643"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b03d348e-abc8-4a6c-a249-6a8377ecd511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "281c3609-c364-4c82-8349-6e53f841cc97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8921a32-3836-4451-a13f-76c4a5e4c409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0e0a0d8-b9fc-44cd-82b5-44333f72ffbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "558d6b24-6440-49d8-9ca8-c583232e4545",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "eeaeb17f-76f8-4056-ad73-eb1a36c305a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94e5b54d-c9a1-45d7-b4b5-165a72e5851c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f34dffa-634a-4ff8-8698-3c09cad630f3"
            }
          }
        ]
      },
      {
        "id": "19f370cd-8c23-4597-88c9-85d5874f1971",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0f82af44-494c-4a55-a922-5474e754fd5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6727fc75-3134-49bc-aca8-4e6211373471",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f84623c6-1f49-4c61-a9d1-6ef0413a319c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e94bf-3dda-4cd6-b631-1443b1806275",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c73a9312-a6e4-45b1-a43f-07b3df369fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2322dbd1-f8ac-4b5a-a222-0a69a9b97da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7de48840-8cf1-4ed2-8b13-9ee282aca93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b910af49-477d-43e7-9d96-8d3b7078411d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa5430a-5072-489e-8b0a-3586ee4db590",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0fafa6cc-b126-4e14-b0cb-d00cfab7a04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb58f4e4-be87-428b-9619-0b3f1098ceb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e91b8914-4f89-49f6-8295-a7b099212dbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc91f656-5f20-4f69-80ba-88325f467c2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d602678-91e0-4745-bec3-783527516889"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79ad78d8-5fe9-4e5a-b42b-470e208de419",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b26e63b-31ab-49b2-b724-6970841c5635"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0da13c0b-6fc0-4e96-83e3-b95855d06123",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfc59e6c-670f-42cf-95cb-6502b2e22fc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebfd635d-3846-42b6-b5a2-fdd41f941872",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44899785-1a77-4e95-bfed-9ce9afcb0aa2"
            }
          }
        ]
      },
      {
        "id": "c2f7e89f-552e-43aa-9422-1f1a381a9008",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "735b46b9-e75b-41a7-aaa0-6aab47cd79c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc3de137-6616-4614-9afd-d1a8fe33ea58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47c00b82-6706-4d28-b9b7-10c86f810357",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ffa53f-eae9-4df5-9695-8f849a440b0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "499b3034-e6b1-4f23-b412-b292da7aca2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071ed46f-ed5b-42cb-8229-e7fcf4cadf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4141528c-2110-4f18-a369-56d91f82f406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145f585a-34f9-4ab1-818e-244389df2012",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de00237-5163-43c5-9ba5-bf119577a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "57ae1b1e-ef03-49fd-b7f4-a3bfab217c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb7eb87-2b8e-4263-abd0-4eadadd9647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "766b22e6-34e9-4b39-a4e1-6f6ec3b68997"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d93ad77f-7e55-49b7-84c4-9d16026a4fb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40dcd029-9e47-4bf7-ad26-6f6e512b7e29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a15cee3-27a2-4d94-a9dc-a7e0d7c9b5b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d92b9d50-4d93-4fa2-83d0-6a8252ff1bc8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cdde733-0139-4233-86bc-cc3571d8e5e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b4a49d8-ddef-4c8a-9483-aae0aaad1a79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61c581a9-53c5-41c4-9d9a-f4189f2a4b9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2081374e-f61f-4106-bf67-dd47b0cf5332"
            }
          }
        ]
      },
      {
        "id": "9c002e61-cb53-47f3-8f65-6a25e56808dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfed0eef-f928-437c-9f20-95781c5f695f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fd75768-e346-475f-ad7f-af0fa78975c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "75092fe6-c87d-48e6-91e9-01bf472d4f73",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29f9788a-1a52-441e-8982-f9ed7f5e087c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fa05e7f-5226-4d53-ad4e-55b9d5276542",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 44.66923076923077,
      "responseMin": 11,
      "responseMax": 600,
      "responseSd": 68.98677559576602,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679704665722,
      "completed": 1679704688194
    },
    "executions": [
      {
        "id": "478f8d8f-88ee-43d3-97c7-5544c4a82c29",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cbaa25ff-e318-49a3-9062-425525322085",
          "httpRequestId": "b08c00a0-e9c6-4112-89ca-bec57a53ec9e"
        },
        "item": {
          "id": "478f8d8f-88ee-43d3-97c7-5544c4a82c29",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d550e42-1dc0-4bba-9c4e-49dbedd84314",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 0
        }
      },
      {
        "id": "51d61ef1-f0b0-4ab9-803e-464628b33986",
        "cursor": {
          "ref": "a19118e0-7104-408d-9510-832f2d34b6f1",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b9c7303-aa00-462c-8908-1055ac37ec92"
        },
        "item": {
          "id": "51d61ef1-f0b0-4ab9-803e-464628b33986",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2d0d89ac-11b6-4b7e-8384-aa4845fc4a30",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "d6cfbe1c-b3df-43b0-ac74-8108d3fce2c8",
        "cursor": {
          "ref": "660ef30a-689c-4bc5-9999-e63b6d7d3934",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "929dbddb-e64d-402a-983a-5943536c633a"
        },
        "item": {
          "id": "d6cfbe1c-b3df-43b0-ac74-8108d3fce2c8",
          "name": "did_json"
        },
        "response": {
          "id": "e63d02ee-c418-453f-a8ae-083b7318d9f8",
          "status": "OK",
          "code": 200,
          "responseTime": 204,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1ad3c5-c98d-4545-8f1c-85fc6b98670b",
        "cursor": {
          "ref": "df4a6d8f-b168-4ea0-b76c-8130d7f62950",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6f07020-52c6-472e-a937-9a19b81951e3"
        },
        "item": {
          "id": "0e1ad3c5-c98d-4545-8f1c-85fc6b98670b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2cb730e6-d4a9-443a-95ef-d83022350f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1ad3c5-c98d-4545-8f1c-85fc6b98670b",
        "cursor": {
          "ref": "df4a6d8f-b168-4ea0-b76c-8130d7f62950",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6f07020-52c6-472e-a937-9a19b81951e3"
        },
        "item": {
          "id": "0e1ad3c5-c98d-4545-8f1c-85fc6b98670b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2cb730e6-d4a9-443a-95ef-d83022350f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d07cd83-4372-4856-89c9-1a3b0435665e",
        "cursor": {
          "ref": "aa5b5e5d-4d2d-4208-8df7-6dd74dd9b43c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba37b8fb-2de2-4fc9-8706-a0e5be83765d"
        },
        "item": {
          "id": "3d07cd83-4372-4856-89c9-1a3b0435665e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0cd78f87-55e7-48ec-af91-1a181a22ebde",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfaf484-13ad-49b8-8073-3255cf81b8ef",
        "cursor": {
          "ref": "8204409f-d979-49af-80eb-9335c5ec74db",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "108d9e87-ca41-43f9-9d0b-f9d6dfb006cf"
        },
        "item": {
          "id": "5bfaf484-13ad-49b8-8073-3255cf81b8ef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9c0fec04-2b77-4527-a319-c709536d5889",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd67e6f4-eb68-427e-9e62-ccdd4d1df84b",
        "cursor": {
          "ref": "3cd8b00f-051e-4dec-a8fe-bfaf11564dc6",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2a584300-34a2-419e-b3d1-87b72f6e7bed"
        },
        "item": {
          "id": "fd67e6f4-eb68-427e-9e62-ccdd4d1df84b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "605984e2-ab36-4c53-9bbb-33a118249914",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0b6a1b-d2d2-4979-89aa-ba4fc6bddaac",
        "cursor": {
          "ref": "846b5ed2-b46b-4c7a-9842-51903e7e6d4c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2167a1b4-5f7f-4e81-9801-f017b535e100"
        },
        "item": {
          "id": "4e0b6a1b-d2d2-4979-89aa-ba4fc6bddaac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d412194a-f422-4636-9546-90eeb03d0993",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0b6a1b-d2d2-4979-89aa-ba4fc6bddaac",
        "cursor": {
          "ref": "846b5ed2-b46b-4c7a-9842-51903e7e6d4c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2167a1b4-5f7f-4e81-9801-f017b535e100"
        },
        "item": {
          "id": "4e0b6a1b-d2d2-4979-89aa-ba4fc6bddaac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d412194a-f422-4636-9546-90eeb03d0993",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0373f5-1aee-40d4-b863-257788ab7440",
        "cursor": {
          "ref": "1a8edb3c-290a-4689-8ba3-8883d30f1c19",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b6bc2232-069c-4d67-a77f-ecd2ef771e67"
        },
        "item": {
          "id": "ce0373f5-1aee-40d4-b863-257788ab7440",
          "name": "identifiers"
        },
        "response": {
          "id": "3532963d-d780-43e5-b3d1-bf73c72a9067",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb245f-4ba1-47c7-8845-fbdb1b0efc37",
        "cursor": {
          "ref": "ca9a0145-3101-4f60-a1d8-5db7261a590f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f91d267-c7ef-4dac-a2c6-6a59077254eb"
        },
        "item": {
          "id": "43fb245f-4ba1-47c7-8845-fbdb1b0efc37",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5d39c83-9cfd-451f-832e-09350618cc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb245f-4ba1-47c7-8845-fbdb1b0efc37",
        "cursor": {
          "ref": "ca9a0145-3101-4f60-a1d8-5db7261a590f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f91d267-c7ef-4dac-a2c6-6a59077254eb"
        },
        "item": {
          "id": "43fb245f-4ba1-47c7-8845-fbdb1b0efc37",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5d39c83-9cfd-451f-832e-09350618cc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc788080-1222-494d-bb76-c818c221e388",
        "cursor": {
          "ref": "14197022-2c87-4148-9a2c-48ba059883c6",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2ec04381-4a91-4cfd-9228-954554ea04e8"
        },
        "item": {
          "id": "cc788080-1222-494d-bb76-c818c221e388",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "495d3d86-8160-4d64-bc63-e742ffa1b017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec44c82b-3b61-4350-9271-ba6972dfe64e",
        "cursor": {
          "ref": "cd2ef42e-7476-4238-803e-efec5c4e9601",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cac43234-5d5f-446d-ad84-1b3be6c37224"
        },
        "item": {
          "id": "ec44c82b-3b61-4350-9271-ba6972dfe64e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b5b99cc2-3a8b-4274-a43e-ecd2b69c7f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fa9ac2-049b-492f-a14c-e589cf2ac164",
        "cursor": {
          "ref": "ca39cfa6-eec9-499e-82ec-5271c7dae9f4",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fb135ec3-a8a6-43eb-ba5d-7c5e12e6ce81"
        },
        "item": {
          "id": "c5fa9ac2-049b-492f-a14c-e589cf2ac164",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c64b31d-2908-4b5e-bbce-0a3ca296f76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e29843-89f7-440d-9683-b7f0683b80a7",
        "cursor": {
          "ref": "5d372c0b-e40f-466c-8b19-4d86e65f21c1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "817a3d44-d87e-4dca-a788-54247ccb1eca"
        },
        "item": {
          "id": "09e29843-89f7-440d-9683-b7f0683b80a7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ba0666c-1591-48ea-8eaf-cc6e914fce6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4bec0c-373d-4e82-91fe-24db88e02c5b",
        "cursor": {
          "ref": "41b8bce9-d27d-4f96-9b7a-3429cabfeff9",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c66a1675-1ab3-4e4c-9c13-33b530ea6c15"
        },
        "item": {
          "id": "0f4bec0c-373d-4e82-91fe-24db88e02c5b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7f7dbd88-8592-475e-a8ca-f60c73dc7592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bf7117-bf51-4216-9628-3275d5d6d889",
        "cursor": {
          "ref": "6d639806-3c53-437f-8c91-9d58466c9254",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c0f17862-42dd-4e5d-bf37-014142a429ae"
        },
        "item": {
          "id": "18bf7117-bf51-4216-9628-3275d5d6d889",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ed24631d-cca9-448b-8f33-9575f1d6d0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bb8f7e-d441-44c0-bc92-374b585e7a80",
        "cursor": {
          "ref": "8369bc69-16ee-4dc8-b936-c2233faff1dc",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bd773434-2980-4142-8fa1-bae62d47b4df"
        },
        "item": {
          "id": "14bb8f7e-d441-44c0-bc92-374b585e7a80",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb0a686e-0c46-4dfb-ab23-4661047139ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2996ea26-2571-4ffb-97a5-445dac1e5606",
        "cursor": {
          "ref": "1423af1d-708e-40a7-b665-77b0d8e308ac",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6ef2a0a9-e6f6-47bf-982f-743bb7e0047a"
        },
        "item": {
          "id": "2996ea26-2571-4ffb-97a5-445dac1e5606",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "03722882-a0e0-4c06-b76b-0a3c6891b480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ca5831-2637-45a8-a11e-b9a2aafa947e",
        "cursor": {
          "ref": "8d4216de-2369-4540-94e1-3fa0ecedbdaf",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "176b93ba-ae1d-45ce-a106-5a06b6640ff0"
        },
        "item": {
          "id": "72ca5831-2637-45a8-a11e-b9a2aafa947e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "68b8a479-aec2-4df6-8d80-95b6095f9040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53511741-f0dc-4511-80ae-ac5dbd69270a",
        "cursor": {
          "ref": "70da9170-3dd0-4184-8cec-d489b5022434",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "790f12fe-b0a0-446b-8446-83fcbffadec1"
        },
        "item": {
          "id": "53511741-f0dc-4511-80ae-ac5dbd69270a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "861577d8-d5c5-4696-9862-1920390f3b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07beab2d-839b-4b29-be02-de1a5b791d79",
        "cursor": {
          "ref": "5823284a-cc2a-404c-babd-6e867b4aeb6e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6b88b324-3974-4aa3-a066-7687e9f5ffe7"
        },
        "item": {
          "id": "07beab2d-839b-4b29-be02-de1a5b791d79",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2122647f-04a9-4dd8-a0a9-b69d50823597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b246fa79-eed1-4563-8b67-18205d747682",
        "cursor": {
          "ref": "5e923223-b999-44bd-9490-c3ada90c81ff",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3a486152-565d-4aa4-adfc-f55b469dc6a5"
        },
        "item": {
          "id": "b246fa79-eed1-4563-8b67-18205d747682",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6f3ae883-ea43-4c9a-b4b8-de8288a96977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa3349e-f9af-4c48-a7fc-9b2c8e731667",
        "cursor": {
          "ref": "92a85277-9e39-4d43-bbed-dc3b748d2d23",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0dbcde66-f1df-4653-8daa-739aa46a6c71"
        },
        "item": {
          "id": "7fa3349e-f9af-4c48-a7fc-9b2c8e731667",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "86c269d8-711c-4de7-89a4-a8c160630328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e26943-37f3-4aa5-810f-c67cef2609e7",
        "cursor": {
          "ref": "ef76a3de-91ce-4bdb-a10e-80d9abab7913",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "64e111cf-863e-42a0-aa8d-6cb96132679d"
        },
        "item": {
          "id": "d4e26943-37f3-4aa5-810f-c67cef2609e7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "14b79924-cdc9-4d93-bb63-2d4e690d4dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f194260a-be83-462d-b835-eb372295f9e6",
        "cursor": {
          "ref": "84ec22c4-6007-483d-b450-b44e14c85b18",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0f5a7c84-128c-467e-8319-38f3e5514c42"
        },
        "item": {
          "id": "f194260a-be83-462d-b835-eb372295f9e6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f569c9f-50ac-4d12-8296-5b85fdb6e9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f7a440-c3b4-4a5e-a29a-efc811bf8307",
        "cursor": {
          "ref": "716acd2d-4c97-433d-a475-30573adb407d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "722c8a66-4174-412f-a967-b8c895413a9c"
        },
        "item": {
          "id": "19f7a440-c3b4-4a5e-a29a-efc811bf8307",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "96db5aeb-4351-4d25-a701-49c9d5927759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63ecabc-03d8-43e5-835f-19e41c584787",
        "cursor": {
          "ref": "976d4e3b-bca9-475f-9608-cb0dce7bcb9a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cf0e6412-c96c-45ec-8d1c-b7f7667aa775"
        },
        "item": {
          "id": "a63ecabc-03d8-43e5-835f-19e41c584787",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e7be5a81-1f85-4e28-aa2a-c87131ddcff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4127b800-19e4-4afb-a943-f1ebdd80be4e",
        "cursor": {
          "ref": "1c4d29cc-e085-455d-a70e-c38ba79c25e2",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "941330bb-1a3d-417f-8a0c-7f688788c8fb"
        },
        "item": {
          "id": "4127b800-19e4-4afb-a943-f1ebdd80be4e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "96b8277a-b027-41ad-962f-48d935a5b23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af85d583-b868-4a99-ada7-bddae9e12bd0",
        "cursor": {
          "ref": "eb8abb77-da70-4f0d-abb6-ad6999679033",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a64e4690-c918-405e-b880-1ba8264d3910"
        },
        "item": {
          "id": "af85d583-b868-4a99-ada7-bddae9e12bd0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "24c6fc5e-7459-44ca-b4de-962fb79121f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee7cdcd-ca06-4da0-8515-ed91f01269cf",
        "cursor": {
          "ref": "26d5c71e-a759-4641-92e3-184a10b689a3",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "99ae9d04-de17-4525-b9d5-49c500533a90"
        },
        "item": {
          "id": "6ee7cdcd-ca06-4da0-8515-ed91f01269cf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "59ad8f9b-c0a6-45af-af02-8051b897f099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3ad27a-3544-4f79-953e-bce279a79ed0",
        "cursor": {
          "ref": "068377cd-4b5f-4fbc-bb35-d3b3b8c4e381",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4b1b9f3a-5e79-4cea-846d-34b5aae6602d"
        },
        "item": {
          "id": "1a3ad27a-3544-4f79-953e-bce279a79ed0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ad6e90de-dfaf-4ca2-92c1-57c74c43c780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee357bf-2078-432a-810a-998cdee6a44e",
        "cursor": {
          "ref": "263c8153-beff-47bd-a42a-6323c547dbc7",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6b70c46e-ef37-48b9-bc92-8a970f1b36e3"
        },
        "item": {
          "id": "3ee357bf-2078-432a-810a-998cdee6a44e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2c975efa-af77-4877-9029-858643643200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a4bed8-26e5-4791-b9a5-bffab54ce56a",
        "cursor": {
          "ref": "3a6a8e9e-0bb2-497f-9dcd-3f6da792bfdb",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cdcf5e18-fa7b-42cd-81d6-eeeac3a9e68c"
        },
        "item": {
          "id": "d0a4bed8-26e5-4791-b9a5-bffab54ce56a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5111d063-8030-4e16-b0fb-27ff64636780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32386648-15db-44be-8a9d-81a40f4d3414",
        "cursor": {
          "ref": "fabbfc78-1a4d-49ca-bc8f-26c1cbdf6b7b",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d1c5338f-457c-4171-a293-73026183b8e4"
        },
        "item": {
          "id": "32386648-15db-44be-8a9d-81a40f4d3414",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1c383ca5-b231-46be-b6ee-d9b09a0a7627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778cb48f-f4ad-4fbe-b753-ad848c1f9e44",
        "cursor": {
          "ref": "034dec98-85d8-469f-b3d9-5672b8a2a036",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b1a2065-2074-47a9-8a2e-4426dc99b90d"
        },
        "item": {
          "id": "778cb48f-f4ad-4fbe-b753-ad848c1f9e44",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1651196d-8e1b-40c9-98ac-f9ee1d34a543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27da1e9-277d-4d08-8fc0-7cb40c4e94c3",
        "cursor": {
          "ref": "bfebff6a-1a12-49c5-af76-715e1920dc7a",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dd7b5fe0-49ed-42b4-9d8a-6f5655c11f77"
        },
        "item": {
          "id": "e27da1e9-277d-4d08-8fc0-7cb40c4e94c3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3429967c-75aa-440a-bdb4-21d0c5fee5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9241642b-c2d2-45b4-bfc7-14bf495b4a64",
        "cursor": {
          "ref": "92599983-31ce-4617-a691-13ff5ffa0866",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5d0f789f-5831-480d-8689-09a8c3fafd82"
        },
        "item": {
          "id": "9241642b-c2d2-45b4-bfc7-14bf495b4a64",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "09567959-8d52-4f18-947d-4743b4b5802a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663f7a6b-25c5-4be5-817f-796e3d9d3a5f",
        "cursor": {
          "ref": "a6a85f28-5ade-4347-9974-a3227f3914a2",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d8071812-0e93-49d4-a8a9-6f115aee56b0"
        },
        "item": {
          "id": "663f7a6b-25c5-4be5-817f-796e3d9d3a5f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3a214c25-ac2d-4d3a-b10b-f95ac6a43abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c214fc2-d5a2-460c-b0df-ed6e0b664e17",
        "cursor": {
          "ref": "aedfb740-de66-4cd5-8548-29bba2db7aed",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "47f79130-c003-4952-b2d0-62a0255d87bd"
        },
        "item": {
          "id": "2c214fc2-d5a2-460c-b0df-ed6e0b664e17",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b02df8b2-6dac-405a-b6c1-c9d350041252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a409545-6f82-441e-a87f-baeddf2d0a7a",
        "cursor": {
          "ref": "bb0e6288-e985-4087-bf3e-260827b0d468",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "08351cc2-3a66-485b-8ddf-b094cf179775"
        },
        "item": {
          "id": "1a409545-6f82-441e-a87f-baeddf2d0a7a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "55613aab-f925-4597-ac24-b289214f31ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171823f3-6833-4904-b552-25e31516f359",
        "cursor": {
          "ref": "cf97eb99-3ad5-4ddd-a20e-7cf6ef071d96",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bb82f8b8-c1dc-4914-9c7e-9bda330b9a59"
        },
        "item": {
          "id": "171823f3-6833-4904-b552-25e31516f359",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d55ad5f1-43d0-4e15-bc49-373b8cc807ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c5c6b7-362a-4a6f-854b-633cff600525",
        "cursor": {
          "ref": "30ca8b07-46a5-477c-9715-f4d716ab7f67",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b4db6af7-4751-47ea-b454-77d168f643c3"
        },
        "item": {
          "id": "f3c5c6b7-362a-4a6f-854b-633cff600525",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9efa974d-dde3-4a5a-b391-161f6b186af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9327f5e-517c-4059-a342-4a4f6998d9db",
        "cursor": {
          "ref": "67cba3b9-0afd-464a-82d8-076bfb5584bd",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ccaa0bf8-62e3-4925-b88b-3eaf21d3f189"
        },
        "item": {
          "id": "f9327f5e-517c-4059-a342-4a4f6998d9db",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "32e5971c-893d-460e-989b-118494931ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca45332-4bbd-4877-b7f6-99253aa675a2",
        "cursor": {
          "ref": "d9df3e97-40de-45c8-84ff-f167f68b9c48",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cea0c998-8725-4c73-9073-9f1eeb90c52f"
        },
        "item": {
          "id": "3ca45332-4bbd-4877-b7f6-99253aa675a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ef68c6f6-bf35-4653-a977-161407427a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa68981a-1445-40fd-83ea-fed335e59f4b",
        "cursor": {
          "ref": "c2f25085-48b5-4c8f-b766-1b4f626bd5e7",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1564ebc6-d247-4dd0-860b-b13689ee4b0e"
        },
        "item": {
          "id": "fa68981a-1445-40fd-83ea-fed335e59f4b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4ea77e1e-9d5b-4ecf-9627-fb2aac928d8d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667372bd-3540-46bd-842a-d629dc6cf4c8",
        "cursor": {
          "ref": "4986731b-b21f-42a4-87d6-2316de30226a",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "03cba9f1-3124-4d39-9aad-09822ddcc984"
        },
        "item": {
          "id": "667372bd-3540-46bd-842a-d629dc6cf4c8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4ea52d90-30b8-46e3-9474-6d6ce4742ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd282621-74cb-4f6d-8578-39bb9197f9eb",
        "cursor": {
          "ref": "00f0924d-17dc-49d7-aac9-4f119e91103a",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1fc0908b-da58-4f8e-9956-f214e69bd594"
        },
        "item": {
          "id": "dd282621-74cb-4f6d-8578-39bb9197f9eb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "61e98d6e-f174-449a-81ca-0717e1db9606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7cd3be-3329-4ba2-8cd8-8f2f72422eca",
        "cursor": {
          "ref": "433c5aba-03ba-4f93-8cb1-f8e6d8b24d12",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "de1247fb-f6fa-4cce-8cc6-b98b8695ea5d"
        },
        "item": {
          "id": "5a7cd3be-3329-4ba2-8cd8-8f2f72422eca",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d13b8972-c27c-4e8c-b724-a8a81ec620c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6069ef1a-064d-4499-b396-441fab5b9876",
        "cursor": {
          "ref": "9ffd1843-60d6-4244-8f3b-b25001a98f39",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "71301a19-00c3-4ef8-9891-ac7a8f9bd57a"
        },
        "item": {
          "id": "6069ef1a-064d-4499-b396-441fab5b9876",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "83130176-21ab-4e60-96fe-bd7643f4121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece1e75d-bac8-4828-844c-90097a193f0c",
        "cursor": {
          "ref": "81f480cc-7dfb-464e-b1d5-213d6d370dfb",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b6b46fbe-7bdc-4260-826b-e5a554f33605"
        },
        "item": {
          "id": "ece1e75d-bac8-4828-844c-90097a193f0c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "22541593-0786-429f-819a-4dea39214d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a051da-8830-43c3-b004-9647844eb572",
        "cursor": {
          "ref": "b19593e2-793a-47ff-96a4-17959edcd38d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "aa600c38-a60e-449c-ae8f-64747205a0d9"
        },
        "item": {
          "id": "50a051da-8830-43c3-b004-9647844eb572",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f23ac3f0-3b62-4e42-b0d1-2256a930e4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f100ac9-0c6e-4bfb-9901-b63a63c61d9c",
        "cursor": {
          "ref": "69a6f33d-b8da-4c4c-9156-ecbfd2894279",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "541609c7-1f39-4982-800b-6e3bed88f599"
        },
        "item": {
          "id": "2f100ac9-0c6e-4bfb-9901-b63a63c61d9c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6a8a643c-87f0-4227-8166-db72dab2fd89",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c610d3-09c9-41d6-ae42-77d5dbf69c8d",
        "cursor": {
          "ref": "3fb4d54d-c048-4193-98f1-b3edabd194a2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52804190-e762-41fa-b8f9-cf65f83017c3"
        },
        "item": {
          "id": "d7c610d3-09c9-41d6-ae42-77d5dbf69c8d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3ef19191-00a1-46b4-a52a-29c14049f790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a3b8b3-9296-4f1a-800c-20a7511aedf0",
        "cursor": {
          "ref": "991e16a3-4797-475a-8723-61b6bf70e91f",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0b8db74d-4630-4aca-8163-9d837cf9375f"
        },
        "item": {
          "id": "d8a3b8b3-9296-4f1a-800c-20a7511aedf0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1d368c84-277c-438e-8e07-1f1e9304babc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a3a42c-4558-4d55-b020-b969ec829ee6",
        "cursor": {
          "ref": "d199dc81-816e-4014-ade7-3f6c00306598",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a3f3c304-5afb-495b-863e-a026ee64562d"
        },
        "item": {
          "id": "74a3a42c-4558-4d55-b020-b969ec829ee6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5f6ca697-eeca-41b9-8b7d-25c60fda7ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035371fe-7978-4e35-ba5c-eeebe4093a98",
        "cursor": {
          "ref": "1ee75cbe-1e62-4f19-85aa-de97d0379408",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b6c9e90e-fd3d-44a4-aa1f-811cb3dd44e5"
        },
        "item": {
          "id": "035371fe-7978-4e35-ba5c-eeebe4093a98",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "641d572b-9e03-4e7e-91ad-d0d8d03a9022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd095ce-0ca2-47ca-a8ad-0feae196c0c2",
        "cursor": {
          "ref": "210f6778-8d18-44b1-bce4-5685656395a8",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "32caaedb-79f1-4b2b-8bcc-63cc48bbca49"
        },
        "item": {
          "id": "3dd095ce-0ca2-47ca-a8ad-0feae196c0c2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c36ff811-d299-4747-b115-5529b5d7f575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9b2d95-4f32-4f96-ae61-86e54bd15c85",
        "cursor": {
          "ref": "f58ee699-458c-41a0-b3e7-b510d0ce2f3c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dd56c146-7652-489e-86b6-4cc4ac5f43aa"
        },
        "item": {
          "id": "3c9b2d95-4f32-4f96-ae61-86e54bd15c85",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2011418e-2eee-4b86-83e4-da1a6124cace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdda5e9-6440-49df-ad55-e1366fa38ea7",
        "cursor": {
          "ref": "768042f9-93f9-4c4e-a088-dfb5c30c41a5",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "924d4d22-a060-4a9f-be7d-a7047a2528ed"
        },
        "item": {
          "id": "9bdda5e9-6440-49df-ad55-e1366fa38ea7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c745dfe9-7fd4-46cc-94a8-83cbe2bfe1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fc3e31-1e6f-4173-a276-30850b6c5c11",
        "cursor": {
          "ref": "e8a04543-de76-4c9a-9d7b-c98b28983763",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3d48f48d-bf60-4ed7-b271-64a8763b2bf4"
        },
        "item": {
          "id": "63fc3e31-1e6f-4173-a276-30850b6c5c11",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "397b5787-5217-4d7f-a77a-9d497a19250c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7981e4-ae14-49d5-b5d4-e88b89995e19",
        "cursor": {
          "ref": "b1608ce3-9b58-4e4b-aa4f-a6fdd011168c",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f673b4cb-493b-4c4c-8f83-21850b7593c1"
        },
        "item": {
          "id": "5c7981e4-ae14-49d5-b5d4-e88b89995e19",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8c5b2ddf-f490-452a-ba08-a178159839f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7150814b-3c0e-4b0f-b9d2-aff5485aabb2",
        "cursor": {
          "ref": "7b6dd368-ae57-4f0e-8e8f-f846c41570ad",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5427dbd4-2873-43f0-b571-071628355452"
        },
        "item": {
          "id": "7150814b-3c0e-4b0f-b9d2-aff5485aabb2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "debeda15-1a6b-4684-bbad-629bdcfb2b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee0bc59-0851-4038-9d92-d7674d083138",
        "cursor": {
          "ref": "086ff45a-b8b1-4f8e-845a-ae3ae88137e7",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4b6f7cb8-9b51-4e3c-b652-b798e87b659d"
        },
        "item": {
          "id": "eee0bc59-0851-4038-9d92-d7674d083138",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "67a1cd8a-f1a2-48f7-a176-e1bc503ee88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbab8d2d-c2ad-4ac0-b0b7-2eaf9e4089b4",
        "cursor": {
          "ref": "c2c8db11-a433-4a0c-b28b-6f1fc72c345f",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "87f77833-b95c-4414-b32b-bc8cabbd8b73"
        },
        "item": {
          "id": "dbab8d2d-c2ad-4ac0-b0b7-2eaf9e4089b4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b716c233-4cbf-4516-a5be-f79ca89a85dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4f7d76-605e-436a-9a06-9401c3da341d",
        "cursor": {
          "ref": "fe7939cf-e8c4-4168-83aa-f1a53b831fa8",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d48ffc65-710a-478b-ac38-62b1117e92c8"
        },
        "item": {
          "id": "4b4f7d76-605e-436a-9a06-9401c3da341d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e3a3ba49-92dc-4c43-ab20-2cd40083c5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c677811-3073-4819-bbb3-90d4a62bd4bc",
        "cursor": {
          "ref": "1077d5cd-4912-45ec-af8e-f5f6855512da",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c1d21ab3-8707-4e29-bf3b-ea2e056792f6"
        },
        "item": {
          "id": "3c677811-3073-4819-bbb3-90d4a62bd4bc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ac4c973c-ac09-413a-8d8d-fed637ebdcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ea45e5-fe95-4f1c-b63a-c440593788f7",
        "cursor": {
          "ref": "d8d9d886-5a5e-46af-a379-8b5926f23ba4",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "40385f76-3272-47bc-99e1-7458cb5e69ff"
        },
        "item": {
          "id": "96ea45e5-fe95-4f1c-b63a-c440593788f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "46f9fde1-4c08-4fbf-abed-b67366e396a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46832515-513a-4d16-b4a5-a9e48ea75f24",
        "cursor": {
          "ref": "45794941-937d-4462-ae6f-00c29f6fb63b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6261706d-3e02-4ef5-b183-8dcb4a4d85fa"
        },
        "item": {
          "id": "46832515-513a-4d16-b4a5-a9e48ea75f24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b3e0ef9a-4efd-4e20-9ce4-0086a2f33e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a01bb72-07f9-44e3-bc10-360c90a1ee2d",
        "cursor": {
          "ref": "d0be028d-86bd-484f-94d5-286c3282b21b",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "764d76a2-7e0f-4af6-95f3-3ce150fdaef3"
        },
        "item": {
          "id": "3a01bb72-07f9-44e3-bc10-360c90a1ee2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "77a0a75e-f280-4083-991c-f47b8232a7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca370d8-b8e2-40d1-94cc-47e6953df837",
        "cursor": {
          "ref": "564e93a1-9eba-47a3-b5bb-623e2ae876ad",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "abcb673c-8bb7-470b-b1f2-9b728e4b3e02"
        },
        "item": {
          "id": "bca370d8-b8e2-40d1-94cc-47e6953df837",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "17df58a6-4dcf-48fe-add8-3b04cf36489f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a39930-2b0d-4dbd-b26e-0dc59c42aecc",
        "cursor": {
          "ref": "c9afa73a-62d1-48ad-a61c-e969d6ec9298",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "27584b3d-8f62-40ea-b52e-17c87d3ebc2d"
        },
        "item": {
          "id": "24a39930-2b0d-4dbd-b26e-0dc59c42aecc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6138684f-aa56-434e-b069-35b51c9ee081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858302cc-6e28-4ace-a039-8c7e95c24e49",
        "cursor": {
          "ref": "5dc80a20-c21a-4e41-9e76-e80d279c792a",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16e343b5-f92c-4554-8102-1bebc8fc2ef9"
        },
        "item": {
          "id": "858302cc-6e28-4ace-a039-8c7e95c24e49",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "70868371-e7b8-4061-aab3-bd99a689ed9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500f76a0-5f17-47b5-a04e-3f4ba4d259f9",
        "cursor": {
          "ref": "a1781066-8971-4a75-a6b2-f0c51151c742",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1fcf1797-2ab6-4101-8998-98942542dc99"
        },
        "item": {
          "id": "500f76a0-5f17-47b5-a04e-3f4ba4d259f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "eadf02c7-f3ff-41c1-8ebd-472a81ae85d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d243b87-71d9-4aae-9599-c563cee67ed3",
        "cursor": {
          "ref": "6824d868-d48f-43a0-af3b-504b49efff45",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "34a96a48-fe78-4732-8c03-2884b2cd8955"
        },
        "item": {
          "id": "1d243b87-71d9-4aae-9599-c563cee67ed3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "25f8945c-d509-4ef9-90b9-a6226db719d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c988cfec-1d20-4538-8f8b-216a4ce63fc9",
        "cursor": {
          "ref": "8134f149-f042-4404-a930-45f6660dcd26",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7bdaaf40-5e68-4629-b04c-ec4402783c25"
        },
        "item": {
          "id": "c988cfec-1d20-4538-8f8b-216a4ce63fc9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c1d4dd5e-7a12-4c7b-9f50-b90d2e40a499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240dd8a5-cdad-40dc-9308-d5054cf4f1d6",
        "cursor": {
          "ref": "d4065b3a-0a05-417e-84f4-0ef62e842867",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e6cf8ec1-0bbc-4fef-a2a4-50f29aa8bf6b"
        },
        "item": {
          "id": "240dd8a5-cdad-40dc-9308-d5054cf4f1d6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a4f2ae5c-358c-4e96-84ef-360b10e0bff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d637f14-09e2-4337-af90-7f5938d3b765",
        "cursor": {
          "ref": "0efac473-2afe-43f3-aac6-5e2b9d98688c",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ce90997f-2cd0-494e-96cc-5b74d2ccae01"
        },
        "item": {
          "id": "0d637f14-09e2-4337-af90-7f5938d3b765",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d346cbf0-b799-4464-b47d-b03304a391c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50428a78-365b-45ff-92df-211f37529029",
        "cursor": {
          "ref": "f1eb501a-7bc3-4437-812f-42f87e342cde",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cb533991-4b6b-48ff-89e9-3edd847895ce"
        },
        "item": {
          "id": "50428a78-365b-45ff-92df-211f37529029",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "04da8849-a711-4237-8108-e566db84b04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea04add7-48d2-4322-8f66-7ba19f6c18be",
        "cursor": {
          "ref": "b3dd06c8-cbfa-48cd-9287-1925869a4c18",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ebc1b382-c583-41f9-9d0f-eb99484c8e6e"
        },
        "item": {
          "id": "ea04add7-48d2-4322-8f66-7ba19f6c18be",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0d9eb2bd-0c02-46e8-bd93-9aa6455786f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7336547c-9f5c-4cb4-bd45-d67c0461fe40",
        "cursor": {
          "ref": "14764b61-4a26-4996-9254-37c5512fd8f3",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3c66d31e-1855-43d3-ae6e-525756b1b8a6"
        },
        "item": {
          "id": "7336547c-9f5c-4cb4-bd45-d67c0461fe40",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "04020188-0644-4700-a7d9-02e6bba56c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c55190-ab34-4bba-b194-bf7af12bd276",
        "cursor": {
          "ref": "2fd78867-60cc-40ea-a83e-abf2acd067b9",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "18416887-83bc-4938-b0af-d3a4777cec2f"
        },
        "item": {
          "id": "80c55190-ab34-4bba-b194-bf7af12bd276",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eb618653-b8c2-42a2-b489-d025f1095cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd862a-d431-48b0-8ffe-31c8422d2b83",
        "cursor": {
          "ref": "fd567cff-2199-4182-82b3-f806c0153f8d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "af59b6a4-f9c5-4633-825e-9448e30dd2a2"
        },
        "item": {
          "id": "91dd862a-d431-48b0-8ffe-31c8422d2b83",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "18e980b5-c385-43aa-a72e-cc9eb985f12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815d1b73-6701-4535-a5a3-878ba32ff97a",
        "cursor": {
          "ref": "9a4d1a01-9e11-4d77-96a4-a61b3246e08c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9dc3da88-001d-45e3-a140-675899b02a97"
        },
        "item": {
          "id": "815d1b73-6701-4535-a5a3-878ba32ff97a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "50dcfb34-6c95-4619-b21b-86d825b9a393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee275e0-d70d-4739-8e7f-79b72e59f9c4",
        "cursor": {
          "ref": "8d2494f0-4ce8-4437-99a8-38a4910e3404",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3ec0fe9d-87a4-43cf-8040-4be14ff62925"
        },
        "item": {
          "id": "cee275e0-d70d-4739-8e7f-79b72e59f9c4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5fd4d77f-4e1e-42cb-976e-2324d67e0b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d89978b-9cd7-44ce-ae21-c4d1f523780e",
        "cursor": {
          "ref": "940a22dd-4863-4954-8492-2aaf466b1096",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f354540b-3272-48dc-ab52-fcbcbd78c01c"
        },
        "item": {
          "id": "7d89978b-9cd7-44ce-ae21-c4d1f523780e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "04f3c296-e32b-40a7-8bc8-fda41d2343f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220c7368-1041-4d19-96a4-0642349d3b6a",
        "cursor": {
          "ref": "2c2310cc-7baf-4542-9ea8-93143c93520d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ed6e5daf-08bd-4564-9198-2e0e5afa6f40"
        },
        "item": {
          "id": "220c7368-1041-4d19-96a4-0642349d3b6a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4dd23ad0-c8f8-42ae-8d95-5d2e2e00eec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b94eba7-f0d6-48e3-b551-3198f993943b",
        "cursor": {
          "ref": "24e689a6-0873-4dec-b9a3-ef060812d1cb",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7ae94235-ff2a-4483-9e24-7f59eaa67f30"
        },
        "item": {
          "id": "2b94eba7-f0d6-48e3-b551-3198f993943b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8f6c0617-5f4f-4bbd-96da-53966edbd9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1971e46-b458-40b6-b464-54b29e6e0900",
        "cursor": {
          "ref": "a983be4d-fa9f-4978-b83d-3800d32590c4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "405c83b2-4935-4ad6-b808-77c03ff057ee"
        },
        "item": {
          "id": "d1971e46-b458-40b6-b464-54b29e6e0900",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd9d34c0-6a0f-4b36-8218-01e9fdf35de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9c1428-74bb-46f5-86d0-7fea4a39fea2",
        "cursor": {
          "ref": "7d17c2bc-6127-4dea-a78d-a238ebace218",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "beb5b9d0-d30e-4332-b474-c884eee8b227"
        },
        "item": {
          "id": "cd9c1428-74bb-46f5-86d0-7fea4a39fea2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "23859ebe-3c4c-4381-aaa4-fb2a00b43e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c2c8c4-61fa-4572-8522-35eb0300ef5f",
        "cursor": {
          "ref": "4de2d6cf-2f94-4238-b980-d886f362bcb2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "721361bc-edad-4ed8-b0e1-f404da033532"
        },
        "item": {
          "id": "e1c2c8c4-61fa-4572-8522-35eb0300ef5f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1cb8bb5f-742d-4d64-9f76-af49b9a2df69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341366e4-6c3a-45bc-8db4-98f19cc0da2e",
        "cursor": {
          "ref": "0dc31203-3369-4835-bcfb-bbda0a166a1c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bdc14856-7c3c-47e3-a1f8-e6b6c13c5f75"
        },
        "item": {
          "id": "341366e4-6c3a-45bc-8db4-98f19cc0da2e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bb8cd6a8-44dc-49d9-b686-9fd173b8757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ac011f-3b3d-4a23-9a7c-b5bff0bb39ef",
        "cursor": {
          "ref": "dcdba792-d72e-43d6-a863-984689241e6c",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a02a11a2-c2b9-4cdd-88b7-634e97e34c30"
        },
        "item": {
          "id": "c7ac011f-3b3d-4a23-9a7c-b5bff0bb39ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "249cd49e-5094-49f0-b644-57c5a0ad12e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1ca364-7d66-4ace-92c8-43ab20e38244",
        "cursor": {
          "ref": "d60a8b52-bc90-426a-b1b4-e56a74998e61",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1dfe9db9-2e68-440e-af77-35abdb55ebbe"
        },
        "item": {
          "id": "ff1ca364-7d66-4ace-92c8-43ab20e38244",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bfd358c0-c224-46d7-880f-b192a8cf660a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2a5983-925c-4fb0-b8ae-d259df75ab78",
        "cursor": {
          "ref": "6876e24b-a530-4440-8085-5b937797799f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c73ac57-2e4a-4bee-ba34-913ce834656b"
        },
        "item": {
          "id": "fb2a5983-925c-4fb0-b8ae-d259df75ab78",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "674d4563-b734-477a-8062-cb86babb594f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f063dc-b6e1-4b88-a760-85a14cd487dd",
        "cursor": {
          "ref": "36e79ab8-7a1e-44bb-b548-20ae381d06ca",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9c60d43f-715f-4f75-849a-811e1564b73c"
        },
        "item": {
          "id": "c8f063dc-b6e1-4b88-a760-85a14cd487dd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ba1bae57-a01d-4b10-92bb-e23760afdaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba9572-700d-4672-b633-7a957d92e0f1",
        "cursor": {
          "ref": "4ac5296f-9f58-4b0c-ab90-f833e422eb66",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b77c6389-17e1-4a95-b290-5dc8a2dd2dfe"
        },
        "item": {
          "id": "19ba9572-700d-4672-b633-7a957d92e0f1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eaa2921b-f39a-4fb5-8a92-f77affa84ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52732203-79ca-42c0-9e71-329db9df90ed",
        "cursor": {
          "ref": "7d2e2d53-b166-4956-bb71-3a11425a4b25",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ac856126-770b-48c9-8eed-8cc9ad496d02"
        },
        "item": {
          "id": "52732203-79ca-42c0-9e71-329db9df90ed",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4fda2782-1a03-4b76-aba0-91f68ee1afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4650b9b3-98e8-4a7f-80b1-4334fcf28525",
        "cursor": {
          "ref": "994139a9-3c9f-4b9d-84c5-a33f53a5ec0c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9da128af-5768-4bf6-806c-e96480d6b920"
        },
        "item": {
          "id": "4650b9b3-98e8-4a7f-80b1-4334fcf28525",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "68bde5bd-36a6-470e-94f0-253b803017d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5978bc-ed60-4a4b-998e-69863baadc69",
        "cursor": {
          "ref": "88337492-3a1a-409a-9f91-5eef883c6d3b",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "99c117cf-2755-4cfe-9a88-6cdec3cc7b2a"
        },
        "item": {
          "id": "cd5978bc-ed60-4a4b-998e-69863baadc69",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e6946ae8-8139-4846-b03c-e1686c94525f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ed8764-f521-4398-9b7b-66c6b1fe5ec2",
        "cursor": {
          "ref": "81db9a21-5658-44f6-b6e1-5bef4257e145",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c614583-3a89-4883-a4cc-ade8c89c59c4"
        },
        "item": {
          "id": "58ed8764-f521-4398-9b7b-66c6b1fe5ec2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5415c9ae-ea53-47b0-a116-3d0443dc5637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7799599a-54f9-4c97-9182-49f41d18a56c",
        "cursor": {
          "ref": "8340513c-c489-4b53-aa84-9c5fef1154c6",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2142569d-0307-4bc0-b9ea-36e6bcce7bb8"
        },
        "item": {
          "id": "7799599a-54f9-4c97-9182-49f41d18a56c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "52559701-14f7-40ef-9955-f8eafe7edaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5489b028-6337-4e6f-a6c9-e05c4f34f145",
        "cursor": {
          "ref": "202b0745-ae80-4c78-9661-3da0036d8e71",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "854aef60-0443-4513-9022-47ce42f70994"
        },
        "item": {
          "id": "5489b028-6337-4e6f-a6c9-e05c4f34f145",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b05563c2-811b-4d0f-b29a-348eb917d296",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47c2c50-77da-4c93-99eb-9e1713653027",
        "cursor": {
          "ref": "bf1725b8-0d3d-4306-9ddc-85781550a8b5",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0e79ae13-6c81-489a-8765-68f104b580a3"
        },
        "item": {
          "id": "b47c2c50-77da-4c93-99eb-9e1713653027",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "381902a4-40e0-47ee-9350-5326d6cb1b84",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 131,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10706c01-efbf-4c35-82ab-7e611810ee93",
        "cursor": {
          "ref": "b2b44282-c7d2-4060-9e7a-cf93c5d98b08",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "607833ce-b369-483e-9bf6-44a55adae09f"
        },
        "item": {
          "id": "10706c01-efbf-4c35-82ab-7e611810ee93",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cdfcba3b-b294-462c-a36a-0d3aade878ec",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce02243-b7c8-4751-b663-b0116783a273",
        "cursor": {
          "ref": "f17010bd-4ff7-4a81-ab61-5ca328d32744",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a630226b-524c-4ae6-b9cb-1f51e33393c4"
        },
        "item": {
          "id": "dce02243-b7c8-4751-b663-b0116783a273",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a438d3f4-5c33-444b-80fb-bbd9c1ad03ee",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf931fe4-dc19-480c-87f0-13ef8c77e51c",
        "cursor": {
          "ref": "d810f7ab-c5b0-492a-a159-4721577a7a1d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9678955c-040a-4ce5-9074-30d759d1ceca"
        },
        "item": {
          "id": "cf931fe4-dc19-480c-87f0-13ef8c77e51c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7538378f-a65a-4520-9566-918d8b89f5a4",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c60b6b-21aa-4c6f-9c06-d3a3472542ef",
        "cursor": {
          "ref": "6a3607e9-4dcd-41a8-979c-3d421ad6e404",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2a058309-0927-4e86-ab67-69253bcc29b1"
        },
        "item": {
          "id": "f5c60b6b-21aa-4c6f-9c06-d3a3472542ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c2a7971f-7aa9-4511-bbf0-15f0eea7b743",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8828410b-58c9-4cc5-af17-b75e48556983",
        "cursor": {
          "ref": "bc0288ae-79cb-42eb-8548-04029f9e73a5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a053878d-c592-43fe-a4e5-7446857eb3c2"
        },
        "item": {
          "id": "8828410b-58c9-4cc5-af17-b75e48556983",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9c94f9c8-cd3c-4d2c-b3b4-9bdde450f137",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbff576-fd4d-4f34-a080-037dda60bdbd",
        "cursor": {
          "ref": "2341d88f-773f-42c0-9835-5b0b4eb7daf9",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1c1cee32-5279-4ed4-ac2e-27515bb86df4"
        },
        "item": {
          "id": "bfbff576-fd4d-4f34-a080-037dda60bdbd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fd0c72c4-7c06-4520-b405-21054a82494d",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189c3606-cbc8-40d5-b8d1-ca76ca304d66",
        "cursor": {
          "ref": "267d3d84-e7ff-4966-a9ff-7c402a0ec5d5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e6a38cb1-924f-4a79-b0d6-34b4b9a49f20"
        },
        "item": {
          "id": "189c3606-cbc8-40d5-b8d1-ca76ca304d66",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1a4a51f-a7b5-4276-9820-ff3ee0e2d862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189c3606-cbc8-40d5-b8d1-ca76ca304d66",
        "cursor": {
          "ref": "267d3d84-e7ff-4966-a9ff-7c402a0ec5d5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e6a38cb1-924f-4a79-b0d6-34b4b9a49f20"
        },
        "item": {
          "id": "189c3606-cbc8-40d5-b8d1-ca76ca304d66",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1a4a51f-a7b5-4276-9820-ff3ee0e2d862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f602d2-614f-4033-83df-a391839f2ccd",
        "cursor": {
          "ref": "a05c042c-63c0-4d53-8f51-a6bd55c4160f",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aa5f4475-83cc-46f8-8705-e1bded18fd32"
        },
        "item": {
          "id": "61f602d2-614f-4033-83df-a391839f2ccd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ebfdd97-4c7b-429a-9b70-c5daaadafcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06f7bb0-2297-424b-bb88-0acf78e275d9",
        "cursor": {
          "ref": "8f1e0211-b4ed-4e93-a374-663c38df249c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "54282d03-81fb-4e10-af12-f959ec106fca"
        },
        "item": {
          "id": "c06f7bb0-2297-424b-bb88-0acf78e275d9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc688f1e-82cc-4cd9-925a-a8aba83aa888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164d1d07-9aac-411c-8826-7111ec1d1faf",
        "cursor": {
          "ref": "6893fc6b-6da0-4aa5-8e63-8d38f8b1bf06",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6fc3d476-f0ab-4130-9d7d-c24778dfc027"
        },
        "item": {
          "id": "164d1d07-9aac-411c-8826-7111ec1d1faf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6fe059be-396e-4d50-900e-17ae5dd97c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7fb6fc-ddd1-4c3f-8dc5-1827cfa16a6c",
        "cursor": {
          "ref": "42baf82c-2cbf-4838-a343-f6b74663098f",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c3c23ec8-5465-4362-925f-be8df9299593"
        },
        "item": {
          "id": "db7fb6fc-ddd1-4c3f-8dc5-1827cfa16a6c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f8272908-e6b2-40dd-ab34-9e5831cb4e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c275e0b6-0bdd-4e75-97d7-483ff2f3bcc8",
        "cursor": {
          "ref": "9737bacf-829f-430e-98ef-eddf236e11f6",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ff20ea4a-0209-46cd-814d-497901c0f2e2"
        },
        "item": {
          "id": "c275e0b6-0bdd-4e75-97d7-483ff2f3bcc8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "658fd178-73ff-4429-a200-21c3fef1e5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7af02b-665f-41f0-9486-2f3269c47ede",
        "cursor": {
          "ref": "d93c6e4c-202a-4923-a64b-533808c682c1",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "14c01d01-4e46-437b-9245-03a915c33b79"
        },
        "item": {
          "id": "aa7af02b-665f-41f0-9486-2f3269c47ede",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "09f3d112-4acd-47de-8a3f-8257bc25cc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71661e10-e51b-45a7-b841-f7e4d161e277",
        "cursor": {
          "ref": "1f1aaf39-8cca-4825-a9ce-c7fb9612e811",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2bccd139-e137-4441-afae-87c8316eacdf"
        },
        "item": {
          "id": "71661e10-e51b-45a7-b841-f7e4d161e277",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e1099cec-5b7e-4d65-a2c4-533b84839c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda7ca88-3ceb-4e2a-ad29-aba4ef49fa0a",
        "cursor": {
          "ref": "3b6dc039-97d8-4759-94ea-8c657298236f",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "197c9c1c-b8ad-4e7b-9aa2-ec5ed5af19a5"
        },
        "item": {
          "id": "dda7ca88-3ceb-4e2a-ad29-aba4ef49fa0a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f8aed0aa-ad6f-4d60-b5aa-79c8aa850864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118784f4-6cbd-43ef-9d2f-76ea21e5bfd7",
        "cursor": {
          "ref": "978cdba8-8c96-4fb1-9dd0-7b4f39a5cd26",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "537fc415-7ef0-43fd-857e-918509d56a1e"
        },
        "item": {
          "id": "118784f4-6cbd-43ef-9d2f-76ea21e5bfd7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7cd3d57e-0db8-4998-9ca3-343948562ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8aa5e8-f1a0-4e83-877a-9d2c975bc972",
        "cursor": {
          "ref": "8f0c3d34-199f-4d54-80b2-dfaf2a7eaa57",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c44dfd77-3a44-4afa-af55-00b8aa03d403"
        },
        "item": {
          "id": "ee8aa5e8-f1a0-4e83-877a-9d2c975bc972",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "28fcf8de-0993-4d7e-85bf-1d36ae8cf6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda581bb-6a9c-4419-b3b9-a072d88dd1d6",
        "cursor": {
          "ref": "19b9b382-690a-4b37-8372-3879e712146c",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2b92986f-5445-47ac-96ac-345e1af6e859"
        },
        "item": {
          "id": "cda581bb-6a9c-4419-b3b9-a072d88dd1d6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3e5dc05c-46b3-4e67-a415-8ff78ae0cbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176fb3e0-2b23-41c4-9857-a1b34c187754",
        "cursor": {
          "ref": "306f1891-9723-4739-a903-9f28cf40f6f6",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6c2958a2-9b8d-4950-b632-ee10638fdf05"
        },
        "item": {
          "id": "176fb3e0-2b23-41c4-9857-a1b34c187754",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b6661d45-1604-401f-bc11-d089baa2dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35010f0d-2588-4d36-9a4b-92f8c5e51bd2",
        "cursor": {
          "ref": "81ce4807-4f1e-4af2-87e7-d87fef6d8fe8",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c91ca7a6-9b5d-4055-bb9a-bfbbbe90a87d"
        },
        "item": {
          "id": "35010f0d-2588-4d36-9a4b-92f8c5e51bd2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5452c7b9-5ca9-4d00-b30d-a8b1fdf9cfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfd7230-4e85-4ebc-8332-68418ec69dad",
        "cursor": {
          "ref": "247d987d-57f7-487e-9515-adcbaa4efff3",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e548110a-da3e-4d1d-ab95-8f2bfb92b8f4"
        },
        "item": {
          "id": "8cfd7230-4e85-4ebc-8332-68418ec69dad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b9d371cd-5cc4-46b1-ba35-1445facc98e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad7a788-a438-49ba-a951-a14ba8843748",
        "cursor": {
          "ref": "4dca581d-1252-4632-a7c3-57bfd54456ab",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a91a9b5a-8ee3-43ad-9e52-3a4450e83d27"
        },
        "item": {
          "id": "9ad7a788-a438-49ba-a951-a14ba8843748",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e1627d86-8e82-49a1-b4b7-7f2111831300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e27907-425a-413d-99cb-351f01a7ebb4",
        "cursor": {
          "ref": "419801e5-7de1-4095-a8a9-ea4bb747ce0d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7844d60f-b312-4b6f-8100-39a676c15e92"
        },
        "item": {
          "id": "e9e27907-425a-413d-99cb-351f01a7ebb4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb34d39c-4e7e-4f63-b980-a3a66acd2171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210befd3-0c10-4c43-9bc5-79fae75e1fa7",
        "cursor": {
          "ref": "ce4d293d-e7b8-47bc-856a-cf621f33aa3b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c9c8b932-e3e7-4309-88b2-a26704d40697"
        },
        "item": {
          "id": "210befd3-0c10-4c43-9bc5-79fae75e1fa7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "90711865-a1bd-45d4-b47e-5dbd7c2a7bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb3b265-b6c5-45be-bcfb-3e757000d1ab",
        "cursor": {
          "ref": "c25f74d0-3d8a-4d19-aca5-72fa542c3c29",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e00e9051-253a-4274-8fdb-81cbbd5213be"
        },
        "item": {
          "id": "aeb3b265-b6c5-45be-bcfb-3e757000d1ab",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a15d02bc-9cf5-4986-aa83-2e7309d34ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fdbd13-ac49-442a-8e1b-42f42cdfd18a",
        "cursor": {
          "ref": "f0644314-3f49-43ee-9e0a-aae286329d2b",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bc493e2e-b55c-47ed-81ab-bb59ffad5c7f"
        },
        "item": {
          "id": "81fdbd13-ac49-442a-8e1b-42f42cdfd18a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c5723f8e-8b0a-4c1e-aaff-e9ad2c7f9bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7706d56-eff1-44dd-87f2-269637e9727b",
        "cursor": {
          "ref": "f4cbb168-caf5-4bd6-b4b9-3eff8aa2bbd2",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "95b41277-149f-4489-91ca-0dfd3731b1d6"
        },
        "item": {
          "id": "a7706d56-eff1-44dd-87f2-269637e9727b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2b56487-2fdb-4a18-8bb2-117257630cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21e4ada-d44a-4625-9c91-d9352cd813c2",
        "cursor": {
          "ref": "84244d27-c5a8-4267-ab6a-13ad6048fecb",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ff596f3b-d74e-4176-9b5e-d06001a34db8"
        },
        "item": {
          "id": "a21e4ada-d44a-4625-9c91-d9352cd813c2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "93e14cbb-c0b0-4967-b053-7db4aeb1e0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36e6530-b76a-4b78-a22e-2d0a1be80b52",
        "cursor": {
          "ref": "036bba9b-c183-4021-b524-b59be666b8c6",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9961ea5d-51d3-4ad5-8151-0b34e6341067"
        },
        "item": {
          "id": "e36e6530-b76a-4b78-a22e-2d0a1be80b52",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c72b92ea-4d59-4416-89a4-3da1215f6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7c579e-5c6f-4a9e-86ab-4007ac3d0534",
        "cursor": {
          "ref": "30a005d2-40dd-43a6-922e-738a4a8b2588",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c5a3ca65-d989-478a-b6f7-7fca280219b0"
        },
        "item": {
          "id": "1b7c579e-5c6f-4a9e-86ab-4007ac3d0534",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6630f7e-3c58-4269-963f-cb73fda52951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17783b62-a60d-4486-a57b-d879fdd2fa95",
        "cursor": {
          "ref": "e1558c7e-409c-48d1-b6d1-04b09a4388f7",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "17ba37e8-e760-4e4b-89d0-089a67a18429"
        },
        "item": {
          "id": "17783b62-a60d-4486-a57b-d879fdd2fa95",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d8a14400-3056-4f5c-bd2f-fbdde80210cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c5ad83-ddc6-4d94-84aa-4232dc012ef1",
        "cursor": {
          "ref": "36b9bbcf-4dd0-47e1-af46-6e33dfe3e9fd",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e22b7ed1-5e49-4c1f-9e8d-4d9b84bb8626"
        },
        "item": {
          "id": "f6c5ad83-ddc6-4d94-84aa-4232dc012ef1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "49b9589e-a2fd-440d-9814-b03f5084304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def05888-e01a-4dd1-89ab-ec8b134c4a2e",
        "cursor": {
          "ref": "5882c57c-4cb1-4334-a9a3-9a34a1bc6e8c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6b4566be-f88d-44da-b414-4e774434e887"
        },
        "item": {
          "id": "def05888-e01a-4dd1-89ab-ec8b134c4a2e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "296798f8-e1f8-4603-9222-4225f18b4c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040e0943-26a2-4ebb-9457-bbb8f43eb0ca",
        "cursor": {
          "ref": "5af800a2-f081-4745-aa89-a2994fbca7c1",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "541754f1-7fd4-410a-9c32-85e3fc70e7bd"
        },
        "item": {
          "id": "040e0943-26a2-4ebb-9457-bbb8f43eb0ca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61746b30-8fa0-4df1-8c40-f6f2d2150ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6881d9-f1c3-4d98-bd11-39676ee50dec",
        "cursor": {
          "ref": "6f49520d-7828-4292-9876-830e10a3b8a0",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cd117df0-ab79-48fe-8afc-5c748dba7efd"
        },
        "item": {
          "id": "7a6881d9-f1c3-4d98-bd11-39676ee50dec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a04df69-68d2-4694-8b38-58dc525c120c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694e4788-db67-4c04-902f-e351285c010b",
        "cursor": {
          "ref": "f38544c5-290d-4b06-98d3-2ffc0a9abff8",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a9b2a94f-66ac-48ab-a8df-3155730dea79"
        },
        "item": {
          "id": "694e4788-db67-4c04-902f-e351285c010b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "21f779de-23bd-47a2-b4bb-53fe1d3c670b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cee996-b66e-4f42-af1f-f6f4021f3b59",
        "cursor": {
          "ref": "453b887b-084f-4ad1-95b9-fa4319d7af9e",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4641838f-6b3a-4931-8ecc-734716fd7718"
        },
        "item": {
          "id": "25cee996-b66e-4f42-af1f-f6f4021f3b59",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a17dc738-edcf-404a-b6db-8b97b413ffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee755ca-c598-4ba8-ba45-39e9e3133ab4",
        "cursor": {
          "ref": "22fcbb66-9aa4-407c-b009-e985961c27bc",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e488d966-654f-4686-9fb9-5bdc9b89c60a"
        },
        "item": {
          "id": "2ee755ca-c598-4ba8-ba45-39e9e3133ab4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "27535b64-163b-4f7e-9d33-cbcaac52c707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cab8603-a48b-4e8c-9d5e-caf83ee8b55b",
        "cursor": {
          "ref": "13408277-a421-4dd7-bff7-08ea92f2db6b",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bbe78eb8-b654-4786-baf3-b1a08db26888"
        },
        "item": {
          "id": "1cab8603-a48b-4e8c-9d5e-caf83ee8b55b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "44aec811-651c-4afc-af2d-b42807526de9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df39bf8a-91c1-45cb-bc04-6a4dda4e74ce",
        "cursor": {
          "ref": "5cc6858d-2f40-41e3-88e3-19ecd4999ac9",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8bb22f6c-27ae-4d28-a2b6-e624fd944f25"
        },
        "item": {
          "id": "df39bf8a-91c1-45cb-bc04-6a4dda4e74ce",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3979f815-9df2-422f-973b-ecd7cc6a973e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc7d13-332f-4bf8-b915-8b20f67e5335",
        "cursor": {
          "ref": "7ffdaace-2b5a-487c-83b1-c3bd98b413c0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c9abc205-fceb-4f2f-8021-106c36ffbb26"
        },
        "item": {
          "id": "70cc7d13-332f-4bf8-b915-8b20f67e5335",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "919477e6-8e6a-4df3-995d-981265ba0e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc7d13-332f-4bf8-b915-8b20f67e5335",
        "cursor": {
          "ref": "7ffdaace-2b5a-487c-83b1-c3bd98b413c0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c9abc205-fceb-4f2f-8021-106c36ffbb26"
        },
        "item": {
          "id": "70cc7d13-332f-4bf8-b915-8b20f67e5335",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "919477e6-8e6a-4df3-995d-981265ba0e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d044b9c9-8c3b-471e-93ba-cfde8b3f73d3",
        "cursor": {
          "ref": "c3c61a79-005e-4f66-ba00-2c56092215bc",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b66ac1e9-e65b-4a5d-9b93-c15df41cdea7"
        },
        "item": {
          "id": "d044b9c9-8c3b-471e-93ba-cfde8b3f73d3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3eb2a8c0-9252-4d5b-aebd-431357ae9e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310854bd-e4e2-42a2-928d-a64de95c01da",
        "cursor": {
          "ref": "66b798b5-9af5-4152-a3b4-94899566da1a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "87e16e32-c1d3-407d-8363-d61fc82c45e4"
        },
        "item": {
          "id": "310854bd-e4e2-42a2-928d-a64de95c01da",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "16059a9e-466e-431b-9901-06bb942b5d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9beb73d-b341-46dd-852c-4d2dfb7e4aa4",
        "cursor": {
          "ref": "ebf3e2ab-79f0-4baa-b1ca-ee1e68303e1c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fe38851b-14ce-4f5f-bc43-7221aa07dcaf"
        },
        "item": {
          "id": "c9beb73d-b341-46dd-852c-4d2dfb7e4aa4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3a761f3d-f86f-47b9-9255-b1593e97ddda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4dc401-46ed-4c59-9061-8167912968cf",
        "cursor": {
          "ref": "8e2c022d-5df6-46eb-b505-7a4e463bcf48",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ef93450e-98a2-4a4d-a268-ae6db86596c9"
        },
        "item": {
          "id": "bf4dc401-46ed-4c59-9061-8167912968cf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "02d78336-729b-4a1e-b43e-04f4ef231b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8d28f9-ad0d-4a1e-a7b7-f9c5a7aeb89a",
        "cursor": {
          "ref": "4209070a-4a9b-416e-91df-9a4575ddf62d",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3a2d0d22-b4a0-4096-a144-c94e7e043d40"
        },
        "item": {
          "id": "3b8d28f9-ad0d-4a1e-a7b7-f9c5a7aeb89a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3d2acd5f-fb11-45a6-85eb-bf112b401999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec72ded9-cc19-4202-94fe-b82537c95642",
        "cursor": {
          "ref": "c3ba8f0f-dce0-4834-b122-bc3e3ab0d174",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a8cb2c40-f334-45e0-816c-30677db4390f"
        },
        "item": {
          "id": "ec72ded9-cc19-4202-94fe-b82537c95642",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fc4cea65-f0fb-4ff7-a2bc-fecd3fb5783e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2490a88a-d2ee-40fe-a0d2-6b5a55177e34",
        "cursor": {
          "ref": "60d282b2-3ebf-40fd-9606-4a3f62bb5429",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "34f6bc50-2a9d-44c2-93d1-1265d8ba9021"
        },
        "item": {
          "id": "2490a88a-d2ee-40fe-a0d2-6b5a55177e34",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "65117486-774e-4cb0-9495-971d80bcc82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a81d47-3cdc-4191-8870-54c9d3ae1487",
        "cursor": {
          "ref": "434cdfcd-073f-4c1d-8121-0c41e427a109",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8969280e-64fe-4381-acd5-dedbb12145c6"
        },
        "item": {
          "id": "18a81d47-3cdc-4191-8870-54c9d3ae1487",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f4e8c74f-84ab-4f87-93ce-70e30f2048d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5959a532-7f19-4b8d-9a77-55f1421124cf",
        "cursor": {
          "ref": "a74d7f9b-5e50-4426-9aa3-3d71214248f7",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3ac19100-9f30-4e6d-a0e5-33d63acecc33"
        },
        "item": {
          "id": "5959a532-7f19-4b8d-9a77-55f1421124cf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d90b47a5-b293-447c-b784-2550351d81c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d36558-5899-43a7-a563-caf5163eff05",
        "cursor": {
          "ref": "b2501dbd-ebfb-4ee8-a239-a3ab5f222191",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4ee302a4-89e4-49ef-99aa-6fffb5259892"
        },
        "item": {
          "id": "60d36558-5899-43a7-a563-caf5163eff05",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a78650d5-0d31-4760-bbc8-61516f2c7655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6018cb9f-4866-4669-91db-87303f13297e",
        "cursor": {
          "ref": "22b8629a-5534-4c7d-a252-bf7fda7876b1",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7efc0702-d1dc-4f94-805b-394ac9556dfd"
        },
        "item": {
          "id": "6018cb9f-4866-4669-91db-87303f13297e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c109a0aa-9b8d-401a-97c6-a1e378fbea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ff1c7f-edb9-4f0d-a1a6-250d4d412849",
        "cursor": {
          "ref": "8e1c9953-714d-4168-9f04-6a03d7f13e3f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f696dcea-7460-47b0-bd81-a10e8196ddf8"
        },
        "item": {
          "id": "c7ff1c7f-edb9-4f0d-a1a6-250d4d412849",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6d7aece-58a8-4592-8e56-cc871967f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62156a48-5dba-4258-841b-015210a56bc8",
        "cursor": {
          "ref": "3669fe7c-1318-4e96-92f6-9ac21ba133e8",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5a0cdf20-71cd-47a3-8b94-3ed74cfd4424"
        },
        "item": {
          "id": "62156a48-5dba-4258-841b-015210a56bc8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6181355c-864b-4421-8490-8676e355d97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471c10a0-2920-4cf0-9c16-c06ac17adaf9",
        "cursor": {
          "ref": "657f9500-cbd7-42cc-8567-4bc76a5b3b1d",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6f0075e7-1882-422c-9804-b355cd0fb95b"
        },
        "item": {
          "id": "471c10a0-2920-4cf0-9c16-c06ac17adaf9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7f11d721-156c-4a6b-8c08-481771ed721e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9c3c26-f467-41bf-a421-fc32aaa11522",
        "cursor": {
          "ref": "de2504dd-3ba2-40be-9277-2fc93f6a2004",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "39376025-acac-44fa-9eb0-354a61fc92a2"
        },
        "item": {
          "id": "bb9c3c26-f467-41bf-a421-fc32aaa11522",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7702a888-36ac-410a-8167-8645f5279e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403a0fed-6f1e-444c-a0d0-e21373254853",
        "cursor": {
          "ref": "438d6ebf-84b1-47c5-bbc8-1eaf64ea7027",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3926b7c7-29eb-403c-9ca0-39eaedb0d664"
        },
        "item": {
          "id": "403a0fed-6f1e-444c-a0d0-e21373254853",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a632c3cd-cd3f-4d10-9148-ad5ec4c42ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052b6eb7-b445-40ca-9959-d576ce46e711",
        "cursor": {
          "ref": "a4101095-d862-4b0b-ae91-523960ef3a80",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b7106186-d2e9-453f-b25e-727406fe2087"
        },
        "item": {
          "id": "052b6eb7-b445-40ca-9959-d576ce46e711",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c6048ed5-6267-4343-930e-dd455f10bd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced227ba-a56e-4554-b0b1-7a1ed48f850d",
        "cursor": {
          "ref": "c7911cc6-9b51-4e99-b17c-550ae5786768",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c8d2074c-d1b5-419a-953a-8ffa1b743183"
        },
        "item": {
          "id": "ced227ba-a56e-4554-b0b1-7a1ed48f850d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3200f1df-4ded-4033-a0ca-b9cf15479a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64b6d16-79b5-4111-b685-d21818235677",
        "cursor": {
          "ref": "73ddce4c-fe48-4c20-bcc5-7ec673f32326",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4df26376-41c0-4d50-ada0-37b0d4377425"
        },
        "item": {
          "id": "d64b6d16-79b5-4111-b685-d21818235677",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fdb61916-4010-4c4a-a367-947846cf6895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42616140-40e4-41c0-bf0c-d379bb322620",
        "cursor": {
          "ref": "47e48c5c-9735-487b-bd94-28a2fc44fd78",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e08845f8-bf86-469f-a309-b62eb1b48a63"
        },
        "item": {
          "id": "42616140-40e4-41c0-bf0c-d379bb322620",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f79c8667-3df0-4b9a-b574-143bed73081e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91578ae-20a4-4eb7-81bb-6ed8a2293fbe",
        "cursor": {
          "ref": "bd12fa9d-afaf-4b7c-99d7-1f0f2a7c9465",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "13462cdf-721b-48e4-9a8b-ba7565fa7e86"
        },
        "item": {
          "id": "c91578ae-20a4-4eb7-81bb-6ed8a2293fbe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "45830700-616b-434d-99eb-2a227426338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d0def5-7031-4985-9986-ceddceee0ca1",
        "cursor": {
          "ref": "260c9c29-a02d-4fd1-967f-2c30400c8e66",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9dfcbeea-b8d4-4c49-8f08-802b5846cca2"
        },
        "item": {
          "id": "48d0def5-7031-4985-9986-ceddceee0ca1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7410948a-3384-4f9a-8da9-4daa2fc8ce74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3281067a-4d73-4bdf-ad49-7b3e1f6931c1",
        "cursor": {
          "ref": "56abb910-390d-4669-8b91-be994670a856",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "57c9f48c-b1a6-44dd-a87b-3b59072a8d70"
        },
        "item": {
          "id": "3281067a-4d73-4bdf-ad49-7b3e1f6931c1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "61b953b1-2c65-4320-b0b0-44d742cf8164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ba5e59-ebd7-4caf-8fd3-5e132cb1829b",
        "cursor": {
          "ref": "7cbf5a15-98c9-4524-921f-69dbaaf0f75f",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4be90806-17b5-4fc4-92ed-2d0f766ca092"
        },
        "item": {
          "id": "40ba5e59-ebd7-4caf-8fd3-5e132cb1829b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6bdf5c49-00c8-43c4-9e94-46347953a244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9664d3-9839-4f7b-b8f9-1d6a46c2ac34",
        "cursor": {
          "ref": "1d039364-54fb-4862-881b-b8557302fba8",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "93de6e8d-de15-4977-bcb3-13d9fc59ece8"
        },
        "item": {
          "id": "8d9664d3-9839-4f7b-b8f9-1d6a46c2ac34",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8d73acdc-b402-4bfe-9a90-ffb28efc8d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c76f53-ff9c-4780-8a6a-f087c65b6dcb",
        "cursor": {
          "ref": "d1777c10-b144-4790-adfc-cc7177e3eda9",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "66957974-35fa-4d61-8cf9-515687de6cbd"
        },
        "item": {
          "id": "f6c76f53-ff9c-4780-8a6a-f087c65b6dcb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2c2599a6-3316-4d9c-8fd2-c3ef8b8a8650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e8d714-265a-48c7-be6f-087069ef0f0a",
        "cursor": {
          "ref": "0d2c3da2-6932-48c1-abca-e20b89476393",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4d617cd1-69ae-4af8-9f7c-4e0aadf0191c"
        },
        "item": {
          "id": "19e8d714-265a-48c7-be6f-087069ef0f0a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "af7728b6-6a9d-4eb7-8f96-3c5d61bc334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1f4336-7ed6-4537-b953-fd6dcf0f3471",
        "cursor": {
          "ref": "4d138da0-081c-4f5a-a518-6a02e7fa3f51",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "22c279c5-10eb-4ec8-acbd-9f3158cce72d"
        },
        "item": {
          "id": "0f1f4336-7ed6-4537-b953-fd6dcf0f3471",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6577fad7-8537-470d-b8fb-8278892eb12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcdaf21-1b72-47cf-a35b-c9a576146e99",
        "cursor": {
          "ref": "5e0b99cd-6ca2-4fc2-be42-583096fe740c",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "37b955f3-fbc3-453e-a713-b1eb9ddf2b54"
        },
        "item": {
          "id": "ffcdaf21-1b72-47cf-a35b-c9a576146e99",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1e7a0276-fdbc-42d4-b85b-5d5c52ff217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ba0087-d830-40a2-80f7-dda79fd39d27",
        "cursor": {
          "ref": "6c238535-30f0-4a20-baca-091ea232969c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "807724d4-edd5-4bc6-a57c-5ada7f793b6f"
        },
        "item": {
          "id": "43ba0087-d830-40a2-80f7-dda79fd39d27",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "55fa3b7f-475c-4156-9fd0-d1c5631cd47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948cc882-ac32-4e29-8d7f-ff60d4fcb5a0",
        "cursor": {
          "ref": "cf8e4def-98b8-44f0-85ac-90fc2bd01c69",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ca374ba3-71b7-4e96-b231-4ab1e76f0143"
        },
        "item": {
          "id": "948cc882-ac32-4e29-8d7f-ff60d4fcb5a0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6935b88f-fdc9-43b8-96ed-b009f991ba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8156bda8-a220-474f-a4d4-05fc164512b9",
        "cursor": {
          "ref": "1fccaa8d-b352-4adc-9460-5f59c5f5611e",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7ad7382c-eca8-4c24-b48a-060d097cfa31"
        },
        "item": {
          "id": "8156bda8-a220-474f-a4d4-05fc164512b9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1fb080ad-f392-4ae8-b06b-a35d13b3a8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fd7ba2-6189-4004-8b93-a5546537f9ab",
        "cursor": {
          "ref": "91d4341f-cf7d-4dcf-a1ae-68823ba47f34",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "92602303-3681-4e93-94dc-f8c2ec4cac23"
        },
        "item": {
          "id": "d9fd7ba2-6189-4004-8b93-a5546537f9ab",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "40cef1c8-e109-436c-90cd-b3198837ef8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba5bee-f42a-484a-a58d-a87d3f039d27",
        "cursor": {
          "ref": "3bc7923a-fdf1-408a-b793-ff826d4568a2",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "db5bae06-df38-4868-a521-dbb0923937b9"
        },
        "item": {
          "id": "90ba5bee-f42a-484a-a58d-a87d3f039d27",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8bc28d8c-4bb2-4887-ad2e-abfccb0c2e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f0dfd2-95cf-4f91-8c29-4295866c2046",
        "cursor": {
          "ref": "a428cbc6-b656-4e16-b1eb-c6909f2847fe",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "575055b6-d01c-4a76-b9e6-79a330cc38d2"
        },
        "item": {
          "id": "d6f0dfd2-95cf-4f91-8c29-4295866c2046",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a55c2dbd-f8ba-46e7-9e23-5bd959d4c2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dacc178-61c3-42f6-89e4-ac76f9f4a0db",
        "cursor": {
          "ref": "31e42c88-d359-4265-a218-9ce14eed497c",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c60a491b-3c3a-4266-a367-03e763ae9f67"
        },
        "item": {
          "id": "5dacc178-61c3-42f6-89e4-ac76f9f4a0db",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9a4fc0b9-145b-47f7-b6b5-ae227e6a25f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b8eadb-6ae1-4cd5-a583-b4ff3e7cf99e",
        "cursor": {
          "ref": "5423b0c0-6720-433f-83f4-c60e03ea6b83",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "adb19d1b-21eb-4607-941e-cc182c198324"
        },
        "item": {
          "id": "46b8eadb-6ae1-4cd5-a583-b4ff3e7cf99e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9479788d-0a54-4e21-bf42-98aa86870b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc27756-8a5c-4391-979a-ce9ae2c5e42f",
        "cursor": {
          "ref": "f68a8d7a-80bb-4dc7-9518-da0228f8803f",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "050de8e0-c08b-4816-bc6c-a9c6254d78f7"
        },
        "item": {
          "id": "0dc27756-8a5c-4391-979a-ce9ae2c5e42f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2f78d68c-ccdc-4788-9a38-58904043bb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1383d509-60bb-43af-a832-ff9f57dbd84b",
        "cursor": {
          "ref": "b64e9cfd-126f-4ccb-8511-2075323ae0e6",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9387bb40-733d-4bd7-a547-49808244d28b"
        },
        "item": {
          "id": "1383d509-60bb-43af-a832-ff9f57dbd84b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0ade6e65-c40d-4d1a-8297-1912c1401109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c90bf2-5ede-4d4c-8211-535a0aec5e36",
        "cursor": {
          "ref": "6b3c6a9e-3c56-41cb-bad7-d5564873fa3c",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4d86df31-b00b-4ec1-8c25-a62248586e1f"
        },
        "item": {
          "id": "72c90bf2-5ede-4d4c-8211-535a0aec5e36",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ab9083c9-3acc-4627-97ff-ddbbc77900bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b668a6e-935a-4edb-aae2-6e20cc4d476d",
        "cursor": {
          "ref": "df55fa40-db11-4bad-8c15-5d504b70ae29",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f0e2ce6-ff72-48b3-af91-a0b0d3d41d95"
        },
        "item": {
          "id": "5b668a6e-935a-4edb-aae2-6e20cc4d476d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7385dd3b-5b9a-4a23-917a-c254b9317653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917099cb-ac97-4226-8228-ff871e64b223",
        "cursor": {
          "ref": "9acdb330-8141-4eeb-9e21-c7e0321982dc",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4819c5aa-8885-47b9-a783-c43c7a70a063"
        },
        "item": {
          "id": "917099cb-ac97-4226-8228-ff871e64b223",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3401a88d-89b8-491c-8783-c3496a265755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257307e6-32fe-43f5-88ba-3b190f68766b",
        "cursor": {
          "ref": "928b384c-807b-453f-9c5c-165e448657c5",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "277c3cb9-fa5a-4c6f-884e-51eae6b7e059"
        },
        "item": {
          "id": "257307e6-32fe-43f5-88ba-3b190f68766b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "78db6f63-8005-4c57-939a-08a1e3beb6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0ba463-4024-4fe4-8c40-a9ea97c81f94",
        "cursor": {
          "ref": "268b8f1b-d5b8-4878-8621-e3d5c5c29944",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "25b682d0-b8be-4d34-86b4-2a5111ad02ed"
        },
        "item": {
          "id": "4a0ba463-4024-4fe4-8c40-a9ea97c81f94",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9032a006-e043-4e4c-92d2-532c761bf108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12d9f89-9e6f-41f6-868a-1502e98c9486",
        "cursor": {
          "ref": "cbb47400-9aea-49e1-bfc2-1b6a4d5715e3",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7e7cb32a-4664-4b90-bb99-021ff8e23e64"
        },
        "item": {
          "id": "b12d9f89-9e6f-41f6-868a-1502e98c9486",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2c44e0d8-829b-48a9-9ed4-e43c5869f85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e6aa00-29e4-40ab-b0b8-c2807211879d",
        "cursor": {
          "ref": "face1222-246b-4475-b659-c300c38c8791",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "71c202ff-811b-4bff-870f-4bd99ab523f8"
        },
        "item": {
          "id": "c8e6aa00-29e4-40ab-b0b8-c2807211879d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "05ae1fc4-9b7b-4cfd-b667-9cef854c5604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896afc2c-11c0-48ec-a704-a004d31eb644",
        "cursor": {
          "ref": "1dec1728-dfe7-42f6-9cb1-6247f7ea7fde",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6b05efe9-faed-4962-a325-ad4cf6f1bdce"
        },
        "item": {
          "id": "896afc2c-11c0-48ec-a704-a004d31eb644",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "46560a5c-3453-49b6-8e9b-c65cd34b05f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dc657c-dd96-4a39-bc00-f9057722d67d",
        "cursor": {
          "ref": "66ed5607-ba4f-41e2-bd74-dc8c5d048291",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bfbfb9ea-5e1e-4958-ba73-3b3672b77f88"
        },
        "item": {
          "id": "05dc657c-dd96-4a39-bc00-f9057722d67d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "64764c1d-e363-4c90-bba2-0983acc06bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e39676d-8e14-4ef5-8619-ddcf3e32f38f",
        "cursor": {
          "ref": "a16ea0bf-741c-4ab6-97b2-c7b4a60a7831",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "192d65bd-74c1-4273-80f4-d17025f50384"
        },
        "item": {
          "id": "5e39676d-8e14-4ef5-8619-ddcf3e32f38f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "074c777f-89d1-4477-81e2-ecf197bd90da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eee7f5d-0fcd-4ee5-a3c2-e02dba538287",
        "cursor": {
          "ref": "684c324d-6600-41e8-a266-41ba9ed439ef",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4293245c-94ff-4f67-aa98-cfb781fd76f1"
        },
        "item": {
          "id": "5eee7f5d-0fcd-4ee5-a3c2-e02dba538287",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9de4ec5d-8fcc-4d7b-9326-6e633626bbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd0d201-38e4-42e6-b0f6-98044613affa",
        "cursor": {
          "ref": "5f133fd0-4ca8-41d6-915c-6095896dffb3",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d083d554-f00d-493f-8757-015842e044be"
        },
        "item": {
          "id": "afd0d201-38e4-42e6-b0f6-98044613affa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f88036e2-5675-441a-8b40-43e4551a84d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af82586e-3ab8-4c95-88e0-8e4a75c6fa0e",
        "cursor": {
          "ref": "cad3c7a6-5244-4d8b-b7d7-127678659c30",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b5a3957f-34b9-4817-8c29-cce8a4decac2"
        },
        "item": {
          "id": "af82586e-3ab8-4c95-88e0-8e4a75c6fa0e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "012fb95b-c2fd-4c8e-8dd6-1c9254e58acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c4b1b9-a716-4ac8-89cc-d8cb0cef8db1",
        "cursor": {
          "ref": "6d964946-d70e-4958-a7ce-8b734b757fab",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e47de5ca-90a9-4bb6-99f9-c60982940cfe"
        },
        "item": {
          "id": "88c4b1b9-a716-4ac8-89cc-d8cb0cef8db1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ea5996f9-af15-49f6-b3f3-9acb22ce7b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c100d62b-03ba-424e-9210-6df40e096d04",
        "cursor": {
          "ref": "9f73af3b-a84b-4550-9277-733245cb04f6",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b78114aa-1391-457e-9de3-bcb835197b0e"
        },
        "item": {
          "id": "c100d62b-03ba-424e-9210-6df40e096d04",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4b7750b8-a7a8-4aba-8a7e-f004e02b3209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddac194b-be42-4168-96cd-b9838b1065db",
        "cursor": {
          "ref": "e7d00956-8274-4914-a2af-3dd042da5978",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b1a1e43b-6fab-4fac-b459-6c651f6bd0a6"
        },
        "item": {
          "id": "ddac194b-be42-4168-96cd-b9838b1065db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "62f9297e-62a6-4908-843f-0f393e72e025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d91749-5fb4-4180-b05f-991c5c7b8261",
        "cursor": {
          "ref": "d9353f28-ffda-4a75-aa73-4ce2178b6997",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6aae6562-77cf-4d67-9a75-99334ffee43c"
        },
        "item": {
          "id": "05d91749-5fb4-4180-b05f-991c5c7b8261",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "762a9bd2-61cd-45c3-8802-164faad3729a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cec191-fc8c-4f7c-8ca0-4d1606a17feb",
        "cursor": {
          "ref": "39a4a280-a357-4841-b395-c30e1bdc08af",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "30e2981f-1cfd-4991-b9f6-42129a93d084"
        },
        "item": {
          "id": "24cec191-fc8c-4f7c-8ca0-4d1606a17feb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "62880a30-ae05-4a84-8fa0-241f7dc18767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a3433c-40e0-470d-b0e3-386d17e1fae5",
        "cursor": {
          "ref": "ba3b2c2a-9a8b-4729-954f-41d3e6a29b4c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9651934b-c29d-4428-bd7b-e8ac892c38c8"
        },
        "item": {
          "id": "73a3433c-40e0-470d-b0e3-386d17e1fae5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0d2af8c8-e5c7-4741-a633-0405c85e9ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca099cd8-e735-421c-9867-3fdb81bd3a7b",
        "cursor": {
          "ref": "9eb26888-47bd-4173-ba88-a93988691c4b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dc196a79-b30a-45e1-9e38-95cd8959081f"
        },
        "item": {
          "id": "ca099cd8-e735-421c-9867-3fdb81bd3a7b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b6b88565-f64b-4b53-ab55-89ead56d30e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db04ef68-050b-4a39-8ba5-54058e38cbda",
        "cursor": {
          "ref": "bf95f561-865e-4a8d-8e3e-ca901853e1d0",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "32dfd7c7-b996-4ae3-930a-0bb5a37c6aa8"
        },
        "item": {
          "id": "db04ef68-050b-4a39-8ba5-54058e38cbda",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2f8487cd-692b-4417-926f-e7fd114a3fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92da0f16-12b5-4e4b-883f-5f1454397ce6",
        "cursor": {
          "ref": "a34cfa0f-ec24-43e6-9f93-26cc8c0954c7",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d67b390a-6337-4a77-ac0b-eaf450615881"
        },
        "item": {
          "id": "92da0f16-12b5-4e4b-883f-5f1454397ce6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b89f9855-49ac-4e76-8189-05c5f2d03884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c85a75-ab81-441d-8e49-bda6703d6ae9",
        "cursor": {
          "ref": "000aa266-2710-43df-8cbf-a45e759641f0",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4b498345-9744-4679-b71f-9c5bf133e665"
        },
        "item": {
          "id": "d2c85a75-ab81-441d-8e49-bda6703d6ae9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c952b784-5437-4723-b64e-ca0ac0a5801c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44328c61-1847-45e7-b11d-4c01c1938a2c",
        "cursor": {
          "ref": "39d850e2-5e07-40b8-8d5b-4faae7d56f4a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e9a80a28-bb66-4d39-b2c5-90e1a2dd7d4f"
        },
        "item": {
          "id": "44328c61-1847-45e7-b11d-4c01c1938a2c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b80cfd7f-30b5-4a2d-b9e0-4bd5c810ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d6b86d-d089-42d3-b6c0-1148d51bd545",
        "cursor": {
          "ref": "ad9c5cda-e8ab-472b-9683-811a2e0690e0",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a1003945-0faa-4c7b-aac4-c802dd4f368b"
        },
        "item": {
          "id": "f6d6b86d-d089-42d3-b6c0-1148d51bd545",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a0983e7e-0e5a-45ad-a025-cc2955ed97ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca48353-206e-4acb-b578-d4f5f1ab81cc",
        "cursor": {
          "ref": "00e1fa51-2072-4230-be6c-b01f6f1bafe2",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2621c2d7-7470-4eda-9d1b-711bc1fb78d4"
        },
        "item": {
          "id": "0ca48353-206e-4acb-b578-d4f5f1ab81cc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "630eea7e-2ac5-496f-ba97-23fc18cabbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0544e10-e8e3-4bec-8ac1-ba4c983f740a",
        "cursor": {
          "ref": "4ce21f55-e4f0-4df4-aa53-681a43763fdd",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7cdce39c-48e4-4d7c-8732-48cc618bc4c4"
        },
        "item": {
          "id": "f0544e10-e8e3-4bec-8ac1-ba4c983f740a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "18ae85ab-1bf9-447f-a825-6c7a9d2016c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2873e35-73f3-4ca9-939a-7d6d2dcffa73",
        "cursor": {
          "ref": "a17c37ea-9211-4c23-acf0-86ca77187b6b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8c944bd0-35d1-414c-86fc-e0c2a18b8d2f"
        },
        "item": {
          "id": "a2873e35-73f3-4ca9-939a-7d6d2dcffa73",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "93b32560-abd1-490e-83f2-385e8a9dbc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fd8f44-3b6f-4447-bae6-f304b510ad31",
        "cursor": {
          "ref": "2d9badd4-2b46-4f8d-85b0-fdcd33eeff7c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "78cd3a82-70fd-495d-ba76-d662bd019001"
        },
        "item": {
          "id": "15fd8f44-3b6f-4447-bae6-f304b510ad31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "03b33166-e6da-4194-a9c6-a231ddb445cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6d85b8-ad70-4707-a53b-667b0c117360",
        "cursor": {
          "ref": "fecb4374-52d7-4543-8efb-cfe4f2d40a51",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bb2a897c-1d5a-4913-87d1-0ef5e2396e00"
        },
        "item": {
          "id": "ad6d85b8-ad70-4707-a53b-667b0c117360",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "84cddc15-0364-41df-8658-e8ce6a6a23ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c5546-6e82-43d2-80f4-e7a82922e2f6",
        "cursor": {
          "ref": "4d731e4f-b0e5-47f4-bff8-e21dbfbf486c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e09a5ef8-1bed-4877-8156-19f8e106f98d"
        },
        "item": {
          "id": "2e4c5546-6e82-43d2-80f4-e7a82922e2f6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "49bd7654-2aec-4a5b-ab8b-0cdcb63250ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcc5eb6-028b-48db-81ed-219146861b8f",
        "cursor": {
          "ref": "dca8e3d9-fc48-4572-a3de-6555a76380f4",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a7e2540d-8349-4b1e-96e1-dce5b2a15521"
        },
        "item": {
          "id": "cbcc5eb6-028b-48db-81ed-219146861b8f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "28d2842b-d63f-4d62-b75f-727960e68e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23822536-6d16-4783-8519-807e532617f1",
        "cursor": {
          "ref": "5c67106d-c408-4612-9a19-66430653290a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "39c49e11-d611-4dfe-8a6d-651739a8ad15"
        },
        "item": {
          "id": "23822536-6d16-4783-8519-807e532617f1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2d4168b7-f630-4822-99d3-fe93beda0364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a79d88c-4970-4b98-8081-5e32d982e862",
        "cursor": {
          "ref": "c720f3a1-8fec-4390-9f39-2ceda223ec68",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12081473-006f-4580-9095-d3c7da5364d9"
        },
        "item": {
          "id": "9a79d88c-4970-4b98-8081-5e32d982e862",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9f9c4c0a-cc8d-41bb-affd-03164c8ac834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6877bd1-ffc4-479e-9e4b-2450ec3e28d7",
        "cursor": {
          "ref": "7eef9060-94a8-4afc-9d77-e01768b08791",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dd6bfada-34a3-4f09-86cc-c5a6608257ed"
        },
        "item": {
          "id": "d6877bd1-ffc4-479e-9e4b-2450ec3e28d7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "68e15d51-e481-4b06-82b1-efa91b803df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd8a832-6da3-4eee-b896-b0d58a5c88b2",
        "cursor": {
          "ref": "eeca9026-b423-49ce-9a16-7a4683a7cd7d",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0d3a64c7-139f-44af-ad9a-1eccf8e4ad9a"
        },
        "item": {
          "id": "6cd8a832-6da3-4eee-b896-b0d58a5c88b2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c2526f79-5574-45e6-b395-be18fdcff95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decc7b22-db6c-41cd-ae64-2bd50946c0b1",
        "cursor": {
          "ref": "e0db181e-f4a2-4107-aeef-12dc7c22441c",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ca42794f-0d4b-4564-b8b2-a733bfe6101c"
        },
        "item": {
          "id": "decc7b22-db6c-41cd-ae64-2bd50946c0b1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fc690cce-7c6e-4bff-8d7e-7b65b9cd1beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2815b906-6a61-495f-be16-fb672c746987",
        "cursor": {
          "ref": "5f555bb3-7890-40f0-bd32-83d327a7209f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "44bd305f-b414-4304-a7a2-bffb1296cf86"
        },
        "item": {
          "id": "2815b906-6a61-495f-be16-fb672c746987",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7c0fcd6b-bd1c-4fad-9a19-eab43e0a22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d5e418-093f-44f1-8c9b-7f5a164ceb49",
        "cursor": {
          "ref": "1ff8994f-a00a-4976-b545-8bced3bb4aac",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fb6a745e-0b99-4a69-bd57-8d6b0970d338"
        },
        "item": {
          "id": "e1d5e418-093f-44f1-8c9b-7f5a164ceb49",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "665a4dd4-ba39-475d-9d74-9002116ccd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3dcda5-c98f-47b4-9d49-9a6e12aed60e",
        "cursor": {
          "ref": "e8f669ae-f35b-408b-ba7f-275d672bcd5b",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0e2a3fb2-0089-4b22-8bfc-85c959719800"
        },
        "item": {
          "id": "6f3dcda5-c98f-47b4-9d49-9a6e12aed60e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2f17bc9e-8180-40a6-a37a-c8cb71c49343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3172e0-b88f-48a0-80f6-3f7055e0856d",
        "cursor": {
          "ref": "5fc3eaba-ad29-4130-b8bd-e834a10c06b5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "62e7df9d-cd1a-4fe2-9026-d7d5ac242fcf"
        },
        "item": {
          "id": "bf3172e0-b88f-48a0-80f6-3f7055e0856d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fec27921-856c-4b01-88aa-ef42cfea4a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34ea756-70af-41e0-b7f1-a751dd1596d4",
        "cursor": {
          "ref": "7e65aed6-d498-4c06-84a8-cfabcc6cefde",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3b72a37a-0b1c-4c5a-87ba-808f4477179a"
        },
        "item": {
          "id": "d34ea756-70af-41e0-b7f1-a751dd1596d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f03c3b31-fd70-44d2-b228-dd83274756aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f686d-6c05-4173-a936-26d602012b06",
        "cursor": {
          "ref": "5b288ad4-b014-40fb-a93a-c78cdf6315a7",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5b86d49c-2088-4bac-8bb0-b4b964b50355"
        },
        "item": {
          "id": "da6f686d-6c05-4173-a936-26d602012b06",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2719fbaf-789a-49c4-a90f-4930abf35d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dfb5cd-206b-40b8-ac9b-cc473234cc62",
        "cursor": {
          "ref": "f2b619b0-4450-443f-8a25-73c7c33a8b3a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e8de5e19-3f32-4eb8-9843-0dc439522906"
        },
        "item": {
          "id": "e8dfb5cd-206b-40b8-ac9b-cc473234cc62",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "340f27e3-9305-4fdc-9e49-113f7f3d0de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72df0888-96fd-4aa2-8ee7-21254a7f1f63",
        "cursor": {
          "ref": "f100b8bc-0167-40ce-8ddd-5a26ca29978b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ac069281-d56b-4f9d-87bf-cacb9ec1f439"
        },
        "item": {
          "id": "72df0888-96fd-4aa2-8ee7-21254a7f1f63",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6da5ec28-4188-4de1-8188-5d53fecde4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84bee6b-1d00-490e-8711-8cade67c24a5",
        "cursor": {
          "ref": "b693eebe-8721-43fb-8e27-c2ddfdc94640",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "302c29a8-ce12-4fae-9a3e-bc8723d91041"
        },
        "item": {
          "id": "f84bee6b-1d00-490e-8711-8cade67c24a5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a41be324-e02c-457d-bdf7-b6e1dc92ac7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f80945-9a06-447b-966e-9f9801522b13",
        "cursor": {
          "ref": "6fa31dfd-5b7b-4278-991d-b0aab7a06f19",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c9ff8510-5b2c-4fc5-a2eb-1b13eb13fed6"
        },
        "item": {
          "id": "08f80945-9a06-447b-966e-9f9801522b13",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "57a42f69-f267-4057-9a10-a333194d7475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5637eb6c-44af-4683-87ca-88358597fda3",
        "cursor": {
          "ref": "e95cab8c-3dcb-4067-8835-8779d475cd92",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf233106-52c2-4736-a494-1f4b7aef9d2f"
        },
        "item": {
          "id": "5637eb6c-44af-4683-87ca-88358597fda3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6d63d209-dd65-451b-a264-61b804d1f5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b04799-742a-49d7-8454-9589d2d82cac",
        "cursor": {
          "ref": "c2c12dca-36e4-4244-b580-7c4a6aa8ad4a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b493d1b6-a9c5-44e9-8c0f-7208117408e9"
        },
        "item": {
          "id": "b6b04799-742a-49d7-8454-9589d2d82cac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0fb15bf6-56fa-4962-89ba-d7633ce39819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d358df00-bcbc-428a-88c5-a004bfe045c7",
        "cursor": {
          "ref": "3a50950f-0115-4f3d-bf78-12b8ea4bdc90",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0d2c627f-35f9-469b-8463-dfcf5a03126b"
        },
        "item": {
          "id": "d358df00-bcbc-428a-88c5-a004bfe045c7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "991afb51-0b3d-4f24-a430-502e0c5915cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b6dee0-e5ea-4838-8d63-a31255141c67",
        "cursor": {
          "ref": "cf405838-1b18-4286-a677-afeaa0d307fe",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fa36ca37-2558-4f51-8c3a-8e33d889251a"
        },
        "item": {
          "id": "47b6dee0-e5ea-4838-8d63-a31255141c67",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a0786870-d8f7-41d7-8947-aeebcba7f30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e41d549-38d9-4524-96ed-ac4c8f4f98cd",
        "cursor": {
          "ref": "e588d992-5701-47ce-b1dc-99afab3cb2e9",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "187f3067-5824-43cc-ba51-ca1269b9ff68"
        },
        "item": {
          "id": "2e41d549-38d9-4524-96ed-ac4c8f4f98cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e25c64f5-4686-47d0-b81d-1ad971b18ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15639bd5-d407-4287-8e28-0727b61d9144",
        "cursor": {
          "ref": "ece09218-135f-476a-996b-1188af36be03",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e665f28-560c-419a-b11a-ffb5423f5f63"
        },
        "item": {
          "id": "15639bd5-d407-4287-8e28-0727b61d9144",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a640dc17-624c-4ab0-a7d2-cabd5078ebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1b6b32-ed39-4e6d-9d6a-6ebe00311b48",
        "cursor": {
          "ref": "c38c9fac-99db-4d6c-8de8-39ae3cac6dca",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ebcb8369-176c-4ab0-b64e-3ab24686ed50"
        },
        "item": {
          "id": "2f1b6b32-ed39-4e6d-9d6a-6ebe00311b48",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "76559ea3-eddc-4320-b72f-0f486455bdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b0ebd0-1fee-44ae-94b3-5b2146d489a9",
        "cursor": {
          "ref": "789aedb5-4606-4069-ab2f-b6c26b538028",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9f9c0be1-93f8-4803-85b6-2cfc55341137"
        },
        "item": {
          "id": "36b0ebd0-1fee-44ae-94b3-5b2146d489a9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a58d560b-bd86-4027-bbb0-5b1bc17b985c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29acc262-5eb7-4c03-aa81-589614f827e5",
        "cursor": {
          "ref": "43d47654-a989-4c94-9bc7-5664b663b474",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "df5739e5-4164-42fa-bb89-5474f393d7d3"
        },
        "item": {
          "id": "29acc262-5eb7-4c03-aa81-589614f827e5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dff335da-b4d2-408f-ba5d-7aa9fd2a3a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6178472-9120-466c-ada6-8916845b09c7",
        "cursor": {
          "ref": "a4380881-e928-49ec-a3d3-db9caa7643f6",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "142146f7-b1f1-4809-98dd-39599cb09cb6"
        },
        "item": {
          "id": "f6178472-9120-466c-ada6-8916845b09c7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a7e95af7-4be5-4982-b5d9-25dbcdf1dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6741428c-40c3-43a1-8b10-43765c9f11b9",
        "cursor": {
          "ref": "30f31b50-8a03-40e0-8de6-a8e3e4b1377e",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "863cbe65-f6ff-4026-bcc6-db29c574ea4a"
        },
        "item": {
          "id": "6741428c-40c3-43a1-8b10-43765c9f11b9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "015a5432-14d4-4592-b1cf-eb6420a4c281",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c49c4d-3143-4e0a-9ac8-d39d11faf7c2",
        "cursor": {
          "ref": "a4d8cc51-172e-4cd2-b8bf-6c9cfc67ef35",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8198ed50-f36a-464a-971b-1ab77d7aa819"
        },
        "item": {
          "id": "08c49c4d-3143-4e0a-9ac8-d39d11faf7c2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a0fc4cda-63a4-44b1-be05-ba1e49cafaed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe62f2-5052-479d-ac85-21b35cd0caff",
        "cursor": {
          "ref": "206c1eca-f4c6-421a-8611-db7bf14eb208",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "085b7b87-619c-43fd-9586-3c53746acc42"
        },
        "item": {
          "id": "c0fe62f2-5052-479d-ac85-21b35cd0caff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "83ccea33-7a4a-4c94-ac05-98641eed9417",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7538009a-4a48-4a49-b55f-3a345562a55d",
        "cursor": {
          "ref": "c9791542-6936-49b1-9c6e-7137146aaef0",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b6482bd4-f81b-4341-b815-907ff4222b7c"
        },
        "item": {
          "id": "7538009a-4a48-4a49-b55f-3a345562a55d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f1e0995f-c84f-47eb-8017-09616394bd68",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a15831c-2e8a-4472-b66e-e0adb82c3255",
        "cursor": {
          "ref": "9c82fb7e-18f1-4fd3-9a4d-cbab0b00640c",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3bb93ff6-d495-4338-9232-aa70f2e2c28e"
        },
        "item": {
          "id": "9a15831c-2e8a-4472-b66e-e0adb82c3255",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0fb2fda0-4766-4a15-b639-ba888f475659",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a785ea-d55d-4bca-9e09-c2672f96e4c5",
        "cursor": {
          "ref": "cb0c0e78-fe41-415c-8c9d-1df8d0b3235b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2b64adc-d5c2-4b59-8c71-90724d68b151"
        },
        "item": {
          "id": "24a785ea-d55d-4bca-9e09-c2672f96e4c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4e82f1c-1f9a-4406-bd4b-42e6e3200693",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a785ea-d55d-4bca-9e09-c2672f96e4c5",
        "cursor": {
          "ref": "cb0c0e78-fe41-415c-8c9d-1df8d0b3235b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2b64adc-d5c2-4b59-8c71-90724d68b151"
        },
        "item": {
          "id": "24a785ea-d55d-4bca-9e09-c2672f96e4c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4e82f1c-1f9a-4406-bd4b-42e6e3200693",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a785ea-d55d-4bca-9e09-c2672f96e4c5",
        "cursor": {
          "ref": "cb0c0e78-fe41-415c-8c9d-1df8d0b3235b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2b64adc-d5c2-4b59-8c71-90724d68b151"
        },
        "item": {
          "id": "24a785ea-d55d-4bca-9e09-c2672f96e4c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4e82f1c-1f9a-4406-bd4b-42e6e3200693",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed314a5-6408-44d9-8e06-541d6ff7188f",
        "cursor": {
          "ref": "d36a4ce8-c39c-4e99-a27f-f32e8c8713a4",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c5c177e9-c339-4372-bb38-c458824fed9b"
        },
        "item": {
          "id": "eed314a5-6408-44d9-8e06-541d6ff7188f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3dc25699-91b2-4fad-a44a-7385fdd93372",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84623c6-1f49-4c61-a9d1-6ef0413a319c",
        "cursor": {
          "ref": "52bb9b1a-24bb-468f-82e8-6d824d14ccf0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5809aebb-9602-4a3c-80c0-249c24763edf"
        },
        "item": {
          "id": "f84623c6-1f49-4c61-a9d1-6ef0413a319c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83fd8f6b-5221-4ce6-b852-98db7656bcd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84623c6-1f49-4c61-a9d1-6ef0413a319c",
        "cursor": {
          "ref": "52bb9b1a-24bb-468f-82e8-6d824d14ccf0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5809aebb-9602-4a3c-80c0-249c24763edf"
        },
        "item": {
          "id": "f84623c6-1f49-4c61-a9d1-6ef0413a319c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83fd8f6b-5221-4ce6-b852-98db7656bcd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b910af49-477d-43e7-9d96-8d3b7078411d",
        "cursor": {
          "ref": "0c4383c4-e4de-48c4-9948-b7ef782ed9ab",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aaaf5493-8bdc-486a-a114-13ffc16b2bb1"
        },
        "item": {
          "id": "b910af49-477d-43e7-9d96-8d3b7078411d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bcb4b2d1-e5af-422d-853f-2ebf8aa5eac4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c00b82-6706-4d28-b9b7-10c86f810357",
        "cursor": {
          "ref": "df460e0a-1ea6-44e7-8232-79a095aee1ef",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2220f363-0008-468b-99d1-d626fce32a28"
        },
        "item": {
          "id": "47c00b82-6706-4d28-b9b7-10c86f810357",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "851f6c4e-8df3-4dd8-8b56-43dec6cca5f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c00b82-6706-4d28-b9b7-10c86f810357",
        "cursor": {
          "ref": "df460e0a-1ea6-44e7-8232-79a095aee1ef",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2220f363-0008-468b-99d1-d626fce32a28"
        },
        "item": {
          "id": "47c00b82-6706-4d28-b9b7-10c86f810357",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "851f6c4e-8df3-4dd8-8b56-43dec6cca5f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145f585a-34f9-4ab1-818e-244389df2012",
        "cursor": {
          "ref": "28f01bc9-51a8-409a-a0ee-003d2e2f66b0",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a63b7250-ccec-4d00-97a8-1cc88346c126"
        },
        "item": {
          "id": "145f585a-34f9-4ab1-818e-244389df2012",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0bc7e11c-0f1b-420d-8e2a-4b7256448b8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}