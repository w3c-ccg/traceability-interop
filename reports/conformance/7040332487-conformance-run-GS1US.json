{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8f13f58d-509c-4459-a9a2-3c735c7e21a1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "969af2f4-00fb-40c1-a1c2-108594bd570d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0ab8eec-eb94-41af-ab6e-25a2b871a83c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7622d707-c51a-4c25-9db1-76c1eb9b17f2"
                }
              }
            ]
          },
          {
            "id": "ac259a69-5c15-4666-9167-40c6c5b0f1db",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cedc1833-7afd-4ede-b522-9e6cd40fb77b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fb11f193-903e-4586-ad03-379218725e46"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b755180c-279f-478e-9950-8d0c3ed115d5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5dc59f86-7246-4c70-a829-169d7de7c1ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76cf9338-f2ad-4df9-8dd8-4207b6a265da",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4167552e-db62-47ba-b7f5-df81e7dda52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89bf6504-7d2b-4a92-ac76-986232570567"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a788732-44cb-4eff-af32-3200593ae601",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8aecb495-aa22-498d-a5eb-d84e6551ff7f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ac8a75f-29d0-4e6d-8489-95c1b79e889c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e28bfdca-560f-490e-a1a3-a07b975c0226"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a6cd67-3c86-4b41-8ebb-96d679554b5e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7fa2676c-8ad1-490e-b306-85000e17b695"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b24c247-2d85-4126-be0c-eda90e675039",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2120c814-1dc1-446d-8594-9d695fd6007c"
            }
          }
        ]
      },
      {
        "id": "7f99a67b-3516-414e-a52a-f7c86424c4f4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "74d57433-d880-4fd2-a9de-0a8bf4544c76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4c34753-a230-4387-adaa-844fe77890db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "120dd9fe-8cc3-437a-89fe-4af63c7f6b16",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c28f7e-71e0-4289-b9f2-513d703d12fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4778fbd5-9c12-48bf-9d0e-f75a661df9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beed6bb2-6da7-427d-bbb8-efa8f31130cb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80abad0-b14e-4ea4-b433-8c02c2511abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0307a3c0-5847-4497-ad83-3d6916a17d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1da67c3-e409-489c-a6a9-262f2a56b7a0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799698eb-10a3-4b8d-9bb9-23cffca271b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccd60fd9-e97f-46d8-9000-4f7859242aaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13092577-99ae-4552-9fda-f5ac00a15006",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "813400df-2d7f-4011-916d-54004a550f7e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa11481-fd86-4bd2-ac76-132a860a1e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "136a8f86-20a7-41a4-b466-ccc2e40c1204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310165cc-323a-44d6-a0e2-a2f698dab1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b5303c-23da-4cf3-8a52-0228450bf47d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17ade4a3-9df1-4d8f-8c99-d300de5b2ae3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "217cd383-3725-4540-8304-375ba127b74e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a8f94dd-c69a-4076-8f01-be98768da4c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "63c04a42-b979-43d7-ae65-225c3f2aac88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a407fa1-d7bd-4fa8-bf4a-e7e590f11049",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "771b3cf1-ae8a-4ca5-90dc-189705defac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9feada0-5278-4749-bf9c-e3cf5ed4f417",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be99acdc-6bd0-434c-b75e-2e1a6e49f650"
            }
          }
        ]
      },
      {
        "id": "d64d4051-13c4-499d-97b2-02943658a3e8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6d1a5739-55ef-4efa-9020-2c4a9125daf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8caa22a-7449-4f47-b320-7edc9a3e5361",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9d4a286-7746-4df0-81b4-e75b39e84ac0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40052609-ef0d-4073-bdb1-4198d95f03ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc11bfce-3a05-4bde-95c0-f41833716672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe97a788-e446-4650-875f-b9693ad629f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9b1b5d1-1939-4718-bd09-6ee96c44a48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96684e8-be66-4b8a-abd3-76b32c59a6c7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c21a42-3257-4f14-8436-d539bac95291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67b25a9-4ba0-4262-b1b0-bcb176441e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfc8c2e-8588-4935-8337-0895d76b8e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0953438e-00e6-429d-89b1-3545a641d6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a91b45-b4b0-457b-9221-0faf1f0ab928",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08bd28a-8aa1-4b47-a7c6-8eea92c5325a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba797f3-e1ff-4962-9ab4-0911225fe30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acdbff4-84ad-4fa7-b8cc-ec3c9a1d64c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aad24d29-f376-4de9-b821-587457ca8068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fcd860-2c5b-4e3e-a7e8-e87368f51ab2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ba9be8-e8ce-4b8b-bae8-fd969d247c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b42fa79-911d-4005-8d96-eb7989899c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43847e8-e8fe-4162-bcae-255e2765a995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b111be3f-363c-4967-986b-61d6729468d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b3dd6d-1e38-468f-845c-3584d0fd70e4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29c1927-e0eb-4d85-9ec8-0aa3ada21283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94e903c-92ab-4c1f-bc5a-b188ff553e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fed308-a665-4c44-b231-a5ee6cc5e2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed32f4f-fea2-484b-a555-a72c094ae67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed6bdd5-5e57-4761-9613-52b90ab75dd1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b34abff-ae07-49bc-9fa8-fdaa2e20b827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c181b3f-8031-42b8-b71a-175f10d14e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d807c8e-94ff-4b09-a722-7f0cf6d6c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7abf0891-f201-4b0f-bc2d-53302b5449b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6adc029-de15-4ac9-885e-843f55169f67",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2e09ac-5f2e-4c74-ae99-12ccbba677ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23709ca-b19a-46a3-be86-5a93377eae74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cc1309-4029-4552-a3d2-c20784f41649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f2bfc4a-e988-4805-9872-3d5e3c617794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed87db9-1808-49d4-ae59-61e136a70840",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aacfe6-edde-4144-98db-7e37ff32c975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7eab640-9d73-437f-b719-4cb719ac8f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f165d5bf-b6f3-48ab-874c-59f54e1db526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4b116c0-001f-48be-b72a-0e1f463e3e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25029a9a-1055-4140-b9f0-afb00a28e18e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2d7e40-12ca-4ad0-b0db-e167c7c604db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c0c9ad-d062-41de-a1f2-69d91db594e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b2e7a4-8cc5-4ace-bd40-078b785c7ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38ca0351-2d87-418c-96be-f5dff1cb3e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6496845c-d8ce-4a15-a8a1-a0ae7deb56e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1ec756-9535-4e6e-a508-9d4d667a555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63c0fb3-439d-4ccf-aa51-222568b9bf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5db8aa-3ec1-467a-834c-1b831dc0a344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74bc6883-7614-498b-851f-888da890b7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c5fea5-038f-4399-acc3-8dd1a72cf4a1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223595da-a773-43d0-b357-427700c6af99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9fb972-ad99-4cf3-8bbd-3f1f84472378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a716fa-3c6a-4e74-a48a-bb327e4dbb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74a5ca64-9a6b-48fb-958a-d907eddd7b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85efa166-3d3c-44fc-9882-e0d4541374ab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf25719-fc28-4149-a4fb-42d1761a2353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f918e75-1214-4ceb-8951-dc1530be664a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111d0ddc-f78b-4d88-9eb6-35fc60b7b94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdc4101c-02df-411c-ad01-a11ab4d04204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd94bef3-93fa-462f-9675-09ca129bfc10",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea4409-df75-439a-b308-00b17518d19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05da658-6812-4f16-a1be-1d9a91aeb766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5811ea6c-76ba-48c8-89ea-20d81c349f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29cfbac5-ce97-4919-ad1f-06e772b6290a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53a4462-232c-490f-b859-5d2292c6a75b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6409e4b-ee05-421b-a315-30357811f5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e45952a-46d5-4ac3-af58-5f112579f377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0423c379-9e1d-4f6d-b4f0-76a2c4f42665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28e02d36-950b-4b67-be3b-01b249169f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508de3c2-fba2-4770-88d1-ba1eb4d154cf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1126d0e1-8b68-4c8e-adf7-9172bef1f162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644129df-71e6-4df6-a3d4-516eff84e678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dbe65c-f952-4878-867d-f8145dc1f4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48b108bb-7b43-4a9a-9d0c-071a0e87e83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacbaba3-8e21-4b27-b7d1-c4c443f430f1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced5290a-fdb1-4865-bb7a-5a71db2c34f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203dc668-9aea-406d-92da-c00ea3f8fbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b900ff41-c5fe-4250-ba04-d14475e393b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a75ca59-48e1-4dff-8975-80211263f155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ac3051-fbf1-4dc5-8130-067a84f27f6e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da95a532-6e1d-4abc-aadd-712e378df930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa7b659-5a92-4193-b0c2-75b1ba1f2887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657b6039-ede3-47be-9f33-eb926e2aa34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3816474c-e730-4ed9-88e2-7d20bd87206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e073c48-a713-46c5-96e3-3bcf7999bb91",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfa572d-5620-4859-b9e5-5a0227f070be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601f6b2f-bb75-45da-b03e-d3785099da94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f1f18d-c3ea-426c-9ee1-1b56ce868990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4060ea9-0d25-42ca-8f1e-e0c3ff3bf0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aab3685-8a0d-4ab8-a651-43caec63ddd6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe8578c-9669-4193-8306-efb44cb13f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b75f2fc-897a-4c69-9f4c-8b86a35557b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aadf5c-0831-4c72-9197-03e162eb2f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39028b95-d9f2-49a4-9569-5728f36275cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba35dbdb-1bd9-4a69-8aa5-a87e81766c97",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5f3bd-974f-489d-9460-781ed6d37222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66b1c47-51f4-4a41-8ba3-24a29bf8a42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0101c5a-438d-407a-a140-f168528bb74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1c0e16-d504-4933-87b9-9a5dacdbeb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfbc97c-882e-4fd1-8f4d-f8c9886ffa05",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459a38f5-5f84-447e-b10a-76c7dbb11d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda96ad5-2c1b-46be-8e0c-b22e5ac9965f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b19874-9c73-4fcc-afe2-3b3da6ef6ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc4600e-2027-4da5-a860-1e41c58a7604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b606b1-fe29-4854-9f4d-3338bf654526",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11d705c-4b74-4d12-9958-8ef7cb08da22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c52c4f2-33a3-41ca-a19a-b88f9d46677c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207746de-a51a-4de4-9356-17632d7d31c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b822112-eb85-4ba7-8817-02f9c3836db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac7c7a8-23a9-4720-826f-4844282b7ccf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e487419c-72b9-46e4-a456-d145109d7530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59aa6ed-38a0-4b7e-84c3-9e95c648d7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d32121-21ff-4de6-b82d-7b58f25fa0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24343b56-4b37-4cf7-8467-a2d3adf29139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3034aa0d-3a14-494e-933e-08df2fea330c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec3615b-7322-4733-a8b6-7dac43842473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b836590-4f6a-496e-9577-3984333946ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b3a20a-b959-4fa9-9f3e-2e454ee072bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28313ec0-d30a-4408-b73a-64b3f389e01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2c2c7b-0e28-4c05-8e47-d5701cfa2e3a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522e5101-7bab-4a0b-8d5c-604b6ec2b148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5306e572-e643-469b-a0db-9b6f0c06f114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcd13bd-91c3-4e0f-b56a-b8f4932277b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3165b7f-524a-4dbb-bc34-e2cb0add9d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd54907-64b5-49e6-801e-f7ce66410b3c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab60a90-e1e0-43f8-95fc-ec846e64669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50dba8cb-8333-4f1e-aa1f-f15902e6cc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f610bdd6-7406-44ec-a1db-29666bb56586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9e887a-7339-47ed-ab6e-bb5719a8efce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0f6920-c88a-4923-bda3-eecc0d96d7ef",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db7ddf8-4693-42e3-b3cb-488d380071fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1350579-340b-41bd-b5ee-7d51ca64b145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321b8dda-8937-43de-9cee-7543b33432fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ab3dda-780d-40d0-94c7-af93631523a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4596381-89b6-436c-825e-7f81f32eb981",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6469a771-6c43-4ba3-8fbd-5012fdf4e473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cc0a55-55d0-4cae-a06a-a2a8f6e88280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5910e56d-f90c-4e28-9df0-50f61f8f500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8f0f4a-e493-406d-b660-0891fa80e457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c7b249-f6c6-46b1-ac0c-531f68ce787b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ce09c3-d907-46ba-a002-518bdab078ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4df3f5-ddbe-484e-9fe8-bc8d26323f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110f32b8-b982-4039-9e33-9bfa641194a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bac9d77-9476-4531-b78e-524f303c74d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0490ea7c-6d1c-4dab-a421-bc1f677c7f2e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f965ffd-0aa7-4e8b-a4b0-7de01b7ba764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eecaa96-c1f3-48b7-b562-142319275533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d4b7c6-9263-483d-9aec-259a5a76deef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "26510a1d-f84a-4c3a-9052-6024a8923542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced08810-95de-4a2b-b578-39954b5d4a6d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e846939-c609-45fd-8690-f76456b5a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51395c4b-4fad-4b91-8575-2f52a4ebc170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3e0613-9567-4ed7-aabd-43648264a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ec9286-71c4-4545-a9d2-7a6b7b8ebc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc25b557-4201-414b-92d2-5762a199fbc1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c34977f-90e1-4f04-a366-e06c1f47b776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640441ec-c2fa-42fd-9d6d-85804ef668be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4be1f34-d994-42b0-a4e5-353db834b7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6daa238c-af50-4fa6-8139-10f8929ee3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f53582-de09-411e-8358-03c05803e58b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eed909e-416e-4854-8c24-6b93a1e9ab43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941ec614-dd1a-427e-a98a-007236a7cf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b748e3-486b-4dd1-a824-1c2a6968e6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f1f13a-dd01-472f-9720-a5ac93476dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c96249-a73f-4540-b592-6f4e098ff2e1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354be714-ace9-4358-9045-7f093949927b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f477ef-b54f-40fa-9e27-455679026b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcbf191-cdbd-4ae3-b446-8baecf222359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94865aa2-b62e-4f0d-ad2a-970d064e591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4d75f4-5dac-4e86-b8bd-16e38db7004a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfacee19-8eb4-465c-a93b-d9e49e73eca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9bb3ff-6600-4d6d-9b21-bb404c6bd794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9a9a77-f1cc-4cc8-9f39-256ede69c8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "907e8b07-8b7f-4c69-b8c9-9ef9e877896e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00dc9f0-55b1-4fe4-a7b5-ada17f691efb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db0c554-7878-4cdd-adbe-1b4ea8df9620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a7f5ddf-433a-4fd3-a04e-cc5912764bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a826d9ec-d19e-4955-ad77-721248c499f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a68d9a6-68e1-4a0e-91b4-d36c273396e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d419f5d9-28bf-4ab7-b025-92eb1c10fe07",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2294c311-597f-4add-b428-a61d42855b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b421d4-cbd0-4ee2-b614-de9f2dfc82a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc123e7-8deb-4394-9303-21add13bee36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80dea828-da1b-415c-a21f-11498fad2797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785b65ac-5b30-4722-b575-42f989ac7763",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765cb147-f31c-4ae1-935b-1f24db4fe6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a88e08c-68b2-45bc-9e60-97297540ab25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4bfaf0-d994-41ea-94af-b43e8c5668bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ecd857-7412-48b5-8e2d-5e71794e02a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4452ef45-3c75-447d-890d-96a7e8ae14a6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bf3937-45c2-4814-846f-931bc4d2ecf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f24cec-e591-4dce-9e1c-f57068377cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e511ebdf-9e3d-4466-880d-ef01e8e9d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c437637-0730-4d3f-a1e3-082076799432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb4bd9f-d5d8-4dd6-81ff-f5f13e1ba5cc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389ee3f1-03d5-4ef9-b8a9-651250b67f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31951cea-9302-41d4-9ba9-af77ad08775c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86beea9-d68d-41fa-8097-f7585827edf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2705afb6-6e07-4a41-81fa-1c2b2b4d3af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fe7345-ace6-444a-9354-724d30fede39",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda5db08-5e21-48df-89d1-fe9b7e7a2c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d457b16-edb7-4738-8e83-2d8a79f1cfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7e5724-0e27-4f45-847b-cdc97c70cb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a8faff-424c-47b2-948f-4dc06fdfebb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd55e89-fb9f-40d7-af4a-f34adfe228d8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bd7ba3-2f58-4b39-a318-17f75adb870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9615e90b-f57e-4314-a537-95093b82bd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4056ce0-732a-4041-95f2-4f841839a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad20783-79be-4be3-9a9f-69b0a696a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b41f323-c395-421d-baf8-dbb573b1479d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5b11a8-d4d3-4929-b415-aa2a250d19c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828968bf-1bbd-4b88-88ff-fa57574fac57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f33aa16-c714-463f-80e5-1fd08d2beddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c42d898b-3e6b-4cf7-a0f7-4e9ea514436a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c420153-26a1-42d6-9211-07d0d2e0d47b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87dca3b-fc82-4c8f-b21d-7a0192a20e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfca2621-1611-48db-a782-0a1ba4c75881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab83411-6102-4f7d-b174-f99ede5c993c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fc981c-e72d-4037-95d3-f754103dcbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd8d23f-4ab7-4b6d-8c23-11e0edbdf2c5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57084ff6-10dc-4fda-b581-d5db1d0f1f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ff0a34-d78f-4d67-aeb2-c708b563a37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c813d4cc-5582-4551-834b-7528ac01b32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb38ebb-81e4-4774-a613-2e77f8abeb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c0dce5-e480-45e6-8d6a-09087c911040",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a99bb17-7078-448b-8196-1dadbf58d0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045249d4-811d-40d8-b7eb-1c425d7d43c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f9f4d-d944-42be-9602-f95f595b85d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f5a3f7-b6c8-4fe2-84c4-f58ff73828e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2784a41e-a401-44d5-85e8-51f14ce4daa7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133e9b43-1e24-4bbe-b1e0-a9b6f64273fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32463d7e-77ab-424d-95f3-e73c64759b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd41ad3a-20cb-403e-a8a1-9a00bacaed06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf2ba40-7796-42a1-ab23-c88e07000f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d15260-a1fc-43ad-96e3-0c167f756185",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f201ae-6926-4c3d-9562-cd93a0aad5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b8e1bc-129e-46b1-8301-5d5399c37a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e162c8-b841-4a9e-b13a-791db03a73d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8029a136-3eaf-4b28-a2c7-de316a3e154c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b508eb-9c50-4d70-883d-dd474bea3d49",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0914237-7c90-4fb1-98d1-60b97906bdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565da46c-e6a8-465e-9429-61d17879f23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5968e5-b203-4618-bb66-5dbb79c29cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8e540a-13a1-4ad3-bc0f-801f6f4debcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4e8122-4d31-45af-b1fe-15d6b6247a11",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cb3056-b780-4927-8e9e-4bd81e459ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d9bc99-34ec-4f5b-b884-fd22367688e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9882b783-8bae-48b2-a016-50c8252b725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "385a2300-03f8-4fa2-9f87-354959644894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9daed5-6ddc-41db-9c86-58afa90bc0ae",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b7438d-ea1d-4afd-bd29-6805c8ea088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d64a2e-d518-4906-b31e-37e371f0276b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbcc9b7-3fbf-45bc-8e7f-2915f36d8f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebe57d3-be2b-43ef-8bff-bd7a6867672d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748b0bad-dc2f-4103-a547-4abe4fc99c14",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a083c5-c578-46a6-ac80-b5355dbe1ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912c61b3-c6dd-4e41-b25a-987d989df2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5029ac47-5187-404a-a26a-175a187daa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9412dca9-17db-4f3b-9c26-d280c180c82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e306db-1266-4d92-b48d-8797d1c366c7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73571d0-0f29-4534-a3ee-e19e9e9ddf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb505a6-72af-483a-83a3-8eadd2beae98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fc2f3f-955d-4d7d-958e-794447900f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d437eb-5fa9-4338-8a49-f0d0c5ea5b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbb2982-1566-428f-bcaa-e290789539ad",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe5cb28-c39d-463b-b088-cd347c9193e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36316ceb-4d0d-4b09-9eab-313f6807fc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a6cba7-4f0e-4c57-9e03-0de36bb3d137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "810b8348-b10b-4001-8b7f-cbf9d4ddedbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930db49b-bce4-4ca1-a171-79ab0a170963",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e51dae1-44aa-44a0-afad-feaefe4ccf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec358fa-e562-40b1-93a8-6c9d5a18a6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decdc7b7-6553-4157-97c0-8fdec19c22a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "163625b3-0b82-483f-9b73-cc87cafee8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05e4bad-aeb2-4b46-b271-5ead36c1c8ad",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0a8a50-ed1b-49ba-97dd-ecd34fb222d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534064a7-3eab-49f6-a5f6-cb9e58488633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57063404-303f-4520-a045-54f13e23ae45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "21a7a216-95d1-44c1-80d7-717574efeca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e70da87-cb80-47d0-a252-cc6a83a49484",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3603d5-b48f-4cfc-8c00-3f093cbc8fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f87bb84-87cc-413f-a478-35c7dc98c4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c65b520-9681-4282-abc5-003289577c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b06208-a7be-4ca0-b849-556ff3e1d355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b940bf5b-9266-47eb-bafc-fea0b5d3551c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844c983a-b4c7-42ef-92f3-ca8ecca9fed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f334d816-00f6-4a0d-8730-7db2fe63ec46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f275bb1-981e-4ac7-962b-9852873c8ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e79c6a-ef98-4657-819b-8aea66aceb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ff0e51-c770-48a5-9a4f-cdf8a6fbaebc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffb0abe-166f-451a-963b-ad4bdea68eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c06fc4-70b7-49a4-8e33-45ef4b7f8302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f88f3fa-bf25-4e7d-bedf-8e1b8b736c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16eb5505-6d7f-445a-8b94-89ec812423f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35149298-f94e-4608-8dde-c10060353137",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb759f37-b9aa-49c5-8fd4-fd7f758b0559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568b9de4-305a-49d3-8f9a-5b633dd108d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c1f00c-57c0-4b43-be79-e6082925a023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4894a207-56bd-409c-9a5f-2d36070b8066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec11b4a8-6d92-4e56-b525-e6dbbac9a8b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcd8765-0b29-4bf6-a8b5-f1a84fe7098f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5afd305-1461-4f72-95aa-4c89c4f3b2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f09a2c-a656-4df5-84e8-1480bcbbb336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eee21441-b08b-420f-a6ed-2493b5723798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8b1315-c43f-429a-a11d-5bb2f2609de2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aafcca-1ba2-46a6-8332-c929c41d0167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ca0306-98b9-4b2b-811f-cdfa4710199d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de32791b-3c03-4264-98b7-26f10825865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c82c04-adff-475e-966d-6cb851abe35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842ef462-aefb-48b4-976f-dd8a07f3cc31",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54560f09-f588-4810-8a25-56da538b8acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a764055-907e-4576-9796-306c6004e6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82658bd6-d31d-4600-90bb-3374bf38cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9d3e7a-e845-4bda-ad86-fcaa4611198a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d538d6be-ca1f-4ae2-871d-f922813917fa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990769f1-bc3e-4e38-8a1d-7967288ed7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7119d68-9f91-4f9c-bc5e-14aede691a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f08179-a29b-41f7-95c4-f83f4382b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "791e2cb6-cc83-45d5-8718-4a3c1edbedba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb06d30-7758-4d3d-a6ec-0d05b6427dec",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da66f2d-046c-47f5-a008-6c39a55ca850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c549a54-309a-4444-97ad-1cfb6a16f67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab190c5-e324-46a5-9b8b-a7390b5cc2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c486b5a-7a04-4073-91f9-96ea5534a420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9a4cd8-431f-4384-a1a5-9e62691f6391",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791f7883-887e-4d04-a5c7-32c6609dc9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6351620-e5ba-4ab5-af64-fb629aedfb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae0746e-f531-4415-b912-b9e16367a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84974293-8e8a-437b-b34f-a38b3c670e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf91e2f-3f67-43cd-9010-3400312d0b89",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de1d75f-0448-4e5a-8b4a-ba7c1711a018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233da5b5-9dc4-4465-adb2-d5bcf0e91df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2897240c-82fa-488f-8b9f-47cfb5f84964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64594124-1f6b-407f-915b-df68c518d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76f8e8a-e63c-4bf2-89fd-4f250515868c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8c2ddd-70a4-4594-87c3-f41c4fd24d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec956ec-3eb0-4531-8792-7546d6e92e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bbba5c-2543-4383-b876-8efd6d334590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e5e8e3-6923-482c-b123-35b6621aac0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4eaff8-db0d-4ce1-a5fd-722ec2a21152",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e14e70-da0b-42e3-8d18-cc984bef58ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74241b3-22f2-4be8-8232-2bec522e164f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daae57da-5b5e-41dc-b7c3-66f3a777832c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dd81bf-61c0-4d5c-aa94-c951da61d5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0a8d02-f07e-4a6e-bf8d-5ce4c1972187",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d69133-0147-49f5-a4be-56f89b23f97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d14add-0c17-4ec5-9002-76af81b9a118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d74c94-6152-4ede-b6ee-d1816c304b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec1c21c-d84c-4057-8c5c-71b049c606a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe9241c-1351-4716-bba5-494e70bf8ec4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee980c-985b-4dda-a999-dc5917b3741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3558f27b-b220-4efd-9544-641cd288fac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddd719c-e7eb-4ac0-be53-3bf5d99d9ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa4922e-f6fc-4e68-be5a-f18cd598e5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d14a127-a740-4080-b437-5858023e215c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed45b097-1d51-4a95-805a-650a967e0c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38247ec-c275-4e2a-a27a-7ee3e53c1d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f4fd5f-9bb4-442c-aad2-0d1fe881f471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8482c00-a00f-401a-8103-367355a16448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94df16ae-460f-4c1a-9630-ddf385f55377",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07421e0-71ac-4085-bd28-ccec68269c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e47e5cb-4c1c-441c-abeb-6f0555450b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a1687a-6488-4684-a54c-8228dc2fa71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bde60ec-bea3-44bf-a964-d817e967d184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a3dbb2-5333-49c1-beff-73bbfd5b5631",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef97427b-e06f-4964-af95-c01ae5cbee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962b4eed-b15d-42df-afaf-bb47a302217c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc71ac6e-5b05-4640-b1a3-9b80e5b55124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b75f748-79ed-4b89-a3e9-34f60abaf34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8936f6c9-7107-4be1-8337-19d15fe9ecc4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3a662b-b374-4d1c-a5a2-8de4e22ebc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8bacb0-62a2-412e-941a-24d4cc735032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca2ed51-b60a-4733-b992-382d1a122b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5cb6c6-f15d-47d7-bd54-683af2537dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f4fbfb-ad1d-4177-9f59-907a4bd2e61e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f107e3e4-a2fa-4262-b168-46e35f008fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2da3156-4a2b-4902-9d08-c9cd6d43d1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdd609a-7c35-4212-9b24-e65d174a66ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad0f08b-50fd-49f3-9ca8-3ea8697c34b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a9a708-10cd-479c-8ddf-b94fe27d0f70",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac64d8d3-bb83-4b7f-af33-ed7d0c7b8765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b976b1f8-046d-4c9b-b081-61ddfe5cc336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74717c34-c430-4e92-b9f9-31c2dcd93b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d5a482-0880-41b0-a0c3-be788309623d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb44cac-da1a-438d-8b28-450694846688",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07348604-1be9-4cfd-b969-32823d746147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c582eeb-3920-47ce-a1ce-e2ffb2841574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45835d3f-bf8f-4c68-9460-b5b2e155775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01dc8434-ee9d-4949-88f1-5e7367a05a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1a8663-adae-47aa-a5d2-434547aad49c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dc3a03-6640-42d9-908c-1d740ae1788b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785fe740-124b-4581-aa54-048e8824dc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af840d1-6b24-4db5-890a-5f09d16e0344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0152408-c9fc-4c4c-b7cc-30ef4e82211e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00792b7c-672a-4c02-8f23-eb37e4694da5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfcaf0b-eed9-454a-ac94-98175191c6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79f3594-f548-41f1-ae81-63848405c4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c5368a-4b11-4bad-a71f-cccb204e20bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb0da55-5bb3-4ec3-b283-b5ed0d0f0a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8eb057-b105-4ddb-b3a2-c61a6019487f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c72a8-6db0-4ecb-a4c6-020ec8c65f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0881e0d-e34f-478b-b284-2261867c178e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f96d97-6a30-485c-a7c7-4ceb78f3bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cc62ff-94ad-40d9-9e57-cb4020076c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f861be-6187-49b0-92ca-ba8ae6aa1da9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e161bd-cc89-4282-b42c-7ddb3f515e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e791219-9fe6-4312-9405-87649425db6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a067b699-5706-4759-93ec-7cadda1ff1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb842ab-c448-4f76-9e2b-1b876a9545ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f04c7c4-085a-4e21-a51e-c8a65845c62c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526c6d21-163f-4216-b04b-3a08c2b2b8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabe3619-5a71-4b27-9b49-0d687aed12ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6702b8c7-49e5-4b83-8159-500ee73edcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e22f251-51df-4b27-a7bf-1f1256e768cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b9aed6-6760-48fb-9567-ab29751191a6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9f44b9-bb09-472a-99d8-e927ab24a561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87339fce-2337-4230-9c16-7366b3af698f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b323f039-65d5-4872-b6b1-607e8176ed63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "336ae044-ab5c-4ca1-ac0b-e6c8602e1b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182f9b90-7070-42ab-b534-2422a1bd65e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f014a36-0e30-4639-a196-1f767efbe8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346b6423-e6ca-4b0e-b8c5-3ffddb44fafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50513765-5aa4-461e-aeba-941789ed7e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8501d286-ca0c-4da9-ab23-d837fd1a0ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0b1332-ef05-4e06-bd46-5805d5863fe4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16029b6b-907c-45a5-a0a2-c26af3e0ad5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e74c41-9f45-4851-8bef-4b73b86b67cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7fc810-c79f-42c4-a07c-8172e2038fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02b0e862-a120-4608-be17-67dfc5d5b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7034ff04-b600-422f-bc53-da6dc030421a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50a6e13-5f9c-4520-93f5-16f4f6c115f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93184c8d-b40d-4d99-b377-48e5373a2c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949fac61-1168-4635-9c54-fff0479b5e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3b58f0-aa0d-40fb-8708-86d4bcb19f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07215446-8199-4a47-8e6d-1ec64a89f3d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15983182-2590-4f47-b64c-0411bdc633a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675a649e-ee97-44b9-a431-0a5a4aa3f61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c8556b-215b-4417-9bfe-61e384951db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32b783c1-89a0-4583-81dc-6083d17323fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c400f7f-d501-4485-9629-22601412bc60",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b0e464-2a8d-44ed-95a5-9af28f1a813e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8a05b2-ce68-4396-bd85-86b1657d5002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a22798-c650-4d1d-8ac4-202efae2a00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f273ea-84c3-46e3-aad3-bfb3410dbe66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59fb35d-b496-414e-bb51-02c09c1d9292",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fd4153-7846-4d0d-adae-4b2087a83e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28acebe-998c-43e8-9926-de19c777170b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cc7034-b9fe-48f4-88fd-33b19745c4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81767441-e82b-4c6b-afe0-299870bafbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e06f1d-f1c4-42b4-932f-6475e46aa6ff",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2194a7-8654-4035-9bf6-45943e70103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f98060-bb5d-4e9d-87c7-9524320bdd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c6e2c9-444c-4bc8-8446-1008364d533e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8c63b8-4ac0-4f8d-8354-928d4db0639f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6e74b0-da0a-4329-8379-46a184206fcb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e3c4b3-7696-4e8c-930c-c545f9ec2e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e318dd7-9231-4552-92ac-f27c84f3569d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324b1cfb-86d8-41b8-b8e7-f72993f31431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48ff9303-e678-4c55-9cab-241de1d928bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2c3a8c9e-0e34-4344-be36-d7f954b8f2c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb9503d4-2c3a-4db5-8de0-60d2aca3b7b1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646af9b3-b26f-41b5-8b43-cc81d94d24a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0403cad6-4b01-42a4-baa2-9b709cc396c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb52f0b-7197-4ac8-8512-1ef426cbd282",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a628638f-ff69-4040-8551-067e4ad9c2fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3919cfb6-4419-439d-a733-77a69f26a4c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "650c3add-39c8-4ea4-a038-bea36f1af6a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72e14953-4a4f-4752-898b-ef739bf93115",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "323913f4-f49f-4074-be4a-63c6fadb8aff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2cee785-b70b-411a-b36c-a043cef96497",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d814e0a-c0ae-431c-94f0-bd283a723c8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b14e2984-d51b-43dd-ad47-02fa8e7478cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b9383ab-4980-4bd9-bd49-fa2f4e9c18ed"
                }
              }
            ]
          },
          {
            "id": "b0ca6120-89d2-4237-9cf8-7fe5e242a127",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da4f3de3-ca06-4edd-872d-cacb900af7ff",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dd27ad69-482e-4393-958a-c485d3f778e8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1941ad-5bb0-42d0-a371-ed540e782249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15ae6023-03c6-496d-98b4-9cdb9825cb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0672dde-6f7f-4293-bd1d-08e5ad6cf1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3875ac-767a-4a39-86cd-55de4dc80480"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c74a7a18-c490-46e1-9b62-78ab10ce8861",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1024cdc3-9662-414c-8a62-29bc2f58098d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03584dfa-efcc-413d-a2cc-c7f7f9ac6a8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce399b7b-df2c-4c4d-8d47-b09e7fdf7088",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0482079a-c7e2-4ff1-b993-7dce24f45c3f"
                    }
                  }
                ]
              },
              {
                "id": "99a9fa60-1fd4-4aa0-8791-9f137f617c1c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20a3466e-fa80-47ba-a8c2-0babefadde4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "081ceca4-cba1-475b-b57a-e9a88695c9d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fc0f4e1-3ef4-4735-a728-b9abdcf358ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a8ac552-e317-42f9-956f-87323efe58ad"
                    }
                  }
                ]
              },
              {
                "id": "b63adc1b-4f47-43cc-af0d-58e207dd24fc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e157687b-db9c-4a39-a967-045e4fd9490b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf116af1-ab6e-4567-81cd-000439a44c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4c6cf86-2077-4687-b28e-c905712cd710",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d462f39a-144c-4fa2-b005-75fa0b948d9e"
                    }
                  }
                ]
              },
              {
                "id": "19114714-c940-4f3f-9d1b-3df92e76f6fe",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cfc2d8b-fb91-469e-b0e0-926448f8ec43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dec1bc7b-4205-4cc5-b1c2-13532a0d7d57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "147c415a-5add-49aa-8444-37e11cd8fa83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1a19fea2-76f3-4924-8bd8-720c1ac68d2d"
                    }
                  }
                ]
              },
              {
                "id": "72860c55-b91b-4dc0-ae14-49e554f71f43",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18a846ed-d539-4821-be49-cecd1dce22b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62853793-1221-42ef-ae94-64d2b3eb9c91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba20123e-6973-42bd-9cfb-877a8f516cb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "84e267df-125f-420d-b02a-ba4b5bc39c75"
                    }
                  }
                ]
              },
              {
                "id": "133dd714-02de-438c-a015-2e07a7ff7e19",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51c33fbb-fa6a-40b6-905a-86c7bbe3605e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d83798d-a66b-4fde-9678-9b0ea6681b0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc3ce26b-3caf-47f4-95da-0747228f2e28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01a48c9e-3760-4fa6-a32d-a05ecd4bb434"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80751df0-0996-469d-812a-813aea9ccf69",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8927f36-9abb-4934-ac7b-f2ce8f810d66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc672c4a-afb9-4f20-b4ff-3ea37acaa9cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50f45a2c-4aa8-41d5-ac53-51b1fbfcd992"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22ebda92-c096-4223-b960-6f3a86f47deb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "348e52a7-f784-429e-814c-6f7306bc595d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06bbce9b-72be-4e42-b201-4fb8d59c2635",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf947f91-040f-448f-bdc5-ea44743aaa74"
            }
          }
        ]
      },
      {
        "id": "8e58d515-1450-42e9-aa1b-8ecf9a6d2f77",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f5df163e-51d6-45dc-a5b5-05a1463f4eff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6567e9aa-4cfa-458f-8338-ab2a768820e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a28acc03-daf7-4740-b5c1-1638f619938e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7b336a-081d-4098-88a7-107e60c3da1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750ef566-1311-419a-b2e4-f2e5f634be0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db0ed73-f21d-4449-9434-d04a3369a8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3036a2-17e0-4ee6-8e70-b0191ba76a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3463ca-71e2-4677-9fe7-06f458108f45",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6638c8-e75d-4caa-a71e-a486132bfe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b9e1d3-1343-4f8d-8154-0e392a1c3499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c2e745-3a38-4be5-bcd5-8f9b34e3408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0582069f-cff6-4a1e-a445-5402ba8068e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf172b17-db39-4221-ac6c-3a87c7340398",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d7be72-9f2d-46ca-b525-52ba765d1ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1efdc8-ebd6-496a-ab69-13389f2c07b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cb1ea2-4695-4c7b-96dd-0911aec768c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c46404bc-610d-4d44-964a-2efe39cfcd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2407e74-208e-45ea-8766-1149cf6761c5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5865b1d-03aa-49e2-80b6-2aeca60ac3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f822c038-9962-4c75-be46-28505a92aeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6e7e41-1e83-42fe-aeb1-0f51bc032432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f509c96-9e59-4304-91be-7550dfc63401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d806948-5e9e-412f-aae3-5359594fe483",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c264dff9-0569-47b8-9882-d6ab286770ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcf2a99-3837-4672-aa7e-5f17032acd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83edc7be-153c-4e03-9036-0f9d974fd657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e693369b-cd3a-4be4-9e5e-f03760c52698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b7aacf-dd7a-4a8a-beeb-5c64e8b28c80",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd74d9d-6b45-42d7-bc23-3cd61f7392b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5f14b5-2823-4fe7-9601-cec616ec321c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182795d6-2320-446e-9063-338d645be5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "892577f9-8c87-4728-a011-9835e161b6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea72fe30-6840-4a72-954a-8c8e28e34fa1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b965ff-d8d1-4ef0-9a8b-f9ce02650d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97bb874-f1de-4a29-b3d5-13c458311d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0933d8b-e093-44ba-a5af-b4672e23bb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc7ba43-b569-4214-b062-cf2d1369b2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ee218a-397d-4719-a09f-a61363bc27bc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb9b324-c756-4b9f-bdda-07dec5beb3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bdb5e7-4cd3-4b33-bcc8-6a88f2a6fd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc666502-f8a5-4749-b309-f114b8c2144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d5b255-e8d7-4c3a-9c74-ef1ede6d126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b68186-c0f2-4fdf-a395-f3625ff771ea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e01063-8f04-4b0d-bc54-4b3fefc441f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614294dd-5c7c-4edf-a417-2d8d7f1253cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f298cea-4d69-46ae-aa7f-38531fe37e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e11380c-7da2-4216-8dd1-cffcef835976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d53ec0c-fa2d-405b-9e5a-9b6efc88c5c7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3064c77-23df-42fb-bdd7-2414ca61a57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8b5f84-6ec5-4819-992e-6bf75770d716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554a1388-5749-4df6-a7de-6dce54421639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b02fb60f-feb0-4a48-b953-2994d3918753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432123cd-2cfc-4fd5-9b50-d4974e26f35b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f12a39-e724-42b2-ba78-a451759f103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b27502-182a-4db1-9196-2cad8e5ac1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93aa124-fdd1-493a-96bf-2f5ea8ff2b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f6f401-332e-4b8a-ba5b-5709d02a0bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d92941-f2e4-4ca2-a27b-5e4eb3477ac0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f433592-fcad-4b53-b9a1-629f0222a191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8a2b7a-9c96-464e-a159-a6fe1b2400b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa9a3bb-cdc9-4549-891b-4af011fcd915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8400f94-0424-4289-99ed-d62ef3a5a87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a720410-4727-48f4-9bff-1a8339bfbdac",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5218fa-05ca-4f42-ab88-483b062e5d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b526592a-53f8-46ed-8e30-7e9bfc437b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e14ced1-404d-4753-9c8d-0f4600c6edc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ac03d8-0ed4-45e5-b90a-cfda1cac9180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a913db83-258c-4fcf-9eb4-a5f72a2ecc49",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab464c37-7130-48e4-afed-7bc6f6d2b9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94450d91-a7f4-4964-8da0-37864598f490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df43cf24-d982-488a-9a81-bc8ac1f0d7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99ad366-7ce0-4f00-a92b-12784196b6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb96e048-a058-43f2-a576-f0e0a20c8a47",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed51dc3a-f873-41d8-87e3-90f0c7f8d4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd038bb-b9b7-466a-a674-f0fa0dc5897f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262351a1-f1c2-42fe-a687-3c092b0b0abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7eba1a-8e72-4a74-a28c-be7cf08088f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5977970a-ee92-419d-b9ec-dbc1b27f7932",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25332c9-3ca2-4c10-830e-e145c5a5e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e66f43-afa8-4641-9879-681d325a6885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef636d88-ae61-45d5-849f-9b8de867e697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7403e9cb-fe5f-4561-92bf-17f29b94091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d54335-3735-405d-9a55-519ca72a90c6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddb946d-baba-43d7-85ec-76f2c193d18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df24760-c30f-47f0-aff9-e95521451da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cf3aae-f13c-45dd-b71d-e72b0fb4185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e96e37-c6cd-4a2f-9ff5-fb0d1628689b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422b1ac-35e7-413c-a009-bf76b46d4d46",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ce6875-9523-4c75-9ef8-27afcb57bd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac990cd-4682-4186-b4d7-e5c5d83a5107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00212d39-4707-4184-bf38-1a4efcdd5665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f2f059-d1dc-45f0-a198-d11ea4415dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e878deb-5910-4839-b8c5-bdd9a7f6bb24",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c66789c-cbbb-48dc-8769-97a19748ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f63bd07-21f3-45e7-8a7d-55a971841bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4263fe6-e536-4d76-b34d-2a0bf2b6a520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23380caf-18d7-4c17-920d-afce5990e5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac317958-1c22-4549-aba5-bfcb4d7fcd18",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650c7ecb-fa49-4a9f-be95-c61d1babf36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d476e4-b8fc-4aa7-9598-720c8704b72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235589e3-cfeb-467a-a42e-41d995b9ee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a25b1b-b0f5-4bda-a189-6f94800b99a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9af55b-71d4-430f-a9c2-5d3b3e1eb36d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b316f4ed-9616-4c0d-bd62-a93b2a94e68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5d3f76-4d2c-47e0-83ed-cbdfeb8c9358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab9f77a-c766-4185-bd8e-3143c4c30f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ff3019-27c8-40a3-87a6-521f6eb27230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e71eca-1eeb-4f7d-86e6-178e0efbe718",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c912bda-316f-45dc-89d5-8dcf163344d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d478ec-86e7-4646-b9b2-f61cc0b5e426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb29200-c4aa-4de7-8f3b-0d9023cb7270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a309762-5bf3-4ce5-9493-64e08e82ee5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43729ee6-dc29-4df3-8e1c-a3b00db3e348",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a600d1-594f-49b1-8637-74784eb41bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10662681-36d1-4e86-8221-c8d90b1f8204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df00114f-c007-4b95-a823-8e75eb27f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c9b075-5e7c-46e9-9c19-6432c4ceac25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098dc246-ce92-4d2b-be7a-71e05e4f5cd8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958f7132-9ca7-4709-ac91-2549acf7b05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f63824-e671-436d-b6ac-0c628b683897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6500b23a-ccf8-42da-abda-c211941b7231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fee0a1e-8443-4d05-98d3-d1f776aff86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a23057-eb7d-492c-853b-c384dbe96fe9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189cf77d-2a1a-4aba-8b37-4844650b33be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9803de60-1900-43e4-bec8-6570a3148809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514ced61-2f51-417e-b507-013dbaaf6d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c599c69-6e55-4a08-a535-7fa9ecefe562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa6a25e-61b8-40eb-8e0a-f7a9bcdb109c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b2778b-b620-41ca-9f2d-c77d34987f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6c175e-4169-4955-a7a3-f2b917fafadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcf27fd-f2c7-45f3-a089-429f7fa6a442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76879ca2-b0ab-4c15-81c5-c8515560cc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748048d2-c867-4ddf-8e9c-599a3b87eda5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baad1db-7c3a-414f-b3f6-adc12ff7e4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cdb9a4-d5d8-4077-9818-9974e9d366b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c178762-3d61-4b79-88e5-a609d849c75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e02199-e551-44a1-937b-eb0b98edeb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1558ce29-cb02-4503-9489-5e265bf31386",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9943c2d-efcb-4da8-8225-c763d1e045c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca5a18a-f1dd-4178-adf7-208bc9fd8411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ac9054-e4ca-472f-a7d1-51980dba6a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf94b13-6908-43ed-92ac-d10e58ff15d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2a3c5a-826e-4644-80ba-89cc93a641ae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf24a86c-6e1d-4fa8-9e77-475946b13fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa8b9a2-17c1-4b40-8814-4885e552d55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e2ff2-b7ce-4c9c-9b4f-e28acf82f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9501bf24-faae-43e9-a702-f6c6a2e0fd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b6bf67-5419-440e-a8c4-1d6ff757cb92",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b063d6a-e237-4dac-8183-fcfd7b5fb8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d35475-2d4b-43fa-af59-e7bbb08041f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456efe57-14d4-4f82-828b-ee34281c3a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d4df68-4048-4591-b1c4-a9ca07e1a533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ad4405-59a7-4cef-ac87-fafd5d96450b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889f9555-b781-47f1-a39d-4a96b1a4952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6df8a44-a4f5-4576-baf7-2d3fd1224116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0a99d3-5846-4637-ab47-f6f1d8046c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab94c1bb-4231-4d8b-938e-ad87bb6f923e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a60f3-e40d-4c0d-ac1f-2a04a01d4650",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210859ce-23fc-4feb-ab90-eca8fb0750e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8fcd5b-683a-4339-ab43-2c4af9670ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf37d61-2097-4ff0-8562-7519491e5e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a801b6-927d-4156-aafa-a1a85a68404a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25b6aa21-9ca3-4f71-96fd-ba43c532dfe4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1646f9a2-696c-42ba-851f-85b4ef3ca1a2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcb936d-4df2-45db-a236-d6e830f28c28",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b3d24e-3e84-4bb9-992c-078d11dc4d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b53434a-009c-4018-acbc-de314f0812ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "510f135e-2381-4513-8fd7-a358148c03a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9a5a441-4812-4d8d-9fee-aad9b837b3f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0e687b0-bc4e-4768-bfb7-98fd8e735a93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a411fb63-159d-49ef-b313-9e75a4efd805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df399871-0fe3-4ea6-8b17-c5cc6fe5b009"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cba3689b-c33f-4549-a94e-aea2e3120381",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6640ac8a-445c-4434-9f85-331548f24c17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95426a2a-a271-4446-a412-b71e16ed27d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e76670b3-2cf7-4ca1-bf7c-c94bdd8c2455"
            }
          }
        ]
      },
      {
        "id": "452d6347-57fc-4dab-ae79-db98d6940b71",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7079df33-0675-41df-bec0-71a170ef214b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "482a76d6-cda1-4464-bc82-ded2b450adbb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd23163f-5bf5-4c95-ae49-0efefe080284",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ecf471-3e0a-46d7-a764-875b71da5ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa729a8-db2e-4099-9f43-a0adac22dd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e975dc5-13cf-44b0-bb6c-e811b49543ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd273cad-0b2e-4c78-82a9-e27454887e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59173ab-8c00-49af-9dcb-d5c6f009d196",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea498cd-16dd-4609-8e8e-22e5b9ae4604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365dd2c7-1214-4b65-b9cc-fc8e8557932a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67787437-fcc3-4acc-be1d-260866255b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b8d017-eee9-4926-a18d-836b6807206c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f49e05f-a147-4359-b5a0-f3fee5617ce2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724e9561-a65c-4797-9732-a395099f3783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40386545-c80a-4ca0-af5f-94c164348c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e99491-17ab-4dc2-930e-9beca7108314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2254cb5-6cde-4c43-b3e9-dd81076488ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2c7744-7155-4247-af58-cfbf2a414add",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0926ecff-bf97-4364-a056-5222151cd84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40634f85-6a40-4586-8988-889e5608d33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c51b879-5fa0-415c-a681-350b347b426d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c16cd6-6a47-4213-b3a3-f0e6ae610432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d88cc2-6a0f-4326-a243-5042d3af7204",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a389e9d-151a-4f78-bbff-42718b3121b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db9fe28-8a49-4a71-8a12-53c95a8358d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6523607f-652f-4cc7-994d-c7c202e3c46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea28821-09f7-43ab-b8ea-7e649165aac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f911880-40ed-4c16-ac32-a2931b184bbf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc30d7-360d-4b17-86d8-50b2d2b0bf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17518826-9ea4-43e1-b00c-1a30aa633f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd4fd68-6ab9-4168-a8b0-73d2c6531fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c55f69-fd29-4eb7-8344-0d87077030d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eede94d-77b9-4925-8689-b88ffb00d40c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ec01ef-f3f7-44b6-ae3e-6ea8b1d4218f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6309591f-d1da-4ea1-a82e-685d5c3bc839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e80492a-6521-4bef-8b20-5b98575a1377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d321a5-502a-462b-902e-e29305d85071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9b6814-30ad-4b11-a046-e60462456acc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1132d1-bf43-4873-9dd3-57901c246f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d88746-1a38-4318-b736-f13167265de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5fa23a-200d-48a6-8150-1416d44f0576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93fd3702-7cc9-4071-b256-3f44e75210ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b838cbe-bf13-4091-84fb-a729194aa5e5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b66f57-a9ae-4a7a-89d7-a458a9c7cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e9dceb-23f8-41ce-b31d-728d938621c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152446aa-ea71-4289-83c3-73ffb1a5b890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5579311a-189c-4cf4-bff1-de0e281ac58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42327c97-cd7f-4081-9b63-b483500b3fcb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ebe4e8-26f9-4000-9f20-187358a63194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e942350-9db8-42d7-b7b2-dd60c1d17c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca750ef-e108-4be8-bbf7-1d3e79c7cf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb3b284-6871-4891-9906-1f55fd4e673e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188d21bf-6113-4205-90bb-3c8adac64d4c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3fc5ee-8762-4444-b4be-a25d5ef6dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af4147e-5e34-49c1-8d14-72a1426e52c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ef1c5a-24e5-4a32-b3cb-85446afb4b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38fd5566-b195-443d-82fc-e6e62d0a230e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1df023-e98e-4db5-aec5-993ebf881007",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad50bc33-6f67-4181-8c7a-a4448f18445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f749b9-fbf5-49a8-b7d1-4b767ee2166d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed238b9-9153-4ed0-806d-33f7988cb85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edfa8aba-9771-4a21-83cd-08003a09a9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f46472-1ee3-4233-bd93-3f572f1e9ece",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce6013e-9b45-414b-b8fb-bdece08a39b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f211f27-8183-4e0e-bd6c-716fc0e80e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef2dace-e3f3-43e0-acb2-f98a5dfa2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5471f0-79aa-42ff-8a44-50791928cd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45de53d4-3b81-4006-90a6-449710fff050",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac1126b-a868-40ae-a6ce-f671280373b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffde5f8e-06d9-41ce-b1b9-34440a9fdbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f48f25-58a8-4cf8-8aa3-d3c168ef65f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6c2c4c-ec10-4a05-8c67-075ddee656fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bd2f97-ab66-48a5-be5b-23be9e4bb1c3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174e98fc-fd2d-46f6-8b81-d7cc01f22710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ba29db-f14e-43c8-b090-67b19e5b2ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940d9748-2638-4884-8d1b-345288ebfea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "43c9431e-114e-4cfa-84ac-c7ffa9c4d6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab57155-4095-49fd-8a6f-c659f5b397a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3ec103-25c7-4779-9754-9e74e7b55c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a3e473-853f-4351-99e4-7f02a2f0b525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cd8761-da03-4b03-b985-243433e87c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6792640-09dd-4477-b731-be52b2ddc6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194ee28e-6283-467e-bb90-ec70d76c1efb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b801e2-e7b4-488a-8f95-6e4fe8fe920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3169a2d-6709-4430-a35a-85a00330279e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48090aa5-7426-42ed-91f7-a5fdb818f763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6f81a3-fccd-4d7d-bf2e-1cd0b1c65175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7747c8ad-6645-4e3f-bad0-3b54c51f9106",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf66d68-d941-42cd-b975-0801af1e047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b3c576-ccc4-4bd5-a28e-68742246e137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a065f12a-bd7b-4b42-b19b-b58a13a7d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c720216-e94b-4e7a-aa72-948bb0fbe233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a03a53-180b-4db9-8224-0ef58f079ea6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13dc10c-3e74-4b8a-9075-5ba272980b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec73d3f9-9843-406c-a760-f23b29e80826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63edeed5-bdef-43fb-a80c-77aebbb41967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af28671c-fcfb-442e-aab6-725753a325aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2606b7fb-2647-4150-9988-da38b25b568c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ceca43-b84a-4917-b732-322590aa85d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5892e650-8093-46a3-bdef-c3f3b16e304a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4823a0-c878-4e44-8bb4-23f35b2ad737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a850a6-dfa2-46bb-9e4f-e39e1403ab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805c3b64-d69a-40d3-a3b1-dbf92c65754b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac775db9-5ab0-47a1-a4eb-eb03aca12c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae02bf9-8a0d-4e3d-9ee7-cd91699e98a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aa94e9-be83-4f4a-813f-8b586496d25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7f802e-51a9-4120-a30a-8df75b8860c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa39657-000a-4a9f-8f64-fcc8d4358e28",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01f5cc9-f953-4749-b403-34684d3c9d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab32a098-cc42-47ee-a207-17d91931415f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e89054-4a36-4b48-a398-af1acbf8029f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f58d4d6-b113-42dc-ad49-f008f45d11ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ef06d9-5e33-41c4-a733-356dbf775bc3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082deaac-4b29-44b2-851a-264f908d1ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a507d260-677d-4654-9931-ccd114f72ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9030b87-e0a9-4c25-93fe-478c7a070d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf96de09-62c6-4e20-b525-c31690c3fef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98102b9-5640-413d-8427-35fffd1b8a24",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfa5a31-61a9-417b-a3c0-e0a37594db83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862c333c-f262-4163-926c-1888c11b51e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f45033-b15c-4cb0-9c14-c08d27353378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e31bc843-0fce-4aed-92b5-65da77f46acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b37593-5fd4-4607-9223-441797ccb090",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ee2a22-e692-45d5-861e-829e3cc3deb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd8905e-3683-4afc-875c-7e7a1fd64a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1cc773-e9da-4f1c-869f-51cfd6009f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4996c32-108f-4a46-919f-21249302f8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8b2f30-c23c-4a57-a232-85371fe2869a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a84612e-b2a5-46bb-a983-870dadd25643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e34b17-e368-4711-89fb-4554a129db82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abf62b1-d309-4fab-b1cc-dc08175ca562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e44497-4daa-4fe1-ad38-517fa8f1e4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03af88ab-9b53-438d-b513-fdeec8b4dae8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcdcc30-743a-410f-b791-bb2677086570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5913f7c-00de-4ba0-8187-f1e8311a5614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4efd62-f2c4-498b-a8f8-274568cf00c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39a66d0-89c4-4122-857d-367340fbf8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80493387-6963-43ee-9457-7af46eda1215",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26699b5c-c8f9-4381-89c2-614068f44b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b87c5f1-87d1-49df-a23c-49fbf8c33feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4aae32-68d1-4f23-a0db-b4d11880e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcc17fc-ba96-4386-b62b-24663317fbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad2f859-eb71-4dc6-b993-b9c5926d01bd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6b9e3c-fa5e-423d-bc80-69a940b707b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321a47ce-15f7-4d0c-aa16-9458d9bc1558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736da6fc-4e1b-4b01-be87-6bc04087c129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93b3a5c-439a-4fb5-8a24-7f07ed856935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb03e36-be76-4083-9dc1-7ca4456a0b72",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec43ce0-d522-4ad2-9ea3-8aebbfbe5a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febe73a1-6d94-4031-9b8a-05c7e547dd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f238068-0273-4bd1-919b-7c6c276f4f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9068de-27ec-445b-897b-635e24864b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e1b1c0-a1aa-4f82-b97f-ed858938db1a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b159cd-d9b3-40fd-b71b-84078ad3ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4d7fe9-294b-4693-b20b-d566e5f60f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a02702-75f8-42fc-8b6e-082d9bce4883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade1d46e-3c54-4971-93c2-431428c89889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b1ac6f-d8db-4787-970c-f3e0b5ec9d3b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39e9880-ec4e-4581-8a99-577bf07f8ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4b48f7-c540-4bce-a073-f8794b3a44ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c673a27e-03da-49cf-839b-53eebebf9d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e53f49-3065-4761-91ed-9c9d6c78a548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a62da8-794a-4d82-bdc4-2ba1a9e1bdc6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e9bb01-928a-464c-9213-f65cbf278488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb487e89-587e-4cca-a216-413afa9a5d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe186468-f3d2-49ca-b036-fcac8466afc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63ec94c-0ad6-4f8d-9b23-ef3a84128a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3899689-1ec8-4714-97ff-feb341cfc60e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8574b1f5-7589-453c-9064-eaa1c18c0117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e111c56b-c531-41dd-a26c-68bb4e9f55a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ce91a0-11e0-4896-b47d-dd9498f1f541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c539ef5a-9503-4a17-b87c-1ea8e578485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33395789-f659-450f-873f-da185d99e3b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0075f883-8660-4d9e-8010-038906603afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561d841e-db87-44fb-b2be-9d0e43bc6b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17ce3ec-6501-4458-9570-d5bd803a5043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa268f7e-3886-4f29-869b-ff78073f992a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2586e7f-9655-4e68-8b32-5cf13b414b64",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e8fba6-bb41-4935-9a4a-071ce269ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69553907-da0b-4dba-8840-2433c15bf50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3069a5-13f0-47e8-9c0e-8e9ac9fba27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4852e225-c026-40da-aa8f-1a6dc75c64f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf152db3-46f4-4dfb-b139-3a0538d1a456",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86180411-4866-4530-8fee-822c4b032d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7455bd39-7db1-4d23-a057-245235bf5e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a11a8bb-de91-41a4-b826-1778c9cf2a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2915d0-07b9-48fc-a51d-9c6b53613b30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f4923e3a-aceb-4fbe-8058-f1aeda9375f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7098cf8-5a56-4ebb-823e-e6f5edaeebd0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6bab77-46c1-4afd-aa00-e63a7d9c6bd3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "daa9dbd4-915e-4215-8b7b-faf63ce9657e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce3ee29-8bb7-48a8-98ac-0ca7c898742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eebef566-30cd-447b-8bc8-0e1775626759"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75cc06c4-db08-420e-a6dd-0d00ab9b4bef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af6b23d9-5129-40c6-9e51-1c8e92dc85a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a697b3db-0a22-4962-86ea-50a5641ed77b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebb442b1-f473-465a-98cd-6cf68f6d8bbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b21a038-0158-4b9f-b918-d1c2946dc08b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07a63ccc-1ac6-46a0-8fc6-f9b8db1aa22a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "433cb993-7024-4af1-be55-02f5f2b9e608",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f2338a7-2e2e-481a-8e6d-32329d800c91"
            }
          }
        ]
      },
      {
        "id": "6b8ba49d-e5d6-414a-93da-86eb5de05581",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8dcfda85-a4fc-46e1-a750-b1c9081b4185",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bab4f31-cd9f-4f57-94cf-245fa19a84ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a66c9f30-5cc7-4571-a2ae-ae5269d75061",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78fb883-891b-4d34-95fa-10bdb26defc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f3f423-eee9-46af-87d6-de3702a978d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63a93e5-5668-404e-944a-e6d7e3173db5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80357021-78e9-4c7f-a47b-8d5e8e9da926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091253c6-cc1b-4716-a8a1-1e56c1382dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e7164-aae9-4867-be46-a444492da49f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0273a654-ca34-44ff-b456-facae705147a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aee2c54-2308-4452-9f05-431e12a4c843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3df1a76-1d82-4011-8a7c-680c3dd9d1cc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9593b124-edb1-4649-ac55-0cd97606d5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea5df0-55d6-4f9a-94db-f92a6e9eb35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def140eb-55e3-452e-9236-4941cc596615",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9085d819-db12-4185-bb4c-7fcee453cbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38bb787-0289-4457-a838-160146018c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b12ab6b-182e-4f97-bf93-b04b8ccbce16",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40048d7f-a6c1-4063-aedc-04c5bf05f9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9170991f-16c3-4b13-a473-ca5088b13661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6d8233-21a6-4f1e-b13b-c0e67fb527e4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcd98fb-b59d-4eb0-8ca0-5709c40fd780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eabf0e5-817b-4290-855e-4c8f1caf4654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb013556-ec63-4db0-824f-3f2543dfbe69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a9bf8b-8647-4d8b-b689-4a1d01c67f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6124554c-62ae-4612-8adf-34ff156b584f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26669393-35a0-4352-9cd6-1cf3af7e4e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff20ff9-b010-4024-9679-b90257b66ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a47962-6f5f-43ea-b439-2c5eb44cde91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4431f45d-c0b0-4a1e-a7c8-fccfea343241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd5d6f4-b089-4984-a39e-cd2648d82c45",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5dc510-c245-4f53-9011-c1eb1780a680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818c4fed-b201-4663-890e-523f0c412d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80355fc-3e4c-4144-9e3e-b4ebbfde366d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70e33a8-84b0-4fbc-be7c-325c8c45fe6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de0a012-7961-4cda-b1ed-76d8cc826d07",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4c1c17-be52-4a76-bbc0-a53f362afcb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db38cb2-46ea-4b65-8f65-db09a56877f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9b0a37-c6a1-4362-9bd1-675dde716111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5620f7c3-a6de-4168-b51f-33546a38ab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8656417d-b350-47b0-ae38-ccf07734f473",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b950970-f3e6-4f2a-9d96-5f242ddcf928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bb6ff1-80e8-4c03-a33e-ccef1800ff72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fa97c5-dd2b-49d3-bc46-5caf6a3a74d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f298bbf0-605f-4f7b-a69e-e568fe667381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa79db4d-95fa-4bb3-8b10-451d1b82b4c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12db0d9-d1f4-4596-8477-04318c2e1212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950abc10-9265-47b2-8876-b1d556a5a7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a8f122-a8de-4314-9510-8ac2f827b712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20957c31-ed5f-4538-8b9c-3299fac01497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff60e42-36d6-4761-8749-ea05a6a305d9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702732f5-3a76-466a-8c4e-3627182b5fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920dace7-d8c0-4678-b71b-5f18259fec0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aeaf9f-651e-405c-8edb-f9fa073cb8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03144602-59b8-47a4-b50a-46f369397cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf7f694-7aac-4b0b-bce4-8b3722437c77",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec8ca08-9441-42fe-92a7-9917894d6c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2684f41d-cfec-437c-885a-e7cc459e84d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d8e358-d0db-475a-93e0-dfc60d75e35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cfdc09-2c68-4555-983e-42c8de7a3475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5790cbcd-5437-44a8-b041-ddd2fb429c9e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7a7f61-eaca-4e1a-a24d-c4a576bf39cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa55755-811b-4f41-931e-cd7edfb4d9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1836d48c-f7ed-47d3-aaa7-281e0f17789c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1b218e-cae5-4726-923c-4802ee06bf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99bfab8-3f6d-4229-b860-b3a48767e745",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcb4c7e-ef51-46fc-9acd-d766b1b62d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f4b7ef-9ff2-45d4-afe3-ec5c18a38a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d087b0-7768-4e07-9521-ab3145ccb404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b859fcf-ff55-4407-807b-c8d86e35597b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e438f2-6012-4c6d-bb21-1acd9027ca43",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55bf8e6-cbca-43b6-8af8-d4aee14177a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f119a91-b164-47b1-acb1-11a6cad6e922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b076cd-fd12-415f-b67a-72b2c8cc31b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f3cca9-ffdd-4366-b493-9f9ed6111d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f59be2-1640-4f05-90a6-a02009412db8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b16a32-0e32-41fb-899e-5340371cfa05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85b4fab-667a-47f5-af01-9459c4ac8f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4851615b-1acf-4505-9a7b-606851fe04bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5348019a-5f51-4a89-9515-6db7d08504a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a74339-32e4-4e79-90c8-508f021d1209",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cc309e-0229-4d61-80bb-e5bbdaa70253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ce048f-6721-4148-b4c8-5f1415e9bf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52203ea1-4ae7-4678-86e8-f5c1a64ad832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e94e58-5afd-4a76-9c0a-f38ae77e7d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1fa72-c972-45f5-8ef4-1a86040cb07a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664620e9-7152-4bee-86cf-0c7f8319da5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf983eed-e78e-429e-9080-480e585e8c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2affea1-9763-41ff-88c5-74c062a1a08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d5b3ce-8b3a-4e78-8807-5180692c5688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41597ff-d9ee-4e3e-a537-7c8da9006be9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36863fb2-52be-49ed-85fe-cfc6e9c29e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847633b5-8678-4ac8-97b9-ab297a437afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad23d9e-725c-4bce-a3be-b527c8b67c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38db5cb-c292-41c0-8490-04257193ed79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b0ce8-abea-4b12-884d-d753895e477d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cd3e0b-789e-442e-8623-15480a4bf444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9f5b46-c486-4306-9ad4-1fec04b42ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa442cec-43a4-49db-8614-033c62d9671b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd424bf2-fca5-479b-93ba-bb6f4c7f4bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016dd1f8-7a75-4b11-8764-5067512c7cbd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650d8c69-ca2c-412f-a587-49da6d54fa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060cb572-7762-4c3f-af97-f2e5bebbea32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed80990-6078-4749-9712-16fed535dd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fefa5c-eb79-465e-8c8b-e2c164b49849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de0b401-50f9-45ba-9c19-5ba06ee99730",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18ef6bb-9b8b-42bb-8926-c299d00c229e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b046b09e-9bb8-4b22-b635-266cd6c30393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85501e7e-cecd-4cba-b046-cbc0db8f1732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f02711-58c7-4275-8d81-fe03d881f1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb045f6d-f0cd-41cc-9622-6e9ce7a55747",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106b0749-cc20-4fd2-85f6-8a36df6ba4a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7bf08b6-ec57-41cb-a86f-ada0236794e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66040a4-7a0d-4b23-bc46-c487b5a25a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595ceacf-4894-4ef4-9e50-fedc15967ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a39dd20-a453-4e3f-b114-667b10c5e108",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fee9d1d-98f1-43bb-b5c4-eeda5765ad97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5ce535-636e-44b6-818e-7e007ec056f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713cbd35-d0b5-48a9-800a-4ba1b896449c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535cff14-a949-47c6-a515-ba48d5366bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007951d1-6322-4bbb-b3b1-f81b1fb06e08",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e32a5bb-27f1-4b89-8dfe-010488d3fd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "105e3b8d-fc4f-4449-8f32-65539138b327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df704c8d-5267-49af-a7a1-eb00188da178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b195de21-05e5-4bad-805f-8cb5800b7863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33c864c-04bd-4835-b62e-4a3fee3bf562",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb23c96c-11b9-4626-bc4a-45a45551843c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b00fea7-7e61-40b3-86b2-b525faa0aaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535cc8a2-cd4a-4492-9441-d6882e80cfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d2e083-2724-47b2-b8d8-7cde2ed58499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb234ebf-56eb-4807-b5ae-6f111cfdb465",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41a2c15-5adb-4a17-b238-6e63b8e85e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c99a748-1601-4f34-8296-95c57f60dbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57806b02-43dd-462d-a22f-760f63fe052f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6964385a-d486-433b-8a07-eb1f8b5cfe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f98ae3-eb41-4e92-96b2-a9e9ad8067ca",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79302236-055f-4bd0-8bd7-2a537d2fc271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c67775-4a1f-460d-b665-f30bbf7e91db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b7bf1e-1abb-44a5-b3fa-5bc6c10ab90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea0748f-e85c-44c2-abc0-5aa25ec1a34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc937e8-38cf-4bdb-bcf5-16724cdaa85b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b878b431-2c2e-4b34-aafd-e716cbfc2ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fac4c58-40f7-4010-84d2-20bd18c55c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4cd085-3a8a-40fc-aee6-ac2d61fcbece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d21b83-ec7e-4367-b862-e91c02b88325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ca17d6-ce73-4ab6-8d6d-0a277041a722",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd45368-13f1-43da-afee-92b6891af161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d669caa8-4071-4877-9816-c9ba97996897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96da710e-c99c-4293-8e1e-0cf40ae7589e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d973ef-bc5e-4ac6-82cc-0bc569e1397f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08f2475-3d61-40b3-837c-7c06ce778a41",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b513650-f483-4763-82c8-63b836773a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4446e4-d9a8-4961-a619-fbf53eec28c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c15e7c-b25a-45c2-be26-952c0fa7106b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bada22b3-2e9d-4471-be50-b805015a7bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b46714-2745-4bb9-8924-25f481a2519c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fba819-5f85-4636-9cc6-8fcb0ec7b47a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec68582-4074-448f-ba7c-0d5c3d953f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d4048e-6368-4a4e-b2e2-7b6e90acf5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f3fd7b-310c-4989-8792-e2671d15b700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1f8499-479b-4e26-a8cd-398f3dc4cdb3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d2b58f-8131-4966-ae20-cc7cedf26f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec7c7d9-ade5-4595-b907-8e5860bdbe87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7353e8e-68d5-420c-af02-45d49a6e0428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b57b2a-5da3-4325-8504-2187271e392b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9010fc95-83c1-4ba8-85a5-82a89edb4371",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c5f17a-826b-4f46-ac36-e1971e0662e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f7f3f5-a235-4188-ab6d-360c9aa939bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce09214b-f3c7-44aa-b791-59537a33f30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09729e22-aadc-43cd-8973-4b2f05509ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed476961-9b52-4d3c-8a6e-919c0c212f72",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6950df2-95ea-4ce2-8852-0c7e7a4f4e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4a5b62-830e-433c-aa18-4d8d1cc92016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69522655-5de6-43d7-9c41-0447170dc6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb38605e-f65c-4687-bcf4-a7d8922becff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f7513b-4458-4a1a-860b-8d8b2353bc63",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca10aee-5527-45fb-b448-5fe5ba8a7ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090dc89f-e81b-48b1-a71f-8a1fa5d52ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3984dd7d-2552-4d6a-83f1-3a58b0ed6734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd6ed35-a465-484e-a377-fd7101c3fd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6a197e-359b-4e51-9ae1-7cef978441fa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8bfc3b-296c-4111-96e9-a12220debd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac247c05-c39d-48cc-9b55-e2d6cb738b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55491bdc-8354-4640-b151-63841f1715d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b479b5df-3059-48ec-a8cd-1a7c574a9e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c04b9e3-c5db-41b4-b2bd-677832f8118b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74427cc7-bde7-4553-9766-9089f94765fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a46871-3d75-45d3-984d-ddb9cf9da76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f1c163-d164-429e-b1ca-a82456b2511d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b4d05f-200a-479d-9b9d-509043ed0954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56904bab-2a9f-4c00-8628-861ea6af8f06",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6ed027-99f6-4b26-977d-9b48c9dd0843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8423f17-18b6-4163-8ba7-1179b8d6523b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b43cf65-222c-44b2-914b-c66c0f6fc7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca51de45-7188-4c3d-b49e-572e23f14949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c9b00c-1b68-47db-98e3-3939034e4583",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcc585f-c090-4cee-b730-4acbe1e7db6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf65964-db53-4701-b649-0d17bd7c89fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836c8c41-6983-4499-bc4c-e010a702ce16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ede65ff-9f55-4b85-bde4-d918a8eebf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e786a1b-bce7-4516-9812-42b7ad43ba03",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76360729-81e8-4bf1-9384-6ef309f40e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b7ec88-bc9d-42be-8ffa-fe454d7f1e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64389927-c714-4e37-be06-97618ef19ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a88dd7-aaea-4985-b3a6-8be323d9af15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb9cd8-a2d8-44ac-a6d9-c1e2496af340",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b2f26d-6a21-4aba-8382-ab406b4276c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2dad02-f432-4fc8-b0f7-16f150dffa1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6a90b0-f9f5-49ec-a96c-88d2de0c06ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644b616a-d8d6-40d1-a9be-c3c07a250ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13126346-8311-421c-99bd-e97b9bbf6caa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b26bcbd-9ab8-499e-9f9f-cbfdb80831b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97932553-18c6-4f69-9890-17bbe3c4acea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba51045-6f5d-4864-b862-47e44ac701c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824c8045-f6f7-4e1e-b710-778ce7363535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb47991-0e55-4c61-8c80-ed4f8206c23c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e873606-312a-4400-bca5-89efa186f566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451b54e8-7b98-42dc-822e-b93566be58e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4580354e-6a9f-4d71-9c4c-cd0028b838e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08322952-51de-4ead-8c95-fda3673c6370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a47b0f7-8a18-4c9d-b1fc-c14536842ca3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328dbd50-bafc-4cae-8299-4b959fc42594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7fb1df-3060-4a0b-b344-51832f58de6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaec1de1-e308-4a00-a12b-6c0ecf88fc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ff0785-d4d2-4a7b-b627-5035384010ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378c8977-6e2a-4082-9785-38f324ea2268",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5d49ca-5eb7-4b70-a3d7-c5db23611a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a30e66-5e8d-4e6b-9597-a5311b93f392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c3edc-4792-4cd7-814c-ef9dde163444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4f80e7-1cfe-4695-a9c8-94ef79669306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c588287-9fe8-4ee4-8948-d3023ccac3b3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49c2db5-edba-4fba-84d7-a921a09b9ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298ce432-2f84-439f-8c35-50a8e98c2d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d52389e-7d34-4937-9c8e-d76c6d5e5db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb31d7-ab31-4209-b2c6-8cfc5cfe82f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f822d89e-a409-4850-8a47-21611072edd1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095906e-1bb9-4ef8-91b1-df7c4ffe9f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae43940-0f37-4884-b2ea-27955095b860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c59152-5804-44a8-b97f-0a84c00c8003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45a22b7-38a4-4547-a997-03be2e0fe3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff79caa-2da6-4632-8916-301ae9c5cce6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395817e9-fcf6-4f9c-b6d2-5c548017bd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e40d643-a648-415f-a363-f0646fbf6cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136e589b-cae6-44be-8ab2-1dbed312400e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af580dfd-199f-44d5-8358-33c32e4373bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21db510f-686c-4ddd-a55b-0fd92b1a408a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97037854-8319-4177-a26f-caff8d7c8967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e097ea6-7c6d-497c-a2e6-34ecd8f914a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2435bc34-5606-45ec-9905-5395c887632d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01c59a1-c2d9-4390-8765-0a817294bb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f97a35-fc02-4093-9765-e58686f9f5dd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a19398-c9a8-443c-89e2-19761108280d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b177a5-55d8-4d93-ae14-2efef7d982e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba4d2ba-5109-4355-8b10-d566d1925d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fafcbfd-f445-493d-b24d-144d2161c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d6dec9-414c-4176-b901-accad5bf4440",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70409314-7586-4981-b561-80ea60eae4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8702def9-d777-4871-91bf-5eaf607445ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8148ef7-ca34-407b-a6ef-cb84a6c0a1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0fa1cc-f33c-40cd-8d7b-352a96e8e275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb9cf06-aab2-4303-8ad0-ba1a505f4628",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7b90cb-3838-41ab-98f5-754b64c180bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61261d33-5f4d-42f6-a29d-2d6af9ea2da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8734a794-3d36-44cc-a69d-42b956a76052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180d386b-b2b4-4017-bd40-dea6065cd3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b13c17-4f0e-4c0c-8b7d-1818e0ffdd2b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1619f958-d635-44b8-9462-2fd83a84423a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b81a3a-ff3b-4897-a564-c775274c4319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a116f8-6431-4161-b771-a7bc8ea3b448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097b4932-43bc-4b83-8359-179fb58bfb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0930de-cd47-4f30-8a3e-cfb47ef28833",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e4a1ec-df08-45d5-b52f-40efa3f9fa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6feff372-2628-4082-863a-3cdcd396970f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4520855a-a7f4-4608-81e3-7ea58c310156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b478c88-7307-4afc-90b2-f0b8f6172920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08246d71-9fb2-4f20-b8e6-af33b6d0353d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a4b79d-37f6-4c5b-9c37-0976346128d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421d0e5f-e1c3-4392-b0d6-8eb5be794804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d37467-2ccd-4aad-9838-e8992d0c48a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60c46a3-7fd6-4688-89f4-7da23905a5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6898e8-ce1c-47b7-8233-98c9ad5dcd9b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5b692b-ef80-43b8-b395-eb930fd37201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235f8f25-bcf6-4a23-a1c0-ae484cdad6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4518a9a-edd2-4aeb-9711-de4dddd665f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915382a7-dc5c-4319-b0f6-9695fa830083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a62db8-05ff-4297-83ce-ac87d5227eb6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a73122-1b93-418e-b18c-546a8b79d1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af256cf-b3b6-443a-b3c1-11565c4df1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb4664c-a4a2-4afa-9236-f8dd6ecdcb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51acb78c-bb08-45cd-911c-50e3f0144d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871bf233-74bd-4086-a58f-318795b410ae",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0823541-d553-4ac0-a14b-f1ef06a23504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8891e8ff-9bd1-42fb-a266-89355176ce10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c29b96-a6ff-4c1d-8712-531540200573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e0c0f8-0e18-4548-9770-12bd9bfcbe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424178ae-dbc8-40e0-a9db-224a70384c13",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0cc311-8dfd-4c91-b3e4-a299bf544d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c46444-e13a-453d-8c74-7a9105d6b0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19001450-15dd-4d3d-b0ff-89652c923e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8347e1-f671-4bf8-a487-bdd3a5c1ef3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a37421-a95d-45b0-8f30-05d5124671df",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fee306-3183-4a78-b2a1-9e0332348f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198f3dca-4777-4264-abb9-b79f196d4f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2c2e5c-ba19-4d32-9c34-c48fe7eac1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aab2ccf-316e-4c1c-ad2d-625aba282dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0b0fe1-f7e4-4e88-8aae-ca7f86db0859",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9f6c28-6b12-4e78-826c-26a145af700c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7cd945-8eff-4960-89ff-04a5a59daa2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d05c03-5d9f-4f5c-a0ab-74d9e68dd240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d1d7cc-101f-42d8-b85a-184e44eee5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f58451d-6f27-49b3-9a91-21afd0b73e39",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c94ca65-203f-4c71-a78c-34636ea0e2ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5be698-a4a6-43b2-881a-9afcf58e5103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b90bc1-1601-4410-8ae9-dd8d6e268157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bad4f56-d002-4589-b807-60e62bde2474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839a6732-aac3-4099-b3f6-a1bb1529fdfc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4199d0-ad28-4974-8e84-72aa62689d51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d515bd98-cc1c-4ea6-a6b4-cc151ec7a06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a69503-077b-4941-8f7f-f862fd2fcfdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc358c05-56f7-416b-9fc5-b45dd7a7dffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5880a155-8a7b-4eef-8990-3b386673f99c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8566a43a-2032-4fd0-9af1-b6defc9a2a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7111fe7e-db7e-49a2-a3c8-25cc08e447e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea5a2fd-8119-43c1-b389-bda9bc0182bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586102a4-b209-4141-881a-a7be6a39542f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb4b06e-f8cd-4dff-bc2a-17f5154ede93",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb4230-196a-475e-8515-11c2293c1c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849b6fd3-4c27-485c-bf0b-ad101e55d0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546de521-611c-4bde-88fd-4b5f7fe2d33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b367cc-ea63-42c4-a0f6-45a21ea7cab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90706844-e172-411a-afa5-231a206fb7dd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2d2a0f-a03e-4887-b07a-347ba787ebff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "646b4a47-975a-4135-adfe-d3c0194c2315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeecc9c6-516c-4268-975e-69635a58faad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c760e339-d94f-4e4f-9963-88fd2f17778f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c416affc-a201-4146-9e73-1db3a3d67cbe",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00860152-f211-4ec6-85d6-620771297e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a494ed88-221e-4cd1-9670-caf168a17010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96be1360-cc18-4c05-84c1-cd69781c1ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f34c5e-2e64-4220-ae7c-64d5dd881f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508069cb-6c42-4d42-aec4-a9b0e8e8af4e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f255731-1cd2-412a-905c-de81744c768c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3df59b2-7cfc-49d4-82e0-6268bd7110d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa468937-f5a4-4759-8e39-4313f0df86b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a123cbc6-06f7-4f81-be60-9bcf59a1ed5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c2e112-e8d4-44be-bad7-f007603b4aba",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d33825e-bcf4-40bf-8873-fcf76d846a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb2ba18-5ae0-42a8-82bd-738ce43ae784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f73b97f-0c93-4201-ae87-f4d0cb0e8bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c30913f-029e-4d2b-857c-20b16f32e68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7209043-bc9d-4f22-9ee5-6d93e93f772a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3697af4d-8297-4c54-b1a2-65b20aec1afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44311deb-ddf7-4fed-81a8-d064e9953a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481eed79-0279-48c2-aad9-3bd178a7da39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a328dd07-2af1-41e6-a277-a49d4d38e971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261a3121-f196-45e3-9caa-cf3892eed503",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d52146-deda-4044-9f22-71a0139b46f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5edc65b-ad44-4892-943e-9bbf74ac42df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1ca28a-6a40-43ff-a6f2-af6b9aecde06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76d9407-3481-452f-9424-3486b6d1c5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad6f52-9ed5-4677-8699-562541fc16ce",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922cbea1-0e28-4422-9359-3c9e7ff29e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61c5877-b35b-4ed3-8f6f-632e2f7dd529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33f75ca-49ce-4ba5-8f26-9b3e8332ce53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d738821-5365-45b3-abe1-c478e7cbc548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d8cfd6-eec1-4896-9555-be0509002166",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e25f38-871b-4e79-bad8-e3896ff5375c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77220f0d-b557-4a57-b79d-2872f3ab4528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2008a0-9c9c-4b0e-8f05-bfc276b5cd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66264cbd-85b2-46e1-8779-366179767686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c650a572-b25d-41fc-854a-78ba20d35a5f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565bb1b5-324b-46bf-8e24-c73137f8fa42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a4995f-f856-41bd-91dd-4f08edfee474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e060cbd2-6980-4d09-a2e5-6a3c3d3516e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345499fa-3273-4c69-863c-65d67931dad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ba4ca0-b450-451b-b1da-fd1e07db37b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12656ce-42e8-4fbb-b16a-b740b5f0a88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0982d593-d3f5-40c9-93e9-49a66695629d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba5b648-46ed-4f9c-8b43-44aa958910b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0749f1b1-5346-4a54-8522-ec177286e323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d391c77-7d49-43e8-8156-af77e4c8c6ea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbfa645-5696-4c2d-bba8-782780c5c838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deedd8a7-0504-4c8b-aa4d-18fe53f42969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9e1bfa-c73d-4e6d-93f6-b4555dfa858c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8162dfe-d0fd-4e1f-8849-ff6b1e1c7ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf7cee4-891b-45bd-8183-0ee836213a8c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb4a762-923f-4900-aa5a-54a9097bd1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f4df142-8022-4bf7-b335-dc7e836985ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8def8df-4d70-4b24-8611-f121f6c92138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3720fed2-9271-422c-92d3-f2ce320fa2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad12316-4974-4488-99ba-13fdeb8eee40",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355f4b67-275d-449c-b85c-4d044cfcb4c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f61418-7eaf-426e-9c79-d808222a52da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e4d90e-6c8b-47ba-89c1-21f384505d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fc494e-861e-47c5-8064-6c42718172ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0f5b98-a1cb-45a9-bc3f-0813ef11a0c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7061868b-1de4-4260-b0d7-bfcc8bedfae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19210e57-9ddf-4dc6-bc56-3687217a63b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136f8941-78a4-42d0-9341-97e8d7560eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9868bd3a-c7f1-4218-818a-715c4d42a226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363c3518-1859-4ef3-b3ac-49534f30c644",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b958fd-6670-48ff-8830-14c15605a06c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b11f17ba-5768-4c1b-a59d-8dca9afabef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03da007-dd6f-42d9-9bbc-d1f61846feb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c72df74-07b6-40bc-8bca-f4968c608523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7233106d-7424-4cf6-804b-09313e36e97b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d752e0-29b0-40cc-904f-e0d4e0d8441e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d75235-c16d-4ad7-abbc-85f6b1b56811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed92deef-9c86-4ef0-a668-40d85e7515c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cfc1e8-f22b-4614-97c9-3748131b1f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0945c586-9507-4577-ae0f-9e590429e496",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb62449f-5545-45bf-ad91-88a5a2b1c646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2332a034-da1e-4cd8-83da-b8ed83a98d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949d7c57-794f-464a-ab00-f42623331ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cff391-e2ae-49f5-973f-c9b9ef1070ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c233b2a7-c89b-4be0-b70b-295206b5c8db",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0f7caf-a71b-4a8c-8ceb-97bd130c2422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f98415e-84f8-48bc-bfc6-e289291d3361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dab5ed5-048f-4acd-86a0-4c54b9ce9486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f069788e-0b21-4ba4-bcec-15fda7da4912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03997c-d795-4eec-b557-19b9f2ae1699",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1484ac37-0066-4d18-93fb-eadf25bcf329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc81d9c2-7f3c-4d3e-b8f3-b58641290425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2815b4d-c182-4f5f-a0ce-0c6c4f1c0933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151d1d0e-bb56-478f-8fe9-b8ff76bd5172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb17d17c-9d49-4c81-9ea9-615c003a3429",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4715fe-25ae-4ed5-b929-2312877678f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9258512-1d1a-4041-8e21-3afbd6c18475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91e7aae-09f6-41d2-82d3-f0e6dbd0b600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32abd88a-ef44-4ba6-bcad-fc0e8cb513ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6a5b5c-8b33-4171-b4a8-1bf11bcbc6b3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807b7fa6-c4ca-46e4-9b4a-ce03e09ce533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959aa47f-d39a-451d-a78e-6882247f5e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b8f80c-f927-4762-98cd-89cabe205b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34d95ae-fd0d-4c1b-a800-6148f5344d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea7d431-657d-44db-b849-dcd0a7e2857b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881dcbae-1b57-45c4-9686-c4ca93bfd85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc10eb9c-66a6-4ebd-9bb9-42e905f77f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec9e1bc-c78c-4605-a245-2fb8e61643b0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dbb0fe-2300-4933-add1-2cd4f1c75941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8d0b3c-bf3f-4b11-8117-290537a4355f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb32e616-3923-4df9-970c-104bdcee1ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97322fdf-b381-4f79-a65d-7b849d4056a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac63ade0-90d4-4d0f-a06b-3ab7bd7e740a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03fbe9b-c448-45c3-b15b-f3d06894e9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ff5e03-be7b-4eb0-a2a6-46e703a6a289",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58625dc5-b347-4b8f-8e95-d61d9ce3b873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15566a55-cbb3-43da-9267-e86e7321fcc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764e2a1f-d0f9-4544-a789-c98e131e5f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08c7997-fd88-410d-8f44-7d57ca4c31ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b45138-6e6e-402a-a5a6-99414f8ae977",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f88b12-0ed7-433e-b85b-8935b9fb2702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870d57f1-8b3f-4f18-9ee5-85662fcf058e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ab2577-702b-49f4-a6d0-a36c4033f88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2128d8-0907-4955-b661-6e633dcff749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71277adf-4290-4e4f-a35c-f1cd4abbcb98",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ddd624-a393-4dfa-bc67-6e199afa0617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4d918b-fe36-43ce-a205-d36c2afddc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8032f862-7051-429e-b4cb-a994da6cb4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a12f927-8725-4999-ad14-5a0ac2004ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a731de1-9d9c-423f-93b3-63e37a0d9eed",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a42f25-cf21-4006-840a-86b7d71cd1c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6edb5b-5135-47d8-89a8-60efb7c9a0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e563bc-14d6-44af-97de-9ccfc26b0675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5b066e-439e-48e8-bc39-e5e795cbcc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21e7ffc-5fdb-42ab-8372-011947b9dbcf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a102ad-9eba-496e-9b08-454b86a913a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f2dd95-19ef-48da-b649-5203649b56e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323dd1b4-14ee-465a-8625-6ddcfc912948",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cba8cb-38b9-400d-924d-3766454fd73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d407bd-54d3-45b6-b180-9f11fddc8d46",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49ce3c0-927b-45c7-8fcf-0d8ee2e09d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16297f02-85df-484b-8667-1869306a2eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00162954-3782-4d38-8306-808498d56975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e441c946-a6e9-4397-9915-bef77bce2e1a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bdd3c12-d6b7-4367-bd81-420bbace594b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52b57ac8-3dde-4709-a903-99d1a7de71c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81a11186-24e1-40d3-84ad-44324ce28d88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "190ac6ca-d4af-44f4-9283-ff26a32141a2"
                    }
                  }
                ]
              },
              {
                "id": "893619cb-fbef-474c-a9f9-3e878ee3abdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0109f32-b35d-4a52-8c82-285ba0f644c6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cfa47f-ca34-4d98-8085-f1e5e4214043",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "95ea6485-66e3-429d-af90-66f1056c3e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fb7e68-c1d4-4375-a245-8d5ddc803499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71e56430-45ab-4ad6-a28c-e18303726956"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64b897ce-55c7-4af2-b3dd-709fa6e20f32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5514ea23-e397-486b-ac08-fd0df64e086b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f87dd79-8aaa-4b15-bd03-a461aae45024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbd55937-927c-404d-98f8-a6664fbf52b9"
                    }
                  }
                ]
              },
              {
                "id": "6c4adc5d-456e-42a9-8809-3db4fd146f9a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "558b1f8d-8f71-4f75-92d4-188d12374d20",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca134302-cce3-42ed-8475-9ad9c5cd2d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7edd4948-b036-4918-891c-8cb471060afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd77a71-0101-4646-aa11-c1533b6f5982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c9c43a-1d69-4b6c-b664-f68670fefd79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7f30a2a-b4f2-43a8-a90a-434984f176b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72cc3ed9-40b6-485f-a349-c651ad2b70b7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb3c257d-7eb4-47f5-b142-11e89d49e652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fbe5eed8-388a-43b1-85e8-c4d01992e506"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90756234-4016-4627-9768-a5ecca2014d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63a25bb9-cc2f-4cb5-9ea3-a7dd2f2da956"
                    }
                  }
                ]
              },
              {
                "id": "db96f6a3-d1be-495c-9fb5-d372f1c9f0e7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27b40427-2df7-41ca-bdf5-091ff5ae4a59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f8b5bde-2628-4c70-899c-836147f0ddbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a627caa-3edd-4d9e-8c55-29dbe812dac6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ca41443-93a2-47f9-bdea-eebf164bab3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2cc42c7-9684-44cf-9bfb-07169b09adc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "162bd92b-fff6-4976-84e7-4a08393f81fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ff7e426-3c46-4fbe-bd5a-be667d845b31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c47942c3-7078-4084-846b-efb49bde0c24"
            }
          }
        ]
      },
      {
        "id": "2f449068-3ba8-4a79-a1c2-345a45807e0f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d5058fda-c090-4ac6-a896-eba596c619cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f72914eb-422a-4b6c-b204-d03b43e46e8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8acfc74c-8d02-4631-b757-4c8923158c5b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb13c69-c61b-45ac-b069-73b9de22ebfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "005b6ba1-4b8a-4728-a06d-0d0ea2dd0536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c27f7dc-0b2f-43fe-aa4b-cd12999cfd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36f66bbe-fed0-4210-94ff-9536b23cde92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8d19d16-b264-4f25-a506-b2a179a9918a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fe3ea2c-2827-4774-bd44-a1833f38c511"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d903940c-1742-4a97-9a27-ea4a1694112d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e0808e1-e555-400b-ba0b-d93b15840a4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4ad3f23-b838-4b05-8b5e-931ebbd9ca23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "26a2b149-cb37-4a2c-914d-b76123589d26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad98e86e-f4df-4451-ba21-d28a2420cd83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb675aad-442b-421a-98f7-a280428d86e2"
            }
          }
        ]
      },
      {
        "id": "0bcf71d6-204c-4378-a765-1d5580cbce7e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "79b040a1-0f85-4be3-8165-d64e85d0f60e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edbece6c-24d7-4d0f-854b-2e04fe6b7ea6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5180d95-242b-4c0f-973b-8a2b6fd44089",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5e7fa4-8520-491f-ae47-b267903a3c47",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00bc89fc-15e8-4ff6-b3ca-34131e2e6ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e6b073-6cea-4ec2-9303-ceb81eccfd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "755daf88-ca97-40e5-bb27-492be201e07c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d3e3d25-a4e6-44df-b1ee-ff8879a65b4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4bf941c-e104-40bf-baf9-8427b6132e96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dd394e4-e65d-444a-9e7b-b2866ca2c36e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf7fc51a-00b8-4794-985f-e4768cac1df4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58b0b0b3-a23b-4911-a4c2-a0c37f613b0f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b42d0c3c-1a9f-4949-9520-1a3343c14db6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94b553b7-0a8c-4fee-92ee-0ca575173018",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0747e79-f10a-4770-9ae2-70e0bd683d3c"
            }
          }
        ]
      },
      {
        "id": "9eb4dd92-703c-47a7-8785-65a46ed15d73",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9cde103c-5743-4332-a04a-447f01474607",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e518c911-3150-417a-850e-8fb6f58d539f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68dc5a60-1614-4eda-8157-83c81cc55064",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e9ce6c-410e-44b7-aeea-a5e23989e954",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c49918b-c60b-4690-b296-05c2c4cfedaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c6efd9-7e28-4310-8766-bb7fdf96f246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11330a6d-b0fe-4c8d-9370-46a4ea51c505"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44a3de09-a376-4a26-afb7-50945efb6ec4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c468472-6232-47fa-9e72-649140b565ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43669e0e-dc29-4803-a4d4-7b11982c16c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c7e14e1-9935-45a0-b4ec-d24cb2853f68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acc918c1-808d-4f62-80bc-f72437bb86df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa4dc82c-8a31-40a2-aa67-05e0d9718c3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "194c7c90-805b-41ad-8fd4-7be9fedeb99f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0224807e-eaa2-4a16-bf01-5a2b7ccccb15"
            }
          }
        ]
      },
      {
        "id": "c542c669-d159-4769-b5a0-ac6e0417de36",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79523ea4-406b-44d0-84e5-984a9982f903",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d058ca02-6b50-49cc-af3f-79047e10c68f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "80046f23-b770-4145-8045-a67bd4b2f2bb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adab5f61-453c-41a9-aacb-4553e9b4cff4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2e144ce-9e13-4dfd-aaee-ed9e3aa550e7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 136.4245614035088,
      "responseMin": 6,
      "responseMax": 7390,
      "responseSd": 598.3848835577497,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701304555652,
      "completed": 1701304603911
    },
    "executions": [
      {
        "id": "969af2f4-00fb-40c1-a1c2-108594bd570d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c08a7f48-9f66-4672-821c-103d7fb8d238",
          "httpRequestId": "423da831-2340-48d5-a41c-0e613258aa34"
        },
        "item": {
          "id": "969af2f4-00fb-40c1-a1c2-108594bd570d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bb22090c-d2f3-498f-8d53-e273d0754d9e",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "ac259a69-5c15-4666-9167-40c6c5b0f1db",
        "cursor": {
          "ref": "c4579d41-d72f-46a5-8c87-bfd9b45cc8e9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "777c6636-0688-4157-916c-dd4a1e5e7e95"
        },
        "item": {
          "id": "ac259a69-5c15-4666-9167-40c6c5b0f1db",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1dce037b-870f-47ce-a7b4-2c984e31a86e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "76cf9338-f2ad-4df9-8dd8-4207b6a265da",
        "cursor": {
          "ref": "d2796f50-5be2-4d9e-9557-210875997848",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c10b6cd7-b926-4176-92fc-13d7c40e3def"
        },
        "item": {
          "id": "76cf9338-f2ad-4df9-8dd8-4207b6a265da",
          "name": "did_json"
        },
        "response": {
          "id": "ce50eaaa-67ba-427b-966d-7da9fd4ca338",
          "status": "OK",
          "code": 200,
          "responseTime": 365,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120dd9fe-8cc3-437a-89fe-4af63c7f6b16",
        "cursor": {
          "ref": "6c49a5d0-7aef-4e53-a5e7-7d521e43dbd4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2572ae16-1fc6-4798-b630-71ea43a96562"
        },
        "item": {
          "id": "120dd9fe-8cc3-437a-89fe-4af63c7f6b16",
          "name": "did:invalid"
        },
        "response": {
          "id": "570ffa8c-4aeb-4fa3-8614-eabd6f3c5ad9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1561,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120dd9fe-8cc3-437a-89fe-4af63c7f6b16",
        "cursor": {
          "ref": "6c49a5d0-7aef-4e53-a5e7-7d521e43dbd4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2572ae16-1fc6-4798-b630-71ea43a96562"
        },
        "item": {
          "id": "120dd9fe-8cc3-437a-89fe-4af63c7f6b16",
          "name": "did:invalid"
        },
        "response": {
          "id": "570ffa8c-4aeb-4fa3-8614-eabd6f3c5ad9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1561,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed6bb2-6da7-427d-bbb8-efa8f31130cb",
        "cursor": {
          "ref": "59f2c0e6-3da6-4a86-ab5e-b556777f0e99",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ff38d96a-79f2-4210-b77a-adc426641da0"
        },
        "item": {
          "id": "beed6bb2-6da7-427d-bbb8-efa8f31130cb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1d6df8d2-ab8d-4782-bf96-be048d94cbaf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 109,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1da67c3-e409-489c-a6a9-262f2a56b7a0",
        "cursor": {
          "ref": "9022af5c-1f45-4b70-b87d-4d0383485bac",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0840a859-d73b-4b40-89f4-624e487d8134"
        },
        "item": {
          "id": "e1da67c3-e409-489c-a6a9-262f2a56b7a0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "23dad4c3-8a5d-4ddd-8783-75ca43fefb4a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813400df-2d7f-4011-916d-54004a550f7e",
        "cursor": {
          "ref": "d0b0184d-0c21-43d8-8d9e-f9d5d7f73c5f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01d96051-fd26-4cb1-a5df-827b37dbf059"
        },
        "item": {
          "id": "813400df-2d7f-4011-916d-54004a550f7e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b934fc78-1fb1-4f50-97df-d4a8bf6c81e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 107,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217cd383-3725-4540-8304-375ba127b74e",
        "cursor": {
          "ref": "203e7910-560d-4417-87f6-68195c3630ec",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e6c09e0-fd78-4af2-a2d9-2aa942363906"
        },
        "item": {
          "id": "217cd383-3725-4540-8304-375ba127b74e",
          "name": "identifiers"
        },
        "response": {
          "id": "7d8893a4-99de-4c73-a409-e76fa1e0f574",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d4a286-7746-4df0-81b4-e75b39e84ac0",
        "cursor": {
          "ref": "c4f352c0-bfa5-44ff-8c91-4d838d607a42",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ff8bb002-2a84-45f5-9860-b575bad743b4"
        },
        "item": {
          "id": "a9d4a286-7746-4df0-81b4-e75b39e84ac0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a7a6922-e49a-4415-8e6e-938b1a17638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96684e8-be66-4b8a-abd3-76b32c59a6c7",
        "cursor": {
          "ref": "0bf7f31a-9a5f-4511-beb0-c30e36d2e031",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6f16f8a6-05ec-47bd-bffb-d519f2a2aa11"
        },
        "item": {
          "id": "f96684e8-be66-4b8a-abd3-76b32c59a6c7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0f058677-a5ef-4eee-b979-e5c5e673781c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a91b45-b4b0-457b-9221-0faf1f0ab928",
        "cursor": {
          "ref": "d5c41207-12a7-48f7-b9bd-70d34835f0e9",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5334c6b1-18df-4399-9c07-fea727a89d9f"
        },
        "item": {
          "id": "54a91b45-b4b0-457b-9221-0faf1f0ab928",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1370a1df-716a-496e-b099-5eb3d4fadfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fcd860-2c5b-4e3e-a7e8-e87368f51ab2",
        "cursor": {
          "ref": "2074ea90-e2ad-4ae4-905b-e073ec0094a0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5684475c-fc89-4f52-9449-007bf4d1fe13"
        },
        "item": {
          "id": "32fcd860-2c5b-4e3e-a7e8-e87368f51ab2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bb147fb3-8c8e-4c7f-80ff-4e5a547d8845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b3dd6d-1e38-468f-845c-3584d0fd70e4",
        "cursor": {
          "ref": "1b538695-022f-4328-9929-d7b49178a6c1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f0d48944-1737-4c2b-ab33-f0082b5182d2"
        },
        "item": {
          "id": "01b3dd6d-1e38-468f-845c-3584d0fd70e4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5fe0b84d-6a0e-4b7d-9414-6ff3e8feade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed6bdd5-5e57-4761-9613-52b90ab75dd1",
        "cursor": {
          "ref": "63bc4f6b-0617-45c7-b69a-7334a7412de8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "72b38651-90a1-4e67-bf1b-5d80e65933c5"
        },
        "item": {
          "id": "9ed6bdd5-5e57-4761-9613-52b90ab75dd1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5e5faa53-e70b-4756-be35-1e3994f0f841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6adc029-de15-4ac9-885e-843f55169f67",
        "cursor": {
          "ref": "0652969a-9316-4e4c-a877-ce82c3907c9b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b5077bdc-8f40-45f3-b0d4-7a52f27e17ba"
        },
        "item": {
          "id": "a6adc029-de15-4ac9-885e-843f55169f67",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "61bc3ba6-73bf-4747-9e8a-6190cd57553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed87db9-1808-49d4-ae59-61e136a70840",
        "cursor": {
          "ref": "370f7305-8b70-4c20-8a46-4d75b19e7138",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "29476cd5-8f4b-403e-8c96-84d838aaeac1"
        },
        "item": {
          "id": "3ed87db9-1808-49d4-ae59-61e136a70840",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fd806737-ce87-43ce-8bf9-932bc124f8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25029a9a-1055-4140-b9f0-afb00a28e18e",
        "cursor": {
          "ref": "14b676a3-3126-40c9-bbab-0f37b1480063",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e3f6a8d4-35de-476c-b7b6-11915f599da9"
        },
        "item": {
          "id": "25029a9a-1055-4140-b9f0-afb00a28e18e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9f6957a5-0df9-4ddc-b486-2c69a6219723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6496845c-d8ce-4a15-a8a1-a0ae7deb56e7",
        "cursor": {
          "ref": "705102d9-0801-4ea9-841e-61c18d971bba",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "86e2eacc-8f3c-4b6a-a38a-6a15c42addac"
        },
        "item": {
          "id": "6496845c-d8ce-4a15-a8a1-a0ae7deb56e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2d492caf-5d77-41aa-b939-04c9822f9b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c5fea5-038f-4399-acc3-8dd1a72cf4a1",
        "cursor": {
          "ref": "02eaae89-fc57-4e17-9477-86c06ee23ea5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "825cb352-d949-4696-90b1-13859d17e36c"
        },
        "item": {
          "id": "d3c5fea5-038f-4399-acc3-8dd1a72cf4a1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1ef070dd-6651-48a4-9797-fde402834df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85efa166-3d3c-44fc-9882-e0d4541374ab",
        "cursor": {
          "ref": "46629bda-494f-4186-a4e3-993a1f592365",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e55749d5-9687-4102-bdd8-0daf76112c03"
        },
        "item": {
          "id": "85efa166-3d3c-44fc-9882-e0d4541374ab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eb1de880-0252-4a41-80be-b22da3658a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd94bef3-93fa-462f-9675-09ca129bfc10",
        "cursor": {
          "ref": "501bc34a-5b4a-4899-9866-97f9ff2b4e80",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a58eb9bb-c6da-4476-9703-6851e3b8bddd"
        },
        "item": {
          "id": "fd94bef3-93fa-462f-9675-09ca129bfc10",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "170dd790-d561-42a8-ad90-884b8ab9f098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53a4462-232c-490f-b859-5d2292c6a75b",
        "cursor": {
          "ref": "47d5b953-5b3a-43ad-a361-8d7c9bb85508",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "783754dd-f6ef-4eab-b430-4d134cbf1808"
        },
        "item": {
          "id": "c53a4462-232c-490f-b859-5d2292c6a75b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2d88fd47-08c0-4b26-ac22-867b01ce74dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508de3c2-fba2-4770-88d1-ba1eb4d154cf",
        "cursor": {
          "ref": "2ce9c762-9355-4b42-9891-fb3094f0d71a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "238e768a-fa87-4c07-ac7f-273b4c50a321"
        },
        "item": {
          "id": "508de3c2-fba2-4770-88d1-ba1eb4d154cf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fe7c1478-f85f-4b0b-bda1-45cd901a335c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacbaba3-8e21-4b27-b7d1-c4c443f430f1",
        "cursor": {
          "ref": "173bf7d2-2f45-4edd-9cc0-19ef04bd3ec3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ada3dc28-bc21-4285-aed2-f540d3e0e8c5"
        },
        "item": {
          "id": "cacbaba3-8e21-4b27-b7d1-c4c443f430f1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c21b8e9c-387b-4d08-a50f-b98c17ed264c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ac3051-fbf1-4dc5-8130-067a84f27f6e",
        "cursor": {
          "ref": "1536242b-c8a0-48d6-af70-3a6155a60e9d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b2712407-dbd6-4f6f-bdec-472c441ebd30"
        },
        "item": {
          "id": "83ac3051-fbf1-4dc5-8130-067a84f27f6e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ee7ea8d6-7f63-4e05-af50-f85de466799c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e073c48-a713-46c5-96e3-3bcf7999bb91",
        "cursor": {
          "ref": "3bca4ade-a922-45e4-b63e-4047e7298172",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ba2683c3-e91d-4b5d-a7d6-5aa03b395436"
        },
        "item": {
          "id": "9e073c48-a713-46c5-96e3-3bcf7999bb91",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "85cf293f-a543-47c0-a610-624a5dbee3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aab3685-8a0d-4ab8-a651-43caec63ddd6",
        "cursor": {
          "ref": "0439fad5-a0d2-4b72-90c9-9a76862defab",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8d04800c-60fa-4e7a-bb9d-47905416daf8"
        },
        "item": {
          "id": "8aab3685-8a0d-4ab8-a651-43caec63ddd6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fd6d970a-eca9-4d45-a884-c3ca6f071305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba35dbdb-1bd9-4a69-8aa5-a87e81766c97",
        "cursor": {
          "ref": "813abcf1-160b-4573-bba7-84eed059456a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d4e73cbe-288b-44c7-b695-d18859edfcfb"
        },
        "item": {
          "id": "ba35dbdb-1bd9-4a69-8aa5-a87e81766c97",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b8982eb7-563d-4ff7-b9ab-8ad2308dba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfbc97c-882e-4fd1-8f4d-f8c9886ffa05",
        "cursor": {
          "ref": "be858bd8-2f96-48d7-b7ed-cb4f7db3ebff",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4619e085-a43c-46fa-972f-03933ec1fbe9"
        },
        "item": {
          "id": "8dfbc97c-882e-4fd1-8f4d-f8c9886ffa05",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e4f29885-eb98-42ed-8b15-54cdc95d6266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b606b1-fe29-4854-9f4d-3338bf654526",
        "cursor": {
          "ref": "9a9165fc-c95f-4f7a-885b-4611b9ab95cf",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "79509f1c-a419-4da5-9e2a-8e517d12032b"
        },
        "item": {
          "id": "26b606b1-fe29-4854-9f4d-3338bf654526",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "146943e4-29e7-4d82-9455-83ce8956e259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac7c7a8-23a9-4720-826f-4844282b7ccf",
        "cursor": {
          "ref": "b17f7dcf-38cb-4aeb-a30b-8fa038f59829",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d63ad03f-6042-47c8-bbeb-3342d0b86f34"
        },
        "item": {
          "id": "6ac7c7a8-23a9-4720-826f-4844282b7ccf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cf01ee94-dfca-4b21-adf9-0138cd92ef0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3034aa0d-3a14-494e-933e-08df2fea330c",
        "cursor": {
          "ref": "86e49ee2-24f3-46f4-884d-823f6185a06b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0c003f92-cf4f-42d2-b0c4-a158c235802e"
        },
        "item": {
          "id": "3034aa0d-3a14-494e-933e-08df2fea330c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "16887eb8-e084-49de-9576-f303b9236361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2c2c7b-0e28-4c05-8e47-d5701cfa2e3a",
        "cursor": {
          "ref": "8da83b4f-55b7-4f1f-ab5c-482c182665ba",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0073f6a9-07ed-4fcd-a665-894fa3101ed2"
        },
        "item": {
          "id": "0a2c2c7b-0e28-4c05-8e47-d5701cfa2e3a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eced657b-b458-4f5b-b6d5-f7d3b7836dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd54907-64b5-49e6-801e-f7ce66410b3c",
        "cursor": {
          "ref": "a361ea6f-8c65-4ffc-8916-6021279f6920",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b2e924b-8f14-4fae-92c4-8b5464baafc0"
        },
        "item": {
          "id": "3fd54907-64b5-49e6-801e-f7ce66410b3c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "636da362-c5a3-4dfb-a3e5-5a402c807887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0f6920-c88a-4923-bda3-eecc0d96d7ef",
        "cursor": {
          "ref": "fdac140a-8d9b-4a39-bf08-c123923a1783",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "817ad9de-39d7-472d-9748-6e5fc781ed24"
        },
        "item": {
          "id": "5c0f6920-c88a-4923-bda3-eecc0d96d7ef",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5053d6e3-f388-411c-ac5a-237db4a0607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4596381-89b6-436c-825e-7f81f32eb981",
        "cursor": {
          "ref": "14b8aa74-4117-498e-8e6f-a5be43092211",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8758df3e-eb1e-4dbf-86fc-5336d93c5978"
        },
        "item": {
          "id": "b4596381-89b6-436c-825e-7f81f32eb981",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fd5a859b-66a2-4de0-81d7-b09e8e44fe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c7b249-f6c6-46b1-ac0c-531f68ce787b",
        "cursor": {
          "ref": "066bc486-ae97-4d4e-9fb2-b96ade39b9c1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "39e54295-409f-4ae2-aee5-b9dd25b5e4bd"
        },
        "item": {
          "id": "d8c7b249-f6c6-46b1-ac0c-531f68ce787b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "be77b6a3-8315-437d-a58a-dfab27f4af2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0490ea7c-6d1c-4dab-a421-bc1f677c7f2e",
        "cursor": {
          "ref": "151b8066-c2e5-453a-b293-75c66baebee3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "150790c7-cab8-4a3a-9ebf-794708415fdf"
        },
        "item": {
          "id": "0490ea7c-6d1c-4dab-a421-bc1f677c7f2e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d3d1a670-8270-4632-ad0e-55bbf9682c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced08810-95de-4a2b-b578-39954b5d4a6d",
        "cursor": {
          "ref": "ac5cf88e-fa73-410e-8e2a-58ad0af8d5a7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "557c7565-2052-4e09-8454-e09325b5b78d"
        },
        "item": {
          "id": "ced08810-95de-4a2b-b578-39954b5d4a6d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "937964c1-1ea9-45e2-bad9-c34d3f2935a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc25b557-4201-414b-92d2-5762a199fbc1",
        "cursor": {
          "ref": "bc714706-ee13-44a2-84cf-7b4247dc5641",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3060f5d8-ca26-48f7-97b8-997aa2578552"
        },
        "item": {
          "id": "bc25b557-4201-414b-92d2-5762a199fbc1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "01e88d8b-d289-45dd-bae7-829201e8ac34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f53582-de09-411e-8358-03c05803e58b",
        "cursor": {
          "ref": "4b10d6ea-3d2f-486a-a31b-ed2522f15a04",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d8f4204d-ecfc-4194-908c-bd6d8eef35df"
        },
        "item": {
          "id": "96f53582-de09-411e-8358-03c05803e58b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "83d75f52-0c28-40b8-b383-e624ab335743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c96249-a73f-4540-b592-6f4e098ff2e1",
        "cursor": {
          "ref": "65677c93-4699-41b0-804d-fdc60106e22f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c67c3fa4-1b08-453f-9b15-f3350f0dbb73"
        },
        "item": {
          "id": "71c96249-a73f-4540-b592-6f4e098ff2e1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "986f01ac-8f6f-4f4a-a316-f9286f2aa969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4d75f4-5dac-4e86-b8bd-16e38db7004a",
        "cursor": {
          "ref": "25358937-7955-4c87-8209-555edc48d883",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f5914427-1dad-4f88-bc43-639c03f1bba6"
        },
        "item": {
          "id": "ac4d75f4-5dac-4e86-b8bd-16e38db7004a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2a47112b-e711-4cc5-84f9-dcfaf38060b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00dc9f0-55b1-4fe4-a7b5-ada17f691efb",
        "cursor": {
          "ref": "8d865efe-61a6-40e0-bd0f-f4bbb2f3afa4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1bc33f29-a76e-4635-969f-2cdad1f11f53"
        },
        "item": {
          "id": "c00dc9f0-55b1-4fe4-a7b5-ada17f691efb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ceb9741b-1b7b-4487-9a27-c2ece5e7ddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d419f5d9-28bf-4ab7-b025-92eb1c10fe07",
        "cursor": {
          "ref": "91bd189a-885c-4e85-b9a2-744cfedccad9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cd4205bc-8e1f-4c1d-82c4-971532ea3aed"
        },
        "item": {
          "id": "d419f5d9-28bf-4ab7-b025-92eb1c10fe07",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7644b6da-3e95-448e-95cb-4fd7b791d5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785b65ac-5b30-4722-b575-42f989ac7763",
        "cursor": {
          "ref": "edbe8703-23f1-4f05-b725-8905268b79b7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6d5bdcb0-7300-4812-ba40-d49867edb1d8"
        },
        "item": {
          "id": "785b65ac-5b30-4722-b575-42f989ac7763",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "441def6b-076b-4230-be63-8920d5d35d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4452ef45-3c75-447d-890d-96a7e8ae14a6",
        "cursor": {
          "ref": "22a33c2b-dcaa-4b3b-8bfe-6e67ee3a6ed5",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "472ca4f4-8d5b-4ba8-bf01-63d64515cc8f"
        },
        "item": {
          "id": "4452ef45-3c75-447d-890d-96a7e8ae14a6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9c9fd6e6-b804-4809-b89b-00b41249728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb4bd9f-d5d8-4dd6-81ff-f5f13e1ba5cc",
        "cursor": {
          "ref": "1d2badb4-6d6d-4768-8a9c-27b7df89059d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7d483247-fe6a-4b3d-9348-0e02b0daf4dd"
        },
        "item": {
          "id": "6bb4bd9f-d5d8-4dd6-81ff-f5f13e1ba5cc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8892428c-6abf-4080-ab87-7b6eaa344067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fe7345-ace6-444a-9354-724d30fede39",
        "cursor": {
          "ref": "3128c415-03db-452c-b4ae-715312abd0e9",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bdce681e-acc5-4dee-bea0-13cfa378a4b9"
        },
        "item": {
          "id": "80fe7345-ace6-444a-9354-724d30fede39",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64b0cb7d-ecc1-4cc1-ad5f-621c653b2e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd55e89-fb9f-40d7-af4a-f34adfe228d8",
        "cursor": {
          "ref": "deec2df3-37e6-4da6-977e-2ef195ee9747",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "09e21785-e7d7-4dd3-9836-2ecf8242ef41"
        },
        "item": {
          "id": "ccd55e89-fb9f-40d7-af4a-f34adfe228d8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dca62791-ece6-4bb1-95d5-f32d762bea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b41f323-c395-421d-baf8-dbb573b1479d",
        "cursor": {
          "ref": "d05d393d-653a-4b46-bebf-e403ad15e4bc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "301e768c-7ba1-40a6-b691-ffa7f3894724"
        },
        "item": {
          "id": "3b41f323-c395-421d-baf8-dbb573b1479d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "08810592-53c4-403d-9521-1860aaa77cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c420153-26a1-42d6-9211-07d0d2e0d47b",
        "cursor": {
          "ref": "4c203368-397f-448e-9012-63a25e754ec1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2e9ea1ed-caf6-4943-ba8e-10816ea9a731"
        },
        "item": {
          "id": "2c420153-26a1-42d6-9211-07d0d2e0d47b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "99c100c6-fb9c-4449-a6b7-26550faa0f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd8d23f-4ab7-4b6d-8c23-11e0edbdf2c5",
        "cursor": {
          "ref": "bc5e2c85-b07b-47c9-8ca8-bccd11f2ce11",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "813ba2aa-9997-4f3d-b4e6-73456f7faf24"
        },
        "item": {
          "id": "2bd8d23f-4ab7-4b6d-8c23-11e0edbdf2c5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "977e9faa-708a-499a-8bb4-c29c90c8ac09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c0dce5-e480-45e6-8d6a-09087c911040",
        "cursor": {
          "ref": "781ce7f0-c7c3-4485-9bc4-093812e60a9f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b9e5c00a-4a4d-4342-bb20-579ecf5ff656"
        },
        "item": {
          "id": "d7c0dce5-e480-45e6-8d6a-09087c911040",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "59d054de-f971-4b73-bfe8-2f146dd2f3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2784a41e-a401-44d5-85e8-51f14ce4daa7",
        "cursor": {
          "ref": "696347fa-88fa-4ca5-9f0d-36118595df4e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c35262df-50fe-48f3-aff7-8b87632d09b6"
        },
        "item": {
          "id": "2784a41e-a401-44d5-85e8-51f14ce4daa7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "49b02944-ad1f-4d10-a62f-400ac63be8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d15260-a1fc-43ad-96e3-0c167f756185",
        "cursor": {
          "ref": "a84768d2-26dd-4c72-9114-61a805dd7f4c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f038a079-c0d7-4681-b925-d1670326a581"
        },
        "item": {
          "id": "38d15260-a1fc-43ad-96e3-0c167f756185",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3d8a0618-2520-4c86-94b3-a9530586e43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b508eb-9c50-4d70-883d-dd474bea3d49",
        "cursor": {
          "ref": "6812d68f-2bdc-4eb7-9ae2-e0bd261fc732",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4b05d91b-d70c-41c6-ac7c-3fb994a07d8d"
        },
        "item": {
          "id": "77b508eb-9c50-4d70-883d-dd474bea3d49",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "75872fdb-eb6f-49cc-b6b7-479cadec8d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4e8122-4d31-45af-b1fe-15d6b6247a11",
        "cursor": {
          "ref": "e7aac3b0-be8f-4e77-8a6e-90f5af071630",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "484433d4-984a-498e-8ba1-7861f4c0d2cd"
        },
        "item": {
          "id": "af4e8122-4d31-45af-b1fe-15d6b6247a11",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ca496fc8-c946-4f08-a76a-2072233a3644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9daed5-6ddc-41db-9c86-58afa90bc0ae",
        "cursor": {
          "ref": "cf5df638-fd36-4592-89b3-80dc69953632",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d3a5aed9-d606-437c-b941-2ca933a3fd72"
        },
        "item": {
          "id": "2d9daed5-6ddc-41db-9c86-58afa90bc0ae",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f115d717-d8ad-450a-9b8d-8f5637467a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748b0bad-dc2f-4103-a547-4abe4fc99c14",
        "cursor": {
          "ref": "d5ea676c-841e-4226-a383-41afe2c35d5f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "217860ff-ad08-4dce-be88-f87462819fc0"
        },
        "item": {
          "id": "748b0bad-dc2f-4103-a547-4abe4fc99c14",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1f46f6df-be35-4028-a3fe-467709edeec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e306db-1266-4d92-b48d-8797d1c366c7",
        "cursor": {
          "ref": "39590aa4-1fb2-4608-b1f8-c2dc7d2a94c3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bc212cdd-bf34-46f2-819d-3f2216c2f8ab"
        },
        "item": {
          "id": "e1e306db-1266-4d92-b48d-8797d1c366c7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b24a0fb8-53e0-41ac-9071-00128e17eac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbb2982-1566-428f-bcaa-e290789539ad",
        "cursor": {
          "ref": "f29e0290-f05a-43c0-90a4-8ed015275a63",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a02b5034-1dfc-4bf5-b1ed-5d4b6e8a1604"
        },
        "item": {
          "id": "ffbb2982-1566-428f-bcaa-e290789539ad",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d2e9e543-d1d0-4f8d-a365-002c7cf31586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930db49b-bce4-4ca1-a171-79ab0a170963",
        "cursor": {
          "ref": "c33d8a50-dc19-49a7-b10a-01e563456e1b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f6309a8a-7ab5-47fa-82d4-d5f38c60157a"
        },
        "item": {
          "id": "930db49b-bce4-4ca1-a171-79ab0a170963",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c2323068-77e2-43f5-8dee-0757ec75cb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05e4bad-aeb2-4b46-b271-5ead36c1c8ad",
        "cursor": {
          "ref": "b1695667-ebf8-4951-80d7-47748338ca69",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d5cb1775-bbd3-443d-9372-efb7a980cd76"
        },
        "item": {
          "id": "e05e4bad-aeb2-4b46-b271-5ead36c1c8ad",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "032d932f-0842-43db-a6a0-185de58e0d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e70da87-cb80-47d0-a252-cc6a83a49484",
        "cursor": {
          "ref": "e59cf71f-407f-40fd-992a-36746614b83b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dfcae6f9-0bbe-4b46-846e-75b5f4a30ddc"
        },
        "item": {
          "id": "5e70da87-cb80-47d0-a252-cc6a83a49484",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b075687d-6439-4d56-9262-45208e88229a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b940bf5b-9266-47eb-bafc-fea0b5d3551c",
        "cursor": {
          "ref": "d3423d38-4f8b-4e16-b1ba-7db4b0886268",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1f89e035-a0b5-4954-939e-7e5aa0fd39f4"
        },
        "item": {
          "id": "b940bf5b-9266-47eb-bafc-fea0b5d3551c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a7a76bc0-3eff-4c48-96d5-90827b3c68ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ff0e51-c770-48a5-9a4f-cdf8a6fbaebc",
        "cursor": {
          "ref": "eb64e2f2-9271-4f27-a991-6111aa01632c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cdba621f-1f97-4ede-b76f-aa6ebb7987e4"
        },
        "item": {
          "id": "b6ff0e51-c770-48a5-9a4f-cdf8a6fbaebc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3bef8a3d-e767-40bb-8100-614adbf9f4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35149298-f94e-4608-8dde-c10060353137",
        "cursor": {
          "ref": "1c1bb49f-4c48-404f-a39e-56e34273f2ac",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e2ec01a0-3c8c-4b88-9a78-75d2c1df6acd"
        },
        "item": {
          "id": "35149298-f94e-4608-8dde-c10060353137",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "77f104ed-6cfe-476a-a7d2-6d0ccb2f35c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec11b4a8-6d92-4e56-b525-e6dbbac9a8b8",
        "cursor": {
          "ref": "4d77c799-6ed4-4a0e-b3e7-2ae78cc9c5ba",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5fa01fcf-a3bd-4740-b0a9-5a95e5ea5a56"
        },
        "item": {
          "id": "ec11b4a8-6d92-4e56-b525-e6dbbac9a8b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8be12555-a127-43fa-9bb9-2149b83b9e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8b1315-c43f-429a-a11d-5bb2f2609de2",
        "cursor": {
          "ref": "3eabd208-4869-4c34-89fb-c735a527b8c5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f92831ae-b97f-4f03-94f0-ab728bc19ad3"
        },
        "item": {
          "id": "4d8b1315-c43f-429a-a11d-5bb2f2609de2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "60cbca75-22dc-4e53-ba1d-8decd42eec09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842ef462-aefb-48b4-976f-dd8a07f3cc31",
        "cursor": {
          "ref": "2d50db7d-b85b-4cbd-8961-916b7cf996c0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "acdc4071-7d88-483c-be5e-35bb57ce15be"
        },
        "item": {
          "id": "842ef462-aefb-48b4-976f-dd8a07f3cc31",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3174b51d-b7a4-4cd2-8017-0e98c338a01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d538d6be-ca1f-4ae2-871d-f922813917fa",
        "cursor": {
          "ref": "129aac27-0438-4535-9261-963df735b8eb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b28f53b6-79ec-4e87-b369-55b8b7271e18"
        },
        "item": {
          "id": "d538d6be-ca1f-4ae2-871d-f922813917fa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4e00e30f-e718-433e-9d92-b45f5fa6ecbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb06d30-7758-4d3d-a6ec-0d05b6427dec",
        "cursor": {
          "ref": "03e33583-a8e3-48d6-b2a4-efcfb89be505",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4451de09-3f7b-4e75-8010-848dbeee32e8"
        },
        "item": {
          "id": "acb06d30-7758-4d3d-a6ec-0d05b6427dec",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ab3a33a3-376a-4e31-b81f-d3f8c46b48f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9a4cd8-431f-4384-a1a5-9e62691f6391",
        "cursor": {
          "ref": "7e462dc8-9576-4ea4-994c-3dfdef196e5c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "64dd53fb-4be9-4a55-94f8-f780c48f6b4c"
        },
        "item": {
          "id": "de9a4cd8-431f-4384-a1a5-9e62691f6391",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c9cda930-6d5c-42c3-ad40-204768566ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf91e2f-3f67-43cd-9010-3400312d0b89",
        "cursor": {
          "ref": "2d5c8548-a590-425b-821d-53205457ab0b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6fd82450-2a0f-4b15-b9b9-dbd339fdf00d"
        },
        "item": {
          "id": "0bf91e2f-3f67-43cd-9010-3400312d0b89",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b0e695cc-3676-4a86-aaea-cbcc9dc2cde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76f8e8a-e63c-4bf2-89fd-4f250515868c",
        "cursor": {
          "ref": "d10ad132-d1b6-4c53-982a-e3f21c8cd290",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "15f3bd93-aaf5-439f-91ea-512f0d6e4a79"
        },
        "item": {
          "id": "d76f8e8a-e63c-4bf2-89fd-4f250515868c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d7200ae3-4787-4eb1-b54f-0f8db1a04642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4eaff8-db0d-4ce1-a5fd-722ec2a21152",
        "cursor": {
          "ref": "3880c7ca-5273-4b53-a67f-dc66475554fe",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3dab5478-5f13-427b-b080-cf9f2d2bc68d"
        },
        "item": {
          "id": "ad4eaff8-db0d-4ce1-a5fd-722ec2a21152",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "14fa43fd-d35e-4b89-bb93-e0ae5444331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0a8d02-f07e-4a6e-bf8d-5ce4c1972187",
        "cursor": {
          "ref": "7d31bf61-1d3b-43a1-91fe-7970aea1b258",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3dea60f4-8816-4d13-aa62-2f281f71618a"
        },
        "item": {
          "id": "3c0a8d02-f07e-4a6e-bf8d-5ce4c1972187",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c8d3367e-03bc-40a5-9c62-70be2f08ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe9241c-1351-4716-bba5-494e70bf8ec4",
        "cursor": {
          "ref": "fdf45fbc-6a6c-446b-a438-4a74fb129203",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e2c6208b-5837-49d0-8369-270a29cb95dc"
        },
        "item": {
          "id": "3fe9241c-1351-4716-bba5-494e70bf8ec4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "598e0835-9de2-4fb5-af31-88c001983634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d14a127-a740-4080-b437-5858023e215c",
        "cursor": {
          "ref": "0c1c116b-1d93-4dd5-a5fa-70efbe7b578a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "30bd54e4-8cbb-4199-9061-c4003967e8e1"
        },
        "item": {
          "id": "3d14a127-a740-4080-b437-5858023e215c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ff6cc9cc-9389-4c54-8e4d-686bb6c87eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94df16ae-460f-4c1a-9630-ddf385f55377",
        "cursor": {
          "ref": "ecf89af0-f381-4597-b78c-2b57e1c83ca9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea9e692f-afd8-4079-a27f-00b428a6cd27"
        },
        "item": {
          "id": "94df16ae-460f-4c1a-9630-ddf385f55377",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9825c876-f736-40fc-ab2e-0d1bc8afeaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a3dbb2-5333-49c1-beff-73bbfd5b5631",
        "cursor": {
          "ref": "ca3b79b0-f8e1-4e35-82a0-d67178737dd8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e9ed3b1f-0edc-47a8-8c6a-b975b2e2862a"
        },
        "item": {
          "id": "f2a3dbb2-5333-49c1-beff-73bbfd5b5631",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "72cbc7c7-1749-4fa8-9214-dae2b0f36fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8936f6c9-7107-4be1-8337-19d15fe9ecc4",
        "cursor": {
          "ref": "ef7fd200-8322-4b5e-ab89-931398f49511",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e2bfc3b2-609e-4410-aac0-f36225d4fcaa"
        },
        "item": {
          "id": "8936f6c9-7107-4be1-8337-19d15fe9ecc4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dcf1c446-b156-4137-a14f-50c99d51362a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f4fbfb-ad1d-4177-9f59-907a4bd2e61e",
        "cursor": {
          "ref": "e7f418b9-d580-4617-a9e5-40c2a345f974",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6bb790b2-1547-489c-8315-eda48e0251f4"
        },
        "item": {
          "id": "a8f4fbfb-ad1d-4177-9f59-907a4bd2e61e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "494710e0-3d03-47ee-954c-a87bef962fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a9a708-10cd-479c-8ddf-b94fe27d0f70",
        "cursor": {
          "ref": "b52c95b3-102d-4051-8b42-2ef1d9ede2f5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9529847d-77af-40a3-ba3b-244910f769d0"
        },
        "item": {
          "id": "b4a9a708-10cd-479c-8ddf-b94fe27d0f70",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9755ef48-aabc-4576-b3cf-d6c42299e5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb44cac-da1a-438d-8b28-450694846688",
        "cursor": {
          "ref": "01424451-7d34-4129-96e0-e0cc945b140f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "27386aaf-05ff-4b46-9a98-eb80e29d888e"
        },
        "item": {
          "id": "deb44cac-da1a-438d-8b28-450694846688",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2881f7a0-bb6e-433f-8061-e896c859493d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1a8663-adae-47aa-a5d2-434547aad49c",
        "cursor": {
          "ref": "784a8f60-3562-4e4c-ad7a-4dc79559c369",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4355585b-6011-40be-8035-c3c523d28594"
        },
        "item": {
          "id": "8e1a8663-adae-47aa-a5d2-434547aad49c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ad071e62-f741-45eb-b8bf-fa62e704a042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00792b7c-672a-4c02-8f23-eb37e4694da5",
        "cursor": {
          "ref": "cb998fe2-5ee5-4458-97f8-ea0e2725911c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d0f17475-a090-46c2-86da-f2cfe163162d"
        },
        "item": {
          "id": "00792b7c-672a-4c02-8f23-eb37e4694da5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1ffeace1-2bfe-4ece-a3e2-67b25032d6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8eb057-b105-4ddb-b3a2-c61a6019487f",
        "cursor": {
          "ref": "ba0f3dd4-1557-4653-96cb-d842ececc838",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3ab76f31-022a-4d1d-87f4-6fbb91886bf2"
        },
        "item": {
          "id": "7d8eb057-b105-4ddb-b3a2-c61a6019487f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f093f46f-7a57-4906-8a8f-6b83e8035af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f861be-6187-49b0-92ca-ba8ae6aa1da9",
        "cursor": {
          "ref": "9df9fd6b-c9d6-4c60-af5f-a6f47d161954",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6e150730-0f12-477c-9744-46c247bf1157"
        },
        "item": {
          "id": "01f861be-6187-49b0-92ca-ba8ae6aa1da9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "00a1a023-cfc3-4dcd-baaf-8561f246a57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f04c7c4-085a-4e21-a51e-c8a65845c62c",
        "cursor": {
          "ref": "33bfd9d8-6ae1-454d-8d7b-a8b9eae9c7dc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c1ea9284-810c-49df-ba5e-886afcaaed1f"
        },
        "item": {
          "id": "5f04c7c4-085a-4e21-a51e-c8a65845c62c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3911d58c-2cc8-4339-8e1a-45a482546447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b9aed6-6760-48fb-9567-ab29751191a6",
        "cursor": {
          "ref": "e97c3e70-9d5d-46eb-99b3-e1bd1d269e4c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "34df87ba-a78e-4eec-9dd3-4c16b6f72105"
        },
        "item": {
          "id": "41b9aed6-6760-48fb-9567-ab29751191a6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9fb27baa-d827-4fa4-9ac2-3eae6c23261d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182f9b90-7070-42ab-b534-2422a1bd65e7",
        "cursor": {
          "ref": "9b507627-cef4-441c-ac2f-683faa34a663",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "585dbfb0-577c-4580-a7f7-195cf4be9cfe"
        },
        "item": {
          "id": "182f9b90-7070-42ab-b534-2422a1bd65e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4062a803-7e90-4e4b-a5b3-c1cdd2514885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0b1332-ef05-4e06-bd46-5805d5863fe4",
        "cursor": {
          "ref": "b1930b27-835d-49e7-87e0-b38e59f1e2e3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a3bf4fb1-67fe-4b66-802f-af84d66a284f"
        },
        "item": {
          "id": "ed0b1332-ef05-4e06-bd46-5805d5863fe4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a32230f-25a8-4462-a73a-ae8c2b72771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7034ff04-b600-422f-bc53-da6dc030421a",
        "cursor": {
          "ref": "300cae86-0440-4d9f-b6d6-435bbe9fdcfb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d556dd53-8287-41fb-b539-bfd4d66c43bd"
        },
        "item": {
          "id": "7034ff04-b600-422f-bc53-da6dc030421a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a24fce2d-2a8b-4bf1-b590-973cc941d611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07215446-8199-4a47-8e6d-1ec64a89f3d6",
        "cursor": {
          "ref": "1c4281db-c1d9-4610-933f-33106809b42a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0b6750f9-1486-47a4-a60a-4310755e0853"
        },
        "item": {
          "id": "07215446-8199-4a47-8e6d-1ec64a89f3d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7ce3b4e4-d97f-4b45-b760-04c8c991ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c400f7f-d501-4485-9629-22601412bc60",
        "cursor": {
          "ref": "7e6e3870-a5a9-429b-8d9b-414e7cd1473b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "32297c31-962f-4e89-8b00-d6cef436530d"
        },
        "item": {
          "id": "9c400f7f-d501-4485-9629-22601412bc60",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e9deb8eb-cd76-4295-b180-229aee60ef77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59fb35d-b496-414e-bb51-02c09c1d9292",
        "cursor": {
          "ref": "07f91e63-0e66-4702-9789-eaffc74e348e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f5674767-fce9-46d2-bd03-b972af49f97a"
        },
        "item": {
          "id": "e59fb35d-b496-414e-bb51-02c09c1d9292",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "976fae13-f4cd-4ae1-a25b-bba82bbb1874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e06f1d-f1c4-42b4-932f-6475e46aa6ff",
        "cursor": {
          "ref": "46e07354-06a1-4521-a463-eebbef70d745",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "161f9761-c905-4617-bf3f-3b71dcbb61c5"
        },
        "item": {
          "id": "c6e06f1d-f1c4-42b4-932f-6475e46aa6ff",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f8ba7f9d-b8a4-447a-a63b-43fccf13839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6e74b0-da0a-4329-8379-46a184206fcb",
        "cursor": {
          "ref": "bf670fc8-c004-4cd3-b0ad-dac902588954",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bfcc6067-d75b-481b-905c-072da6aed7f9"
        },
        "item": {
          "id": "6e6e74b0-da0a-4329-8379-46a184206fcb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b20608b8-9605-46e7-9cb9-74dd239e49d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9503d4-2c3a-4db5-8de0-60d2aca3b7b1",
        "cursor": {
          "ref": "55d4f343-1a6e-406a-8a2d-862f6b06688b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f0d53d1f-6c3d-4529-b0df-c58ad794e9c5"
        },
        "item": {
          "id": "cb9503d4-2c3a-4db5-8de0-60d2aca3b7b1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5571b051-aa6c-4482-b7be-288b490afeb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd27ad69-482e-4393-958a-c485d3f778e8",
        "cursor": {
          "ref": "b0600cf5-293e-4933-8245-01fd065c825c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6eecfde9-3e09-407c-96ad-56f826548a41"
        },
        "item": {
          "id": "dd27ad69-482e-4393-958a-c485d3f778e8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2593f7ce-49a4-4978-b51c-1408f1f561ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c74a7a18-c490-46e1-9b62-78ab10ce8861",
        "cursor": {
          "ref": "bd6f3f71-8d12-438d-beab-7eb9c31bc88f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "24d54b77-d0b1-4b92-b2d7-fa5594bbb656"
        },
        "item": {
          "id": "c74a7a18-c490-46e1-9b62-78ab10ce8861",
          "name": "credentials_issue"
        },
        "response": {
          "id": "05d835c4-7f3c-4a96-9e72-b93eb959b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "99a9fa60-1fd4-4aa0-8791-9f137f617c1c",
        "cursor": {
          "ref": "c8488573-55fc-480d-9b02-3e5c65168189",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c08f5cda-dc48-4e1e-b864-c9eb688bf023"
        },
        "item": {
          "id": "99a9fa60-1fd4-4aa0-8791-9f137f617c1c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c2394035-b708-48cb-9968-f3d01f1d4547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b63adc1b-4f47-43cc-af0d-58e207dd24fc",
        "cursor": {
          "ref": "6a6e5874-d328-4c6a-b609-302fe27a46fd",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0f8e5993-63f8-44fa-8a7e-17c2d7d219b6"
        },
        "item": {
          "id": "b63adc1b-4f47-43cc-af0d-58e207dd24fc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d6f1a15f-acb4-4069-8d76-cb0d88de1407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "19114714-c940-4f3f-9d1b-3df92e76f6fe",
        "cursor": {
          "ref": "f3c9bea1-859c-4af0-a7a2-968847a55e3f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5ebcc0a4-e9f8-402b-835d-34eeb1f95774"
        },
        "item": {
          "id": "19114714-c940-4f3f-9d1b-3df92e76f6fe",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "58fe3ff0-c0b2-4c33-9db6-5f69e8a7694b",
          "status": "Created",
          "code": 201,
          "responseTime": 6330,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72860c55-b91b-4dc0-ae14-49e554f71f43",
        "cursor": {
          "ref": "a4f9668f-8ba9-496e-9f27-ba307144a153",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d7f23f00-4532-44ef-a366-5339a7a37477"
        },
        "item": {
          "id": "72860c55-b91b-4dc0-ae14-49e554f71f43",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4443b2ca-d181-4fa8-afe8-9789c9b0f331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "133dd714-02de-438c-a015-2e07a7ff7e19",
        "cursor": {
          "ref": "7a68c777-5bf5-41ac-9875-d8ebb17e87a9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3d98590e-95c2-4bbd-8446-eac105c580f5"
        },
        "item": {
          "id": "133dd714-02de-438c-a015-2e07a7ff7e19",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3fbcd12a-98ac-4022-bb88-077d08139108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a28acc03-daf7-4740-b5c1-1638f619938e",
        "cursor": {
          "ref": "7b911496-fc85-4ac4-b652-96e2cb7aa0d3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9fa74f9e-36fb-4006-ad1e-2bf499c91481"
        },
        "item": {
          "id": "a28acc03-daf7-4740-b5c1-1638f619938e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "320003ed-5731-4f97-9100-3ce991d7eb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3463ca-71e2-4677-9fe7-06f458108f45",
        "cursor": {
          "ref": "509a6afc-5ddd-4f0c-bdcc-b1f1f9de1d4f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c2ceee39-1e12-49c8-88cb-77ac26859beb"
        },
        "item": {
          "id": "8f3463ca-71e2-4677-9fe7-06f458108f45",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "588b3c94-5ba0-434d-a4d5-478b3c25b528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf172b17-db39-4221-ac6c-3a87c7340398",
        "cursor": {
          "ref": "64a67c86-a3f3-40e3-bdbf-e24a73db9ae5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b18ca60e-b48e-4bd3-bebb-557a085ae57f"
        },
        "item": {
          "id": "cf172b17-db39-4221-ac6c-3a87c7340398",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a9d0d0dd-a340-4b1e-9f7a-b8c543aed2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2407e74-208e-45ea-8766-1149cf6761c5",
        "cursor": {
          "ref": "f781ecd9-938b-4854-bb0c-26bf3483831c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "187049a1-6e4e-41c8-ba13-34ffa6ee4200"
        },
        "item": {
          "id": "c2407e74-208e-45ea-8766-1149cf6761c5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9a905fa4-9a1a-4138-a8e1-e6ff8d9cbdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d806948-5e9e-412f-aae3-5359594fe483",
        "cursor": {
          "ref": "137a614e-83b4-4baf-b94d-efb04a44ee9d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "80290ea4-fbea-4689-a5ef-c02792860ade"
        },
        "item": {
          "id": "4d806948-5e9e-412f-aae3-5359594fe483",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6f84cee1-f5c2-4046-b0fa-aad1feda1fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b7aacf-dd7a-4a8a-beeb-5c64e8b28c80",
        "cursor": {
          "ref": "b162ae08-cb20-4fbc-91b2-676542c06dc5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a92b8329-f5dd-40a0-a0b4-9e883c5b220a"
        },
        "item": {
          "id": "83b7aacf-dd7a-4a8a-beeb-5c64e8b28c80",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3aa06c66-f7cd-4f95-9ba9-bba11546762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea72fe30-6840-4a72-954a-8c8e28e34fa1",
        "cursor": {
          "ref": "dd0beaa0-1423-4efb-819d-3dd5176ac84e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "95af280b-9ba3-4e05-ad4f-991cd40a8a10"
        },
        "item": {
          "id": "ea72fe30-6840-4a72-954a-8c8e28e34fa1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d049f7a1-111d-447c-a43f-6dbf9d2aa701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ee218a-397d-4719-a09f-a61363bc27bc",
        "cursor": {
          "ref": "2b13f3a5-255c-481a-bc17-1b3e6700dcaf",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5e25364b-bb9b-4855-bb6d-005e9704fb8d"
        },
        "item": {
          "id": "f9ee218a-397d-4719-a09f-a61363bc27bc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b8654ce-6b8a-4f92-b8b4-3a0f880ba364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b68186-c0f2-4fdf-a395-f3625ff771ea",
        "cursor": {
          "ref": "4b7e0d55-55d8-4209-9544-dac2f15cdd95",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7ec72019-50cf-4133-9b40-b8454235bd05"
        },
        "item": {
          "id": "f5b68186-c0f2-4fdf-a395-f3625ff771ea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e34a6356-fd57-4025-beba-c3a9ef2d17dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d53ec0c-fa2d-405b-9e5a-9b6efc88c5c7",
        "cursor": {
          "ref": "1d018b33-5b87-495a-b81b-eb67b7e6e2d2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "db11bf68-29ce-404d-8858-e2e9e797d0a1"
        },
        "item": {
          "id": "2d53ec0c-fa2d-405b-9e5a-9b6efc88c5c7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ad85eb37-3566-493f-840b-75241f779034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432123cd-2cfc-4fd5-9b50-d4974e26f35b",
        "cursor": {
          "ref": "8342b21a-bd17-4dc1-8448-9b5567d085a1",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d8dc9462-a54b-4d8a-a25c-03551968255b"
        },
        "item": {
          "id": "432123cd-2cfc-4fd5-9b50-d4974e26f35b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "31aff629-c191-4a71-a801-5cd47612c4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d92941-f2e4-4ca2-a27b-5e4eb3477ac0",
        "cursor": {
          "ref": "3c2b5943-bed6-4cf6-95c4-e51f8e9e694a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1a4bfdff-b138-4dc9-bed2-e74f748e778c"
        },
        "item": {
          "id": "07d92941-f2e4-4ca2-a27b-5e4eb3477ac0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1fe457d2-8420-4617-9f56-5b16b8152c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a720410-4727-48f4-9bff-1a8339bfbdac",
        "cursor": {
          "ref": "a62a4da7-26e2-42ea-81fb-590d931c0155",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e73af8f3-52c7-4dea-bd18-f514ae823610"
        },
        "item": {
          "id": "4a720410-4727-48f4-9bff-1a8339bfbdac",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b56ebdbf-e405-455f-8aa4-e309026f3b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a913db83-258c-4fcf-9eb4-a5f72a2ecc49",
        "cursor": {
          "ref": "6abaa171-9252-4223-be50-cc991d055b90",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c08df14f-5cee-4af9-b423-d31cc43a72a7"
        },
        "item": {
          "id": "a913db83-258c-4fcf-9eb4-a5f72a2ecc49",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bd02a848-b332-4fa9-bdcb-f3564bc5b3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb96e048-a058-43f2-a576-f0e0a20c8a47",
        "cursor": {
          "ref": "64217390-9473-488e-a12e-f2615534c6de",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e5178935-1e01-41de-bdd8-afd4fcade8e5"
        },
        "item": {
          "id": "bb96e048-a058-43f2-a576-f0e0a20c8a47",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c5da8533-8455-40ad-85d0-eaf7fa205bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5977970a-ee92-419d-b9ec-dbc1b27f7932",
        "cursor": {
          "ref": "b2a8097f-0561-4d21-ac0d-3065469dc7d9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "81e8deaa-583c-4629-adf8-39a896d6e9cb"
        },
        "item": {
          "id": "5977970a-ee92-419d-b9ec-dbc1b27f7932",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1d367d7a-06f1-4746-b126-abb72ae0f62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d54335-3735-405d-9a55-519ca72a90c6",
        "cursor": {
          "ref": "0bbc1c6e-0edc-4c75-b890-f31e8dcbd2c6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "326ea111-c1a6-47fd-aad3-f3f045cc8aed"
        },
        "item": {
          "id": "e2d54335-3735-405d-9a55-519ca72a90c6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3933aa21-eca2-487f-b4b1-7b1b731164ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422b1ac-35e7-413c-a009-bf76b46d4d46",
        "cursor": {
          "ref": "b4cbf8e0-6814-40e0-a2d8-3dbd1153c782",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1784908c-0c8e-4d1e-8474-db10574f9308"
        },
        "item": {
          "id": "1422b1ac-35e7-413c-a009-bf76b46d4d46",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "93076e34-0488-4711-8dc7-04336eb702bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e878deb-5910-4839-b8c5-bdd9a7f6bb24",
        "cursor": {
          "ref": "c431402d-2557-4d2f-aaa3-2fb092d34900",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9ac5a77f-0310-4af9-881e-fcda85a0b3b1"
        },
        "item": {
          "id": "6e878deb-5910-4839-b8c5-bdd9a7f6bb24",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "63b65b7c-bf6f-4b76-9ec3-4e7ed3e3ea7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac317958-1c22-4549-aba5-bfcb4d7fcd18",
        "cursor": {
          "ref": "639c2299-4efd-4b5e-a737-9e633a9fe92a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bd18a8f3-f2cd-46ae-8810-8ebc23cea5e1"
        },
        "item": {
          "id": "ac317958-1c22-4549-aba5-bfcb4d7fcd18",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d704d7a5-379d-4626-9078-1ab4c9357e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9af55b-71d4-430f-a9c2-5d3b3e1eb36d",
        "cursor": {
          "ref": "3fc0c7e3-086c-4684-a234-ccb13492433b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cc693937-4cfa-44fe-95de-de0a6453c48a"
        },
        "item": {
          "id": "ff9af55b-71d4-430f-a9c2-5d3b3e1eb36d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f179169c-6232-44e1-91b5-99aea8724fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e71eca-1eeb-4f7d-86e6-178e0efbe718",
        "cursor": {
          "ref": "15f819ef-a99a-4083-b088-bdffdad92a45",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cae91e82-59ed-411b-ab17-3f3efe148432"
        },
        "item": {
          "id": "a5e71eca-1eeb-4f7d-86e6-178e0efbe718",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "624ae4c7-837d-4f80-804a-ee86981d29e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43729ee6-dc29-4df3-8e1c-a3b00db3e348",
        "cursor": {
          "ref": "a9e04dd7-fe4a-4b24-b12f-abe5b4e1311e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d9645386-6929-40b3-bdd0-536169bd52df"
        },
        "item": {
          "id": "43729ee6-dc29-4df3-8e1c-a3b00db3e348",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b7084140-e681-4e78-ac85-896aa70211b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098dc246-ce92-4d2b-be7a-71e05e4f5cd8",
        "cursor": {
          "ref": "400a8d89-09f7-4c36-bfa6-d8eaa122e1d7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9a404bfe-b931-4832-bfc7-9c410f567703"
        },
        "item": {
          "id": "098dc246-ce92-4d2b-be7a-71e05e4f5cd8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8751ebaf-4524-4436-9ceb-3c204da671d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a23057-eb7d-492c-853b-c384dbe96fe9",
        "cursor": {
          "ref": "9c640e2d-497e-4f42-a97c-e25661f5fafc",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aaed370c-5981-4f55-bc80-7a5336a3a881"
        },
        "item": {
          "id": "f8a23057-eb7d-492c-853b-c384dbe96fe9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f04f6389-29b5-4b97-8f25-144055d1889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa6a25e-61b8-40eb-8e0a-f7a9bcdb109c",
        "cursor": {
          "ref": "a573f46f-0fe0-4b69-beb4-f3288ce5db22",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a5915b00-1bec-49e1-9983-132092436455"
        },
        "item": {
          "id": "faa6a25e-61b8-40eb-8e0a-f7a9bcdb109c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "61425b43-6577-47ec-82ee-f1c341708a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748048d2-c867-4ddf-8e9c-599a3b87eda5",
        "cursor": {
          "ref": "da17728b-4470-41ca-85bd-af25509d9f4e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5422bb5e-8f2e-4a9d-9cc4-146e441f2777"
        },
        "item": {
          "id": "748048d2-c867-4ddf-8e9c-599a3b87eda5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "77127761-940e-48ac-aff7-d511acdeb051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1558ce29-cb02-4503-9489-5e265bf31386",
        "cursor": {
          "ref": "4a1f9a14-cc8b-41e2-8f62-30feb23b1ac9",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6e48169b-358e-4c4d-93f2-b748abfcce01"
        },
        "item": {
          "id": "1558ce29-cb02-4503-9489-5e265bf31386",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e36c4919-ee0d-4fe6-a77f-2ec34bf1936f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2a3c5a-826e-4644-80ba-89cc93a641ae",
        "cursor": {
          "ref": "bf16b6ab-239b-498f-b4c9-e6173b0f0334",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "56c10ef6-b775-4bec-8346-e9b227b79aa6"
        },
        "item": {
          "id": "ed2a3c5a-826e-4644-80ba-89cc93a641ae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e689546b-1d22-44e0-a703-0cc97ded91bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b6bf67-5419-440e-a8c4-1d6ff757cb92",
        "cursor": {
          "ref": "4abab571-5c5d-43ac-a041-2c0845b83897",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "36e8c663-f582-4aed-b4fc-1bbd02c262b5"
        },
        "item": {
          "id": "f3b6bf67-5419-440e-a8c4-1d6ff757cb92",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f88f307-5d56-484d-b349-ef7289dac017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad4405-59a7-4cef-ac87-fafd5d96450b",
        "cursor": {
          "ref": "eb42b17d-dd51-4613-9073-601f8f137e9c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "87234c12-a107-4784-8996-18262b6226e5"
        },
        "item": {
          "id": "00ad4405-59a7-4cef-ac87-fafd5d96450b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7c2b28ac-51c1-48c1-b41c-9cb7441b273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a60f3-e40d-4c0d-ac1f-2a04a01d4650",
        "cursor": {
          "ref": "36199f0d-268b-4edd-b0d5-ab9632c82794",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ad14857a-b0fb-4588-bb90-6bf0ac8e900f"
        },
        "item": {
          "id": "2e0a60f3-e40d-4c0d-ac1f-2a04a01d4650",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8ac367e9-785e-4df4-855c-e6e029050cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1646f9a2-696c-42ba-851f-85b4ef3ca1a2",
        "cursor": {
          "ref": "622d3745-8a04-4bf3-bbf3-779bb69605b3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c13f666e-2c2b-4d72-b1e3-78e19b967374"
        },
        "item": {
          "id": "1646f9a2-696c-42ba-851f-85b4ef3ca1a2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "894b96d0-634d-4ea2-924c-94e71c5e87d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd23163f-5bf5-4c95-ae49-0efefe080284",
        "cursor": {
          "ref": "bf8f5b2c-1c5b-4f50-8c3a-5234c25e9598",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fd6bf07b-2445-44db-a5c6-cbbe16aa03e5"
        },
        "item": {
          "id": "cd23163f-5bf5-4c95-ae49-0efefe080284",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2ebac643-815c-4e21-84d5-88110d6ccbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59173ab-8c00-49af-9dcb-d5c6f009d196",
        "cursor": {
          "ref": "c4ed4650-7cd6-4ba5-aec2-908ffde2eb62",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "773b90b3-c7b5-4833-8691-e8b15939b63a"
        },
        "item": {
          "id": "e59173ab-8c00-49af-9dcb-d5c6f009d196",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bacbaf70-5b25-4a3e-a7e7-b0ff4c12178e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f49e05f-a147-4359-b5a0-f3fee5617ce2",
        "cursor": {
          "ref": "b72b2f20-e948-4a79-801f-3640dcbbbe9f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "75a9b109-51c2-4342-b34d-c915a860743e"
        },
        "item": {
          "id": "8f49e05f-a147-4359-b5a0-f3fee5617ce2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29c648ee-4796-4763-97e4-06d8243b1e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2c7744-7155-4247-af58-cfbf2a414add",
        "cursor": {
          "ref": "03b8de33-04d4-4b38-9bfb-9a7b81d79e65",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e56cf667-9003-4d0d-baa2-87007a30ffa7"
        },
        "item": {
          "id": "aa2c7744-7155-4247-af58-cfbf2a414add",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7eda6aa8-47c2-497b-803d-b725d2b97200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d88cc2-6a0f-4326-a243-5042d3af7204",
        "cursor": {
          "ref": "339400d0-3f1e-4e94-a985-8130b4a70d63",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6c802888-8438-4843-bf80-20e3ec1a54d9"
        },
        "item": {
          "id": "57d88cc2-6a0f-4326-a243-5042d3af7204",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e4623be7-85a3-4513-82da-9f35bb458dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f911880-40ed-4c16-ac32-a2931b184bbf",
        "cursor": {
          "ref": "6791aecb-117c-4434-a718-976f45a8bf2a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5dafeb9a-af7e-4200-b19a-27e9089a8bb8"
        },
        "item": {
          "id": "1f911880-40ed-4c16-ac32-a2931b184bbf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "677ebb72-82cc-4db2-9d7e-90932aa6bf2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eede94d-77b9-4925-8689-b88ffb00d40c",
        "cursor": {
          "ref": "693d5a81-3743-4c35-a9e9-4283e2d8579f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8d324999-cbaa-4a6e-8503-36ddc2a028dd"
        },
        "item": {
          "id": "0eede94d-77b9-4925-8689-b88ffb00d40c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df6b6b61-51f7-43fd-a039-fa432f9a8528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b6814-30ad-4b11-a046-e60462456acc",
        "cursor": {
          "ref": "a005cc33-43be-4e43-9e35-3ffc0a8dff5b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "da777469-e20a-49a9-aeb2-a0091198106e"
        },
        "item": {
          "id": "2d9b6814-30ad-4b11-a046-e60462456acc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2814b56b-3604-4627-a449-e6940eb25a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b838cbe-bf13-4091-84fb-a729194aa5e5",
        "cursor": {
          "ref": "574c9380-5647-4890-a625-afa3d21f4efe",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "16b72d71-a88d-41ff-9689-8d237cd86e71"
        },
        "item": {
          "id": "1b838cbe-bf13-4091-84fb-a729194aa5e5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d05a472-b2f5-4f95-a11f-08fd624bef76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42327c97-cd7f-4081-9b63-b483500b3fcb",
        "cursor": {
          "ref": "b97f4421-9f86-4c02-baae-fef8369181c1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c64a5b94-4aed-4c60-8877-ed0ce4fd2408"
        },
        "item": {
          "id": "42327c97-cd7f-4081-9b63-b483500b3fcb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "29c42cfb-b348-4be5-bd00-b541fae0a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188d21bf-6113-4205-90bb-3c8adac64d4c",
        "cursor": {
          "ref": "7120a2f3-98cf-458a-bb7b-4285ed4b4412",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5a657abc-09a1-4e7a-a1c6-2c0326a45617"
        },
        "item": {
          "id": "188d21bf-6113-4205-90bb-3c8adac64d4c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b81917c-b434-45d6-aea6-9eaac53ca343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1df023-e98e-4db5-aec5-993ebf881007",
        "cursor": {
          "ref": "0b6e0e4b-6250-4434-97a0-32b1400f1362",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "19ee2985-4b09-4b0f-a8e0-c773daccfd6f"
        },
        "item": {
          "id": "3c1df023-e98e-4db5-aec5-993ebf881007",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5be66ea0-353c-4a99-8d25-cdab81f9c9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f46472-1ee3-4233-bd93-3f572f1e9ece",
        "cursor": {
          "ref": "612aaa14-4a25-45be-b49c-45b1d769471c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "273eb85d-0782-4024-9ebf-d37580b6a971"
        },
        "item": {
          "id": "18f46472-1ee3-4233-bd93-3f572f1e9ece",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8fd70988-80c5-4b8f-8435-cd509e2538b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45de53d4-3b81-4006-90a6-449710fff050",
        "cursor": {
          "ref": "059cda00-e6ba-486e-84d3-36fad58b39ce",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9ffc2f93-b30e-4ce0-9c4d-be0b1e7f580a"
        },
        "item": {
          "id": "45de53d4-3b81-4006-90a6-449710fff050",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dadd28a8-90e7-4642-900e-302cdf76e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bd2f97-ab66-48a5-be5b-23be9e4bb1c3",
        "cursor": {
          "ref": "02e446d4-9868-4fe1-aedc-9e116db15be8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "38ae59e8-45ac-410f-b2de-8a919b7f0498"
        },
        "item": {
          "id": "60bd2f97-ab66-48a5-be5b-23be9e4bb1c3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "da9075c6-e0a7-41aa-857f-847be98c8acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab57155-4095-49fd-8a6f-c659f5b397a1",
        "cursor": {
          "ref": "ff799940-ab58-4aec-b798-993b9c62e403",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c3a60025-1699-4a01-8c2a-a3bece66c3d1"
        },
        "item": {
          "id": "cab57155-4095-49fd-8a6f-c659f5b397a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0004c86d-9221-4bc2-aedc-28167d38e580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194ee28e-6283-467e-bb90-ec70d76c1efb",
        "cursor": {
          "ref": "5a48e262-f6f6-4fc7-9c6b-1d9d6110fa78",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "da570091-a7bf-4f13-8473-f215c8993b09"
        },
        "item": {
          "id": "194ee28e-6283-467e-bb90-ec70d76c1efb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f201546b-d2f7-404b-87b1-38322050f041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7747c8ad-6645-4e3f-bad0-3b54c51f9106",
        "cursor": {
          "ref": "7bf462af-252a-41bb-8175-029b85cba0b3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2ba09b0f-51c1-45a9-8771-3695b99c6fdb"
        },
        "item": {
          "id": "7747c8ad-6645-4e3f-bad0-3b54c51f9106",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17fa92b6-fce0-48ba-a917-295f481f076b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a03a53-180b-4db9-8224-0ef58f079ea6",
        "cursor": {
          "ref": "b748d145-9dad-46a9-bf21-4c1df726da43",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "915a63d5-97ae-4560-8c6a-32d750826011"
        },
        "item": {
          "id": "f1a03a53-180b-4db9-8224-0ef58f079ea6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9fd2ca33-567a-4856-b679-56de6d0e0a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606b7fb-2647-4150-9988-da38b25b568c",
        "cursor": {
          "ref": "e22ad67c-ac7c-4a20-b625-2478d3c63840",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7c7ad083-18d4-4054-9dd1-4462e54fee80"
        },
        "item": {
          "id": "2606b7fb-2647-4150-9988-da38b25b568c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ead5adf-924b-4603-ae37-2c199c8f3acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805c3b64-d69a-40d3-a3b1-dbf92c65754b",
        "cursor": {
          "ref": "dc8a5ce8-c5ca-4539-a6e2-a74cd22a4632",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "246db977-958d-4d24-abbe-1a0ef39aa402"
        },
        "item": {
          "id": "805c3b64-d69a-40d3-a3b1-dbf92c65754b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2a2f45ac-bdb2-4513-934c-f457108bdd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa39657-000a-4a9f-8f64-fcc8d4358e28",
        "cursor": {
          "ref": "5a1dd280-c3fd-4959-b917-6c675a0a8d7b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0d51b365-158d-4b01-a30f-68796489ef15"
        },
        "item": {
          "id": "ffa39657-000a-4a9f-8f64-fcc8d4358e28",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "240859c0-49aa-42a4-8382-c5c9c28fefad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ef06d9-5e33-41c4-a733-356dbf775bc3",
        "cursor": {
          "ref": "94b9d1ac-5374-47c7-a3ef-a69f273df141",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f4be196a-3a50-4e56-a199-1fa0888699c4"
        },
        "item": {
          "id": "e9ef06d9-5e33-41c4-a733-356dbf775bc3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d37c47ee-30f8-45f9-914e-8866e300de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98102b9-5640-413d-8427-35fffd1b8a24",
        "cursor": {
          "ref": "2f8b7742-ee98-44a7-bb77-1fc78b38f0bd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d451f789-d52d-48e1-9ea7-782e9b9475c9"
        },
        "item": {
          "id": "b98102b9-5640-413d-8427-35fffd1b8a24",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "06b7afc6-700d-4671-89a2-9f6d83fe2a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b37593-5fd4-4607-9223-441797ccb090",
        "cursor": {
          "ref": "ec66d666-36b7-44b9-9900-400cdffcefe7",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6cb11abb-fef1-4ed7-a137-5fded8de2f93"
        },
        "item": {
          "id": "e6b37593-5fd4-4607-9223-441797ccb090",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0eb93db-a497-415a-9d24-9b737f5f4818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8b2f30-c23c-4a57-a232-85371fe2869a",
        "cursor": {
          "ref": "bd2d5c74-5183-44c3-918b-8473e24cb4c8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "25c1b335-294e-4a53-8d4b-567bda1d91dc"
        },
        "item": {
          "id": "ac8b2f30-c23c-4a57-a232-85371fe2869a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e95540c0-e3f9-4d84-8177-9b31c0a0cc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03af88ab-9b53-438d-b513-fdeec8b4dae8",
        "cursor": {
          "ref": "4b13641d-62ae-4f3f-a152-b328feb42956",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4ffa05d9-2f13-47f4-93fa-0a1bbb7ebd6c"
        },
        "item": {
          "id": "03af88ab-9b53-438d-b513-fdeec8b4dae8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "29259b86-2ccc-4bc2-b739-6dd015ec62e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80493387-6963-43ee-9457-7af46eda1215",
        "cursor": {
          "ref": "12d354d6-2f69-4a9f-a5e1-6bf324c412eb",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "21a51bce-04d3-421b-b0ec-1e81a9e8562c"
        },
        "item": {
          "id": "80493387-6963-43ee-9457-7af46eda1215",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cc9fcf2-2cf7-422d-a467-93f858b41619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad2f859-eb71-4dc6-b993-b9c5926d01bd",
        "cursor": {
          "ref": "57f9ceae-cb58-4538-822a-0bde17189658",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "81d90caa-0aa2-4ba2-94c6-9827ebefeb52"
        },
        "item": {
          "id": "1ad2f859-eb71-4dc6-b993-b9c5926d01bd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8f1a0f17-02b3-4245-b6ea-2c617d98fec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb03e36-be76-4083-9dc1-7ca4456a0b72",
        "cursor": {
          "ref": "a521dad7-bd60-4b4b-a0bf-71e9e7f5956c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "02103d1d-610c-4a74-9021-62caedf00104"
        },
        "item": {
          "id": "9bb03e36-be76-4083-9dc1-7ca4456a0b72",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c843e88a-0669-4aa1-9d0d-5b01d1afdfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e1b1c0-a1aa-4f82-b97f-ed858938db1a",
        "cursor": {
          "ref": "eda40437-833f-429f-8840-dae7a876517e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2fcd80dd-975c-4592-aa0b-ea06d60bef16"
        },
        "item": {
          "id": "e0e1b1c0-a1aa-4f82-b97f-ed858938db1a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e3437de9-8497-480c-bfc5-f6395e559e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b1ac6f-d8db-4787-970c-f3e0b5ec9d3b",
        "cursor": {
          "ref": "a865941b-8a7d-4b27-b67f-1646855f7f60",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "99ba1624-2f06-42ed-9f2c-4fdd1761c2ea"
        },
        "item": {
          "id": "a0b1ac6f-d8db-4787-970c-f3e0b5ec9d3b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2c7b731e-a7f5-4790-a76b-f89614f28887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a62da8-794a-4d82-bdc4-2ba1a9e1bdc6",
        "cursor": {
          "ref": "9d319e61-31a7-49d2-862a-878552375056",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "18cb3cd9-6cdc-4b23-a8c9-69e72dc1ce40"
        },
        "item": {
          "id": "51a62da8-794a-4d82-bdc4-2ba1a9e1bdc6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "086ff69f-d517-4367-946a-238bd7f0b0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3899689-1ec8-4714-97ff-feb341cfc60e",
        "cursor": {
          "ref": "c843802f-fc97-4380-bcdf-ec96e60b942d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "27132e78-81ee-439f-80d8-0093f1fcb81d"
        },
        "item": {
          "id": "c3899689-1ec8-4714-97ff-feb341cfc60e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1d79e1d6-c5ba-4cbf-89d4-f6ceea548544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33395789-f659-450f-873f-da185d99e3b3",
        "cursor": {
          "ref": "cb328b33-543b-42b6-8cdd-0137fa9760c4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c8f7ea6f-ce99-4977-9956-0db223a89d81"
        },
        "item": {
          "id": "33395789-f659-450f-873f-da185d99e3b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e9a41527-37f1-419a-94eb-f4007b4176d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2586e7f-9655-4e68-8b32-5cf13b414b64",
        "cursor": {
          "ref": "7e9812cf-bf74-4dd9-9998-a51dab2eebeb",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5ca1f6ca-4144-4309-a304-7e48b7aee7e6"
        },
        "item": {
          "id": "a2586e7f-9655-4e68-8b32-5cf13b414b64",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ae409759-1f67-4ec4-90f7-30a83d4d6176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf152db3-46f4-4dfb-b139-3a0538d1a456",
        "cursor": {
          "ref": "0ae66d89-3c39-45bc-8679-696f3c9f05e0",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "737dd012-bb8b-4101-b041-8b3eb268dc18"
        },
        "item": {
          "id": "bf152db3-46f4-4dfb-b139-3a0538d1a456",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e4e849c4-30d1-4252-be71-eb9de88b520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7098cf8-5a56-4ebb-823e-e6f5edaeebd0",
        "cursor": {
          "ref": "06c9d6a2-f39e-42b4-9b6b-056a3310c98c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a556c73c-e32f-44ce-bfe4-a95bee7aebd3"
        },
        "item": {
          "id": "a7098cf8-5a56-4ebb-823e-e6f5edaeebd0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bbddeb7e-b5fb-48f2-b0cc-530cfaa53516",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66c9f30-5cc7-4571-a2ae-ae5269d75061",
        "cursor": {
          "ref": "6b67f85f-8684-4403-bfec-255be7ca583c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2642571b-01dc-4da1-a194-dacdf3f49586"
        },
        "item": {
          "id": "a66c9f30-5cc7-4571-a2ae-ae5269d75061",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "79bd526c-78a4-481a-ba9f-6410be56705e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63a93e5-5668-404e-944a-e6d7e3173db5",
        "cursor": {
          "ref": "170ae736-e04e-4d02-8107-da1c3e304f23",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fecb3b7c-b4fe-43f4-933e-126af950ec27"
        },
        "item": {
          "id": "f63a93e5-5668-404e-944a-e6d7e3173db5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "323805a4-ccfc-4e29-a12a-5c460f601104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e7164-aae9-4867-be46-a444492da49f",
        "cursor": {
          "ref": "88f4faf6-7e90-428b-86b7-514df36464f9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "444a16d8-9559-4b9a-817d-177573b25f13"
        },
        "item": {
          "id": "929e7164-aae9-4867-be46-a444492da49f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2bfb3cda-eca1-4fca-b299-b32b099d7602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3df1a76-1d82-4011-8a7c-680c3dd9d1cc",
        "cursor": {
          "ref": "7dc1f084-cffe-4cf6-92f4-65fed630c7dd",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "afc92e0d-23b1-4c1a-abcb-c071b90303d2"
        },
        "item": {
          "id": "b3df1a76-1d82-4011-8a7c-680c3dd9d1cc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5f19e70c-b4db-4e17-8d6d-b3e2b5f80f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def140eb-55e3-452e-9236-4941cc596615",
        "cursor": {
          "ref": "5c2e90c9-b68f-44e0-8635-a38d56be1a86",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "665ae6c4-9fbf-482f-8ab6-69efffd12078"
        },
        "item": {
          "id": "def140eb-55e3-452e-9236-4941cc596615",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "197e85b0-cfe6-4845-9402-57d7a014a22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b12ab6b-182e-4f97-bf93-b04b8ccbce16",
        "cursor": {
          "ref": "64f7dc01-3590-4f8d-97ab-3e6ac48ea18b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "091f3a82-2a25-404e-9b7d-fb34a77366fc"
        },
        "item": {
          "id": "4b12ab6b-182e-4f97-bf93-b04b8ccbce16",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "621d490e-1b5e-4684-95a3-c3f197443576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6d8233-21a6-4f1e-b13b-c0e67fb527e4",
        "cursor": {
          "ref": "8db74293-8b82-4ec0-bec3-23f7ff40aee5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3ce035f0-27fb-44c3-8e58-e7b276536bc6"
        },
        "item": {
          "id": "7b6d8233-21a6-4f1e-b13b-c0e67fb527e4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4727fe01-dc57-43e0-ae2c-17e0da620b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6124554c-62ae-4612-8adf-34ff156b584f",
        "cursor": {
          "ref": "2f2f3a72-f22d-4d6d-82bc-2bb7acb4a2d1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e400782a-0906-4889-948f-c8c837092009"
        },
        "item": {
          "id": "6124554c-62ae-4612-8adf-34ff156b584f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e4a44d72-1fc1-4c35-aa7a-13ed4b5c67f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd5d6f4-b089-4984-a39e-cd2648d82c45",
        "cursor": {
          "ref": "98626a81-bbe4-48f0-97ce-ccf7d1eab3c5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e4e788fa-e6e1-4cc7-b345-f1d408f4d1f9"
        },
        "item": {
          "id": "5fd5d6f4-b089-4984-a39e-cd2648d82c45",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "64504edd-434f-4d2e-bce5-29d901473cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de0a012-7961-4cda-b1ed-76d8cc826d07",
        "cursor": {
          "ref": "6915be42-ece5-4b98-820b-109922ae80f5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "089cec18-04ed-4cec-95fa-7332f52f4f2c"
        },
        "item": {
          "id": "0de0a012-7961-4cda-b1ed-76d8cc826d07",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d5d8a5e3-23e0-4e93-9743-8acccde4a9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8656417d-b350-47b0-ae38-ccf07734f473",
        "cursor": {
          "ref": "4c05f798-e8bd-4bb6-9a70-c58b905fcb43",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2c96cb98-38b6-4971-85c3-56787b7adaad"
        },
        "item": {
          "id": "8656417d-b350-47b0-ae38-ccf07734f473",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "313deb3d-b181-4349-8dec-bb3f46992454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa79db4d-95fa-4bb3-8b10-451d1b82b4c6",
        "cursor": {
          "ref": "23398f4d-efcd-48de-8e44-0aa1d8f4c440",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "35e38fcb-8b37-42a9-8a3a-78765386ee87"
        },
        "item": {
          "id": "fa79db4d-95fa-4bb3-8b10-451d1b82b4c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "540be87a-d357-4ce9-a25b-c1a415b76c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff60e42-36d6-4761-8749-ea05a6a305d9",
        "cursor": {
          "ref": "0f38a9f7-2782-4912-ade6-5174d7724b94",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40039f94-903d-4c85-a100-bf41a68ce468"
        },
        "item": {
          "id": "8ff60e42-36d6-4761-8749-ea05a6a305d9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "408d9042-20a1-4264-8136-3d58bf19cf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf7f694-7aac-4b0b-bce4-8b3722437c77",
        "cursor": {
          "ref": "f96d71e7-39f5-4ec2-a904-a26554814b32",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "88b91f4a-6c33-471b-9f21-16c1c52f262a"
        },
        "item": {
          "id": "adf7f694-7aac-4b0b-bce4-8b3722437c77",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "95f2dcc0-bf7e-445d-9fbe-7598db68380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5790cbcd-5437-44a8-b041-ddd2fb429c9e",
        "cursor": {
          "ref": "cf4c5351-c843-47c2-9593-48eab1ac7f57",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a2421f4c-4637-4f55-a06c-c3c9ac383777"
        },
        "item": {
          "id": "5790cbcd-5437-44a8-b041-ddd2fb429c9e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7e0d4ae2-29a2-45b1-ad6e-e4957d64540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99bfab8-3f6d-4229-b860-b3a48767e745",
        "cursor": {
          "ref": "443e47b1-c361-49a9-a873-62a917350198",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "71140c3e-14dd-4f72-a7d6-38a5c2a76823"
        },
        "item": {
          "id": "b99bfab8-3f6d-4229-b860-b3a48767e745",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7ea6b5a1-de9f-49c7-888d-db376cf7dec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e438f2-6012-4c6d-bb21-1acd9027ca43",
        "cursor": {
          "ref": "cb108ca9-16f0-4c74-9154-90877bf9c37a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "652bb3c0-0ce6-4bec-9763-d0c8e1560705"
        },
        "item": {
          "id": "b3e438f2-6012-4c6d-bb21-1acd9027ca43",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b47c1656-08f3-4b0f-afe8-62c3fb25db06",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d1f59be2-1640-4f05-90a6-a02009412db8",
        "cursor": {
          "ref": "87c0427d-4a90-4565-9ac6-77092b745be1",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "92285a83-723e-4719-9f29-07026484c815"
        },
        "item": {
          "id": "d1f59be2-1640-4f05-90a6-a02009412db8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "84762907-d8ba-4bab-883c-307bd4f96936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a74339-32e4-4e79-90c8-508f021d1209",
        "cursor": {
          "ref": "e852c067-7430-4768-8d6f-b61718d6b21b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3e260c50-34e2-422f-a95e-60793a4b1694"
        },
        "item": {
          "id": "69a74339-32e4-4e79-90c8-508f021d1209",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "51e8dfa3-6d15-40d5-ab34-153a706b3ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1fa72-c972-45f5-8ef4-1a86040cb07a",
        "cursor": {
          "ref": "b46746d8-7715-4c93-b0f6-fc78caddad7d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a81d7f85-bacd-4a4a-a457-061b4e93a7e5"
        },
        "item": {
          "id": "abd1fa72-c972-45f5-8ef4-1a86040cb07a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a1174b8e-d89d-44db-a0a1-2d27b9bcd1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41597ff-d9ee-4e3e-a537-7c8da9006be9",
        "cursor": {
          "ref": "eeec8448-9f89-49ce-bc9e-06d3b56e9dcf",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2bb26130-9208-44b1-8154-cfc05d2ff48b"
        },
        "item": {
          "id": "c41597ff-d9ee-4e3e-a537-7c8da9006be9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "20355db8-967a-4614-89bb-a34ed1a42936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b0ce8-abea-4b12-884d-d753895e477d",
        "cursor": {
          "ref": "f16a2c18-b54f-4236-af91-71b13a5774ae",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c9e3345e-c31b-4904-b679-e358a9b53e70"
        },
        "item": {
          "id": "cd6b0ce8-abea-4b12-884d-d753895e477d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9d7a4d7c-9bad-40f6-9131-46a9034c7159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016dd1f8-7a75-4b11-8764-5067512c7cbd",
        "cursor": {
          "ref": "3240f58e-7d43-47cb-8eb7-b0493b81516c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "349cd07a-6494-47c8-8771-299d4e0f0580"
        },
        "item": {
          "id": "016dd1f8-7a75-4b11-8764-5067512c7cbd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1a855528-48ae-4661-ac9b-d4703e65f1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de0b401-50f9-45ba-9c19-5ba06ee99730",
        "cursor": {
          "ref": "234d3855-f232-4bed-b3ae-947e08a6873f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e54419e8-1f17-4a75-b6de-c30482c85094"
        },
        "item": {
          "id": "3de0b401-50f9-45ba-9c19-5ba06ee99730",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a1373c8b-2d57-42bf-bf84-dd936ca69411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb045f6d-f0cd-41cc-9622-6e9ce7a55747",
        "cursor": {
          "ref": "5336f3e9-b16a-4e95-aa3f-c94ea7a617f8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c9b99dd2-13e6-4d6f-a9f3-d293e385c2cb"
        },
        "item": {
          "id": "cb045f6d-f0cd-41cc-9622-6e9ce7a55747",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2553831-7eb7-4380-a2b5-ec497eb615b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a39dd20-a453-4e3f-b114-667b10c5e108",
        "cursor": {
          "ref": "053fb981-eb80-4b07-a8b8-a844cfa45f8a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe339c1a-96eb-4262-a58f-64313951ab21"
        },
        "item": {
          "id": "7a39dd20-a453-4e3f-b114-667b10c5e108",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "725727a7-1386-4786-8abf-99892ff028ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007951d1-6322-4bbb-b3b1-f81b1fb06e08",
        "cursor": {
          "ref": "6c8b9651-8cf3-4d56-bb73-e272c1689a8c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "758711d5-e6c5-487f-a698-b9b6a4178391"
        },
        "item": {
          "id": "007951d1-6322-4bbb-b3b1-f81b1fb06e08",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b992d548-ada6-4f44-bffd-5a5f95644c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33c864c-04bd-4835-b62e-4a3fee3bf562",
        "cursor": {
          "ref": "45149696-092f-4b09-831a-8cbc5433dcc5",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1565104d-5780-46ae-a0ae-1c72c9397bc2"
        },
        "item": {
          "id": "c33c864c-04bd-4835-b62e-4a3fee3bf562",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a595b351-8b91-4775-83cc-9b19243f8a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb234ebf-56eb-4807-b5ae-6f111cfdb465",
        "cursor": {
          "ref": "5178956a-5e50-4f16-a04b-88cae62d7cca",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "75a566b3-6fb9-4ffe-ac75-ec52e800df54"
        },
        "item": {
          "id": "fb234ebf-56eb-4807-b5ae-6f111cfdb465",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "718f2e01-46bc-4944-b665-c75c88bef3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f98ae3-eb41-4e92-96b2-a9e9ad8067ca",
        "cursor": {
          "ref": "f63d6e14-4480-431b-ba35-77a60edfdf20",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "219a3b60-f17d-4f5d-9f1e-4b57ca840fef"
        },
        "item": {
          "id": "a7f98ae3-eb41-4e92-96b2-a9e9ad8067ca",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "398f5fbd-ae10-4bbc-929b-e77505013af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc937e8-38cf-4bdb-bcf5-16724cdaa85b",
        "cursor": {
          "ref": "ec0f0985-9f1b-4d6d-896b-1d481a2914a3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "27437690-ee2b-4bf4-88f6-7bead68ecc4a"
        },
        "item": {
          "id": "9cc937e8-38cf-4bdb-bcf5-16724cdaa85b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8ace56eb-0511-4701-8372-38a9773c993f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ca17d6-ce73-4ab6-8d6d-0a277041a722",
        "cursor": {
          "ref": "9c8ee614-db68-4984-a3cd-9944b12e0156",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "106ba4a0-08a0-4ffc-a218-477f9f9e4518"
        },
        "item": {
          "id": "04ca17d6-ce73-4ab6-8d6d-0a277041a722",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "39d623bd-8c97-40c1-8e5a-09b71d31b36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08f2475-3d61-40b3-837c-7c06ce778a41",
        "cursor": {
          "ref": "7d0b6c1b-8630-4eba-acfd-b71d2036845e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6250d071-cad1-4042-93e7-eac5ccc2186a"
        },
        "item": {
          "id": "b08f2475-3d61-40b3-837c-7c06ce778a41",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4dd71572-0434-4ac7-83eb-b9d90b37f46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b46714-2745-4bb9-8924-25f481a2519c",
        "cursor": {
          "ref": "5c9e6144-83fa-4b00-bc4c-03e74056a13c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c7d634e1-5545-4cbb-b261-8379bea8ab71"
        },
        "item": {
          "id": "70b46714-2745-4bb9-8924-25f481a2519c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d8f03bb-2062-461c-91ee-ef126ea358da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1f8499-479b-4e26-a8cd-398f3dc4cdb3",
        "cursor": {
          "ref": "9111ac10-4129-4ddd-8fe3-b8963ed8f66e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b119cadb-ecad-420e-b42b-1744378ead30"
        },
        "item": {
          "id": "1c1f8499-479b-4e26-a8cd-398f3dc4cdb3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "000cf94b-38db-44ee-a0d6-f2837605c6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9010fc95-83c1-4ba8-85a5-82a89edb4371",
        "cursor": {
          "ref": "2401d98d-94be-486e-b58d-e7b07d5277d9",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2ed596e6-35c6-4190-b346-2445ae881cf5"
        },
        "item": {
          "id": "9010fc95-83c1-4ba8-85a5-82a89edb4371",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0e42ffde-efe2-4a77-8e3d-bfb84aac0fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed476961-9b52-4d3c-8a6e-919c0c212f72",
        "cursor": {
          "ref": "109f5246-fe2f-4d56-88ae-6b6e89de217e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1a6ed287-656a-46d9-850f-f296b9cae7cd"
        },
        "item": {
          "id": "ed476961-9b52-4d3c-8a6e-919c0c212f72",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ea045987-9d22-49d9-b665-bfc61a6f50c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f7513b-4458-4a1a-860b-8d8b2353bc63",
        "cursor": {
          "ref": "5ff9c311-f590-4da3-ad2d-b85121fe40b6",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d0af98c4-dd68-41fa-83b0-c48af7167314"
        },
        "item": {
          "id": "81f7513b-4458-4a1a-860b-8d8b2353bc63",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9e522736-1795-49fd-87e9-c383eca87b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6a197e-359b-4e51-9ae1-7cef978441fa",
        "cursor": {
          "ref": "f2e306ed-2029-4d77-816c-c97a118e9d5e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c0feb919-6822-4644-becd-2f1ff4bb4f67"
        },
        "item": {
          "id": "3d6a197e-359b-4e51-9ae1-7cef978441fa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5a8d99ca-516d-441e-80c5-dcbf71121eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c04b9e3-c5db-41b4-b2bd-677832f8118b",
        "cursor": {
          "ref": "9314bc9c-5714-48e1-ae20-332868b40164",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aaab95d1-7d6e-462d-9612-c0eab2be905e"
        },
        "item": {
          "id": "5c04b9e3-c5db-41b4-b2bd-677832f8118b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7cc6640a-d7ad-4aa8-bea1-0ddce8161b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56904bab-2a9f-4c00-8628-861ea6af8f06",
        "cursor": {
          "ref": "c4bb3428-3b6b-496c-8dfc-23d409a61a5e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cfc321e9-7310-4051-acd9-612cfca9975c"
        },
        "item": {
          "id": "56904bab-2a9f-4c00-8628-861ea6af8f06",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "feb990a2-bb0b-4b16-aae0-de720ba2499b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c9b00c-1b68-47db-98e3-3939034e4583",
        "cursor": {
          "ref": "abc29faa-8ab9-423d-837d-a67f57844663",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a9873a03-f887-4bf8-a63b-f85aaac69f71"
        },
        "item": {
          "id": "64c9b00c-1b68-47db-98e3-3939034e4583",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3cc22e00-08f7-45b8-92e8-ab4ea6d4bb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e786a1b-bce7-4516-9812-42b7ad43ba03",
        "cursor": {
          "ref": "573d09ee-f5b6-43c5-b0e3-b47d591b5b47",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f8b657a-42c0-4830-886c-ad1a749b8ed1"
        },
        "item": {
          "id": "9e786a1b-bce7-4516-9812-42b7ad43ba03",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "97d96ad6-5f48-4026-81cd-dfd0b0d5eb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb9cd8-a2d8-44ac-a6d9-c1e2496af340",
        "cursor": {
          "ref": "ab1c0ad9-7730-4a2a-9288-d6cf9108db08",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5b991336-8dda-4805-9f4b-5db2b1f2489f"
        },
        "item": {
          "id": "8bcb9cd8-a2d8-44ac-a6d9-c1e2496af340",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c40e052f-6b60-46e6-a059-5b1f32ea57f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13126346-8311-421c-99bd-e97b9bbf6caa",
        "cursor": {
          "ref": "a639058e-5ceb-41ef-bb1e-d63106694ada",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c4e4f89a-d5f1-4d06-a232-2fc4797c490f"
        },
        "item": {
          "id": "13126346-8311-421c-99bd-e97b9bbf6caa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e51790cb-ddc1-4830-a34b-8c38f981cc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb47991-0e55-4c61-8c80-ed4f8206c23c",
        "cursor": {
          "ref": "7165a01a-bd2b-4458-bc4e-31284ae66f29",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4bbcf420-cbc0-41e0-b115-3bea903b99de"
        },
        "item": {
          "id": "dfb47991-0e55-4c61-8c80-ed4f8206c23c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a91b5e0e-9648-4b1d-aa51-2155b3b14a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a47b0f7-8a18-4c9d-b1fc-c14536842ca3",
        "cursor": {
          "ref": "af2df766-904c-4c80-92b8-6bcb2c10e1ef",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8811dc27-6bb2-4804-b153-f9ecd8e6ee4a"
        },
        "item": {
          "id": "6a47b0f7-8a18-4c9d-b1fc-c14536842ca3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fcf4dfa1-78bf-4bfd-85c6-b6e79ed0c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378c8977-6e2a-4082-9785-38f324ea2268",
        "cursor": {
          "ref": "521d7100-c7f4-4d09-8345-e7dccd3cdcef",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2a9cf0aa-dd78-4c5a-b694-a80a7056cbd5"
        },
        "item": {
          "id": "378c8977-6e2a-4082-9785-38f324ea2268",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "15fefd0c-810c-48d0-a2fd-6dfbd87f68db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c588287-9fe8-4ee4-8948-d3023ccac3b3",
        "cursor": {
          "ref": "6bfb8317-32d1-4096-abf0-596d05877184",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fba5aa5a-0cc6-419b-8cb0-7d26c19eef97"
        },
        "item": {
          "id": "1c588287-9fe8-4ee4-8948-d3023ccac3b3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "55225d8a-9965-46dd-92c6-43ea32dd4e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f822d89e-a409-4850-8a47-21611072edd1",
        "cursor": {
          "ref": "3d3e030c-c565-42a0-9a0f-69d5f12824b5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "989063cc-4db5-4d0c-a15b-7318522933e9"
        },
        "item": {
          "id": "f822d89e-a409-4850-8a47-21611072edd1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0bf3f111-5bfe-4671-9187-8c01c5c45ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff79caa-2da6-4632-8916-301ae9c5cce6",
        "cursor": {
          "ref": "96f1ef87-4776-4e89-9398-bb54dd9dd1d2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "04fc2409-cfa2-4e53-9e17-e2a8659d9b17"
        },
        "item": {
          "id": "9ff79caa-2da6-4632-8916-301ae9c5cce6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6c13bca0-40ae-446b-bebd-b11534bc7358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21db510f-686c-4ddd-a55b-0fd92b1a408a",
        "cursor": {
          "ref": "485c165d-22c8-4c76-8d2b-eb5292dd2cdd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2cf89f16-3e20-4ea7-84dc-2ce77037eba7"
        },
        "item": {
          "id": "21db510f-686c-4ddd-a55b-0fd92b1a408a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eed6196c-b46b-4631-b0d7-2e86a1e22c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f97a35-fc02-4093-9765-e58686f9f5dd",
        "cursor": {
          "ref": "707981e2-e4ec-445b-8496-29f5d3eebc2b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d8ab3207-aa99-41eb-aa23-e7f37bda57c5"
        },
        "item": {
          "id": "38f97a35-fc02-4093-9765-e58686f9f5dd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "71a152de-d31f-4da9-aec1-01dc2a9cfff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d6dec9-414c-4176-b901-accad5bf4440",
        "cursor": {
          "ref": "7a8d4d2b-c195-4f0b-93bc-773436ea22a9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9422a7de-a0a6-4c47-8983-91e5a0bc84fb"
        },
        "item": {
          "id": "f7d6dec9-414c-4176-b901-accad5bf4440",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6e7ec085-d109-4884-8d80-e7bc93830191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb9cf06-aab2-4303-8ad0-ba1a505f4628",
        "cursor": {
          "ref": "c8e0dedf-7ac3-46a2-a524-564c40750437",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ad2e203f-a19a-4115-82d5-25a200c7f4d1"
        },
        "item": {
          "id": "ebb9cf06-aab2-4303-8ad0-ba1a505f4628",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "71a2a61d-7563-40b8-9a86-a399ee31b5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b13c17-4f0e-4c0c-8b7d-1818e0ffdd2b",
        "cursor": {
          "ref": "fd63fd6d-42a4-4e07-8c30-572878038d64",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "980042cd-e2fd-40f2-9b2f-414451f222e4"
        },
        "item": {
          "id": "d2b13c17-4f0e-4c0c-8b7d-1818e0ffdd2b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f57946a2-12e0-42c5-ad6c-d839e989d2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0930de-cd47-4f30-8a3e-cfb47ef28833",
        "cursor": {
          "ref": "cf0756a9-ce77-4ecc-a253-11f0b2fe3a8a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a3189b52-c3ba-4724-8604-af9efc529ad4"
        },
        "item": {
          "id": "5d0930de-cd47-4f30-8a3e-cfb47ef28833",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3dfa334d-ba63-4bf9-aac1-539107cdd7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08246d71-9fb2-4f20-b8e6-af33b6d0353d",
        "cursor": {
          "ref": "fee889cd-74f2-4f25-8709-f3884550cfe9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "92ceabcd-356f-4b6d-a3ca-0317e26d4335"
        },
        "item": {
          "id": "08246d71-9fb2-4f20-b8e6-af33b6d0353d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bf11f6af-2776-473d-920e-2586384c2985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6898e8-ce1c-47b7-8233-98c9ad5dcd9b",
        "cursor": {
          "ref": "4c0c0eb1-2a3d-4a85-986a-2c10af0868ef",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "68288bd5-4379-4ca4-9fe1-b6e36eb216ec"
        },
        "item": {
          "id": "3d6898e8-ce1c-47b7-8233-98c9ad5dcd9b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8527b732-e5bd-49d8-93ab-62e3d2fa579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a62db8-05ff-4297-83ce-ac87d5227eb6",
        "cursor": {
          "ref": "cd54aff5-6bdf-4116-925f-3616b94440d0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1840880e-1b7f-4823-a180-17dfa545d7e2"
        },
        "item": {
          "id": "e4a62db8-05ff-4297-83ce-ac87d5227eb6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a4c7da76-0d6b-4259-af04-50e5282233b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871bf233-74bd-4086-a58f-318795b410ae",
        "cursor": {
          "ref": "e632bd82-2a39-4027-b180-647193dbc227",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "29bba231-508b-4e17-98cc-6cb445d8bf87"
        },
        "item": {
          "id": "871bf233-74bd-4086-a58f-318795b410ae",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1470a053-5712-441b-be51-df50dd196a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424178ae-dbc8-40e0-a9db-224a70384c13",
        "cursor": {
          "ref": "7d2d3518-c173-4078-87f5-ea65bf3aedc2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c5cfdf8-9590-4782-b416-c56d7d2739d7"
        },
        "item": {
          "id": "424178ae-dbc8-40e0-a9db-224a70384c13",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1c2f237d-78a6-429c-8bef-34a98722a481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a37421-a95d-45b0-8f30-05d5124671df",
        "cursor": {
          "ref": "ab1acc9f-54cb-40d2-bcaf-dcf1ae185b8c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a1916177-4ffc-4ab1-846e-791a98d14028"
        },
        "item": {
          "id": "94a37421-a95d-45b0-8f30-05d5124671df",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2227f01a-1ef3-4579-be87-23f25178b08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0b0fe1-f7e4-4e88-8aae-ca7f86db0859",
        "cursor": {
          "ref": "433edb85-ca95-48c6-aac4-ddd883b700d0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8221f0ad-b430-4c83-a231-3d39697697e2"
        },
        "item": {
          "id": "9e0b0fe1-f7e4-4e88-8aae-ca7f86db0859",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6db507e7-d971-47f3-bb2d-06c3d9ccd4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f58451d-6f27-49b3-9a91-21afd0b73e39",
        "cursor": {
          "ref": "6e3b3fe9-410f-4027-8034-d3afd0c6c763",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0ebf79b1-a502-4fbe-8f7e-1da9cd76c96f"
        },
        "item": {
          "id": "5f58451d-6f27-49b3-9a91-21afd0b73e39",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cd7f82fb-04bd-485b-8ba0-b588245c6510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839a6732-aac3-4099-b3f6-a1bb1529fdfc",
        "cursor": {
          "ref": "29de67de-17fc-431e-bf64-bf3f85ecdc35",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "05e02046-2792-4cd3-b693-96a92202a131"
        },
        "item": {
          "id": "839a6732-aac3-4099-b3f6-a1bb1529fdfc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c5a7c0a0-9f6e-476c-b49d-adca0cd0660b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5880a155-8a7b-4eef-8990-3b386673f99c",
        "cursor": {
          "ref": "7ad07000-aa88-4e2f-bd1c-015ee9f59147",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5bdb0593-dae8-4be0-ae9f-2ddeb791b836"
        },
        "item": {
          "id": "5880a155-8a7b-4eef-8990-3b386673f99c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "06672998-16fa-40cd-a446-9b8786631dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb4b06e-f8cd-4dff-bc2a-17f5154ede93",
        "cursor": {
          "ref": "94c83ed1-05b4-421c-9517-d4dda4b86a25",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "99386e9c-bcf1-441e-a4a4-493492de0aab"
        },
        "item": {
          "id": "5cb4b06e-f8cd-4dff-bc2a-17f5154ede93",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9bef6598-71c6-44e8-b4fc-cefd086206bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90706844-e172-411a-afa5-231a206fb7dd",
        "cursor": {
          "ref": "2ea98e5e-78bd-4494-9f87-289418b846f1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97d4efb7-b71b-471c-b54a-66028f5d9c45"
        },
        "item": {
          "id": "90706844-e172-411a-afa5-231a206fb7dd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a655e513-99e2-4d1f-abe4-66acbca3a990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c416affc-a201-4146-9e73-1db3a3d67cbe",
        "cursor": {
          "ref": "b54862b5-8567-4e69-a100-8aa1654ca894",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2b41e8eb-9b6c-4691-9064-86773fa52cac"
        },
        "item": {
          "id": "c416affc-a201-4146-9e73-1db3a3d67cbe",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "607eb719-60d9-431a-9418-a2d5b3475b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508069cb-6c42-4d42-aec4-a9b0e8e8af4e",
        "cursor": {
          "ref": "bcfd5b49-278f-4612-bd67-9dcd89f03c92",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "423eec9f-da04-4d27-8499-9ff584198f7a"
        },
        "item": {
          "id": "508069cb-6c42-4d42-aec4-a9b0e8e8af4e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b95da3b3-f531-4416-9afb-8efac7162588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c2e112-e8d4-44be-bad7-f007603b4aba",
        "cursor": {
          "ref": "6d561ea7-e929-450f-b43a-80e32c0363b1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "17e9c849-59a1-4f63-9785-b4ce16ab6ccd"
        },
        "item": {
          "id": "d3c2e112-e8d4-44be-bad7-f007603b4aba",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0a3d5f92-dab3-4245-a647-e1f72a00133e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7209043-bc9d-4f22-9ee5-6d93e93f772a",
        "cursor": {
          "ref": "2e034b65-1c78-45e0-b090-e24a125d4597",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a76ebd0c-d91f-4132-b06f-eb0fb52dac37"
        },
        "item": {
          "id": "d7209043-bc9d-4f22-9ee5-6d93e93f772a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "01b3ec80-2e2f-4c22-8cd9-7e28380f2eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261a3121-f196-45e3-9caa-cf3892eed503",
        "cursor": {
          "ref": "4269d188-5700-4465-af28-f058d0e6549d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a7f83bd6-f7a8-42b1-ae74-0a913a69e576"
        },
        "item": {
          "id": "261a3121-f196-45e3-9caa-cf3892eed503",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e472ef57-7de7-4f54-9a05-14b245ee31d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad6f52-9ed5-4677-8699-562541fc16ce",
        "cursor": {
          "ref": "4fa4c11c-4838-4ec1-889a-ae7d2ca345ee",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "aac24842-ea24-4f08-9ce5-45fb1ad7216d"
        },
        "item": {
          "id": "69ad6f52-9ed5-4677-8699-562541fc16ce",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e675f704-c74d-4d3d-8fba-367d1e9086c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d8cfd6-eec1-4896-9555-be0509002166",
        "cursor": {
          "ref": "7cfe0194-3bbe-41ac-9024-fd065eeeeff1",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d9d312ed-e9d4-4523-a504-c7ed3749009f"
        },
        "item": {
          "id": "70d8cfd6-eec1-4896-9555-be0509002166",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "958604c1-d68a-425d-a721-75df3f59b8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c650a572-b25d-41fc-854a-78ba20d35a5f",
        "cursor": {
          "ref": "ae3047b3-4be1-45ac-83e6-46bdc97154d8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2674c0d2-5b64-4d79-8e4c-d08c861d0959"
        },
        "item": {
          "id": "c650a572-b25d-41fc-854a-78ba20d35a5f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "16e081cf-b9c6-4245-bba8-141487d9331d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ba4ca0-b450-451b-b1da-fd1e07db37b5",
        "cursor": {
          "ref": "ac7e2197-be2a-4773-a4d2-0c96d5c9b23c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ed81d1fa-2a91-43aa-a04b-9718b2e274a2"
        },
        "item": {
          "id": "58ba4ca0-b450-451b-b1da-fd1e07db37b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "44ba3afb-e265-499a-9974-15ecb60f9e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d391c77-7d49-43e8-8156-af77e4c8c6ea",
        "cursor": {
          "ref": "4a41f21d-b7b8-4521-90a6-7ed61d183fa4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c776c6df-aacd-4acf-a140-834cf18fab9b"
        },
        "item": {
          "id": "4d391c77-7d49-43e8-8156-af77e4c8c6ea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "001bc447-53c9-4341-a7de-cd1b90f6b2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf7cee4-891b-45bd-8183-0ee836213a8c",
        "cursor": {
          "ref": "2eb06f25-addf-4ce1-85d7-c5fae739d2e3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8e659b89-e0d4-43de-ad98-a88326f78fda"
        },
        "item": {
          "id": "ebf7cee4-891b-45bd-8183-0ee836213a8c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "13ac650d-281c-496b-a1c0-b18b240816c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad12316-4974-4488-99ba-13fdeb8eee40",
        "cursor": {
          "ref": "a79a3c21-04ce-40f9-9143-90cc1fe32739",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ced07931-d000-422b-b0c8-29b82527a957"
        },
        "item": {
          "id": "8ad12316-4974-4488-99ba-13fdeb8eee40",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "93684f74-dc95-4993-9e8a-428254aab037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0f5b98-a1cb-45a9-bc3f-0813ef11a0c2",
        "cursor": {
          "ref": "bc07a011-f8f5-4040-a491-78f9b02c17ae",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "84c6ddfc-ded5-43bb-a564-4253615a96ac"
        },
        "item": {
          "id": "fe0f5b98-a1cb-45a9-bc3f-0813ef11a0c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0aef77f1-cbbd-47c0-b176-034875c25fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363c3518-1859-4ef3-b3ac-49534f30c644",
        "cursor": {
          "ref": "e3e01daf-8898-4971-a479-f01806d27341",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "49d822a8-5ff3-4719-98c9-63070a19eb16"
        },
        "item": {
          "id": "363c3518-1859-4ef3-b3ac-49534f30c644",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "26f499a3-8086-4b83-a21e-21eeaef97aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7233106d-7424-4cf6-804b-09313e36e97b",
        "cursor": {
          "ref": "6120c346-b8ec-4f46-9d5d-e084d7f1a8ee",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "918453c9-4343-45f8-91e7-b8a7cb2abbcd"
        },
        "item": {
          "id": "7233106d-7424-4cf6-804b-09313e36e97b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9ad47a9e-5019-43c9-9800-dd5ea679bd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0945c586-9507-4577-ae0f-9e590429e496",
        "cursor": {
          "ref": "7f71c301-385e-44ca-bc4d-d14da0d0dd90",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6db5b844-6d5c-4f23-9e61-c27277743b65"
        },
        "item": {
          "id": "0945c586-9507-4577-ae0f-9e590429e496",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "87077024-f7f6-4fe4-9ea3-6546a68b6c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c233b2a7-c89b-4be0-b70b-295206b5c8db",
        "cursor": {
          "ref": "addd45a8-74d2-439e-9ba7-d20602f14405",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b432e637-dc12-4154-8f60-a78f7c4559db"
        },
        "item": {
          "id": "c233b2a7-c89b-4be0-b70b-295206b5c8db",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6fbd6a99-1165-4a3e-b72a-525e94b92015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03997c-d795-4eec-b557-19b9f2ae1699",
        "cursor": {
          "ref": "b0cfda65-c81f-4ba6-8fba-02d997f184c3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c5182777-48ff-4d85-83ae-48c8a9e40dd0"
        },
        "item": {
          "id": "8f03997c-d795-4eec-b557-19b9f2ae1699",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f98c51e2-81b4-44ea-9e2a-6903f388bda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb17d17c-9d49-4c81-9ea9-615c003a3429",
        "cursor": {
          "ref": "095ef969-6049-43e4-a465-bab6a63b4dc0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "417c70dd-3a7c-4f64-a786-5e3712b5d016"
        },
        "item": {
          "id": "eb17d17c-9d49-4c81-9ea9-615c003a3429",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4ac76cde-ab9a-40e2-991e-81ced5b1ebb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6a5b5c-8b33-4171-b4a8-1bf11bcbc6b3",
        "cursor": {
          "ref": "9fd282db-42a0-42a9-b67f-566d5b5d33e3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5940440c-2b69-4e60-b973-dc3c9a03c8e8"
        },
        "item": {
          "id": "3b6a5b5c-8b33-4171-b4a8-1bf11bcbc6b3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0802f42b-b55f-4d52-88ec-590a0bff6f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea7d431-657d-44db-b849-dcd0a7e2857b",
        "cursor": {
          "ref": "f28b5f03-5392-4a9f-8b2a-b39f554406c9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0eefcff4-18ea-445e-8e37-59e989b0ba86"
        },
        "item": {
          "id": "1ea7d431-657d-44db-b849-dcd0a7e2857b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cbbe61fd-4906-4e7f-bb74-2f25e53e787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8d0b3c-bf3f-4b11-8117-290537a4355f",
        "cursor": {
          "ref": "10eafc68-0a50-4e77-887b-a8bde4d4d9f4",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9da2238f-0b07-49fd-a17b-8f4b16c5a462"
        },
        "item": {
          "id": "de8d0b3c-bf3f-4b11-8117-290537a4355f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d9d94548-fe80-4371-9ba2-eeef038b8b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ff5e03-be7b-4eb0-a2a6-46e703a6a289",
        "cursor": {
          "ref": "1f0ad92f-7c26-4fc0-a77e-60369540677e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "627f8af1-8e93-477a-9ad1-c876b3e98d9a"
        },
        "item": {
          "id": "16ff5e03-be7b-4eb0-a2a6-46e703a6a289",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a01e7cff-4839-43ad-8360-f215531c950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b45138-6e6e-402a-a5a6-99414f8ae977",
        "cursor": {
          "ref": "10161d3a-24a1-4749-9875-f091bb674638",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b681d5f4-1afb-446e-b87b-1d31d415083d"
        },
        "item": {
          "id": "e1b45138-6e6e-402a-a5a6-99414f8ae977",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6e3b7ae5-9e41-4730-97fb-d8c9732dc868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71277adf-4290-4e4f-a35c-f1cd4abbcb98",
        "cursor": {
          "ref": "3056bb05-aa34-4622-80ac-271b3b712eef",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "224018bb-aa36-4536-b1ea-7499adf9b2a1"
        },
        "item": {
          "id": "71277adf-4290-4e4f-a35c-f1cd4abbcb98",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "54010f31-c6ae-4545-a495-1bb1b7f5d309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a731de1-9d9c-423f-93b3-63e37a0d9eed",
        "cursor": {
          "ref": "e75435b2-4de0-4f09-8403-4fd46b8fe6f7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0a47082a-246f-46ce-979f-8dd460c09b99"
        },
        "item": {
          "id": "1a731de1-9d9c-423f-93b3-63e37a0d9eed",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d8b45d3f-e804-467d-a9a2-fbb4a277fa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21e7ffc-5fdb-42ab-8372-011947b9dbcf",
        "cursor": {
          "ref": "c6f9462d-a619-47a1-87b5-9a8fbcb8b76f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ee62e17a-a1e9-49ba-8886-613cc01b6c1a"
        },
        "item": {
          "id": "e21e7ffc-5fdb-42ab-8372-011947b9dbcf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0ae99dd2-61e2-4d40-a466-7fa6fb5105a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d407bd-54d3-45b6-b180-9f11fddc8d46",
        "cursor": {
          "ref": "320872bb-0439-4be0-9559-466dbcb80792",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8f2a041d-89df-4238-9a90-9df30d44ae70"
        },
        "item": {
          "id": "f3d407bd-54d3-45b6-b180-9f11fddc8d46",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c72424bd-ca7a-4216-9f9a-b17d8345d564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0109f32-b35d-4a52-8c82-285ba0f644c6",
        "cursor": {
          "ref": "01f50331-f6ad-4c46-b0cc-22af7f4ce72a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "690826f8-aa92-4820-b86f-ff96c33112a5"
        },
        "item": {
          "id": "a0109f32-b35d-4a52-8c82-285ba0f644c6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dd09d9ac-31a3-47dc-a995-e8468cbe74a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558b1f8d-8f71-4f75-92d4-188d12374d20",
        "cursor": {
          "ref": "e0262653-db0a-4ffb-ac1d-f64fb7adcafa",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "79d78e53-dc12-4516-8823-c1447554ec9e"
        },
        "item": {
          "id": "558b1f8d-8f71-4f75-92d4-188d12374d20",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "91d5899f-1e4b-45d1-9139-c150a7849798",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc3ed9-40b6-485f-a349-c651ad2b70b7",
        "cursor": {
          "ref": "0b90dd70-c0f4-4eb9-845c-005f4de890a4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "89756e8e-ea76-4d49-8bc3-454cd622f415"
        },
        "item": {
          "id": "72cc3ed9-40b6-485f-a349-c651ad2b70b7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6c80d42c-9110-4a8f-97d9-328c493d5509",
          "status": "OK",
          "code": 200,
          "responseTime": 7390,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db96f6a3-d1be-495c-9fb5-d372f1c9f0e7",
        "cursor": {
          "ref": "c34740b4-407a-4893-b936-704a0cc32901",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "431214ad-697d-4a57-8732-56fccbc0fe5a"
        },
        "item": {
          "id": "db96f6a3-d1be-495c-9fb5-d372f1c9f0e7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e11c8d34-3d69-465a-b3dc-f9c86ac507cc",
          "status": "OK",
          "code": 200,
          "responseTime": 1785,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acfc74c-8d02-4631-b757-4c8923158c5b",
        "cursor": {
          "ref": "8a927f07-a1ab-41d2-a018-1103fb1f58c0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9473a438-fb4a-4411-905b-c1972e029d80"
        },
        "item": {
          "id": "8acfc74c-8d02-4631-b757-4c8923158c5b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f960af25-9574-48fb-a572-5f3953f97eef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acfc74c-8d02-4631-b757-4c8923158c5b",
        "cursor": {
          "ref": "8a927f07-a1ab-41d2-a018-1103fb1f58c0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9473a438-fb4a-4411-905b-c1972e029d80"
        },
        "item": {
          "id": "8acfc74c-8d02-4631-b757-4c8923158c5b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f960af25-9574-48fb-a572-5f3953f97eef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5180d95-242b-4c0f-973b-8a2b6fd44089",
        "cursor": {
          "ref": "d02b4706-14bd-48ea-acad-4a8aa71017bc",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ce73295f-eadc-40ab-9db5-8e1e9e68b09c"
        },
        "item": {
          "id": "a5180d95-242b-4c0f-973b-8a2b6fd44089",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "188dfab3-d0d3-4efe-a9f7-e3e228cb5b78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dc5a60-1614-4eda-8157-83c81cc55064",
        "cursor": {
          "ref": "17478486-d6ee-4da1-bea3-5a1769e79898",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c9c9fdb8-3f28-48fa-b5a3-8f642571b296"
        },
        "item": {
          "id": "68dc5a60-1614-4eda-8157-83c81cc55064",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "64447c8f-418e-46ea-bff9-ca56757d20c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}