{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "52b4b123-18e5-4aa0-8788-bf4337636b4b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eeab9134-9f37-4722-bacf-4d16515e59c3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70d3cd5a-7b72-404e-8727-f5cee7ee1536",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "18287f83-a842-44d5-a10e-fa23f6ee7346"
                }
              }
            ]
          },
          {
            "id": "d0fe6da9-92a9-4ccd-b0e5-fae498131a30",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b23f443-9342-4d8e-88ee-996ea134cebd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "89a724de-624b-46dc-b311-ac80d8dab90a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "84c5dc27-1de5-4e70-bfb1-167abfcc58a6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b3284d8c-fab2-4169-87fb-ced325c8b5ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc0969ff-1c57-4e40-b193-179462631b39",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1f5ad55-d2cc-4121-8831-ac1f21fd54af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c79f287-16fc-4c5f-a424-709babb2651f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4200d8fe-182e-4d95-b663-c71e8cf5194e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eaeedb3-815a-41e2-b2b8-c44838c09eb2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6050eb39-7ea4-41d6-9e18-022a3e819076",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "688760d9-e03d-474a-8878-a80775509ca0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dac023e-1a5f-4ff6-bc4a-9cbb02330aa4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cc2ebeb6-90dc-4482-aa61-6d593cbd137b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0c5de35-7fc6-43bc-be28-72e5bfc53a16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26f64787-4088-43ff-a8e5-7f3deabaa120"
            }
          }
        ]
      },
      {
        "id": "b8f56cdb-65f7-4261-82b6-0f39995e6178",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "13066ffd-a597-4192-be26-bd1f973db2b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0ccf961-7a71-48d6-95e1-2603f431617d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d122817d-769e-4464-bc8d-9da3a16b6e74",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f657f47-f249-43d9-ae10-18b07dd7c967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe059a9a-7a50-4bca-86ab-0cb89d30ece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e27a0a-bf29-45b7-8e53-c41ec4fb673d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb84f2b-f696-4c51-b7d1-bdcf8aac58b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4681ac14-4a2c-4239-a35c-ed50973af852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0babe404-cf06-48de-8e6d-a18d41837ce5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e2a10e-f7a4-4944-9820-61da79b1606d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c36fd4b3-d67f-4911-bf70-b33cb031ce1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc4b8c78-a21c-4791-a0ef-eea7dfcf6802",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f383628b-5bea-470f-a508-98e58d12e822",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e2c422-5fa3-4f3a-b39d-17699b2ccdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b37db1e6-7115-4884-bace-357b26cc0eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800404a1-be94-42f4-94e7-d424973a5a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7b20f5-6849-403c-bcfe-65744b1c8ee5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dee8d0b3-50ae-45be-8392-6e93746f8246",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46d1692c-2b69-4898-a8fd-06cce6eb9b80",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b3596db-4bd3-4106-bee2-5a5c5f6f8d41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "95e6fb57-4ed2-4174-9e51-565b5d5ddeb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23caecb6-8b06-441f-a709-810cb75c2612",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3be86688-bae1-4288-a684-584f6ecdc8fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1689c9a-ebd6-4641-a1cb-da1aa714e06c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa9c834e-6606-4531-b1e6-0c1d5b79e5e8"
            }
          }
        ]
      },
      {
        "id": "60d219e4-e20c-49d5-a468-6a723a102cf8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "79a2a9c2-bc60-44c4-aee8-09991acc1964",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b339c435-80b8-42c6-a966-5e114eaa3e8a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "56afeda8-e0eb-4af7-8477-b718f6d55d3f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa55821-9745-4c53-a12c-31bd62ac9947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d27d9a-a177-432b-9ea4-6a417bd95581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dabd60-6037-4b10-9ccc-3da732f11ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "975bfccd-ca76-4d2e-acdb-9e7caa1a0d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1029826b-a2cd-4158-b649-3ae064bffc98",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9059df-ef83-4c1c-9a1c-a5efda838d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43639b2b-8ff0-4319-b539-671969041527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85949fd-f5be-4ee8-a0bf-b3b5086b40fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3105ab4a-19a7-46aa-b9b7-7431b29d4a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d1f288-9369-4c26-b27b-56e85c52a33e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d215e46-f20d-4394-8027-1e1523835778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ab2317-14d9-41f7-b82a-5b791669664b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2994f211-8b11-4cc0-9b9f-c58a5fbaf3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf9f63c4-d685-4b50-892c-05e7277d8b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a8698-fc26-49bb-97a4-8fa865f08525",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f7c034-a5d6-4026-860d-5f4965dd3fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff504095-4d0c-492b-8c77-785a00b71f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1dd34a-cf98-4f35-b648-7307f4c7add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bd3e094-ba8d-484e-9b5e-28c2272df07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8115c5d9-0d2c-4c85-84db-7eaa9bec1d18",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de71929-4485-4bff-a73d-24a8db1c5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e075f0c-9774-4f98-b7b3-127e0a419e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb95cedd-a58f-41bf-b1ba-fc81d39ce494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "586eb959-181d-4a95-a7ad-01631d8bbd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2993cc-0d02-4757-ad00-c92da5f6f8fc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baff07bf-6f01-4b67-b81b-72107042cf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9640d37-3130-4179-af9f-e241828ab7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5fb7b2-0efa-4ee2-b2d1-2cb02723e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6035ab8e-4cb0-4841-910a-42c6ff17c313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e595d5-083d-44eb-be87-21d0e25e77fd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739798be-52db-4d71-9962-7c4f0909c511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079ef871-6689-4f31-bd78-d9121f5eef2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233ed7d2-1712-43d6-bc3a-2563e64d1102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81b58501-9d33-49ac-bd10-cbbb346bcd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6f08b0-fe4e-4a81-80fd-701756d0c96f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84a026f-1cae-4179-b04e-957ba0a93836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0b5280-9562-4958-907c-b80b7aa64364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cc66c9-cf58-4d58-a5ac-e3f9c25e1c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "981c02cd-05e4-47b4-b249-77cc1b2ccdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e63d9a-b46f-433c-addd-adb9eb1f65ae",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e953b8-eb41-4b4c-8013-9872e2d84a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18fa261-cde9-49dc-9b48-0c8e812341ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa5bfbf-f0a9-4bdb-8d4d-46214b0514b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "737f91b5-fcd6-49f9-aa74-f10a0492c9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb19d85-9eaa-4733-bc20-29669513581d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6b510-bb92-4806-bf7f-db2d2a87be08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faac1068-d75c-497b-9e8e-1a3b48932a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9933433-e9d6-45e8-b7f2-1605c002d3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efdec406-81b1-4637-a878-1a1530dc759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c877fe5-c1bd-4710-b8bc-7acd32456800",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5787dd1d-f286-4069-a686-38995c5e518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee0c265-7959-480c-a075-807390b80f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de61405-3db6-4230-b555-911fc780a237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a87aa1d1-d17b-41d7-8248-075bcc1bb470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3758b712-3063-4247-ac8d-5317c542c417",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe8d254-b273-478d-828d-6757dd3bfd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f865ac9a-a73e-4416-8881-a5acf27aba80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb270a-03df-4238-ade9-e4f427e34906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46957c7b-e1e4-4321-88cf-c8915cf94b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df08443-d989-445f-b73c-32ae686a18f4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d308de-827f-4cb2-b20c-d462c34d778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037d24db-f721-4e40-9e11-0e8ef0d01f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b57c66-83bb-49a4-b377-af7f1bcca97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03d12c84-380f-48cb-9cff-fc976e742682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455cfaf6-875f-4125-97df-155c037d3104",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8466a387-57d6-4ffa-94c4-50cb8f66b2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab5b9eb-d9fd-41ec-9677-a879581ac1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4aa362c-dc1f-4de0-827f-1d9bc1765344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "741454ba-6286-466f-9c4f-0986d0c6d517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ef86b3-018d-4d84-b4d3-2138d3998711",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdcb9b0-ee4d-4eec-b815-f2f75862e84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b3f098-6da3-41f1-804f-36f48edf5acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280ae51f-4dd1-4015-ac96-fa0470aeb1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0384b97-7eb5-45f0-9975-2fe326e0d66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b682581-09df-4fa2-b2c6-ac5ea175e65c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eab1026-504f-4bc9-95ba-780fe6f6d55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ec8a2a-c16f-4f77-b1bf-e1d0f7e33a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935a30e1-68df-49d4-a505-0f85aee89cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d052ad0-0eec-48c7-b27c-0811066bbdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd687c-cd97-4df9-87f0-f80d12984646",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35410edb-856a-4227-9add-fa92a63d0205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c30a0ec-76f0-4aca-8d66-f3cb59a4b7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a76972-4ac6-46b3-87b9-3eae2e1beb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9383b729-ab95-4267-afb1-2cbcd7f2fa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3168ffd3-b569-4098-9f90-150a72a1f017",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60763efb-3088-43c4-8ae3-777fd88acfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac37011-86bb-469b-9ea2-4517f8bed178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55134e8b-f40b-45d4-8d63-fb818c248c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a957d52-f04f-4415-a82a-804a5e529d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d81cd71-e963-4f4b-addb-990bfed3ae6f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb4e2c6-62b3-42e4-9703-6752ab056059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2e30a0-7b2a-4c2b-af8e-43fe3e66afcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7e4bc9-4110-4570-bb59-c55c46aeacd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341dbbee-8949-4591-8cf7-03861796a7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb6e662-65a6-449d-93b3-97f3e60f69d7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9ca4cb-fe24-4c44-be38-467fcd3871e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41759ca2-9ece-4cea-92f5-475c9873ff9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59579c06-3727-423f-8b2a-3a96c02e2cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa0254e-f4ee-48e2-b084-3e054fc88166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd598cf-94c7-4d85-a5ac-1abcd0d52e9e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0013bd1a-2e3d-4723-878c-3c7c82458a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80185cb-c9a7-4794-9c9d-7554a7267253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f44c97-fcc9-4c93-80d4-f2dd7c96a4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3230d8-842a-43f0-8f86-1a3158868480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f3f411-0328-49e0-b984-023ba5020592",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190292b6-f682-47fd-b8a7-db431f96d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c05bb5-f2b9-4a52-8f1d-6042b878174c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012cc60e-6594-43c5-b742-f190626b88ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "332ff7ed-5a90-4e1d-bc0c-2156cc5f501e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540d132f-03e6-48bb-b39c-44b57cd89c5c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d65acb-38f6-42ec-8e04-814d3a49a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205037ff-80de-4180-b7f5-e8445635f4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e90fa6-b18e-4384-84fe-9eb836b04c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31675bef-3dcb-4646-876a-fe267e2c199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8868f5d-3644-44c9-84a1-8888eeb31c1e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ffeaa9-bfdb-4220-83bf-9bd4d973eec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a228ccf-d5a0-4fc2-9975-3aa6df874687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fa087a-34b5-4a40-805f-ec488bba50c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28dac11-fe5b-4dc0-94c0-10efa56a0931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea39c823-200b-4f17-82ec-b306a988e725",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fac1167-1811-4632-b2db-33445728932f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfb2dfe-f642-456d-99db-896a7e3355aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e5c57-690e-49e0-af52-5cdc3d4004f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa5ead4-f966-4ba0-b61d-598befc83cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f810ce19-0e41-4aea-95b7-d0b7ef83c5a8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69863a0-810b-4a30-9d2b-b83ba903fb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8da3fa0-c4ef-4484-bb41-67c73bde7ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677808c1-0b22-4a98-a5a8-1aa405ea09a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b094f78f-d874-476a-8314-15d121138e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2a6434-cc21-49fe-b627-df7e0b29ef08",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd81400-3c37-45cf-9627-9fb85eb9747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b94b11-5f81-4d9b-b0a5-e212805438e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5ee048-0320-4d28-86e1-3199a3b327f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "651271f6-2469-4989-98bc-5e5c42fab28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36b0b1c-44a4-477f-aa85-306f0f00091a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fa3eb4-185e-458a-9299-b4eb446b1dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125b86a2-57b8-4cca-8b74-99059a87dd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c36eca-2200-4862-bacb-b2f8d50d3aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a261989-f8c4-4bbe-a8e0-81dd9219e337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a792bc-328b-4400-b173-4ff12ddbed53",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5f13a-2195-4799-895e-289c0878c724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0ae8d9-385f-4e5c-a81e-3f4f36151025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495522f7-3190-4e9f-8092-009493fe00eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7735add3-98eb-4ce9-a90c-f4fd034fb0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437fb505-3aec-40f4-8446-a0006b67aa62",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07559762-6a69-41a2-bed1-e855fb1da981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d58fcb-6cfb-4f34-aa13-c9e4f7c6f8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6b6bd7-3059-445c-8a11-2c9d78570c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "86270938-2716-45a6-90c9-30cd589c89ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52604d44-d636-4aaa-922e-6477274e92b4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cc65b2-df62-42ff-b692-3dfc91314be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c76c884-a8ac-4297-8cc9-badd479d2579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae89351-eed7-4cec-a404-6f717bb27eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df336aa-99c6-4676-a7a2-71b5dc249687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95afe932-b5be-482d-81f7-a9a2ff8fde7c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa005cc-b81c-4e55-9e46-978642230879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d966987-e708-4f28-b11c-0ced7a9b1927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f902417-2a3c-4fdd-93f1-fb7f7aed2654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84310b91-e2d7-4554-90b8-0d109ddadb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d450603a-7454-49d0-acf3-5a37421fac99",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5e955c-ec7a-46cd-b895-3a11c0a30ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ae399c-a14a-4315-b29c-9322f88af283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00da883c-c42c-4aaf-847d-388a647897d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aada9421-2ccf-4715-98d3-d820c1a0f55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baedc8a-6229-413f-9dab-4e048da48e43",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992243b2-6c37-445b-aab7-6ab0a11baec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b0c21b-3842-44bd-9be7-fcea9584ad1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f00e7cf-d2f1-48b3-b656-5ef30afa5b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2469fdb6-75fb-4f09-9a4a-118ca3545843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c5c338-bb61-4dd5-a41b-dc1b00f0b283",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eee605-fd11-4294-8cf3-11c2596bd1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d7b567-2e28-49c8-99e6-87d3128ad12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa95249-cde5-40ce-947d-311244add5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e58e87d5-f3b8-4913-ae5d-f1b4437b7a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04542767-ee63-4016-a162-223eaffd340e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4447f4fd-0a80-4e75-abc1-3f2652e2b429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e516d0a7-72b0-4933-b9aa-1e18bcf2913f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e7a187-e486-4a72-9ebf-20db640674d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f54713-56f5-4b4a-895d-8073fc233bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8872f931-d53b-4636-baf8-4e6690a11532",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b91e6c2-a434-4919-b765-70db4e8ef740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5266dc-2190-4899-a357-912e7887ead4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7fbafb-7542-4f05-a633-097a13cd2c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccbda91-20a5-4bf6-bb6b-58452b8ff5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7b6f93-d776-4da7-bc36-ef93adb0a83e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489e4e03-ab03-4797-8572-0333c1875544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183f6194-2862-49e1-a708-3bf122defe2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16935610-a6b2-4e79-8ac1-9d7fe813ffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf78eb55-f1b1-4601-9604-aacf39b645e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6305b7-43f7-4d98-8a1e-6de582e699f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94112340-c6cb-43bb-bf63-6fa51e2c5831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95efda18-a787-4eea-b34a-ff9199223ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2842debe-729c-4f8b-8b59-720c5b8524db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe4cfac-b814-4951-bfba-c9ae4627944c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bebc7f2-4490-4b87-bdad-de56203e52a8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773ea3de-f220-4bb2-a1c4-9b7a6ba2ff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e1d5cb-7847-41cf-834b-b9d618594d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e656ed6-8408-4351-b10c-30a62f419b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c721b57-46a2-4f64-b451-94982de332f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7d666b-bd5f-447b-bc4d-3da519b67e2a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31660f0a-49a4-4146-819b-7304ba199357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d5cf7b-bb64-461c-9fe1-ee7df71f64a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18193da-8012-4621-9e05-220472131a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a49f91-6156-435b-b27a-e2ad152c509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2e3c49-6d59-4a9b-be7b-eae0506429a1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1348b31e-e336-4621-9b0e-edeaff9c8f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ccb2db-491a-4127-9401-36baf520afab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ddd6b5-4ec5-4254-ae4c-cec05cb06e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aa085039-afcf-4534-8977-88b90985bb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da23e23-6ea1-47b3-bb4b-9bfd6acb213e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a135934-88c1-4e32-bbab-459cffb49bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b569e98-e764-464d-b9d4-0ad0c931ea6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a958042b-a007-4127-898a-99d1fa068285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "35866039-5052-4d1b-878b-0feff788de62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660e6e3e-6991-4d29-9867-2bb52f9d3637",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cf61d4-a9fd-41fd-8dca-c9112a197405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cb1d99-e153-46e0-b0a9-60f0f569da19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16397b6c-70a6-41f9-bf7d-ee618347e6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb91137-e59d-4db0-8cfa-45e8e909d64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef28722-b161-4144-85b8-0aaeb304e777",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b7704d-3c60-487e-950a-4c0a188c823d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d770b5a5-02d5-4d57-8463-6693ac71a99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c327985-e0df-499f-a3a8-3d7b54ee4088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cd2781-1cd7-4c28-a39d-383ba3a6df81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f262c1f9-217c-4d74-83d3-8d8da90b9b9e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277a74f2-7fa9-4537-b3ec-3227a7162a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438c824a-6745-49ff-98ff-5380f83b8d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba85f8c-2203-4949-83f5-b5b9eacfce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4360482c-4786-425e-b0e4-c0d9c46eef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2d0e26-cb55-4949-80fe-4d10c8194f78",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abe1be5-bf91-4f4f-a2fc-ec281e2ad5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b0d769-77bb-402e-b141-8ff94e8eb545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78713fc-dc2f-4439-8cf0-d5636f2ef03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59846f86-5ad0-4337-a8e4-a0428c0687eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21526e5a-6108-4738-805e-58314e30ac39",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a940296-2e96-4066-a302-8eac3ddc5eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31acc6cb-b3df-48e1-befa-75678ad979f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69b13c9-61bc-4e92-9d73-f205b02dff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b871021-2406-43b5-9503-ad545bcb100e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70fccbb-778e-43d0-8890-6540586c1f49",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7c8a84-61f0-40de-8a30-6daf7b71c86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e5bd47-0b16-4d41-aebb-322e176ca3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e3fbb0-afa8-403b-af4d-aa794e3a5020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcfc662-3513-463a-a1c9-cde2c1de4214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9719e68-aced-4496-92c1-990c88e2b258",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac05c36-76e1-483b-9c83-aadbeead31b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4f22d5-5ded-412a-aaeb-76335ba02a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3d77af-ef32-44a4-9840-349325a47342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "687d4ba3-3047-462e-8b17-5273efd88f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce2bc40-5bba-42de-9dcd-af46b2686329",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c95a57d-0182-4029-ac8d-bb55730f218f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8da489-3a37-431c-a1e6-e5b0ef7979c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba4746f-84e8-406f-afab-9186159db108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8282ad46-0146-41e6-9e44-5ded6b9bd27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf07acd1-28f5-42b5-992b-fb7a38b9fd49",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8d458b-8b7b-4782-a73f-61332695c28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c925f527-d31a-410d-a986-840524856dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2adf470-87b6-4622-8bc0-7f88cb911272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3dbb6d-80ec-4f48-9994-8647f0b61e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9219cc27-adc0-4bc8-b478-d55f32d45d3e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a617d7c4-468d-484f-b568-25b1cc2b02c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26dfca0-483b-4012-ab80-5ade4208b3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890fef27-083d-4a50-ba1d-eaa833fafef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9d8a7d-5a8b-4a28-bfcd-81fd6c24bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6e22bd-34ad-4c6a-983b-7ed6b16e5a16",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dea737b-6f6d-44f9-932f-8163e20264c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ab00ae-3ceb-4ee7-942e-c3a1aa7e2673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da256b2b-57cc-42e5-b883-889ba6d06ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8131ca2-692e-4e6e-b0d7-55fd78a3e9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccf21d5-5b42-4129-a64b-636c0dfcab1e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10405a6-0712-44c7-8459-107fc233a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fbe05e-5090-43bd-b015-3f8bfcf7f286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcfcded-509c-421a-ba11-c1ac27fd4a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc808ab-bc17-479d-adb2-e8ae49c54be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924aaae7-f5df-43b8-b950-bbb2e897a938",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fb234e-d228-48c2-a84d-5688282e64ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1318ed3-a643-43f7-ba1e-5e881605b8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadc159e-c26b-4136-badb-0e5c82efc5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b76c7eb7-40b4-4e7a-a877-94c6dcd1d530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f46ffa1-c088-4cfa-b8ef-872ef12e2148",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b167230-7ceb-437d-8c35-287dc2fe8ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9293d2-e248-4983-bc0d-a3bf764d6418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcb7cbd-34e6-4cff-a1e7-455c6412d521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27902692-e73e-4190-b0e9-65afd819a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f70a90-c85c-46d0-9925-cc30840fef9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbb960d-c0f2-4b85-9aae-6f4ad5eecb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2270e763-0fec-4e3d-a773-35d784b33106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82782c65-bd6e-4437-8e38-95408c70405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb0b283-f98e-4a6b-a9f2-269dc9c006ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c571fbae-3fc8-4bd8-8661-4be40f6fea29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eb859c-a1fe-4014-ab9b-7c8ae7b1ebff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cc8396-e017-47fa-9f70-7966d61a34d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d03e97-18ee-4bfb-bd44-f25eec2bc2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca634ce-d673-4a2f-91f3-86885b8c0965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4e9902-fe0b-4c1a-82db-a4bc30ac9ccd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97151f2a-a94b-48cf-bd72-8e181b680d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b908c12b-eaff-4bc0-a4fa-f12ebdf880ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347c636b-8645-43be-84f9-fba787f3e7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0ed6ed-c8d5-45bc-8143-539a847bef93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f3d6fd-b37f-4b96-91ab-64fc9338c48a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc8956-3912-4c4c-8b2d-6fd91cb4e0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8609b5b7-ee28-41e6-865e-85306d3d16e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246a4ef1-e9ac-44e5-8346-5d75b757652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "850a2855-76cc-467f-8c9c-b9fb6fdc84c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aab5444-f499-4297-bf4f-01b2d78d3ca7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8845fe5b-d0cc-486a-9e83-a021e3d68850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4b049e-24cc-42d4-9174-68804b7214dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeb384e-d412-44be-b3cd-55eb0096be68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8992e01-9629-4edb-8b32-b4a4c334d6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307bb71f-0423-4974-a5d1-be5f3bbd942c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61d0e64-5d1d-4d33-96cb-e7c19cebb88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d473e13d-ec2b-4b61-b5c3-2f0f3673015d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f886806-268a-4c51-ae94-1e22e45a03b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0afc5e-f610-4799-baaf-c2a7e8813846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc0b648-693c-44cb-8e4d-25333fca6736",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc21c04e-98d5-4061-81b5-0cc6b3d1e10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6a1ed7-5d04-4189-a707-7fabf5559c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24c7d20-0a64-4252-a6a3-9fae8a849e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e64e5c70-283c-431f-8da6-a77d5065ee0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10295c3-488d-4ba1-84b6-fdec2f3c86fe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1aefe5-f358-4005-8f21-6e36c48e817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd5b483-53d3-4f07-8dee-4f1fbf0597d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe92614-bd0a-4eef-995a-11aef46a2ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ca9789-f85c-437f-927b-aa7b576baf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66590b6-048f-4333-8dac-527e4f4b6f11",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89810716-57d8-4b07-973a-dba5006cb266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ea320d-0ee4-4ed9-8a4e-0b93383b9d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aa0722-7a0f-45fd-845a-aa950aea914f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af21d519-72cf-4ffe-8667-407865234ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d94b73-ad70-4be4-9b09-a32679e80285",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1e010-df83-4433-9ede-0ecf417378c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27a6b8e-5000-4ea3-bf33-cc4efc1677b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fff19b-1230-4ba7-b1de-670f07c15d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23cdcd75-70ee-4884-a06d-9c6c967d117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5140ea38-f4fb-44e4-a474-578e8faf268e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc6168b-1b46-4711-9e10-1fee9a2234c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621ea693-f5c7-43d9-be42-b5013bfc0d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b121179-44d0-4bff-90fc-899a00a73591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76aac9b1-19d4-4779-ba75-3704e613dd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e02dedf-fb50-4241-bd66-a81537048124",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f1d28f-9d8f-4ef4-b879-2d6dcfaf9efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5858885a-19a0-4029-a894-ded21fe93d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aa24ec-73a5-4a52-876c-b3eb4a368eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cee9c2-3903-4b1c-ac52-9274754bbe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c47d49-8cd5-4574-9be6-056dc3e1e724",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f12c692-3a07-4e7e-80e3-a8fc4151036e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcae676-0d31-4d6a-a307-6c2bf1f4ec65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71343067-98f4-4e90-844b-8a1b8c1dee85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6407805-a673-4783-9b1b-c393e9d504a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82273b6-3a75-454a-9c51-84fdc30ce009",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12a40d2-1741-4165-b316-e0c571ece07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344e96aa-adcb-4622-9d19-3870aa467cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d242b6af-e392-4a53-9d5f-bb52393c6958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58435c71-4e1f-46d6-8fb2-7dede8cd091d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2ed514-16d8-49ac-96dc-1d133dd4fb37",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89030738-f4a4-4796-968c-04547eca3892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a4126f-fbaa-4030-b37b-86327d5e72fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41373d97-911c-469e-989b-3c280aa8c274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b41680-1d1a-4e84-bafb-bea88ccf0b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2b7ed6-df7c-4174-b7b8-2b72264a82d5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9761e23-79b3-4892-83c1-76f76f42c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad7c053-fe5e-46d6-99ed-4ac7f9dc205e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12f377-c2b0-4ef2-bfb1-7ce1953836ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43404a27-82dc-4ad7-b5c2-ab9bb6bdd88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd49728c-7ed5-4acc-81c0-e62b6f6a17b3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d4b191-eb9b-4ecf-91cf-208be5dcc886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76db410-2a67-4764-b1da-23cfbbe06031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85a50a3-6197-4b61-9423-70c4b97f26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e88ae8bd-5ed3-4cc5-9b22-68147f032970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5287c315-6751-4d79-858a-0da198064a51",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90db6d7c-a7d7-4b6d-af5f-1b7d6fd1e509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c1617d-1dbc-4fc4-b48e-8731c1bf23e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b6f825-7d9f-4fca-899e-9feb27775c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33c2d4e-84d2-44f8-93a0-fb2464dd4aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea6ec1b-d259-4687-b523-47fba769a7f2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb89a154-b3a8-4774-a85d-919212aebf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd677cd9-16e0-45f2-8191-e2af8ec0a40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490967e3-15e2-4341-8bdb-efa6a2d0f4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ceb7f8-96e6-48f0-8305-a69d68d3d0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdccea80-bbbd-4455-b7eb-d7958f4c821d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7604932f-3373-4aeb-9884-f16ab16a115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0650d8af-df07-46a8-a2a2-cf75d9740149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b04a0a3-2c7b-4048-bf8b-16bc73bce166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cd8bcf-7195-4226-ac0f-e8e58eb6cc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c4bd4e-b4b4-4bb9-9001-367adeef05b0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3820f246-0db1-45a3-84ca-3fbf6f97e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d53dd39-1850-460d-991a-8ab91397e8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f67695-1c1d-4e77-86b2-eaf6b3ecc993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe5de61-e5b3-4eb0-83da-57f00ca61a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb24726-e0c1-4328-9f84-b56780b2ec8e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899373fc-cb27-43bb-966b-9becba1abd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68076a3-fad4-4b2b-8f5e-6ca6479bcad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fe790d-3a94-4f66-8c73-7c2f67c71917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ff6dbc-dafa-4d2a-92d6-bdaa544064be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8f984b-924d-4e99-ae59-c2131a0b09e3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b4c53a-a024-4bdd-9665-460eaba6e3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8921141c-8456-437b-9595-f2e33f243c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209ff2f7-4894-4467-b800-4e52f6b6d8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7878d811-965e-465a-98b7-55f9d69c5027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076087bc-2926-44ec-9c9f-c612e458c4d6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7871b49-dfc7-4562-916c-ada9fe591c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122231a3-09d4-48f5-a8c5-56fdb2418ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec5d55f-0b85-467d-91c2-a74469b463ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20af849-c05e-4c1e-8c95-2b785affa789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ab6399-7820-46a8-99dd-ad83e0933365",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cab9eb-ecb2-418a-860c-f1ae681357d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba11a34-a783-48e4-8753-d452d1a099b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b9d069-7051-4d6e-a36c-37dcb15f78cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ce28b2-5cec-412e-ad52-197480dd573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253d16e4-5c67-435b-9e86-11e319721461",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a314496-b21a-43c2-b719-76f6b8c7b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6439e893-ce76-47a6-bcb2-f3408ca8567e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912d281d-2bc8-4cb8-bc2c-bdbec89971f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f7dcd0-1762-439b-bb88-ea9d0fc94bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd24cfd-929a-488f-85f8-5956345fd9b7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f113316-d0cb-42ef-bed9-4781b5259983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c892b5e7-9541-4ba9-8784-f69e29baa511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f09a0f2-9426-498a-a46a-26e612cfe1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7267e298-dc2e-4886-9b7f-ca8cb256f1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaad6a8d-0daa-4b37-9f96-e4c17deec874",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db79ecc-651f-4a15-8fc5-5d7f5505fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7c53ea-8677-44a0-8332-d0665c71751b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48526637-3737-4e20-9b6d-0d479147909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b12c7a49-a2c5-4722-b0ac-878391e553eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d9075d-fec4-4dd0-b598-827e49741acf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528de463-395a-4782-8614-eb872cdc31e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d0c95c-bc7d-4548-a287-588573f1aaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2808a7e3-65c6-4721-950c-a0612556dd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "baacd97a-f287-4617-9102-1c4dd274fb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aea78b6-47ac-4d88-ac87-f39de0f75994",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789aa005-a50c-4884-8366-36b4d4e8eee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23420425-a5bc-41ea-afc7-9747dbb686b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4040ed-e01d-4284-a42d-8d70d570761b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "84fd4640-6d70-4cd8-9c05-f2c618420708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de93701-7151-4566-b757-d70df7219c0c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398e87c1-06bb-4137-ba4a-905c5ff42bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dd2a5b-54f7-48f0-a2bb-426becfd611f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e709d9-602c-4094-bf1d-e264de351515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6e87cb-0d31-4b7a-bf1d-18ca6a383a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ff2a29-befe-48e0-8901-612216bb45c4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a047b8a-33d2-4aa0-b2a1-2e19384f39a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d2c439-9184-437e-8d1d-26f4caadb089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bea9d9-d472-46c1-81f9-f1e5f253337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c11f04d-1e8e-4dbe-a0ef-10c8373e60ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af7cb3f-7b00-4b2d-97bc-c3da29f6c7e8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5082798e-616e-4afc-98bb-480cd2c34ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34377ed-797d-4999-9d1d-8404d370a99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a68c72-8604-45f5-9f94-52ce9aa98183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d0cb01-eabe-4179-8893-ef4a1f036e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa337b5-2904-41d6-891c-01fb84c524a3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27824bb1-edff-4376-a552-bbc6dbe63778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1c4725-7570-48e1-9a9f-5032b98bdb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50ff645-f00e-45db-8dd5-1e42c71e27a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec361348-37c4-46a9-a1ba-b50e727a912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7501e5d7-553a-4eaa-9961-79f0d20684d7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f99521b-f261-4770-a2c1-617a220364e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "10ebcbab-9d33-48b4-ae09-83a01081ca71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1157440e-929e-433a-bca6-b5302c1f1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b27953-2a79-4f1e-b7ea-fb90d42bd97b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9fc2c44-ff8a-4df0-a19f-2b08d038cdaa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f894e334-50c6-46d5-a791-a5dca11398aa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f530fb63-1f2c-4757-acfa-5ec0913d248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "038991f4-1d42-4a9a-8845-a4ef9d6bda22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203c5141-b993-4440-988b-1702293630fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b26a3e11-3226-49d6-92e0-c279a0523e93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5f647d0-09c1-4104-80c9-a19d3b716107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4003cfa2-015a-4ba0-8796-5cd8d71173fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87577f53-5210-4ddd-8ab8-82fca3112366",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17d43915-5276-4369-a742-a993f351b09b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33d55baa-1fff-4265-88bd-46e052b0cf18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29870bdd-5ed4-4a8d-a563-ec521e364225"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c202d959-e222-4439-aaac-951b0ed21ec7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd5fffae-91e8-44f6-adab-fd0a2ea458a9"
                }
              }
            ]
          },
          {
            "id": "3d4336fc-4eec-4a21-b898-f5b947c984f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7062c679-5f60-443d-b6bb-9f9b6095e723",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6e6212d4-9b6e-4dbf-a3d1-2930cb5a260f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041ab8eb-46e0-4cbc-84f2-e70bb2e414ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "841dae9e-bbbc-494f-9b51-def166e65ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879e087d-bad3-4236-ba13-8499a3c46d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7aa547f-b40a-4d23-a565-93b1fae04242"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5c333df-8c55-41c4-8dd7-be9067732c71",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "141b251e-b23e-4152-8fb3-3188f9d01b9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24079e52-d8c7-4c9e-b3c5-820d8a27ba12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4fbb5ae-ee2c-4cf3-ad8f-0cf9452eb7a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9d5c752-cd29-403b-9b1c-5d0dbe1d2535"
                    }
                  }
                ]
              },
              {
                "id": "e720894c-34e5-4b09-af7f-f9d0f8cc8a8f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92bfed1f-f85b-4b02-9adb-20010d03175a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d90fe055-a6f3-4c8c-8bf4-f17bf092e2d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "801f3777-77c1-4475-8d40-4bf68b5a8051",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "197b668e-01ed-4141-8b96-cd55cc18be4c"
                    }
                  }
                ]
              },
              {
                "id": "72e4943c-bdac-4b67-8efe-399d6016a9f0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07c63622-c351-45ff-8476-3a1e920f2c2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ec4f23b-b83d-4a54-871a-fe76aff8a9b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00d9bb7d-9c8b-46c1-9785-069f8097888b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2943ced-82da-4c2f-9868-152b6805d2f5"
                    }
                  }
                ]
              },
              {
                "id": "17ff7408-64ed-45e1-ab99-1d401251fa62",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87217ba3-946b-4499-af5a-e7900ce741d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60fc8583-09d0-49f0-8521-1fcab228a855"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8295147f-a070-4fb5-945f-6e0fb8924245",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1aabbef2-5ea6-4319-8341-6132b1726ef9"
                    }
                  }
                ]
              },
              {
                "id": "0ad151fa-ea26-4195-b087-83544696da31",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f60f3d4-479b-4f28-b6d6-ed1fd96aac57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71fed591-bf75-454a-bddc-eccfe3d822da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ceeed0-1ac5-4098-b29e-532a3397dfec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f0ec0799-2597-4ec9-8a1c-bf3f1a926815"
                    }
                  }
                ]
              },
              {
                "id": "6363e2ba-acaa-45bc-9a3f-29a52901bec9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34379af4-81af-4219-bbf2-6c1e7467d869",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6daf62b7-9b89-40c3-a9b8-12fb055be204"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a4a302e-77d9-40fa-8313-0ff7d8475664",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5fc08aa8-4480-4974-a47f-8fc64b32baa8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ba7d837-8ea6-4a43-81db-22d30555f044",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69e0ada9-903d-4faa-8a98-72b801c1c888"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d15bd4ec-cf3c-4c19-8f5a-37a8b543c851",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa5fc8d9-be3e-4821-8b4f-ff08bafacaa8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bad9a79-90ed-4884-876f-664387ac0fc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6e5f01b4-e4bf-4941-aa50-d357c307d8a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85427b31-b116-4c37-9f11-57cdc3bf6af0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43cf25b6-9026-4e61-9967-e0e5d5991173"
            }
          }
        ]
      },
      {
        "id": "de3e3a27-1309-44aa-8d4e-1139b3da9a87",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7188522d-d404-48eb-a899-9d9df8d19326",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c576cec-f38d-4c83-a17d-901e8186ea43",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f16738b-293c-464b-9b1d-696bacb2ea20",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7003f9-f57a-4862-b7a3-ff2d2a8f736f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17866f9d-0cf5-4c42-96bd-8235f3bea1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b67b8b-2512-4a0d-8f4e-88362d9da628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5065f4cd-b8b7-4834-9477-96c70e4555f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152ac66a-3566-4522-ab43-1a65576c1f39",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9818506c-5e14-435f-8f40-56fe8d4a4739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776ac53b-4fc7-4d68-a522-0c2845b9cb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e68152-2457-4913-aea2-f16ae025fec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54f73805-c65b-4001-9e7c-fd3638bf4e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525db23-1f42-4575-9fac-7c4459740d10",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958303d2-cc6b-46af-ad4e-b0d8c763805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c13577-97dd-4d37-80b5-fb79cdc3a195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bf2e35-2901-4f19-8e76-b43d02a31801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd9e534-973b-48fa-88ae-bd1deaddfb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf447780-d0b6-47a8-ab4f-9fcadd842709",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b610928-856b-4274-9602-3f456920d15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c615502d-3756-4676-98f3-31a5fa0e95a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2bf944-b3e8-4c4b-8f3c-c56b510ce8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dacba531-0aff-4071-b00b-d72be5b22040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7fabc5-06a7-44f2-93ed-e3c3a27dba47",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd4e64a-2963-4cd0-914d-28aa6d516963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dff5711-9270-4147-b58f-685c3fdb2fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5705ec13-8d77-4d94-b522-64211008e2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98662bef-674d-4863-9091-c7bc5b2d278c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390c7c3c-bda3-42d0-bf6b-642e4070b458",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4602fdd-ffab-432e-ac7c-49430a6193bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62741d01-ccb3-4c05-af71-76e0278c6ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c150d2-848a-4b89-a32a-c0af2208714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5824ff-c575-461f-ae60-eebd508995e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd7dee5-a659-4e10-b42a-838c3cd08a55",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209bc3a2-134f-4f2b-be80-a8ada2132780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14bd65d-0bbd-43c9-92b8-a664a2904c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb36baed-a699-4fb8-91b1-c5add7bb68e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44bf8c9-45b3-4383-a910-ba795e2caa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc86ee27-0df0-4442-bd50-8699875672f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8cca85-554c-4cfe-9940-1807ac0835fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08617d57-aa58-4ef0-bc9c-8afce6612f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4592f74b-7115-4580-87fb-6714478ad2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56da795c-62a5-4bd5-8bc7-82b761a2661e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd692b6-f9f0-4c10-b1fc-6893e0729186",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08906ac-9c73-44e0-bf54-fdeaa6a348c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bd5c89-d4b1-4ab6-b623-660c9308a1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb76ab98-4c00-475a-aa41-402a439f1024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36363d39-5089-42c2-87fa-f3870eb66527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243df5af-2ebc-48fa-8682-46de91854348",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872a61ae-1f99-4d52-afd1-c28cb875a10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae63ba8-055c-4842-b746-a74ad1af3d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba17133d-1bac-4b36-a6be-179fa2ceed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3a8866-3aa5-4c87-9bcd-095d28db5352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2dba5f-18cb-42cd-8cc7-62e02514c579",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fee1e9-92e2-44cf-be5d-78bfd87edc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b2b499-bfe9-4c8e-ba04-f050fb6dfe0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91f094d-35a1-4db4-9e00-7796de0c2e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "358caffb-67e6-4658-b38a-4ee3fea09d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae890385-6c0d-4c23-87af-4c17bc750c11",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088a8325-95e6-489f-ad03-f82d8f554e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a42dc0-4db5-4d7b-abab-56c2f770a8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35331075-c6cc-440d-b47d-bdd338171aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1f7c2d-bf53-410f-9952-7a49567d2b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74bc081-5362-4714-93eb-bcd652207f31",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfab477-3741-4dad-8b66-e76f4abbfbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea2eeed-d1a3-454a-8a34-6475b0790f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b568f680-34f1-4c96-9479-ab3ed9bcf595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e6bf95-6413-4eb4-971e-ec88c01bcfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878e4a75-d0b3-45f2-a94c-0eeaa191e226",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48875cbc-f95f-48ad-b09e-ee4da24ae2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a87de2-1ce3-4d60-9649-d1d55da07d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c59a3b-9bc8-4105-9fc8-490da0b5dfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1897abf-ccd1-4c71-8c0a-e8700288cfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b1667b-70a0-4530-b513-6914a57bb3bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa87a6d-9084-489d-b3d4-7aea7f28319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53fae03-f2f7-4cd7-b78e-bfe0d2c020ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baff44ee-0e9c-4daa-b5ce-46707b7ff697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7096cdc-8a80-4546-8232-3bd564701228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae95b46-ff6e-48e4-b314-d4fe2ad66202",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbef34b-fc3f-49d1-838c-d9144e4e0d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac43ec5-5f95-42d8-ab63-db56f32df150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251f4551-d2ba-4cee-a941-36475918838b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8433b56-cc64-4232-bd17-4be685453b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28050f26-d645-4906-b9d8-b00242eaa7c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9512fdb-51e8-44ef-8a26-77d5e8694e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd109d93-13d6-4a64-8e99-05333a13e3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e9c318-eab4-4089-b471-191b23a6b7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "789ed8be-d413-4337-bb46-08750898a9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a89761-8b98-402f-87af-b1471c15d0cf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf40c23-a776-49b8-8005-b72cd4bdc083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f42a6e-9a21-4215-b368-44549ec23820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aed7d4-d34e-449f-82e6-cd9cd9032899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd8acba-a1c6-409c-935d-0769b882ca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0198be46-4e91-4dd2-8fd4-d5bfb53fe234",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab10b330-f58e-4cac-b37e-df50827a1d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646fe6ef-f415-4f35-bf52-e8c6083e0cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac70f36-b4a8-47cc-bba9-d1124ea211ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad96eead-3ff5-45d6-8211-e74ce7d76c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1222ba-823b-44a1-b70b-df6c3bfee277",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6c6c1c-586f-45f6-b72a-b1d85495e9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be207e7-bb90-4435-9f56-4c5c6d45cd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0050e6-e1b9-4fec-9d5e-cdf0f16d5ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e23c7b3d-54c4-4f73-83bd-3ceedd879ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6440ada-21c8-4a4a-bc0c-8cdd92bca54b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac051cb6-933c-4d77-a16a-46b3ff3ce38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9ff94f-7ef4-4d3c-9a81-9068519a64f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f971a7b9-c3b7-4799-b4a2-0101ada6097c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6958fdb7-44a0-41f3-8fef-85f7b3926eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0686b56a-c2de-4c5d-8f5b-550d463db563",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc228074-fe72-4e9a-9e3a-8666b2b7d5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a283d5a-cbc5-497e-a1a5-1411946a1a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb7f59-2501-4e97-ab97-3fcc0839e2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d85d77-03c0-4b05-82bb-f772ac527b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aac2356-d93b-47fe-ac34-e8581d164219",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca97616-7465-4675-bfff-506f286c92b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257ec565-e38f-469c-a93e-42d1dadfc1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc292d7-3ac1-484c-986f-1f021e1f6634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf80e98-6357-4418-b497-e35f1e71d3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52847fb-c72f-491a-9dc7-8840d7b1557d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e4250e-b2db-41e4-a00b-9011cdccf5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ecf924-3130-4203-8151-7af9819fca3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f0d851-799f-4222-8489-01ee7dd184b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae288ca-a1d4-4804-aa65-5506bad32a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78841b46-790d-463c-a5cf-102c4ac87adb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db47cf1-e827-4a68-8719-15aae3a4278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3413201-cca2-4aa9-ae46-834992ad18e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820ba5c7-e03e-4939-826d-b591583d820d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9163b6-cb25-4264-b1db-9d253335402c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886eea23-a236-40a3-a7fb-39227438dd07",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d22d1e-b989-4952-bc73-0f2d3049e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696c7cae-a51f-453a-83b1-b21554895ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197a0a7c-7262-44c0-a677-8e5fe31fe3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccd806d-87b1-4226-8ebc-979fe836fe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8646c3-f8a3-48c5-83b1-59951d081c6e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44d4967-64df-4af9-bb32-a40878aa84b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c5dff5-206e-4c51-a530-66f3988273b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6807f1a5-a302-48f7-83ce-06a9d864526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2675a5a-bde6-4c13-ac26-bc7eac9ccc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751cedb1-ee19-4aae-9fb6-12c6960e482b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62a0359-1115-4414-a685-044483f35730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90d183c-0040-4ed0-a819-5301d39439bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc9055c-9a31-460c-84b9-f9f160510261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c759ec1-c944-48fc-a21d-a8f8d01265d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98557ad4-78af-4799-a827-07d36ba90493",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b62bf8-6694-4558-b1a0-339e871bc6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df20258-d5f6-4cac-a4c9-110b7028f96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced5b022-6884-4f60-82b2-e9cbbc4dae73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78860e0-478e-4f16-b61f-22e2742c7d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2030dff7-bdaf-4ad8-8d2e-f236d6f10ed7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c1cb5-e34e-4aeb-ac22-a9592b505961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286f7cfd-e414-49f1-86c7-f9e16ca8294a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89411519-f93e-47b0-bdfd-59c139875b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6e8ec4-2fa0-4051-8fec-ac243c4a5eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5799dc4-0756-44a8-bb37-5baa36a19be8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a1d555-8f7f-4c11-b663-f4c1d9338576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c70517b-ea06-4d4e-9307-2ba103d90768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23115b70-fb63-4acb-a2f1-b34e2aa10daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc6e61d-c31e-41e5-bf1a-80187591d194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2c81aa-7867-4c4a-9fac-cb35d0ee48bc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d564a75-acfa-4f21-8d14-f6d933ca0383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6054f246-23be-48a1-894f-c76b4630b43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42f7105-a0b6-495a-9aaa-1b376cf2e6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f371e4-4a76-431b-ac21-85715030d10d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae19fa32-4de0-448e-88d0-8abe3724aab2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db22c783-8957-4eb9-9e18-69a9ccff738e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13b8949-45a2-4ae1-a568-a8c13f1d19b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8eac56-2096-4165-8424-fb17ed8e5719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6be741-aca2-47a3-94ae-9de63b9bca5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c2cfb44-7cb4-462d-97af-77d4123e27a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "648e27a2-82f0-4dc4-bf2d-acbccd7deb45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f26ec671-52b5-4672-8883-1fccfe7574cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "146f9b0b-ec6d-4b2d-ba4b-3d1a8134d064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89394e59-f837-4f98-b4fd-afe307d03349"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24241753-b4b5-4aac-bce8-ed96fc562258",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1c45675-c889-47bd-b7f8-0dcb25227c16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64c937b2-bba6-4719-bc1b-6d17d9700cf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca74d0a5-a0a5-424e-ab86-6307d105b548"
            }
          }
        ]
      },
      {
        "id": "fee026e9-85b8-4d94-9b1e-5a1c8b7a3a4c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "51f968a4-1535-4c71-94ea-d7e9704e20c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b69ae81-2935-4f50-9026-5a44626d46f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f85db492-064b-4d0b-b547-2da6a62af582",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6789a6e-3aec-467e-8721-3339bdac39b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805e94cf-4da7-4b5f-8e2a-87615dbb603b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57796b76-806a-4ff6-a82c-2bdccd7c3b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae51d29-f686-4201-8a0c-43c1d869de1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c767c5-d84b-4460-9031-043e11730ab1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1607fa-9aeb-46e3-bb9b-44c162004a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfdcf8c-0e0b-4154-8449-3a2a0c8d0f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a404902f-4860-4add-83ff-b2002a6feecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aeb666b-5688-401a-8353-443b1f4f5331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b86da-4d70-496f-8e9b-3b1c68bd3d3f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb76c90-2350-4d83-aeb2-86830eaa1d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02481a8-6fec-4fdf-bf49-5697b008b421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52deef1b-fb20-4396-8fb4-7cc67e91562c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1911a85-6bf9-4f64-98aa-586758e92e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced024d0-7114-4c52-9f3c-37bff31671dc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379c7535-4e19-4ea5-b136-d911ddfc9d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7356c2c1-5932-42dc-8e9b-1daeeb2cf4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769631be-a242-45a4-befb-b613b712c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e563c4b4-fd14-425b-b0d1-7ff0296bec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13d3d77-66f2-4beb-9caf-d920987be2e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a88fdbe-4961-43d1-9913-6788225d24af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eedabf3-1650-48bb-a29c-c3bad7ac5367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7186ae-c51e-46cf-819b-e8fdb37dfa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "384d6b09-188f-4a4e-8027-92a7dce276fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d95d349-42aa-4772-b4bf-2ac7c43c8212",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfec4f6-916e-4c07-a68e-6297d1284dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c888879-6d5f-418c-a5c8-6af8d980326f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dce3d0-91b2-44ed-8127-f053083676a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89f1307e-50c4-4cbe-ad64-c0165d857103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c8f351-7b25-4579-8954-a2a5df54aa84",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdb0fcc-bd76-40c5-ada5-450b8b641fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7154a2e0-7172-4e8d-a54a-98b8a6c0919d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ead2f2-93b5-4dec-90e8-618498a3b3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f663c865-0916-4ad0-a2c7-2aec72283735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dafa69a-ee87-4e83-b93c-3122a6d3507b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f92e726-2360-46ee-aa52-29004fa2edfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ec0084-450a-4f32-aebd-5f61d004cd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440c20bc-4d2a-4a58-8b16-6e3738d50e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f9c678-1d0f-4aa0-9e5f-c3f9afeedc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0133f1-fb99-4cc5-be93-211ac2b88734",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de1a6b1-b302-4cbc-b14a-744ea0611bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c06830-298a-4793-a363-022c9d6de5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6f50b5-c916-4d90-a26d-a3fcd6bcb499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "607ed0f6-ae62-4a4c-aa25-73b1fe1deb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da37f69-94cb-475a-a630-3c3dae6cfd64",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c1f570-4ccf-4841-b919-4c343e33b06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa29b1d-7272-4d6e-a3f1-2bbec86e70dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cc6a3b-3af3-4580-b13a-1a27fbdfb6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d862d4e-e9ad-4e58-af0f-76e92a802d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4758c78c-b149-4ac3-bb2a-ce3c2977da58",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cee388-4970-4b7c-add9-e0b85c9d49d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3bdaff-9424-475b-8320-c8e0afe24a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf6d25e-dac2-42b5-9778-a2ed295108c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d4392f-1671-41e6-b7b5-aa4fe742bb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7984e86-da57-44fa-b8c7-dc8ff63f6e1a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a340503f-7e6f-4a43-958d-1e563314ce2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ad83dc-8be5-4b9e-8002-6fb2d733ebb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e39f5d2-7aa1-472b-87b4-8608de0bc855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63b8b38f-aded-4947-a209-7e92ab71f32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5385335-695c-4f91-b795-2b673e4b3e99",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e193b1-b2bb-4fe5-8a51-c7d00b4bf77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd802f3-d86b-4b11-b721-399ac6d273ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f903af-3bcc-40e5-b611-f2c165e95a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd84c9a-adba-40a3-b951-47cb74e26a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daddf645-f67f-47ea-abba-3097e3513a89",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06253da-2a18-4c15-937d-6709268a49a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fe2474-ab8e-4fb3-8424-75c50c747da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac2fce-2f5d-4bd6-b58a-9a7f533f92a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "67bfa337-5bb6-4bad-90b3-3adb171bee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a68a02-2062-4102-be35-ccdd8e7ceab9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b00ec8-bb58-4760-a89a-832ad494df01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6e11f6-780a-4782-bd84-efba118f444b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90630f84-9372-43d6-9dc2-d64b1134a5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aedc4901-b895-4f9c-98a0-4505bf8f30d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50278659-6151-4157-b049-a6b6520fcf9b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd0d311-d7b4-4c7b-aa48-79bbd44799d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dedfa7e-ca38-4e43-92dd-7cf2d8ed014d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec51b2d4-e9cf-458d-ac11-7516f84d9410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5817dcfa-392b-41c8-a607-f21032b9009b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a1453a-fd4d-470b-a641-70cc399be73f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c810344-2213-4ab2-8c8a-cc80c55f30fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407b6faf-5186-4921-95a4-9c0026364e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c828cc7-4736-4d0f-b59e-3a87fc416833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a273858d-f040-4e41-9d8b-9f0c7de21f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6257d8-1526-4f14-b26b-cfc39f7c2ea1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9181854d-8094-4fbf-ac0a-0175c62d1e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba5ece7-4af7-4630-82c8-7597b70664c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438743d9-88c9-437d-8b28-4fee403277dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1ff2b2-cc43-42b5-928f-477efb17ffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf45696-6d40-40a5-b638-7f26abb4cd19",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca8e7d2-c8bd-408e-b650-6bfc2811df65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747eb971-ff52-4ba8-b5d6-d24d143a43c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46475320-48dc-4100-ad92-90bb1b6e8ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a8c453-a820-4c3d-98ac-af54d6a5e51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31734356-6f48-42e2-b5c2-29e02c3c9c99",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cfeb60-0f13-436c-b83c-9be4b05ca948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4092ac79-6126-4c39-a16c-f21ee53cf8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61112f0-35cc-4800-a7f4-0cd8b80ade35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a56e0e-9c37-4505-a21c-91210e09cb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a509eb1a-26c1-4885-8773-e3dacac951d2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c1415f-1eeb-46e0-b49e-d038f85beffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff51bef-5bd9-44f8-be49-cdb87efd1913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5629a9dc-f0a1-40af-afe2-16323fc03110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aed2ef3-4041-4037-9874-56cf948d3bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6149bea7-0f2c-42c9-a1ea-b9dd9cbae9bb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046489ce-cce1-413b-bccf-078a7a1a5a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc5d47d-289e-4a2b-ba23-fda5d36e81a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ed55d3-76ff-44c4-b4f5-40b9972aba5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a959d19-b827-4daa-b7f7-1818a9c4ed34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767f7185-919e-444b-9612-52eec7e1663d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2948f4da-52fe-4b04-9160-a477cec916de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a572e924-f7be-4e05-9359-16814122b31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c269b35-929e-4499-ac3e-cdacebc72094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4d3cb8-830b-47ba-afbe-e07c7b965d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75283b3c-65bf-4b0d-9e40-ca06be976b31",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737b7888-957f-4235-92d5-38c88f76db0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5918371c-f65c-46d6-bef5-2c7d73cdc039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8b73bf-1e8a-4ff7-b616-9c86d5f87a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96599c83-5fbe-46e1-bf0a-969721f2f577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edda85d-4412-4df9-870d-aa70990544a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dba1599-22d3-44e9-bf0f-fc8824a365b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcdb989-feed-45a9-9b28-cf7cb38530e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dd80a8-bd5a-43d4-8d09-57b9d289e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b655dc0d-3fdb-4881-93d6-6e9130ca7cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d704e78-5f7d-4617-abc0-296f0201d605",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccec9a0d-fa21-4fc3-855f-11f185ffbdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8693a297-0e33-441a-bf0f-f021aec96d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28d0c6f-0d88-485f-bd71-956997894b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73fdf91-ae33-4a9e-b8f6-957b7573b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46090f15-96ac-4372-bf10-dbb451101a3d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a140909-77e0-4763-bbab-d0cacc18d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f511615-288c-46a5-b17a-1808ec287aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9513d256-9d06-4c90-a522-45f1b3099307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a65e9b7-0e12-4edb-ba19-281682cd84aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a69e30b-7f0a-4e5d-80fb-0edf97163bec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2807f84a-943e-428c-8e59-b1103592eee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ad04f6-bdf3-4b40-9f8f-b8a67c0a5e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e7a831-827a-4351-aa42-d664b6dc78b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4020d9-59c3-41db-8286-8c0e059bc89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2520905-7264-41df-84dc-032197b3489e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8f05b7-fe3c-4e19-b7b3-a0fdffa89711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43aabc0-bf41-459c-a484-77a12ad7e9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaaf1a1-a22a-4399-a9c9-512fa307bf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12c08fb-4a0b-41c1-b92d-1e201e9f409e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c90284-4a85-41ff-9184-622b4fa25fdb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af843dd-b115-4cb0-bdbe-c82493186871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0769ef43-e7ae-429d-92f9-a03cfa1d38ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b44122-55df-4fc9-b1da-a8890908434e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26101af3-c79c-4a15-a5c1-0d69abe70c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bd0473-e4c4-4204-ad3e-9787e0ab5391",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fbbc7e-bdc3-496f-a805-577c4286e5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e798008e-fcf8-4f75-9d95-99a9fb62a1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323b7bc8-8910-4f48-b1a3-f2fb20214055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ef629a-9bfa-4ab0-94e5-21c50918885d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a886ec-75b4-4ee6-98c8-b3668d768b9d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a7996-6341-4f03-8216-dac066be65bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2235ebdd-b23c-4f20-9589-e50036a599f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8b0455-6e11-41d3-958e-44fdb15c6812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d860711b-c7d2-4a94-a0d3-fb9f83f255fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435e29f6-1e61-411d-8f44-3243fa5a20db",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9618457f-89fe-4187-9df2-ddf143b2a4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204aa7d5-9c39-4dc3-817b-1b55bf0b017b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4c76e5-db49-43a3-adb6-00d9fe2510f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d758f044-80b1-44a5-9ae7-1dc0058f42fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afe8003-8a78-4397-bb89-95b6b463f214",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340ccd91-b4f0-4112-ad45-fbc6deff694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a28116-b64b-4097-819e-b1564a87c677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5948491b-27b0-4050-90ac-041bd703132b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d89fa6fe-fa15-49e8-8e76-a25b636b7f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5e1341-1341-4880-a756-905e0d1606fa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf38cbb-99cf-4f42-a9c0-05cf5e445261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b1c75b-fb5e-4867-acf7-ddc8e6247cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b0d237-9e40-4c39-9900-d0c60def32cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "718dc4d5-8fa4-4624-91bf-213f91d54ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12a7bdd-281b-408e-8329-a711dd26cb4a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa53cf9-ac95-47f4-995e-17560f57e02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fca7bf0-0f87-4a78-98b2-28d5a845710a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d0b84e-2d34-4343-adbd-91248e98b93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2d46f1-fadb-45d6-85b7-85f784597ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19ae99c-edd7-4f8f-893c-42c063f56ef4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d02024-09ce-4106-997c-7b6a95ec6dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a374421-09c8-41aa-a6c2-b2a614e97782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d04fc4-08b5-49bb-be87-4814c260cd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128952e1-325f-4d06-8753-1fa3b7d835da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fdba044-448c-4a7d-bd4d-d1ca1caa75ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9185ca4e-a2cf-47ed-b97a-4189f2f88fab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419b7787-3453-4f3b-8676-30356e7ce8b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0800c6-90c9-4c2a-9c0e-adc9b94d170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fa65ee-d26a-4760-979a-c3bf962cc050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "131ed7f1-80a1-439c-9f99-d7be6aad5b4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72ba6dd8-d633-4f12-9f9d-c336ba6939e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c15ba78-558c-4fa2-829e-1e2d653694a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4142abe3-07e8-4766-876d-0709e906e87b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8acd212f-2ca0-453b-b7ea-64d2c3db821d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2896f5b-1c44-43cf-9430-2cda9bedd84c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9c1d93e-e3ef-4619-b840-c63bb6e0fed4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90657b3e-8e1d-4cc5-98e6-3ef8704d7412",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15311b46-1722-4d45-b6d2-5000be93f006"
            }
          }
        ]
      },
      {
        "id": "b555715d-b2eb-4ea2-9717-7f3c15a5a8cc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "26cf30b0-525c-4e96-8ba8-102ffbe405a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64aa3b0a-c384-48a4-beb0-c2be6ac2b800",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0b60b37-b872-43ed-88a9-313b6559e185",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c46ec80-18eb-49a2-b3ee-1f6fb4c32917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f77727-c3cd-4804-b18b-6c40e486eaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752904fd-8b51-4987-8098-36a83a04fcfb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699e762e-785e-4f48-97d1-4bccffb6d937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096f9432-db4d-48e9-8e05-2cec9d0affe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705bc908-1a3f-45fb-9ca8-6e3121a058c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052c19c1-10f9-4f1e-af50-0d70ec324721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0e4f68-a749-423a-a55f-ab1e779da76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9776e823-d175-4716-a420-0f9078186aaa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ba5fc0-2f26-498e-a590-190fb5004020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0f8d48-59f6-4749-b1ff-2ac8a25d57ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0d3574-b50a-4c4f-9e40-b9a045c25973",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2fdeb4-d46e-4e73-bedc-d24a9cbf65c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c04c44-3a1c-4717-b204-b2b9db1667b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a1cc2-4bc8-4f7f-bf13-2ce674f047f8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2336b05-40c7-4d41-b42d-e5919e793684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367e615f-4f38-419a-a381-57790178cf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab698e5-ffd2-42f2-9c53-0a4355a6fd22",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63122c1-2e36-4852-a81d-d8d6fecbd5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db45be0d-cc84-4a2e-a76e-561b8a6999ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfddfbdd-9300-4649-9d0f-87fe30d71681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a656a2a-1a39-4b00-b661-03aa7cc64c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1472990a-b6f3-4280-ac16-a15c0736cf76",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e135c67a-d846-4ffd-931d-fe3a4a6c416a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99b3451-6c73-4ac7-a33d-87b2b30eae12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d578b3a1-2662-4a2d-9bdf-770995aeadee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fab48b1-0eb4-441f-a160-1c42e4ebf888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d247b5-65fd-457b-844c-55eac6723457",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb31ff8e-4bf9-487c-9f15-d25d48272877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c859b10-0e2c-44c8-8973-a107e52bae95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af5634b-774e-4f68-9041-ce33d54b0dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dd6789-7781-4e9f-8450-32cb2d512a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4f1a45-2cdf-4727-a4ff-c6b606cc68d4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b023ee84-049d-4c61-b52b-c99322c2619a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd27534b-798a-42e8-86a3-476cb67b102c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996c2785-1b4b-41a4-9cb7-e366881dfd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da0293d-5ba9-4741-af13-9c4d45ff75d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd7c7a6-9933-4f3c-af38-58ba78af4571",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7428fa-4728-4a22-89c0-93344d48aa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4b5a50-1139-478e-9164-81ff24d61f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7e7fca-cc50-4eff-87dc-08d8d12c4109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf252ce-c81f-4f4f-aed1-47d6c76e1e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aa3a7b-9b64-413c-ac88-641cb28a2998",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9283b7b-d5c3-42fa-bffd-c8946eec0b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd2e18c-1f72-4484-a3a1-e5050317dcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953c88d7-974e-4371-adf6-dbc499ef013e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15b849e-655c-4b4e-98e0-89c716885b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2430319-3070-4eb6-aad2-9d8a42e95a40",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc44e254-0da7-4d99-9b6d-b9a9a591fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4036b80a-d0f9-4138-8ae5-bb92e1d112a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a3132-6bac-42bd-9326-97127a583b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8e7c63-9512-4c55-a8ed-af4ff7fc3d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832913e4-f4a3-4dfb-a61e-41be0a63b02e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf05fd0-4e3d-49c6-a7aa-593078907fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8011a320-8e5b-419e-b4a2-df27d0405d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3991ca-b3a6-4d01-820f-3f1be72c599d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c203d7-8400-4004-94c0-32387168f996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d255b814-f7a5-4bdc-8105-f6e923bc932f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e74943e-0f3e-46b7-81f7-76fd847c5928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01db70bd-de76-4f69-93dd-302b7843b09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636e1f4f-e69d-49be-bd90-63cce846a081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd759ee-8f49-4355-a3aa-8d3ce3451b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b472312-cece-47c3-833e-23213a6de7f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee20021-277c-4fe3-9481-841b0dda7df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41031ace-15fb-4236-83d0-6987680ab94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b475364d-10d4-4084-8408-e6130a8d5c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eebfcea-22a1-4990-b8f2-b3d3dc26ec75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413314a8-c130-4e49-a9e0-237364e9c68f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f95be19-f062-4705-8175-f39174b2a6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7300aab8-9ae4-4466-ae30-6f5ccb99313d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c70e63-89f3-4d5e-b291-2e2248e3ce2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9445a5c6-ffe9-4992-baf6-50272018fd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fafd0f2-9333-4dbf-ae9e-d34b548af080",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6394f47-112c-454e-a77a-d2626a28ab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d154df-522a-427c-a433-ff03b8caf3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d69b4e4-676e-42c8-ab28-127e4436ab7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8f57a2-23e5-4eb7-9859-d6b0225d28e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7823a73-65f9-4484-925d-7e0047446d64",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0ee726-cd2e-4c7d-9075-7897471da429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5af82ed-7851-48bd-bcd6-12e293043475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92f8108-af36-4a2b-aaf9-3b0071182b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca440958-cb3a-40c4-b7ed-c4e50a2d535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47178632-69e4-44a6-aba5-d56fe7a3dcba",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c4fb4e-2dcc-4181-9394-68eec744a9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28debd4c-9b39-4563-8f19-fca668275142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769a2777-e07c-4f50-96bb-131a09211250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38989f5b-7453-4d4a-897e-d69fc3de6444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ac562a-0424-4c4d-a5b9-d492d6659fdf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ae9f4b-8703-47b7-8e87-d1980d1d3469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ce889c-f691-4c8e-a735-20b35d856182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e009b0c-251c-44cb-a243-62079b7b07a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8137be06-740b-4712-bfd7-4af9c4483219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89fc549-8666-4dd5-b805-c052434d8fc0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a204d9-df1a-4593-873e-00f2b5cd3835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050d973e-f6cc-4cc6-9d7d-bd048abfcabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da931a51-2cf9-4a6e-b519-e75cc2d19c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cbecf7-ddc4-4411-a4ed-45a62e940da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5161aed9-b939-450c-b31e-3e9342ca62b6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366c26f6-d284-4513-80c9-170e7d35f911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277a4863-1fa7-4a8c-92fd-abbe4e32d24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ea83ad-cf07-47d5-9c45-9d349ab2b5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4af983f-d8d6-4fb3-bfb1-988839a5a54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d1b0bd-65f9-4ed9-b6f5-6a3888583ba9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f990d85-7c3a-4e43-aaf1-148f4ee88446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837f75b2-eb22-4c92-8c75-f6548d2223c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3554a1a9-e308-4984-addb-9abffb59382e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623513fd-534a-4a75-8f75-0a9f4627977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1178c8b-f6b2-4aa0-b20e-120d315a0727",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7777769f-a95d-44c8-b79d-599d35464535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92b8d6b-a4a5-4382-b32a-0232983eee47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0fdd5b-6633-4bac-8567-070bcb173c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c8a33d-360c-4f5d-92e2-7f9544e13843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c471d574-6499-40f6-bc84-728ec2507779",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6fa6bd-71b7-46fa-afcb-5df03a382527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502b0f6c-7a36-4861-95da-dada5c8f8fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2e8e54-6435-4c12-8bd4-16491d750519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f550f16-6967-4186-94e4-bdcbf4377a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fc253e-816e-4623-bf3a-dd0865651dd3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ae4ef7-d2d5-4bff-b33e-fbb55add1273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3740bdea-ecfd-4fa8-8a08-c8d4754fec0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6efc68-00d1-401f-9068-696b141f45a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4095628-4d61-464a-b5f7-38d5f01667a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e2398-43bb-4c61-89ab-ea35e0e89a1e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c627f8-49ba-40e2-80c1-004a4d5d821a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d4da70-c9b0-4c87-9f83-a1c32b80bd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6912707-0b77-43e9-9ff2-c54afde77463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5f9ba8-fffd-4ba7-8ab0-c2287d972333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee9fe0f-c32e-4294-90f6-7a5a83b29de8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c64c1f-ac90-45b1-a08a-884d12746919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0f7636-efb0-4e50-bbfc-7607e683fe10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60597ff-f7d8-461a-ae3b-763e8cb03230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290cbd35-b6f9-4249-8dfd-637118aeeafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02844a7-7843-4555-b462-334c55334752",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adabbe5-edf4-491a-9278-fe2d486df373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3acb35-b8c2-4642-8b2a-4bba16b52f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbece1f0-d43e-4043-90aa-0e048be4b220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833db5e-9bd4-4547-82db-930384d73423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832e8995-64b0-4656-97fc-94cfcf7c72d3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6834d52-a61e-49fd-91cc-67bade35a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaab7c80-10fb-4b4b-a891-42a8ee56eab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2318fa0c-ff20-4752-a844-f232189c9b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ac7ae8-ae14-47ac-ad8f-4f8b8fff38bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467a26e6-0735-4c70-96f5-049146decae0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5286e0cb-85c6-4ae6-ae14-e4fd315f8cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f40716d-d8c8-4e65-94a7-418d4f18807b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6a5746-c4b1-41c8-963a-3bdf034844ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864b0751-c5e9-481b-9421-86c52c1af68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad5067-907c-4332-9ef1-afd2ccb9c16c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c64edd4-9cce-4229-ba28-2772686e7eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75c9bda-1b82-4310-94e3-5c3347eeeac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c54ca-b755-4ec9-8aae-c66b4be7e82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b09fa8e-e17e-4c29-b13a-b81c4563f969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dfc627-60de-493e-b5cb-56e4949b9b68",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f285bc-d632-4e79-9131-5b313f4c036f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63423253-58b6-4fda-b34b-c794efa34b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3a05b6-493d-47ba-b8cc-578c5c9ed0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1863e4c4-b923-4c26-8b11-cdb22e77b9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5971ba-aa2a-4847-b160-36923b20b9a8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a34266-0160-407b-8439-933c602b94cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ca0b15-48d6-4648-98de-f8fc8eca455a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a9638b-f5c6-4df0-8b3a-87decb50d8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a344b54-982a-4f5d-9192-01a28f40e55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b84a68-b0c9-4716-a308-8f0960d6ed92",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db85b038-7810-4178-93fc-f91fbc1b63cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ec6a1a-9460-4080-adc2-bace4e5fac83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aa8680-fe1b-4767-925c-d944458f202c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af393433-fb3c-408e-9f91-fb3d792e2482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5df725-6dd7-416a-ae5d-800caf4f0ef1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d034f3e-f967-4ef3-8933-a4abbf1b1d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7ad9ce-8e4a-47b7-8357-39c4a243a9b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d785bdb-a5e7-4812-bfea-cd10913ef914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca0ac83-f55f-40d5-86e5-8e40521acdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de8a1af-1af5-416a-bff5-e43287f32969",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4570efe0-c178-4328-895a-ff9585f45018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198b50a0-dcaf-482c-bc28-e05418f18b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d60072-df59-4229-b5b1-ce89383c5ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a064c7-8182-4a95-b9e0-c502aad52250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22d469f-3de0-4a44-a251-005c82272024",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23de9648-f291-4fbd-84ec-bedb4628585c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5f00f6-d3a8-446e-a18d-da4cb6e16295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14302ab1-800e-4580-83dd-d34ae1c3c90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e53b4a1-8fb7-4eff-8a37-402e1b0489ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c1165c-ca8c-4aa3-9dd8-e018f68cbec1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59773c6-54db-4424-a969-a3296ec6ea29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51604588-b05e-4cda-a18b-7718e406abef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1278ee6d-90a7-4c97-83cf-0df293b4c746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e0cbf6-e97f-47f1-bc97-f26da8aac4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b968c0-ed78-4c15-8e43-61094ad9e254",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8cf99f-4da9-4058-bd01-f2e9bb9734e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6a21b3-8073-4a3f-b968-44b239978da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7de989-9606-4126-acea-c8abec32312d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b76ef30-0e85-4881-aa36-6ec5d4177478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c42dc5-7979-456a-a7a5-fb00c1a0040d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c4d94b-9fa1-42d0-a77a-d3dfda365eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d973d7d8-7864-465c-94c7-c584a492c6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e02635c-bc24-46ed-8315-1ff597f317b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0986392-bf19-44fb-8fb9-90ef457c4fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b28539f-0916-46ec-8576-7869215b3f31",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12258be5-87d0-41c0-8bbd-34d7e48a3daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e747c10-a71e-452f-8a0b-7dd447066955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b92aa3-17c9-4044-a5f6-e293166279f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e536e8-a48e-49d4-993e-15c52a8b8fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fba58d-62c5-48c0-928c-e303bc8b7ca3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ec556b-21e0-4432-88f9-d7d9f8ad65c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb2da46-314e-41c9-a950-56fb97215dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aa5009-3952-4e8a-8fd7-4e47c6287140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daf7a5a-4710-4e81-9c00-4c66a93bb750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8234db5c-9957-40af-b73e-940a8cff76c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377eb57b-ef6b-474c-9a1b-e3b359bcf162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740e7878-e5f2-4d37-bdd3-ff3967bf745a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33b747f-0e00-4657-82b1-206668ebc17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5796f0c4-1c6b-482a-b8de-ecf6ccd99264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2123f9c4-3b5c-41c4-b063-402443c95a11",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80048f4a-bf6c-4aa1-89ed-640ca41850de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be364ac-a8ad-4036-92a1-2e04d3b2adbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca34d0f2-1dc1-4c1a-a733-9079b5023abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6228a4-1763-4b59-8c24-e02bf615b875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3989e0-d017-4de7-9830-815b3083da0b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff40e43-6ff5-4cf0-9a05-fa0573b19afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df425685-5779-44f7-b12b-7c8757163c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088ba4a1-97f9-44fa-872b-0972047a8be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b21815b-4142-4318-886e-dbf8266ee0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd793d2-9144-447a-918f-ac6b9a741eee",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a3534-1871-4395-934e-d408dda9f7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9189058-f77a-4045-b149-aaf335101d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97289047-7674-4fa4-ac95-3b12be82173c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b92954-5195-44d5-b549-b17b2a2e467c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d3166-7902-45d5-a0cb-a2ed78d48c92",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deb989d-1178-40ab-bd2e-4b03588eb1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9224c7-9db5-4bf9-822d-2118973e94f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c5e739-d48f-455e-89a6-b82b4d3ed0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827ec565-049d-454f-afae-46e6e4242de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00d6e89-679c-407c-982b-aeab571b8ee1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334e77ca-3b27-426e-b963-507aa976fffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64839d1-eaaa-49ca-a442-8141b4d40c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e285cd6-13ff-4e87-9cb6-b46878c02b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a87319b-9edd-4b14-afd7-05abf5088375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2122628e-568e-4f22-a59e-76e5b6d197bc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bacd54-b1f8-4240-b1a4-d54e07003e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61cab00-f06f-492b-962e-9875176c75c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5872426c-250f-436a-a465-7b3a60d438ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3f5b37-8f55-4243-b30b-98a2d38b2d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e3553-8261-4d40-9249-bb3fd34f2509",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8385b7-b005-45f1-b2dd-e7af81957730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2a2227-be07-4a66-b562-4ee106f8341b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fb3194-e4d6-4d7e-a089-0c27282651cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4f98a1-fb8d-4438-a631-fb5b6f44abe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710bc7f9-3370-4c92-a7d1-0a50574e005d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1a9070-9368-4204-9f48-d760cf068181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3ed4e1-ef8c-4fe5-8185-300e02a32f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1fc85-b258-46c1-b5e3-92f16b797f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b88363a-6c76-462b-a284-fe1049ea2b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dcebf5-aab7-420b-8e7e-ee448524ee82",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff07631d-101b-4dbc-8916-93469fde37bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66056cda-2d0e-4fe5-8f4b-7538d3fe5ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9f0f6c-c190-407a-ae8f-a23f4ef0ff31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcaf8aa4-a774-4328-b57b-91a4a488d86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec2b99f-0a1f-4618-82c2-4516295cce6a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc67078-c198-4acf-828f-f80a1c4ac70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5174acd-a0fd-407d-8bc3-7aab8a278e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d45a304-1648-4c8c-8cc6-37616324155d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eff4f9d-f9b0-48ef-81bb-f8b8517084b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b373a-efc3-4ade-bc14-d59236b18076",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e507cd-4407-4c33-99d1-f30649f15d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee9e480-80b3-4d4e-9021-a639f6f60c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44bd246-61a7-4238-ba49-f96a9d181cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5559e11-9969-4acf-b4b0-8f7ccbe7fc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531fed93-236f-4a16-8e73-4221ebb8e93e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca16c9f-1eb3-40d1-9cee-cc737cc3a1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f353acfb-54fe-41e9-a2d2-4d34c21c09a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b17693-2c77-4938-8256-3e82362eba44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa924bf3-363c-4c29-bce6-67d8dbae2d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ff707-9cb0-4c96-9af8-95335e5c424f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e43c26c-ec50-451c-bc9f-3a4931bb9e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cc121b-a19b-4529-8ccd-5e38927a0779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6005b6-c72e-4af8-87fd-66b3b6247335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbb5d36-f1cf-404f-91ae-a2f9cb12d8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357b11b9-40eb-46df-989f-2c4e796faa55",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2d7a15-277f-4f68-bb2c-72e0cbf4fa2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3399dfa1-39f6-4f6b-9c91-e41d81e6f460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279936f4-279f-4f72-a22c-ebad9958ed94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f2392-fe84-4e76-897c-9c91b2b44e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e789e61-8961-4c6b-a12c-da37670cc5d3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608ce9e3-aabe-4eaa-aa6a-8101872f5f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63806c82-a414-402c-a2fa-b04a214660c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf5b17a-aec1-425f-8006-04f59e112e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6304f03-7886-4dab-9984-da9337674915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c754e238-943a-4043-a3ad-c51681e80395",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06072058-0d45-4f8b-b42d-a33599ade6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1985922e-c110-41b6-a39a-b4cb4ce630f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f88b2-4a89-4ae2-a9b3-ba0d88961b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32aa7d8-3184-45bb-a8fa-1fedcdecd3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49024c60-1711-433e-a40c-0412ab879b15",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7670bc71-6899-4bf3-8b42-9424dd4aef8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5642189-82ad-4576-9fc0-117c210fd3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf42fa-a635-45b4-af53-4e0d7964d5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53a808a-3c87-4e2d-b6c6-5c9be6e90f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacc4323-96c2-4502-b1c9-66093f4eab9e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5dca38-af9c-448a-aa52-4cdcbbcf2964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee940cb-0c7c-44bf-8e36-f72206f4224d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7ee183-61da-4918-a3c3-32ddc9a6630b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c444a538-24ff-40c3-861a-eb3b4d0571a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd680945-ea28-4143-bc51-9d6fb0e93474",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45dc1e4-74da-4318-a968-ad762ac66866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b23054-e326-4a97-bff0-3ed4721c0155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d1ef92-e2af-4b30-aa83-de73ef93c3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5274d1-c29c-4dc6-b724-79ea0cce379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdeb322-965c-4392-b5dc-9014ced084b8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfcbf30-ab49-4070-a3f6-435c408727fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473bff3a-9b8a-4fd9-8e4a-c0bebe3e210a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630db872-72c7-4c16-9455-51a80c1d2491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cc6c35-45be-4a1a-95c9-5bd7aa94a5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edffd28c-4fc3-4f52-b31e-f611bf29501d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c37f370-529d-4550-8cfb-c8caa59649c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b052c5-1fb7-435b-adc1-eac89b73447b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76eba314-6ab1-401c-b29b-02ffd6c7bbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc79ef2-22f8-43e6-882a-a74b94af3140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cedf216-59c9-48e7-ae0d-6a409e9ed51a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb7f6e5-208d-4514-89f7-fc5119099ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a58dbdc-c2a2-4128-8fc7-b42a50b176e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1068373-c026-4d14-ac32-8dd0efe35b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a56c015-2c19-4862-985c-b98639077fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e72066-2c46-44a0-adde-d6b0e7178de6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9068088f-3e2e-483d-abb2-066f76021872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbdc2ba0-0c57-449b-9add-1e724682c5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88af6522-fec0-49be-8dfd-526628dedfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e329a4-a20f-47a9-9e0b-25cdc3f3ffd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78df972e-0596-4a01-9528-6ba0656fa0d8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e736c50-f3ad-453b-9c7d-bc0190af79a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b109dc-ab10-4535-82d7-740969a2523f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3a868c-2d41-4370-959e-04d266e9af84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce6983d-66df-49b8-ab28-bb2b8360d00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1a71fd-67de-4882-ad8a-3affd411d501",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e44e1-45e5-4e41-a5ea-729b0b14c48b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19902687-1f46-4d3f-9540-618336f072e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401a8d65-a031-4d99-8755-160feb1efd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c23a26-fe59-4be3-85a5-6a4f54f77f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc864a2-3de4-46d8-b99d-68b0558b22c9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f75e27-85cb-4645-8664-8cf7222bf751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f04b9a04-f2f9-4f0a-8741-c8b246af9d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4041a1-95a8-46f1-8573-5736e88142eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeef67d9-f27f-4023-b2eb-c31b6d6dcdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f180ff-1acc-4074-88c2-76bd3f41f036",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a5731e-fea1-466f-8e9b-bda5fdac38d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f981bc68-979a-4faf-8e3e-17c16d0375ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df96382b-718b-4992-9809-3cc8470f73ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f23365-b12b-4cd8-8f00-fd4293dc88b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f58fbe9-cd4a-4505-9412-cd6b7dea33f0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb1e11a-cfa7-446b-99b0-dd4958bb8906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb903c8-d310-4058-ab3a-8d11a1e35340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2736dad5-f593-40fc-8a91-0ffbf2ad149d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8445c885-7c7d-4b93-983f-1a037ef551e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698d5f9a-a5d3-47a6-a640-71e9f2e5d867",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fd0d55-f022-448e-af7d-3bbbdd43be00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f516c82-3439-44e5-a50f-fc2d645b3c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2198da2b-9ba8-4f21-a2af-25d3905a423c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c927b518-4aef-4cfd-b319-de02c802b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e848e52a-e76c-4f66-bbff-fa94fd8a8e0f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbffc89-434e-40a8-bd26-c23f0eca8414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cea43e0f-cd6b-4cf7-b12e-d2b5ade51411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9530ac-37e9-4184-93ab-b056834ce19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c5a91a-047a-4594-9e4f-67d61f9cdd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a4056c-68fc-4c24-93a7-5af842413078",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df16d5c5-4855-46e3-9333-9339f10ef4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb697e8-a6f0-4889-b3d6-da69391f8cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d5f49-f0cb-411f-aede-a87ae08f2cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02734248-3cbe-4c97-9780-ebe3ddc96de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1332a901-6071-4784-a9c8-4adc49dd14e5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e5341-1322-4f0f-af10-d8324933d9af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080d90c8-e876-4ce3-a97e-d3de8abb347f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bfee39-f912-48fd-ae23-e48e1e34ea24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382f2c14-5876-42cf-8eed-b8470ee7ce4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ed20ff-4530-4a8f-9683-0249af6ceadd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6afb47-ffd4-45c3-a109-2a73cb35d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4965f4ce-1a7c-47a3-b42d-fa5cc4c54e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a464d58-e7d8-47af-b808-f21075d36dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e10ee8-525d-4fb8-a867-545b52e67abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadaa13b-05a2-4c56-acb3-8ee3a4b3cae0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d466a2-4d79-40f1-9108-ce8237439470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92db70f9-3943-4377-a9d8-130eb66b5cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c66b3d2-578c-4e3c-ad03-2fc6f1b9fe9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac2415d-2dce-4217-bd07-eecc5df557e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56744c9a-5925-4ea0-aef4-9caac9f88bb9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86ee139-6ca5-4361-aaa2-9afcb220cc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27b3f2d-1e39-4161-bfb1-f2cf7ec62895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36cf308-72ca-450d-ab55-36c75d4db406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631456b9-fbf8-493e-a5fa-a2df0a9c911c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2492837d-30c5-48c3-84a4-460b0faa657c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c690a54-5906-4057-904e-34fd6a5c9656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3266d584-43cb-4690-970b-a560954d058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44668feb-22c1-43dd-aef0-46965b25eff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8d3d09-d16b-4fc8-aabe-2e47d7c27d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c60e84-5eea-46e4-a226-969656758f47",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61707dbb-d332-4f1e-ad3d-60cb601cb387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b331769a-1a60-4791-8983-3809de543ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b2a7fd-a16b-4836-8f02-218af5d43b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ed8531-68fe-442d-af72-a70e5dbbd6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63926973-0900-442b-9d66-68451944d532",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236c0eb8-ac3a-463a-b0f0-3549c5253a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb891e2-4cf5-4d30-9a2d-0f48b3d7ae58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70680447-4402-47a6-a628-2af9fca0b045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4e00b5-b7d4-4f98-9891-2c63831a21cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2dca9c-a835-4c64-8d5a-0ed216f02671",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb1903e-e717-44ba-89ae-7680abe0e31e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1b7ed7-58e4-45b3-9b65-6f3568604182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9042cea3-6d37-4be9-a5a6-b72247598abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8adda99-3489-4aec-8630-17d99de82f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c844e534-edc4-44b7-ab49-51a45c4521fa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94add1cf-0db3-43af-a21f-608ba1884a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024ffc19-cc8e-473c-964f-1e1ddda102b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e5821e-40ef-433c-9126-aa97655a7d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65b3d4c-dd89-4972-a9e2-b90028b37bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40035220-3014-4418-bf05-79cc7ddd3892",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6b10f4-81b2-4c4a-8ca3-fefe83957814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73893e11-738a-43b9-9c1c-c892d1cb91df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2688a4fd-b676-41cc-8e4f-717d91f3a6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fa92cc-3cdd-4272-8bf6-c463049f4ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa0594c-4b69-426c-ae9c-1e7c6a2ec033",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b866bc70-7558-465c-a4fa-d16b0f97f5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5209997-080c-47d2-b0ed-1be129cfb66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6412795d-b28b-4769-931e-a004e9c81ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8491bdc-94ba-4243-9272-16121b11d5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f673d2-7603-4aa4-96db-dbc2062654f6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dab14c-ecf2-4398-bd9f-55bde92b3fe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b28492-ab7e-4fbb-ad97-159fe6cdd3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90c3c59-c301-471c-a1c2-ccdd7e4575e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdeed70-a93a-4554-9654-4c7449943c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113957e0-3b7b-4009-aee8-cbfcd912a706",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b452d269-b0cc-4890-8e84-57771f9508b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef075ef2-0836-4611-adcb-11c8752bd828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2701cd85-a321-4710-8db4-ac0165e5b3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2dcbf0-e207-4c99-bb3f-9ffc3efe15b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2927c387-5517-4cb5-abd7-6f000c89e7af",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bac5333-ab12-45b6-a814-a8bbdadf3a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81136651-f709-4cbb-b8fb-5fb0ac738d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423e3c17-bea7-410a-800c-171388dc9566",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acdebd7-7d4e-4605-9679-904239fe6aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a128c39d-c8fa-4c00-8c7a-2a1a96fc4c9d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0218224-4913-46b2-aef7-3b2dbe2c900e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ba3ab0-42bf-48c3-95bd-1dd80b03f7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be88d228-bed7-4f21-9714-9b21978b2abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d235de34-d5db-49ff-ac02-6954794257c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38ce8c3-b76e-42fb-a6c4-5eee6003fa06",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d9ac99-e1b5-4915-884e-fe066fd106d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381a2223-3316-400a-88be-0b139150cb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272eed22-b6f5-4c92-854a-794fd17b873b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c9e729-7bc3-4a91-834f-37de7a6d3027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29434813-8273-488d-a22f-633590b36df6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ca3b06-eb83-4c8f-bd38-8a3c1b5b6e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d441ee5-4e76-4acd-8220-d74dc977efed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8a1ead-055f-4519-b8d0-c27914f4fbed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9564091c-1b2a-48d3-b521-61c0e9edd7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9540f10c-fda4-48f0-93ba-23c88bcbcab1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29031e28-bc27-4b31-b035-e2b45554948e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf956f6-df04-4d20-8b92-2800404cea18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2554b2f-90dc-46d4-a5f1-4319423b59b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a970de6-6bc9-4cdc-8beb-8b87dd74f101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0fa08e-591a-4ac7-88b2-b492c0fe2127",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7f9e41-dc6d-451f-8bc2-9fe5e0a21305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0566807f-9066-4587-81cc-f1c0740656d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ac1ca8-7fe7-416d-b56f-0ca4be12b8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544ecc21-dacb-4bbc-8319-b27b3f33500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6515df6-8a4d-4669-8d4d-ae8940090e3f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba8c5f4-cdd0-4a89-b5d4-01679e247d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8407f12-59e3-4c96-89e1-8da621d8b0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c123ce44-3e4c-488a-985c-6ac794ff4c17",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4552afb-0dcb-484f-9619-1819bb57269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59726659-da38-40a1-8846-db06341f865f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c35cef3-ec86-44a3-bfae-42771c647b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97701313-055c-450b-bf0b-e8861d6e734f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8a60a4-1585-405c-8eb1-894126fdc0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e712a033-e050-40f0-94a5-835f71ae8af9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27dbbf5b-9a7f-4ad5-8dd1-7f5ec2db5113",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67333ba9-0826-4430-a9bc-9ea09a9cc0f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "734740d1-cd7e-48cc-b5f9-a8ee575204cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1aea1eed-f933-485a-a026-fb6430088e82"
                    }
                  }
                ]
              },
              {
                "id": "c2b07379-626e-47e9-8dd0-8b68362adcb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75ca08ea-3ad7-444f-9720-c3c3dfc2ce6e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3864d2b9-5bff-47bd-98f9-f6fb34f0aaa5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "90fd4244-9235-4c01-bfe0-71004fc84a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6135f678-179f-4bec-9454-6645761c7da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "352ca350-a61b-470a-9def-0ecca012f1da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d6f3469-5f7a-4bfe-bbf6-277139e56ec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c245c03-4d3c-482c-9376-11085f4bbb77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4481388-140e-445c-a9be-0d6f726aae56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f1f1186-bdfb-41ae-a759-486d4d9b6b20"
                    }
                  }
                ]
              },
              {
                "id": "b23e2433-208f-4db5-bc7f-c02d47045df0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d864cfb4-c482-48c0-b296-5abe4c0184f7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fd0029-fc5d-4f7d-b772-be9414560072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "11dd23d3-5b06-48f5-8812-8c91459584bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1ad873-b56a-4ffd-8ac3-f0eaa702449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240dc24b-ba67-4020-975b-7ca570bd33dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06523e8e-d2b3-41f6-87ac-33685479cec5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2e3857e-fb0a-4aaf-bd4c-4d5df669a066",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b8cf995-6629-495f-b412-f21fe2bfdccc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0d0fe4b2-d13f-4e7a-9a10-c15de67603d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1904cc10-6c01-4a09-b098-fbdf4c027ad6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "464deff3-8d81-4173-8f28-776b2c6b0f17"
                    }
                  }
                ]
              },
              {
                "id": "22fdd8d1-5074-45bd-9df2-e0c31d222955",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97f187ff-b5cd-4870-8736-c3929da09deb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ad68434f-42c9-4970-af27-893d5f3ba694"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b9dc813-7d60-48af-9658-5cfca811b774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8ee5852-43e3-4a24-a9a8-7fa4d5fa1ba4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c781d27-51f7-44ba-b942-6aa2828227a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "094e057b-edbe-4499-898b-a6cc0d1b316c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eaa29e7-ee6b-4c3e-bf09-5f8f107fd200",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da928f3d-a57c-4ab3-b7b4-9285e9486103"
            }
          }
        ]
      },
      {
        "id": "3f3f7ecc-ffe0-4fcd-b3c9-83cbb829ec9b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "958bcef8-8107-4a99-83ad-8866a1960606",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bb8858f-b3d9-4185-8f7c-21f00191ab32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22d882e8-6be0-4ae0-a265-360bf3593529",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266f43d1-3d50-4b34-9adf-c2d2fb125dda",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fcc91ab5-523d-4895-bbb6-b3714c6510c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d3af44-948c-4ffd-8e56-1ce653469709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c2a364b-31ed-4d1a-845d-6979699c3ab9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55701084-c17d-4f70-b2e3-dcf052725516",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e65f57de-3a07-4838-8e88-2866ceae978d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82708bcb-68b7-4f05-8c6c-5f47710b3b9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5365c374-5074-4694-a5e9-64a9cc569132"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6d356aa-67d3-4238-9c8b-01aa763ee79c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4042a3c8-f592-4d6a-9fea-697926c9ce3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea52e6ff-be15-400f-80f7-c0355c4a5e04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65b29d63-5439-49e9-b117-5881fd586e95"
            }
          }
        ]
      },
      {
        "id": "4eb22cbe-215d-4024-8db3-fe724db646c1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c227911f-d907-4fb8-a68e-2cbde73646ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac378695-c54b-4221-9c1e-1c4503c572ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f374c441-81f4-41ea-8e97-12106821151b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe51a90-6d8b-4450-9011-a417108107bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cb6e195-673d-43d2-8d81-81f9c3cc8165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369dfe1b-e00a-44fa-8624-12db6254394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fada9ba5-3563-46f4-aa5a-fda6c772e56d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aed7382d-b86a-413b-942d-6a2c3af7940c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f09d3b26-00fc-4648-ac6b-a58d6982db68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22db38ed-2d5b-406c-a1d8-0026a8aa1769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6693c971-4c9a-4b92-ab1c-6336a10a1b46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7dabf6e-7420-4005-8381-b556b1fa1da6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a1f379f3-7900-4d0f-987d-83da5c405c1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df2e90cf-509f-459d-94b9-77d0193ad0f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "316b197a-868c-4a7c-8d5c-d98d63a059d6"
            }
          }
        ]
      },
      {
        "id": "414ddb6a-95e5-4b4b-9ea6-9f7fb8cc76dc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "348ce4e7-6d1f-469c-a4f3-0aa9f4c41edb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "399b957c-55a1-41ee-b245-0755fb752534",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26bf5bc8-fdd4-4a61-95e5-720398887e82",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5693b401-1e2a-444a-b4b5-1f4e2085deb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62a1ae83-cadd-4e18-aaaa-fda0373e4b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9aac74-80e5-4e30-a5fb-ea5ef29d7cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "330cd90e-f8fb-4594-9050-e6f75970e685"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "908d7dd5-3e60-4573-acdc-f2774e0fe651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cda962eb-c94f-4f45-a003-b1a4c55476c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06000534-abe6-4485-a4d3-0a95877a678c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b46ca53-60db-4735-aaed-2f94bd6de9f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e36999f-d109-4566-979f-0497a351f9d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41dde4aa-1d50-41cb-adfe-245aa01e266c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9b2e50d-e020-47b8-b4d0-fc691427fa87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53d726e2-7e2a-4612-b685-ac10f5dab706"
            }
          }
        ]
      },
      {
        "id": "5aec4dba-cf26-4f64-ba74-61f56f00217e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b44dd50-79c7-42a8-a6bb-0e8606cdab2f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9258d74d-5143-4a41-8533-c639a593e580",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3e2da31d-cb98-48c9-8671-ba0ef5f9d9c6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4154de3a-957c-4a1d-bfc4-4bddfb908161",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08c25fe4-22d0-4e21-9f34-8d0af0979192",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 122.99649122807017,
      "responseMin": 6,
      "responseMax": 13165,
      "responseSd": 818.2075424021898,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706920443470,
      "completed": 1706920487522
    },
    "executions": [
      {
        "id": "eeab9134-9f37-4722-bacf-4d16515e59c3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "24361ec9-1bb1-41e7-9f9e-05db303e83e6",
          "httpRequestId": "645642b7-b67f-4c5c-8052-1511a4840c24"
        },
        "item": {
          "id": "eeab9134-9f37-4722-bacf-4d16515e59c3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9ca5c300-43eb-4735-9a21-2c1ec2114531",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "d0fe6da9-92a9-4ccd-b0e5-fae498131a30",
        "cursor": {
          "ref": "b30b2e67-c594-4eba-8f8d-6bb0f8bc999a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bd28ed12-e7d2-4edb-a9a7-7405e869adb4"
        },
        "item": {
          "id": "d0fe6da9-92a9-4ccd-b0e5-fae498131a30",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ec50676f-bf55-495f-b2af-4004b74c1dec",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cc0969ff-1c57-4e40-b193-179462631b39",
        "cursor": {
          "ref": "ddfb19ea-6b40-4e98-9adf-d65b136e803c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "718abe57-e553-44c7-bdea-a4b55c07cf04"
        },
        "item": {
          "id": "cc0969ff-1c57-4e40-b193-179462631b39",
          "name": "did_json"
        },
        "response": {
          "id": "acc19b77-c8f5-45d4-b512-b9f83d35c4f4",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d122817d-769e-4464-bc8d-9da3a16b6e74",
        "cursor": {
          "ref": "93a11d39-3e7f-4d64-9be8-66b21fd33563",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b919548a-7f6a-43c9-964f-3e6753d1a43d"
        },
        "item": {
          "id": "d122817d-769e-4464-bc8d-9da3a16b6e74",
          "name": "did:invalid"
        },
        "response": {
          "id": "0580fa9a-fe74-4481-88ba-2ca50f21996f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 984,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d122817d-769e-4464-bc8d-9da3a16b6e74",
        "cursor": {
          "ref": "93a11d39-3e7f-4d64-9be8-66b21fd33563",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b919548a-7f6a-43c9-964f-3e6753d1a43d"
        },
        "item": {
          "id": "d122817d-769e-4464-bc8d-9da3a16b6e74",
          "name": "did:invalid"
        },
        "response": {
          "id": "0580fa9a-fe74-4481-88ba-2ca50f21996f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 984,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e27a0a-bf29-45b7-8e53-c41ec4fb673d",
        "cursor": {
          "ref": "3be69136-4db3-46e4-92d5-8053843786a3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2a135755-aebc-4fd1-a440-c3200484289a"
        },
        "item": {
          "id": "e1e27a0a-bf29-45b7-8e53-c41ec4fb673d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b2dd8638-70dc-4b2c-ac90-5bb9ccc325e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0babe404-cf06-48de-8e6d-a18d41837ce5",
        "cursor": {
          "ref": "a365b254-a4d3-403d-bb34-4b7f591c061b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eb9126de-e898-46fc-8b4e-8e1866345c4e"
        },
        "item": {
          "id": "0babe404-cf06-48de-8e6d-a18d41837ce5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b1913c96-57d8-4116-b768-3cbbcbb1bc63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f383628b-5bea-470f-a508-98e58d12e822",
        "cursor": {
          "ref": "f7ec9df8-5477-40f1-83fc-69162717a0fc",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a8821682-691d-4b9f-83f9-15a79ee19cab"
        },
        "item": {
          "id": "f383628b-5bea-470f-a508-98e58d12e822",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6291e033-6294-4b8e-9f20-f62033fc5114",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d1692c-2b69-4898-a8fd-06cce6eb9b80",
        "cursor": {
          "ref": "d2045594-7638-4676-b53d-414b98f6ce85",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "314fd1d1-9446-4d7a-94ca-6438a901ca89"
        },
        "item": {
          "id": "46d1692c-2b69-4898-a8fd-06cce6eb9b80",
          "name": "identifiers"
        },
        "response": {
          "id": "4e4b706c-0ac5-4963-afeb-86b6d93cc3c8",
          "status": "OK",
          "code": 200,
          "responseTime": 715,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56afeda8-e0eb-4af7-8477-b718f6d55d3f",
        "cursor": {
          "ref": "3980f452-e05e-4fd6-8ba5-e64ad9121916",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a736b5be-facd-4e79-bcb6-6f20cc8d8133"
        },
        "item": {
          "id": "56afeda8-e0eb-4af7-8477-b718f6d55d3f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "778ff237-998f-4be0-9a23-6b4da6de9fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1029826b-a2cd-4158-b649-3ae064bffc98",
        "cursor": {
          "ref": "74f72b80-ae51-426f-8500-b9442b519e17",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "127cc988-4b6b-411d-985e-00fb517b03f8"
        },
        "item": {
          "id": "1029826b-a2cd-4158-b649-3ae064bffc98",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ba7f4ca1-d35f-4f31-8ada-3de2764e0a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d1f288-9369-4c26-b27b-56e85c52a33e",
        "cursor": {
          "ref": "c8875e66-7a0c-4fe6-9533-0fc13bb5308a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "472427a4-d4a8-4dec-afa5-9036b15a7382"
        },
        "item": {
          "id": "15d1f288-9369-4c26-b27b-56e85c52a33e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "681ebf10-d194-4934-a313-d7dcdae48306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a8698-fc26-49bb-97a4-8fa865f08525",
        "cursor": {
          "ref": "0d2ee8e7-0d28-454d-b1b2-a2b1ca12af91",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "739d6ab8-1512-4a0e-94b2-f4bc7d424599"
        },
        "item": {
          "id": "0e7a8698-fc26-49bb-97a4-8fa865f08525",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d9fb451f-430a-486d-beb5-252f2819b0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8115c5d9-0d2c-4c85-84db-7eaa9bec1d18",
        "cursor": {
          "ref": "2b0b1a97-a70a-4a0e-8c67-81401a7738f7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9294d578-36ff-4a24-9ee8-464b7b16f4e3"
        },
        "item": {
          "id": "8115c5d9-0d2c-4c85-84db-7eaa9bec1d18",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9add099f-e3d0-47f3-918b-ca00d40acda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2993cc-0d02-4757-ad00-c92da5f6f8fc",
        "cursor": {
          "ref": "3958af63-5738-4c6a-988d-eb8a0064b2a0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b3f45f76-acfa-4f5e-ba42-379cbf344f0b"
        },
        "item": {
          "id": "7c2993cc-0d02-4757-ad00-c92da5f6f8fc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dda2b000-4f4b-40a5-8abf-f6f3845ad4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e595d5-083d-44eb-be87-21d0e25e77fd",
        "cursor": {
          "ref": "65a7b6d8-5538-4733-b59f-624a7cf220cd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9254d71b-1f77-4528-acfa-0a9fc5684366"
        },
        "item": {
          "id": "c9e595d5-083d-44eb-be87-21d0e25e77fd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f79d8b7e-7ca8-43e5-a26f-d24abadd9f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6f08b0-fe4e-4a81-80fd-701756d0c96f",
        "cursor": {
          "ref": "33dc032b-33e3-4163-be5c-a31bc20e7f41",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9138c3c2-e9bf-4092-96b2-7e0b3c67e5c5"
        },
        "item": {
          "id": "3d6f08b0-fe4e-4a81-80fd-701756d0c96f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e98f8fb4-59f6-4f49-80f0-51e04876a691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e63d9a-b46f-433c-addd-adb9eb1f65ae",
        "cursor": {
          "ref": "466d662e-7499-45f6-acfd-18df18753fb1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5c19fa36-073d-4185-95b3-e772a1c9c920"
        },
        "item": {
          "id": "e0e63d9a-b46f-433c-addd-adb9eb1f65ae",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d4afd576-279d-4d03-baaa-14be658aee81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb19d85-9eaa-4733-bc20-29669513581d",
        "cursor": {
          "ref": "5196ed5e-220b-49b6-bac0-dacfb259e46e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7fb802a1-1347-4a8a-b49c-9eeec0afd099"
        },
        "item": {
          "id": "adb19d85-9eaa-4733-bc20-29669513581d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f49e4a23-fd89-483d-a413-a03e96958a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c877fe5-c1bd-4710-b8bc-7acd32456800",
        "cursor": {
          "ref": "1537fcf4-c87f-423d-904d-cb4eb7d744ec",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0d39b271-f2a7-49b0-b7a3-60035ac39ede"
        },
        "item": {
          "id": "8c877fe5-c1bd-4710-b8bc-7acd32456800",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e7bf7647-2ed4-4d48-8196-38052b25536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3758b712-3063-4247-ac8d-5317c542c417",
        "cursor": {
          "ref": "9959ab0d-6de8-4842-8758-d764680f26f0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1b8e7ae0-b776-4653-b8a4-032355ccabca"
        },
        "item": {
          "id": "3758b712-3063-4247-ac8d-5317c542c417",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "38108aa0-efdd-4307-8679-e8f8cf1a61f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df08443-d989-445f-b73c-32ae686a18f4",
        "cursor": {
          "ref": "6763836a-1fe9-4460-916b-053591e189c3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2faa2041-a950-49f2-a48a-db74bc60f939"
        },
        "item": {
          "id": "7df08443-d989-445f-b73c-32ae686a18f4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d3074726-8c88-4716-9b77-e340a51e057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455cfaf6-875f-4125-97df-155c037d3104",
        "cursor": {
          "ref": "e85ca03b-bca2-418a-a49d-86d4c786a532",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "351f824d-995c-4fea-91a3-31d18de22fef"
        },
        "item": {
          "id": "455cfaf6-875f-4125-97df-155c037d3104",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eb5d7f99-0df3-4743-836e-b9e11cc5b48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ef86b3-018d-4d84-b4d3-2138d3998711",
        "cursor": {
          "ref": "f13895b1-37e1-46f6-8743-660c48543310",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a23efd8a-307a-4b08-b466-8fae6825dacf"
        },
        "item": {
          "id": "37ef86b3-018d-4d84-b4d3-2138d3998711",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "12723265-0f73-44ea-9be4-d6f4e5941962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b682581-09df-4fa2-b2c6-ac5ea175e65c",
        "cursor": {
          "ref": "d69f4781-e6ec-45a5-868e-60d78bb08db1",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7a21efc1-60a3-469b-a14c-8ddc563b9214"
        },
        "item": {
          "id": "4b682581-09df-4fa2-b2c6-ac5ea175e65c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6f9c1fce-8e14-45ee-beb2-c715b78d2ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cd687c-cd97-4df9-87f0-f80d12984646",
        "cursor": {
          "ref": "f546410a-45be-4ee5-b591-3b97746add63",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1e374875-cad6-4832-b4b2-8a50e6d6a100"
        },
        "item": {
          "id": "46cd687c-cd97-4df9-87f0-f80d12984646",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e82bbc91-9d5c-4138-b92c-fa3334486ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3168ffd3-b569-4098-9f90-150a72a1f017",
        "cursor": {
          "ref": "ac71ba0e-914e-47ab-8bb2-4d39ef8ff1ce",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "335e9f4f-5ec3-4adb-a206-f9ff913f59ca"
        },
        "item": {
          "id": "3168ffd3-b569-4098-9f90-150a72a1f017",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a3f3a765-b92c-49a1-a46a-870ab8f01946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d81cd71-e963-4f4b-addb-990bfed3ae6f",
        "cursor": {
          "ref": "b68b46bd-bf45-4b2d-b3d1-328a24c99ac6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a5a8f21a-2f1f-493d-a4a3-e34bbf89c5ed"
        },
        "item": {
          "id": "0d81cd71-e963-4f4b-addb-990bfed3ae6f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a6e18e59-ffcc-4501-8922-8d5db2b14354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb6e662-65a6-449d-93b3-97f3e60f69d7",
        "cursor": {
          "ref": "88dcef2d-af33-42cc-ae03-d6b8c58c6b67",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0bcc6258-2c86-45e4-b6d9-280656920867"
        },
        "item": {
          "id": "bfb6e662-65a6-449d-93b3-97f3e60f69d7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e9377bf2-4d81-428c-bf5d-b96614844c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd598cf-94c7-4d85-a5ac-1abcd0d52e9e",
        "cursor": {
          "ref": "8d9b40e8-228c-4f2b-9573-94002988b79f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2d136611-ccbe-458f-ac29-0edc745aa2a8"
        },
        "item": {
          "id": "afd598cf-94c7-4d85-a5ac-1abcd0d52e9e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "805268fe-4afc-4258-a519-60b92bd3de58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f3f411-0328-49e0-b984-023ba5020592",
        "cursor": {
          "ref": "547b21e0-bd3f-4828-8c73-f79a92fd8677",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1e8dcee1-c4ba-4c79-bbc2-dd306b12d9f3"
        },
        "item": {
          "id": "81f3f411-0328-49e0-b984-023ba5020592",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "93f0c6d6-2d8b-4888-9ac5-cd9686536c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540d132f-03e6-48bb-b39c-44b57cd89c5c",
        "cursor": {
          "ref": "efc6b1a9-444c-4113-a92f-5e583ce250ef",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7bf770d3-5465-4702-9281-924cbeb30217"
        },
        "item": {
          "id": "540d132f-03e6-48bb-b39c-44b57cd89c5c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dd10f2d8-990c-477d-98fd-fcd62c952b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8868f5d-3644-44c9-84a1-8888eeb31c1e",
        "cursor": {
          "ref": "416a4de1-3975-4159-af86-9169a5f86d5e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c1f27eb5-1f0a-45ae-9b06-477e7888cceb"
        },
        "item": {
          "id": "b8868f5d-3644-44c9-84a1-8888eeb31c1e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9c8aea96-abf2-4677-8586-8425019ec48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea39c823-200b-4f17-82ec-b306a988e725",
        "cursor": {
          "ref": "27230e5e-84dc-4e38-af2e-b51eb59f63b7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1c86bbd0-6292-442f-ab93-9a687321c9c9"
        },
        "item": {
          "id": "ea39c823-200b-4f17-82ec-b306a988e725",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5bb39592-e5d1-4d31-a2ec-5eefb03e92e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f810ce19-0e41-4aea-95b7-d0b7ef83c5a8",
        "cursor": {
          "ref": "055419b9-f18c-4872-889c-efcdfcca0755",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ac4ea8b8-e2b9-4858-ba85-8084d6600325"
        },
        "item": {
          "id": "f810ce19-0e41-4aea-95b7-d0b7ef83c5a8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "206d47c9-68e9-4865-b231-e7507edf0a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2a6434-cc21-49fe-b627-df7e0b29ef08",
        "cursor": {
          "ref": "2ad01a8a-c925-4339-aa94-56c644932c75",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "25fe735c-28fd-471c-8244-b015489cf8ae"
        },
        "item": {
          "id": "fd2a6434-cc21-49fe-b627-df7e0b29ef08",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6015facd-b6b6-4b88-813e-15a5f62ce62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36b0b1c-44a4-477f-aa85-306f0f00091a",
        "cursor": {
          "ref": "f70123a0-0ff7-447a-8a5c-dd9e020cb151",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a49ba91f-67c1-4457-ab8e-da0a975bca98"
        },
        "item": {
          "id": "e36b0b1c-44a4-477f-aa85-306f0f00091a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ce97cc2c-0af4-4dac-a466-8ef1ee070587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a792bc-328b-4400-b173-4ff12ddbed53",
        "cursor": {
          "ref": "dc14dd8d-66a4-4dcb-a6e0-9888a74ab949",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "db369e38-b339-4479-bb9e-b3d50e631c39"
        },
        "item": {
          "id": "b6a792bc-328b-4400-b173-4ff12ddbed53",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "be292550-8494-40eb-8176-0aaa5a2b83e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437fb505-3aec-40f4-8446-a0006b67aa62",
        "cursor": {
          "ref": "20ff3432-bf2a-4dbf-a20b-084ca766a5c2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "428829ec-a29b-4771-bc10-f4405e060009"
        },
        "item": {
          "id": "437fb505-3aec-40f4-8446-a0006b67aa62",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "85d7869b-35c5-407f-825e-c9574f4cd499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52604d44-d636-4aaa-922e-6477274e92b4",
        "cursor": {
          "ref": "14f7f488-8c7f-44a6-a60e-181a326d8217",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4922f270-2b48-4365-9ca0-30118c5872b2"
        },
        "item": {
          "id": "52604d44-d636-4aaa-922e-6477274e92b4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dfb98a26-4545-4f16-843d-47cd88ad75ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95afe932-b5be-482d-81f7-a9a2ff8fde7c",
        "cursor": {
          "ref": "99a11ad3-8fd6-4968-a5fb-6fcec00af29d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f7947a1c-2cff-4bf0-b2ae-e1f9bf3be2ac"
        },
        "item": {
          "id": "95afe932-b5be-482d-81f7-a9a2ff8fde7c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b25ff65c-690c-4ca8-85a1-c28179013a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d450603a-7454-49d0-acf3-5a37421fac99",
        "cursor": {
          "ref": "c0aef0b2-19c7-4a78-b005-de3b0d4df620",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ddeb8fa-b276-4a20-a147-e2e1a34f64c3"
        },
        "item": {
          "id": "d450603a-7454-49d0-acf3-5a37421fac99",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "837d7829-a56a-49b3-9dbd-82619419a3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baedc8a-6229-413f-9dab-4e048da48e43",
        "cursor": {
          "ref": "097a05df-ef05-42ab-a257-933611e23745",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e0e9c9c6-502f-4bbc-beef-ce232e9bb1e8"
        },
        "item": {
          "id": "3baedc8a-6229-413f-9dab-4e048da48e43",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "58da8b00-6ba0-4445-9602-100fec0af4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c5c338-bb61-4dd5-a41b-dc1b00f0b283",
        "cursor": {
          "ref": "9d2c8ea6-f388-4241-9d1a-f35046ff0687",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "26e39a5b-295f-42d3-9b4c-4eb1536bf19f"
        },
        "item": {
          "id": "d5c5c338-bb61-4dd5-a41b-dc1b00f0b283",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "88bf5620-e744-4adc-b3f1-9e8b300e2a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04542767-ee63-4016-a162-223eaffd340e",
        "cursor": {
          "ref": "d7e78c57-f052-424c-8baa-51323259ce9c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "844b002d-7b16-49b1-9843-fb0625776210"
        },
        "item": {
          "id": "04542767-ee63-4016-a162-223eaffd340e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "60121487-4da8-4e67-a820-768bc5206625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8872f931-d53b-4636-baf8-4e6690a11532",
        "cursor": {
          "ref": "b1d421a8-8471-4201-9f5a-46bb8f9d7874",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "294ea7f8-a7c5-4beb-92cb-3e140ef370d9"
        },
        "item": {
          "id": "8872f931-d53b-4636-baf8-4e6690a11532",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "96fe4684-9985-421d-90e2-a7e2117ddaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7b6f93-d776-4da7-bc36-ef93adb0a83e",
        "cursor": {
          "ref": "a26cba8b-7c34-40cc-9f95-c5d5f8fee3fa",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c68349e0-e7ee-4cbd-84a9-65396b99599c"
        },
        "item": {
          "id": "fb7b6f93-d776-4da7-bc36-ef93adb0a83e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c69fab04-9c2f-4691-8936-34a1b26f4a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6305b7-43f7-4d98-8a1e-6de582e699f0",
        "cursor": {
          "ref": "20208eee-c198-4594-b042-3772df34d5cf",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ec08c283-73d5-4389-87ba-311d8203aaa0"
        },
        "item": {
          "id": "7f6305b7-43f7-4d98-8a1e-6de582e699f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ed59731b-7e99-48f1-afa9-547aa9ec870f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bebc7f2-4490-4b87-bdad-de56203e52a8",
        "cursor": {
          "ref": "cf407b38-4dc0-467d-9654-73d798865cf1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3a817033-4487-4808-9922-a33def724c51"
        },
        "item": {
          "id": "4bebc7f2-4490-4b87-bdad-de56203e52a8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e70e00a8-7bfa-469b-a94e-9371968325e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7d666b-bd5f-447b-bc4d-3da519b67e2a",
        "cursor": {
          "ref": "640628f0-e52e-4b62-a9a0-95f195e7430e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2873b2dc-d5db-47e0-8363-3b30c01eaa2d"
        },
        "item": {
          "id": "7f7d666b-bd5f-447b-bc4d-3da519b67e2a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4770dfe2-fe06-48fb-b38c-706f6f8044c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2e3c49-6d59-4a9b-be7b-eae0506429a1",
        "cursor": {
          "ref": "9053a3aa-1415-4fd8-b418-35c6a8cb9a86",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0a1303ce-1cc0-4b6c-bdf6-bffd6213ef32"
        },
        "item": {
          "id": "dc2e3c49-6d59-4a9b-be7b-eae0506429a1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1c8c349f-b626-4589-9d34-8846557061eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da23e23-6ea1-47b3-bb4b-9bfd6acb213e",
        "cursor": {
          "ref": "c3cc46da-3b9e-4244-b87a-2c01cb18b234",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dae82fe9-6782-41a7-807b-7cce26e39261"
        },
        "item": {
          "id": "5da23e23-6ea1-47b3-bb4b-9bfd6acb213e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "51f476d1-7a6e-4e61-bcbb-a61a8e4178eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660e6e3e-6991-4d29-9867-2bb52f9d3637",
        "cursor": {
          "ref": "aaaa4e00-41fd-497a-b08a-0f1974a38171",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e1ccd59f-fa75-4543-87ab-3f3fc15a0248"
        },
        "item": {
          "id": "660e6e3e-6991-4d29-9867-2bb52f9d3637",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "455b39ad-9fc7-4830-ba32-7cf5247d0d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef28722-b161-4144-85b8-0aaeb304e777",
        "cursor": {
          "ref": "28495016-2be5-4d1d-b239-9afa4b9919dc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "45d631c5-7b3c-4c0c-8e53-ca58783499d9"
        },
        "item": {
          "id": "bef28722-b161-4144-85b8-0aaeb304e777",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a1d18505-d5e0-4303-abd9-36b0f473e9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f262c1f9-217c-4d74-83d3-8d8da90b9b9e",
        "cursor": {
          "ref": "8c142a6c-7398-4b50-8864-87c6e9a64b41",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1907faa3-1492-4f30-8ab0-484da71fc36f"
        },
        "item": {
          "id": "f262c1f9-217c-4d74-83d3-8d8da90b9b9e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7124e953-7eff-4a15-8d9f-6c6a284e5481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2d0e26-cb55-4949-80fe-4d10c8194f78",
        "cursor": {
          "ref": "f545bcbf-55ac-40d6-a480-fd975fb6eb5f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "56c0036b-3bec-4ae5-8147-598a1e304d45"
        },
        "item": {
          "id": "8a2d0e26-cb55-4949-80fe-4d10c8194f78",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "574929d1-9b4a-4a0f-b810-d9cf8a14f9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21526e5a-6108-4738-805e-58314e30ac39",
        "cursor": {
          "ref": "72f4e363-a950-4f65-86f4-cfcf3e7571ec",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8e19d7df-a6f3-4977-af11-36271428f6d0"
        },
        "item": {
          "id": "21526e5a-6108-4738-805e-58314e30ac39",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "68849e87-f2b1-4b44-b0d6-267047f3bc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70fccbb-778e-43d0-8890-6540586c1f49",
        "cursor": {
          "ref": "1b962a45-2bf2-4f2c-8754-9ff209ed182d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "30767d7f-1a52-480e-8038-18570d05a575"
        },
        "item": {
          "id": "e70fccbb-778e-43d0-8890-6540586c1f49",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9b4eed4d-c124-465a-9743-5f75f8ae6984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9719e68-aced-4496-92c1-990c88e2b258",
        "cursor": {
          "ref": "6239abcd-4568-48df-8848-9b35116e2d73",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e7c4c8aa-ce06-445f-abd7-629f6edb4c07"
        },
        "item": {
          "id": "a9719e68-aced-4496-92c1-990c88e2b258",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2b7434e2-7b21-47eb-9915-59608657623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce2bc40-5bba-42de-9dcd-af46b2686329",
        "cursor": {
          "ref": "bd44f1cb-1752-40ed-8959-3e07308d3a6f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2bb1a17d-fa28-4818-aee7-7029d874248d"
        },
        "item": {
          "id": "dce2bc40-5bba-42de-9dcd-af46b2686329",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0f403bd5-45b5-4c0f-afc6-94e9a2ba07f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf07acd1-28f5-42b5-992b-fb7a38b9fd49",
        "cursor": {
          "ref": "634cc575-d848-4287-8a6e-0916def5839f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1d2a4fc8-0605-4033-a99e-709433f90c31"
        },
        "item": {
          "id": "bf07acd1-28f5-42b5-992b-fb7a38b9fd49",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "53aad7bc-2f85-416a-a763-d7de8a9bc0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9219cc27-adc0-4bc8-b478-d55f32d45d3e",
        "cursor": {
          "ref": "4486761e-417f-4955-a862-41c16e1ba266",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8f1e52ed-cec1-4b7c-9345-f318ce51283d"
        },
        "item": {
          "id": "9219cc27-adc0-4bc8-b478-d55f32d45d3e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6b1b9add-c42c-45e0-b611-120f103b97d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6e22bd-34ad-4c6a-983b-7ed6b16e5a16",
        "cursor": {
          "ref": "ed6ca3f5-93bc-46b3-958a-ef15b92f6d2d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cb19ada0-8edf-429e-80d6-a9f112c1174a"
        },
        "item": {
          "id": "5a6e22bd-34ad-4c6a-983b-7ed6b16e5a16",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f7698ffc-21d6-4362-93ac-74ef9a85cf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccf21d5-5b42-4129-a64b-636c0dfcab1e",
        "cursor": {
          "ref": "74a7c923-4f5b-4f0e-b0ba-d42290db9d33",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "41cc1f75-0f71-4346-b81d-040e7470a115"
        },
        "item": {
          "id": "4ccf21d5-5b42-4129-a64b-636c0dfcab1e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5585aa96-7e1e-4061-aaf4-ee8707e9cbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924aaae7-f5df-43b8-b950-bbb2e897a938",
        "cursor": {
          "ref": "a1894e15-3618-4809-a2fc-e4760fcfc8d0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "239ed456-7b23-44d3-aa6c-a86c3f8a50a9"
        },
        "item": {
          "id": "924aaae7-f5df-43b8-b950-bbb2e897a938",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1749cb0f-b5de-45fb-9bc8-d792fb55e864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f46ffa1-c088-4cfa-b8ef-872ef12e2148",
        "cursor": {
          "ref": "13b66343-2256-4de8-8f0d-e6c848984d94",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bc80a979-90d2-4292-a946-7ea3f969b7bf"
        },
        "item": {
          "id": "0f46ffa1-c088-4cfa-b8ef-872ef12e2148",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c39ce715-343e-400b-a4d9-11bf4b0a0ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f70a90-c85c-46d0-9925-cc30840fef9e",
        "cursor": {
          "ref": "b764cb0d-9831-4066-9020-918d1721f2cd",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "021a5867-989d-40eb-9360-adf56ea490ec"
        },
        "item": {
          "id": "36f70a90-c85c-46d0-9925-cc30840fef9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "21176992-d52c-46ab-bd30-bba2ee42edda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c571fbae-3fc8-4bd8-8661-4be40f6fea29",
        "cursor": {
          "ref": "53df1510-97dc-4975-8985-4542394d207c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "da95c1ca-e439-450a-995b-794e6c03c7ac"
        },
        "item": {
          "id": "c571fbae-3fc8-4bd8-8661-4be40f6fea29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d668e930-372e-4dab-b765-d72b522ee33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4e9902-fe0b-4c1a-82db-a4bc30ac9ccd",
        "cursor": {
          "ref": "39cdf446-2dcd-414a-b110-9a251a21160d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9760e6dd-98bb-422a-8e16-decab02352cb"
        },
        "item": {
          "id": "9e4e9902-fe0b-4c1a-82db-a4bc30ac9ccd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "63c2e21a-6c7c-45a4-88b7-86f6a979010e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f3d6fd-b37f-4b96-91ab-64fc9338c48a",
        "cursor": {
          "ref": "69773ebb-340e-4851-a41b-86966e1a969c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "133a4573-c091-4a69-ba74-bbcf6b46dc3a"
        },
        "item": {
          "id": "28f3d6fd-b37f-4b96-91ab-64fc9338c48a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "75780054-cc57-42fd-8067-cd3f6f9de87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aab5444-f499-4297-bf4f-01b2d78d3ca7",
        "cursor": {
          "ref": "3410078a-338d-448a-be7f-7a48f846a98e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26f99268-6343-4952-86dc-9f13f8df0e6a"
        },
        "item": {
          "id": "2aab5444-f499-4297-bf4f-01b2d78d3ca7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "982ebd08-4814-436b-9f14-c69739868632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307bb71f-0423-4974-a5d1-be5f3bbd942c",
        "cursor": {
          "ref": "0f4a2b7b-f936-43ca-be09-cd1d8c83b26e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "653b6d8b-4fc9-4147-9534-e5500a79f98d"
        },
        "item": {
          "id": "307bb71f-0423-4974-a5d1-be5f3bbd942c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b8c751ae-e87b-4675-b6f9-b232c1cf4733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc0b648-693c-44cb-8e4d-25333fca6736",
        "cursor": {
          "ref": "07a42ee4-67bb-415b-a74e-f65bfb11404c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7801f541-7cf5-446e-82d2-eaf72d90056b"
        },
        "item": {
          "id": "1dc0b648-693c-44cb-8e4d-25333fca6736",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3aa51286-8263-4989-b487-578c1444f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10295c3-488d-4ba1-84b6-fdec2f3c86fe",
        "cursor": {
          "ref": "12266e05-4d7a-49e9-a1da-1e9512c0e3b8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "649531b4-076b-4b5e-9dee-63282f6c3572"
        },
        "item": {
          "id": "b10295c3-488d-4ba1-84b6-fdec2f3c86fe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7028bc8a-2bcc-41c5-a7fa-ee7fa9c96c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66590b6-048f-4333-8dac-527e4f4b6f11",
        "cursor": {
          "ref": "370c1f99-9aef-4a08-9171-a93fc989dd8c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8b245443-1a0a-4fe5-ab29-cb4d93b08d33"
        },
        "item": {
          "id": "f66590b6-048f-4333-8dac-527e4f4b6f11",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1bcae484-cc24-484e-b2f9-59e2df7cff30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d94b73-ad70-4be4-9b09-a32679e80285",
        "cursor": {
          "ref": "44ffc5d6-83e2-4595-980d-56a7caeed919",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "990fd089-e994-4e95-bc37-fdac48769eb3"
        },
        "item": {
          "id": "62d94b73-ad70-4be4-9b09-a32679e80285",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "affe7ae0-4aa1-4188-824d-4b5c6eb79d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5140ea38-f4fb-44e4-a474-578e8faf268e",
        "cursor": {
          "ref": "bf39055b-9e37-45be-91f2-7559e1040dae",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ea75a27a-d6a0-416c-99c0-0b7c56ee9623"
        },
        "item": {
          "id": "5140ea38-f4fb-44e4-a474-578e8faf268e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "124236ff-2d39-4d9b-8cf6-92efab67037a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e02dedf-fb50-4241-bd66-a81537048124",
        "cursor": {
          "ref": "4e752b21-1aaa-4b73-9575-5bbfabf08946",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a085c32a-f76a-4fcf-85e1-c71f3ef8eceb"
        },
        "item": {
          "id": "1e02dedf-fb50-4241-bd66-a81537048124",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4bf9031d-cbf5-46ab-a227-44896af2f097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c47d49-8cd5-4574-9be6-056dc3e1e724",
        "cursor": {
          "ref": "0f2d1d4a-43db-4fa7-847c-e713845f2b31",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8c94238f-7c5e-4211-8756-195fcb87dfb9"
        },
        "item": {
          "id": "10c47d49-8cd5-4574-9be6-056dc3e1e724",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2950d394-fb05-495f-be07-f5482f7cd284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82273b6-3a75-454a-9c51-84fdc30ce009",
        "cursor": {
          "ref": "8917d753-5217-47a4-9bb5-d8a6bc1a6a01",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "078c1183-574c-4914-b3ed-a1b5658202dc"
        },
        "item": {
          "id": "d82273b6-3a75-454a-9c51-84fdc30ce009",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a673f44b-54b3-4d79-9dc9-6a1cb33d3a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2ed514-16d8-49ac-96dc-1d133dd4fb37",
        "cursor": {
          "ref": "4b4aa55f-92fd-4794-b9d1-86344d409579",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f1998fdd-5183-42d7-b6d4-25f1991d4e5f"
        },
        "item": {
          "id": "4f2ed514-16d8-49ac-96dc-1d133dd4fb37",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c9e1e70b-3b3b-445f-b17a-00b8c203a385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2b7ed6-df7c-4174-b7b8-2b72264a82d5",
        "cursor": {
          "ref": "0a61ebfd-9595-4f65-aa0b-4f2bbcbde069",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c66bf796-81d3-4395-870e-2f36302a2f49"
        },
        "item": {
          "id": "ab2b7ed6-df7c-4174-b7b8-2b72264a82d5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "71a06621-61f6-4801-bd3a-6d3b6961e921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd49728c-7ed5-4acc-81c0-e62b6f6a17b3",
        "cursor": {
          "ref": "fb325e95-94c5-4095-9aa5-9aeae8f5152a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "36b179f9-bdeb-4060-93aa-08f8393167f5"
        },
        "item": {
          "id": "fd49728c-7ed5-4acc-81c0-e62b6f6a17b3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c15efbbe-6c4f-4931-8de2-621cbddcadb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5287c315-6751-4d79-858a-0da198064a51",
        "cursor": {
          "ref": "23f9f263-5de2-4290-866d-583e8a7dda14",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "94fa2e64-1cfd-41d1-8144-16a75e6637f6"
        },
        "item": {
          "id": "5287c315-6751-4d79-858a-0da198064a51",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c1a443b5-a30d-4efc-8640-63f302609cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea6ec1b-d259-4687-b523-47fba769a7f2",
        "cursor": {
          "ref": "e0c09fce-083b-4b21-8bcb-643f492901d1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "024b9c2f-83f3-4796-ac5e-666abdf1d41e"
        },
        "item": {
          "id": "3ea6ec1b-d259-4687-b523-47fba769a7f2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bf6c566e-7135-4ac6-97c9-d774d1f82318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdccea80-bbbd-4455-b7eb-d7958f4c821d",
        "cursor": {
          "ref": "582bc7e5-67a0-4f8f-aebb-6bdd5f6588f6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bcfa8a49-88f1-49d8-a4fc-c3d7d9731358"
        },
        "item": {
          "id": "fdccea80-bbbd-4455-b7eb-d7958f4c821d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db1bdeac-2d0b-4b96-b980-d362e3e3e48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c4bd4e-b4b4-4bb9-9001-367adeef05b0",
        "cursor": {
          "ref": "fa29f398-c9d5-4a27-a306-07ee18540f10",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a30a5505-721e-4c84-988c-beb1a647bb73"
        },
        "item": {
          "id": "67c4bd4e-b4b4-4bb9-9001-367adeef05b0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e76576b5-6078-4c55-a553-f7cfc19b6817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb24726-e0c1-4328-9f84-b56780b2ec8e",
        "cursor": {
          "ref": "772d213b-6040-4213-9e55-ffeaee31b45c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d5d866de-d47a-4df3-81c7-27449ed8e0cc"
        },
        "item": {
          "id": "beb24726-e0c1-4328-9f84-b56780b2ec8e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "75e7fd73-3945-4a3a-907d-9f95dacc5d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8f984b-924d-4e99-ae59-c2131a0b09e3",
        "cursor": {
          "ref": "e9af9885-ac70-4335-bc30-48dcc799845f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0f5ed22e-68d1-4828-8919-10ed97858af4"
        },
        "item": {
          "id": "4e8f984b-924d-4e99-ae59-c2131a0b09e3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3dafe4ce-ca8f-4da3-9776-c5a48c58ba43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076087bc-2926-44ec-9c9f-c612e458c4d6",
        "cursor": {
          "ref": "b2c445bc-bc7e-4906-a43c-0c5a953217c2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "314af060-d7d5-498d-9569-6a135b7abbc3"
        },
        "item": {
          "id": "076087bc-2926-44ec-9c9f-c612e458c4d6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0a886f53-7870-4ece-8448-d812144d3cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ab6399-7820-46a8-99dd-ad83e0933365",
        "cursor": {
          "ref": "dd87f383-5923-4312-81ff-c368626ebd60",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7645b98c-1bc2-461a-9012-b10b7a8dfc56"
        },
        "item": {
          "id": "58ab6399-7820-46a8-99dd-ad83e0933365",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "86e5fe52-7ac0-4431-80d1-9ee972516190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253d16e4-5c67-435b-9e86-11e319721461",
        "cursor": {
          "ref": "663fa528-c61f-42d2-89a0-d1952563f6c1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "27096135-25be-4459-8bb1-91f0f8d7c699"
        },
        "item": {
          "id": "253d16e4-5c67-435b-9e86-11e319721461",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "afde0903-c296-4d5c-adcb-1402d143c56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd24cfd-929a-488f-85f8-5956345fd9b7",
        "cursor": {
          "ref": "edec70c5-5ad3-4209-9113-288b58b02f7a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e698d3f-3b9a-487a-a49b-cbda6ab44164"
        },
        "item": {
          "id": "8bd24cfd-929a-488f-85f8-5956345fd9b7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ec64b6e5-abbc-433f-b40a-63e51a4becd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaad6a8d-0daa-4b37-9f96-e4c17deec874",
        "cursor": {
          "ref": "2e539c4e-2c22-4c0c-b7ef-bd8cc51d12d1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4e76099d-8690-45a5-8140-ca95ffe523d5"
        },
        "item": {
          "id": "eaad6a8d-0daa-4b37-9f96-e4c17deec874",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dda74671-9dec-4e09-898a-fb9db6009c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d9075d-fec4-4dd0-b598-827e49741acf",
        "cursor": {
          "ref": "2fc1ca76-eeb4-41ce-97b8-0983dfe1bb74",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ecd67617-24bf-4cce-957a-458ece817d69"
        },
        "item": {
          "id": "c0d9075d-fec4-4dd0-b598-827e49741acf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f24928a1-c2a0-46cf-a787-b42bcae9e035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aea78b6-47ac-4d88-ac87-f39de0f75994",
        "cursor": {
          "ref": "5dbc2aa6-17a8-4469-8c38-d5b3cee04a82",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e69f647e-80fc-406f-bb89-3bec54a25a3c"
        },
        "item": {
          "id": "0aea78b6-47ac-4d88-ac87-f39de0f75994",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aa4b14d4-175b-49b4-af70-aaa8af73d3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de93701-7151-4566-b757-d70df7219c0c",
        "cursor": {
          "ref": "fd7c6777-1038-4b29-8f5f-11fedbc73be9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "564ebe72-ea2d-43a9-b3db-7461da1842e9"
        },
        "item": {
          "id": "0de93701-7151-4566-b757-d70df7219c0c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "da12dbd4-14a5-468e-bc24-39ae9e13c3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ff2a29-befe-48e0-8901-612216bb45c4",
        "cursor": {
          "ref": "bea472f7-644e-438c-b265-cddf5f619db1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "28e65541-3fa2-441a-a181-9d974fac758e"
        },
        "item": {
          "id": "a2ff2a29-befe-48e0-8901-612216bb45c4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9cf272bc-297d-45d0-9bcc-3a8c34a802a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af7cb3f-7b00-4b2d-97bc-c3da29f6c7e8",
        "cursor": {
          "ref": "e1dd19f5-6a10-4998-a8cd-6db5081fa944",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4499b381-b35a-4ff5-9bf4-784aac55236b"
        },
        "item": {
          "id": "2af7cb3f-7b00-4b2d-97bc-c3da29f6c7e8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "29a0aa6f-3100-4c62-a8fb-8acf5ddf2326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa337b5-2904-41d6-891c-01fb84c524a3",
        "cursor": {
          "ref": "c919d751-80cf-450f-92cd-e673c24efed7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c073fada-54c1-4b79-9bbe-13c1c6951eb7"
        },
        "item": {
          "id": "2fa337b5-2904-41d6-891c-01fb84c524a3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cc006b16-8be9-4dcf-8b45-201b2f282235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7501e5d7-553a-4eaa-9961-79f0d20684d7",
        "cursor": {
          "ref": "235d6418-60fe-4425-95f9-873cde3dd687",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "825001d9-c6a1-4c5e-8ab9-401aa9df7ee8"
        },
        "item": {
          "id": "7501e5d7-553a-4eaa-9961-79f0d20684d7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ee567bad-b58b-4582-897f-2676052e6d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f894e334-50c6-46d5-a791-a5dca11398aa",
        "cursor": {
          "ref": "2e6955ac-3200-4829-bde1-e3e11e993c9e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "28969a95-ec0a-4fc7-af03-7a4f66d8d839"
        },
        "item": {
          "id": "f894e334-50c6-46d5-a791-a5dca11398aa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "078daae7-8f8a-4778-b5f3-90f855200417",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6212d4-9b6e-4dbf-a3d1-2930cb5a260f",
        "cursor": {
          "ref": "21f32fb4-c509-45bd-a4a4-90eb63e85889",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e246309f-c0ea-4f6f-8569-f97437be915c"
        },
        "item": {
          "id": "6e6212d4-9b6e-4dbf-a3d1-2930cb5a260f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b74f46c3-6290-4718-bf11-4392c0eb8701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c5c333df-8c55-41c4-8dd7-be9067732c71",
        "cursor": {
          "ref": "15d4dcac-4ea6-4ef4-9e00-00075f2f61d4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c44cfc26-0459-40dd-b5ac-1a000d63bb1d"
        },
        "item": {
          "id": "c5c333df-8c55-41c4-8dd7-be9067732c71",
          "name": "credentials_issue"
        },
        "response": {
          "id": "da57b4c0-e7e4-4091-9135-ef8083a1b4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e720894c-34e5-4b09-af7f-f9d0f8cc8a8f",
        "cursor": {
          "ref": "d3c51839-67d7-43d0-bff0-cf81b016d414",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d1d57bd7-f1e1-4c17-9e12-2c8ac62a26d4"
        },
        "item": {
          "id": "e720894c-34e5-4b09-af7f-f9d0f8cc8a8f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0f8ddc93-5366-442d-929a-0174dbd04c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "72e4943c-bdac-4b67-8efe-399d6016a9f0",
        "cursor": {
          "ref": "5ed69584-8a0c-4b86-9747-0a37bac44f24",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a1ae6371-ceb8-4729-934b-5486bd33b2d9"
        },
        "item": {
          "id": "72e4943c-bdac-4b67-8efe-399d6016a9f0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2a778981-ea37-4c0f-85aa-14e864d34653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "17ff7408-64ed-45e1-ab99-1d401251fa62",
        "cursor": {
          "ref": "b4a87d94-d1ca-466b-9baf-984eefb12198",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8f7d76fd-3f13-4853-a4db-65356cd85706"
        },
        "item": {
          "id": "17ff7408-64ed-45e1-ab99-1d401251fa62",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ff7e04b9-2bd1-46c4-b8e3-0e349f99a143",
          "status": "Created",
          "code": 201,
          "responseTime": 13165,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad151fa-ea26-4195-b087-83544696da31",
        "cursor": {
          "ref": "be16dcbb-b64c-4bd7-838f-2aa531063a29",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "079ec20d-fa78-4c80-b1e5-1a3c4327a9b8"
        },
        "item": {
          "id": "0ad151fa-ea26-4195-b087-83544696da31",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "19520c29-ab05-42b9-9ce5-00475284f1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6363e2ba-acaa-45bc-9a3f-29a52901bec9",
        "cursor": {
          "ref": "491d7ba6-bb8e-4231-a01c-df411a32a1ec",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1f3fd7de-ce96-4fbe-a53f-88bccacb4791"
        },
        "item": {
          "id": "6363e2ba-acaa-45bc-9a3f-29a52901bec9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "08e87108-9f1d-4fe3-a411-00aae3fc4894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9f16738b-293c-464b-9b1d-696bacb2ea20",
        "cursor": {
          "ref": "437ffde6-cb98-4170-9573-0c46e26b51dc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9609eb7f-a33a-40b8-8e1b-40b8a617428d"
        },
        "item": {
          "id": "9f16738b-293c-464b-9b1d-696bacb2ea20",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90dae6df-55e1-4ff9-a4f7-25394e5b4c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152ac66a-3566-4522-ab43-1a65576c1f39",
        "cursor": {
          "ref": "f518b20b-a9e4-4f29-a336-58a4f66a5bbb",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7a8dfa06-06b8-4511-8e8a-9cdb0a7d7772"
        },
        "item": {
          "id": "152ac66a-3566-4522-ab43-1a65576c1f39",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "98165a72-cb84-4486-9694-9cccf35e81df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525db23-1f42-4575-9fac-7c4459740d10",
        "cursor": {
          "ref": "1e76e964-79b0-437c-8392-d0e20b5fd0f0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "03ef6a67-fd1d-454b-84f7-e2db5113e1ce"
        },
        "item": {
          "id": "b525db23-1f42-4575-9fac-7c4459740d10",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e374bf7e-560d-4fb8-a924-195f00ac74ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf447780-d0b6-47a8-ab4f-9fcadd842709",
        "cursor": {
          "ref": "c5ce43cd-963f-43d2-beb3-a1eb44418206",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "746746a3-1e6d-472e-9e4a-5b5d23a7c2d0"
        },
        "item": {
          "id": "cf447780-d0b6-47a8-ab4f-9fcadd842709",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb595c51-cfbd-4017-9f31-c61a92c73803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7fabc5-06a7-44f2-93ed-e3c3a27dba47",
        "cursor": {
          "ref": "85f66e0b-cb79-4c09-96b7-0acf0b740649",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ba3b203e-683b-4757-908b-d69d40c617f1"
        },
        "item": {
          "id": "7d7fabc5-06a7-44f2-93ed-e3c3a27dba47",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9895a3e2-ed2c-4826-b2cd-49c11ae4c182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390c7c3c-bda3-42d0-bf6b-642e4070b458",
        "cursor": {
          "ref": "f1dd8e51-c6b6-4f7c-8547-b0a3d0019bd5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6dd4e3ea-266b-44b3-b94b-fa4b1221b62f"
        },
        "item": {
          "id": "390c7c3c-bda3-42d0-bf6b-642e4070b458",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9569c24a-cf04-4085-802e-01035d6361aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd7dee5-a659-4e10-b42a-838c3cd08a55",
        "cursor": {
          "ref": "2fee8598-4ac0-4d8a-85f2-47074c4591c6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bbcf3603-b9e1-4c96-9540-040b596b0675"
        },
        "item": {
          "id": "6fd7dee5-a659-4e10-b42a-838c3cd08a55",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4ad31c63-07c3-4a28-8997-225304e1f2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc86ee27-0df0-4442-bd50-8699875672f9",
        "cursor": {
          "ref": "0fa59af5-0801-4ec5-b58a-da6d277be776",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8ac11634-86d0-477b-8010-7d2ea14d4474"
        },
        "item": {
          "id": "fc86ee27-0df0-4442-bd50-8699875672f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "16968cb3-92b6-4e13-a7d8-ad6bb78236f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd692b6-f9f0-4c10-b1fc-6893e0729186",
        "cursor": {
          "ref": "6b14ab67-d5ca-485a-bb2c-346f477bd496",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ddc384fb-7535-4776-b215-c7eb3af39088"
        },
        "item": {
          "id": "6dd692b6-f9f0-4c10-b1fc-6893e0729186",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4d6e4a60-f42e-42a0-b2eb-d2fbaff0a12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243df5af-2ebc-48fa-8682-46de91854348",
        "cursor": {
          "ref": "c8896859-aaa8-46fd-9d69-acf0a9b62aab",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2b1e1cee-3d6a-4c7b-8bc8-363d03c87fe6"
        },
        "item": {
          "id": "243df5af-2ebc-48fa-8682-46de91854348",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd685a55-0876-4f84-b3a9-eacf1bdbaa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2dba5f-18cb-42cd-8cc7-62e02514c579",
        "cursor": {
          "ref": "3ad61043-1939-4447-b502-daa3530c3182",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d88bb91d-7112-4621-8385-5ca26af97d8a"
        },
        "item": {
          "id": "ed2dba5f-18cb-42cd-8cc7-62e02514c579",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2158b803-e015-436d-8c00-5a0ad53ebf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae890385-6c0d-4c23-87af-4c17bc750c11",
        "cursor": {
          "ref": "5890c331-b96e-4cf5-8c27-bdbd3dbdfd18",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "588b0c62-a788-4243-8198-935b49dc924b"
        },
        "item": {
          "id": "ae890385-6c0d-4c23-87af-4c17bc750c11",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e53e0c63-55ec-4bc5-93c0-87f27a3bb4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74bc081-5362-4714-93eb-bcd652207f31",
        "cursor": {
          "ref": "f0aa3816-8d86-41ec-9b76-98b8bc903136",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fbb5bf0d-9c02-429d-b73b-0c23a454fba7"
        },
        "item": {
          "id": "b74bc081-5362-4714-93eb-bcd652207f31",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e062d977-1f64-4e42-a5ae-698fab6627a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878e4a75-d0b3-45f2-a94c-0eeaa191e226",
        "cursor": {
          "ref": "71e211f4-7407-40be-b27c-26e35f275725",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1d77e5e1-d1ad-43c6-a72b-7b8721d41512"
        },
        "item": {
          "id": "878e4a75-d0b3-45f2-a94c-0eeaa191e226",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8f3097ef-bed1-4a70-bf5c-43e723c4a4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b1667b-70a0-4530-b513-6914a57bb3bd",
        "cursor": {
          "ref": "6927ed18-8dd6-4a0c-b5b1-e4a0dffddf93",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9d16075-0457-49e4-b539-152feedee29f"
        },
        "item": {
          "id": "90b1667b-70a0-4530-b513-6914a57bb3bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c1f9877e-aeed-42ca-82c0-f516161d2fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae95b46-ff6e-48e4-b314-d4fe2ad66202",
        "cursor": {
          "ref": "cda3ec24-eb04-4284-9b2e-b9be4b5e91cb",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1ba4d75f-5bde-4be9-9839-2d8c4e2029bd"
        },
        "item": {
          "id": "9ae95b46-ff6e-48e4-b314-d4fe2ad66202",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae3d4d99-3de4-49e4-a533-51759381e1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28050f26-d645-4906-b9d8-b00242eaa7c4",
        "cursor": {
          "ref": "ff627acc-199c-4c01-8470-6600d65a4cc3",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "af661df3-4ae3-423f-bbca-277cdae5764a"
        },
        "item": {
          "id": "28050f26-d645-4906-b9d8-b00242eaa7c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3deda083-062e-4e9f-a381-e6fd339e3602",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a6a89761-8b98-402f-87af-b1471c15d0cf",
        "cursor": {
          "ref": "05154199-d1f2-4329-b079-b58042c78fbf",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cea0c02f-236a-412e-8cb4-a89ea8bdfe82"
        },
        "item": {
          "id": "a6a89761-8b98-402f-87af-b1471c15d0cf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f771d7c7-01bf-4151-a273-8f755ca812b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0198be46-4e91-4dd2-8fd4-d5bfb53fe234",
        "cursor": {
          "ref": "4c115219-ef51-47ab-9bb1-6f42e96c127b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "96c7320e-edcd-4b67-8e40-dc2cbe55c4ad"
        },
        "item": {
          "id": "0198be46-4e91-4dd2-8fd4-d5bfb53fe234",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fe06eb7-e335-4bca-ba6a-1f9b10071c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1222ba-823b-44a1-b70b-df6c3bfee277",
        "cursor": {
          "ref": "61b2e0c6-c938-4d71-9478-bfa98394a2f9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0de2e588-116d-45d2-8596-d46212eccaf6"
        },
        "item": {
          "id": "5b1222ba-823b-44a1-b70b-df6c3bfee277",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d31efd8c-854a-436e-8a47-3255faea41d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6440ada-21c8-4a4a-bc0c-8cdd92bca54b",
        "cursor": {
          "ref": "d6885730-a356-4fde-a3c5-fd1a1c6fb4d6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1339cf17-1ba5-4d4c-8beb-c733988a068c"
        },
        "item": {
          "id": "c6440ada-21c8-4a4a-bc0c-8cdd92bca54b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5d94a603-0d6e-49ad-8578-a2ee0c306627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0686b56a-c2de-4c5d-8f5b-550d463db563",
        "cursor": {
          "ref": "28b68d7e-a3de-44fc-bc4b-c57a1acbdf3b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "daa7edeb-dfa3-4be0-b3e2-bff3b9309333"
        },
        "item": {
          "id": "0686b56a-c2de-4c5d-8f5b-550d463db563",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3a87a2b0-9615-4319-a5fa-6a32c94592cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aac2356-d93b-47fe-ac34-e8581d164219",
        "cursor": {
          "ref": "b7f8a6c0-0ed0-42df-bf5f-45b3290b474b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eb7f662c-6fd4-48cf-a9b9-fc8d80d4148a"
        },
        "item": {
          "id": "5aac2356-d93b-47fe-ac34-e8581d164219",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a4abbe5f-c49e-4081-af84-e3dba8001662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52847fb-c72f-491a-9dc7-8840d7b1557d",
        "cursor": {
          "ref": "5003043e-8422-4393-9b06-9b918c2c4ab6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a4a148ec-24e8-444b-8a29-56897e1fd593"
        },
        "item": {
          "id": "f52847fb-c72f-491a-9dc7-8840d7b1557d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a537a446-9ef5-4b52-ae51-203885a9c5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78841b46-790d-463c-a5cf-102c4ac87adb",
        "cursor": {
          "ref": "c34bb4ac-ab48-474f-925e-c4ee88833bd3",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fdbc8434-4fed-4097-b96d-56486aa05bf1"
        },
        "item": {
          "id": "78841b46-790d-463c-a5cf-102c4ac87adb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3d93d7a4-9828-41ee-a3ee-c9cecf8831ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "886eea23-a236-40a3-a7fb-39227438dd07",
        "cursor": {
          "ref": "0e60be2b-8fc9-4fd8-8b4b-dde141faa504",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c8650dfd-e8cb-4a34-b07a-8d562e5d9a51"
        },
        "item": {
          "id": "886eea23-a236-40a3-a7fb-39227438dd07",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d7ca56b1-7cda-4683-88f4-98a835def617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8646c3-f8a3-48c5-83b1-59951d081c6e",
        "cursor": {
          "ref": "7aae73c9-0c3f-4917-b693-7133bfe9653d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e8b0949a-083b-42c0-8d20-7029a585b014"
        },
        "item": {
          "id": "4e8646c3-f8a3-48c5-83b1-59951d081c6e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4d4197bb-6342-4381-8759-e6ada35a1c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751cedb1-ee19-4aae-9fb6-12c6960e482b",
        "cursor": {
          "ref": "79e0a7a6-6dbf-411f-8200-7133b93ee491",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b01bed9e-f00a-47de-89bb-c6ac6da268fe"
        },
        "item": {
          "id": "751cedb1-ee19-4aae-9fb6-12c6960e482b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "865a774d-7ab0-40ae-abcf-05107d750de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98557ad4-78af-4799-a827-07d36ba90493",
        "cursor": {
          "ref": "a4872e88-dfd0-4787-8c53-1882f9931c2c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f54d687-40a1-4252-a820-8452349ebde3"
        },
        "item": {
          "id": "98557ad4-78af-4799-a827-07d36ba90493",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6d060dd7-ad0c-4247-8290-c3c913fca981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2030dff7-bdaf-4ad8-8d2e-f236d6f10ed7",
        "cursor": {
          "ref": "9952ca57-7c2a-4872-a416-773af5e1a2cd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a85e843f-15f2-4969-ba8b-0843fc103919"
        },
        "item": {
          "id": "2030dff7-bdaf-4ad8-8d2e-f236d6f10ed7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b0bfa058-39af-4195-8231-497fbc0a2b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5799dc4-0756-44a8-bb37-5baa36a19be8",
        "cursor": {
          "ref": "eb1fc9cf-fb31-468c-97a6-5bf8a3e9e88c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "30138c7b-1643-4c60-bb74-56deb4dedd73"
        },
        "item": {
          "id": "b5799dc4-0756-44a8-bb37-5baa36a19be8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "70286f55-0de7-4667-a7a2-9c1f08a1f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2c81aa-7867-4c4a-9fac-cb35d0ee48bc",
        "cursor": {
          "ref": "d4e00da8-3bc7-4c54-95d3-f37a35c3d867",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cef0c2e0-39b1-4a9c-ad43-0aedaad60527"
        },
        "item": {
          "id": "ac2c81aa-7867-4c4a-9fac-cb35d0ee48bc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "56512244-fc6e-4bba-b7ba-b5f8ca34edd5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 86,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "db22c783-8957-4eb9-9e18-69a9ccff738e",
        "cursor": {
          "ref": "e7bc7004-d69f-45ef-9b93-e7287d2d5375",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2f387034-77f8-4748-a001-6ca40a132f8d"
        },
        "item": {
          "id": "db22c783-8957-4eb9-9e18-69a9ccff738e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "67e5c344-d852-4d8a-9cd2-f755834ac4ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85db492-064b-4d0b-b547-2da6a62af582",
        "cursor": {
          "ref": "5c82a9af-4a20-45d4-8403-76f612d623e4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e18819b7-495d-4610-8f33-13a981384886"
        },
        "item": {
          "id": "f85db492-064b-4d0b-b547-2da6a62af582",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "efe70e36-0cb2-4f4c-8670-be0846125bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c767c5-d84b-4460-9031-043e11730ab1",
        "cursor": {
          "ref": "5dba3b00-6b4e-4121-8ccc-4bea2a1a0fbc",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8ea96092-ea14-434a-aa56-eef293e5e7a2"
        },
        "item": {
          "id": "e0c767c5-d84b-4460-9031-043e11730ab1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0bd17574-1fa7-4b53-8b6c-11d9b3435b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b86da-4d70-496f-8e9b-3b1c68bd3d3f",
        "cursor": {
          "ref": "99f89c6e-2e69-4d6f-b210-befbb8d04c1e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "abf1a019-7bd0-4e8a-aac2-e98338df290b"
        },
        "item": {
          "id": "8a6b86da-4d70-496f-8e9b-3b1c68bd3d3f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b56a7937-c890-4db9-ba98-c69f521376e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced024d0-7114-4c52-9f3c-37bff31671dc",
        "cursor": {
          "ref": "82951491-cd40-407b-bc74-b2ecd3ab5677",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3a72beeb-341d-48c6-933a-d3a0c777ce92"
        },
        "item": {
          "id": "ced024d0-7114-4c52-9f3c-37bff31671dc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bdc90212-7f3e-459d-ad50-1d4365318c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13d3d77-66f2-4beb-9caf-d920987be2e3",
        "cursor": {
          "ref": "603b791b-c1f7-4455-a4d8-1356cb112610",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fe42dbf1-bb31-4017-8616-2ed68ea1615d"
        },
        "item": {
          "id": "f13d3d77-66f2-4beb-9caf-d920987be2e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd37ef58-e40f-4a4d-995f-34e186d86d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d95d349-42aa-4772-b4bf-2ac7c43c8212",
        "cursor": {
          "ref": "673b0863-2f03-4193-add7-dd21850b15c8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0447e888-7c7f-40f9-bf14-c4ff61452039"
        },
        "item": {
          "id": "5d95d349-42aa-4772-b4bf-2ac7c43c8212",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "75812f13-a66a-40f9-8b0e-48c805b18336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c8f351-7b25-4579-8954-a2a5df54aa84",
        "cursor": {
          "ref": "ddec5cda-3616-4ac7-a66f-1408acb11f56",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8e43e50f-3cc4-47ff-8183-6746a0be2b36"
        },
        "item": {
          "id": "a8c8f351-7b25-4579-8954-a2a5df54aa84",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ba42f3b4-986c-4c89-bf21-48b795cac28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dafa69a-ee87-4e83-b93c-3122a6d3507b",
        "cursor": {
          "ref": "74d660f6-e99d-4c52-97a2-64a819294aa6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8e871b62-c8a2-4811-ab48-dabed1a21795"
        },
        "item": {
          "id": "2dafa69a-ee87-4e83-b93c-3122a6d3507b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a69871ff-1bf3-45b4-b8eb-1e521fbb1d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0133f1-fb99-4cc5-be93-211ac2b88734",
        "cursor": {
          "ref": "6eedd027-fb78-4f59-88a9-645e27e9c54f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3acd8206-f573-42e8-9140-9db65834c226"
        },
        "item": {
          "id": "0c0133f1-fb99-4cc5-be93-211ac2b88734",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3216c045-a885-40b4-8bef-272961752fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da37f69-94cb-475a-a630-3c3dae6cfd64",
        "cursor": {
          "ref": "ff87557b-f2a8-4035-85ae-0a4202bd885f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0181091d-df4a-4be9-a333-aaf81623feff"
        },
        "item": {
          "id": "4da37f69-94cb-475a-a630-3c3dae6cfd64",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d28ca91-aeea-4915-be10-12cfbdecb0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4758c78c-b149-4ac3-bb2a-ce3c2977da58",
        "cursor": {
          "ref": "feb90c77-d046-4c31-819e-aa0de2a6fd08",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9ddcdb31-e21a-4f14-b46d-29b1c6ab7149"
        },
        "item": {
          "id": "4758c78c-b149-4ac3-bb2a-ce3c2977da58",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c00e8ac3-20d2-456e-9400-b1bde3e955f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7984e86-da57-44fa-b8c7-dc8ff63f6e1a",
        "cursor": {
          "ref": "884f3a15-23df-423d-ad1b-0cbe71749a0c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4d1a202e-ddcd-4513-af08-239328e65da3"
        },
        "item": {
          "id": "a7984e86-da57-44fa-b8c7-dc8ff63f6e1a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "06879be2-4440-4fbf-809e-f91e4020f3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5385335-695c-4f91-b795-2b673e4b3e99",
        "cursor": {
          "ref": "a00d7334-80ee-44af-a57a-7c66e6a15b07",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fcc1a2fd-665b-4b71-97c9-dd2d969c9139"
        },
        "item": {
          "id": "e5385335-695c-4f91-b795-2b673e4b3e99",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d813d109-8db7-4e7f-a016-9a4ecc29ca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daddf645-f67f-47ea-abba-3097e3513a89",
        "cursor": {
          "ref": "8964394b-5e15-4603-9130-e290e68168af",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "95eb9fcc-1f06-421b-88d1-973e28a5704c"
        },
        "item": {
          "id": "daddf645-f67f-47ea-abba-3097e3513a89",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "13f4e862-e895-4981-954d-c0a5371c7320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a68a02-2062-4102-be35-ccdd8e7ceab9",
        "cursor": {
          "ref": "b6883afa-eda1-4892-ba5d-f5edebd16da1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f6284be0-1a3d-4a3c-b37f-7e27d3997222"
        },
        "item": {
          "id": "c7a68a02-2062-4102-be35-ccdd8e7ceab9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5eeca5b7-588c-4590-8ac8-65495d5060a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50278659-6151-4157-b049-a6b6520fcf9b",
        "cursor": {
          "ref": "70e47a26-d247-4f85-95f7-d567f35bb669",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fb7d8c10-afdc-4d59-9d96-ac28dd12a53d"
        },
        "item": {
          "id": "50278659-6151-4157-b049-a6b6520fcf9b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5d198ed9-06db-4f01-b229-923159f22108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a1453a-fd4d-470b-a641-70cc399be73f",
        "cursor": {
          "ref": "ff559ec7-3e9a-4904-a764-9eb65517aefd",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a0b47d0e-98e7-4f11-8c1c-c86d6c73b15e"
        },
        "item": {
          "id": "81a1453a-fd4d-470b-a641-70cc399be73f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3b9134c6-4e4f-4080-a0e3-f944813638e2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "bb6257d8-1526-4f14-b26b-cfc39f7c2ea1",
        "cursor": {
          "ref": "3f3200e8-e5d2-435f-a56c-8660d5ece50e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e7c610d0-8b78-4e2c-a7b8-05af8ba72eac"
        },
        "item": {
          "id": "bb6257d8-1526-4f14-b26b-cfc39f7c2ea1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "40dfb12c-9880-47e7-888f-9e3a4451393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf45696-6d40-40a5-b638-7f26abb4cd19",
        "cursor": {
          "ref": "5d3398a3-aaed-4ec7-9210-a98a9a371164",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e192587f-76b8-421e-b49f-7dcb46c86936"
        },
        "item": {
          "id": "5bf45696-6d40-40a5-b638-7f26abb4cd19",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e01dfa7-72cd-4c66-88a3-8b74b500b535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31734356-6f48-42e2-b5c2-29e02c3c9c99",
        "cursor": {
          "ref": "a63adcaa-b454-4fba-b995-0e3fac214a09",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "06a75eef-04b4-46c8-b0f9-03d05968dc6d"
        },
        "item": {
          "id": "31734356-6f48-42e2-b5c2-29e02c3c9c99",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ef0900f-fe17-40d5-9eb8-045316b5b0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a509eb1a-26c1-4885-8773-e3dacac951d2",
        "cursor": {
          "ref": "d0f25dcd-a0bb-4aab-a956-4f16cccfef5c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b979d379-2127-4bc3-a813-bf6f4bdfdc97"
        },
        "item": {
          "id": "a509eb1a-26c1-4885-8773-e3dacac951d2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a2f88279-2fdc-4f84-89a6-defa76740633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6149bea7-0f2c-42c9-a1ea-b9dd9cbae9bb",
        "cursor": {
          "ref": "923b5321-e6ac-477d-9cfc-10138365ceb2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "77bd851e-aa4f-4c1a-aa7e-5dc6885359f2"
        },
        "item": {
          "id": "6149bea7-0f2c-42c9-a1ea-b9dd9cbae9bb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "38bb5a55-70af-4c8a-b992-f484a5474bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767f7185-919e-444b-9612-52eec7e1663d",
        "cursor": {
          "ref": "552a7058-7bd9-4679-aa83-e0ee082b64b2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "53382429-46dd-4782-b98d-dbe51e554788"
        },
        "item": {
          "id": "767f7185-919e-444b-9612-52eec7e1663d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5979dc10-e474-44e9-afb2-ce59931588ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75283b3c-65bf-4b0d-9e40-ca06be976b31",
        "cursor": {
          "ref": "05d140ce-575f-4f98-80c1-517f909130f2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "05ac50c4-2cea-4aa7-ba71-dad950efb8ba"
        },
        "item": {
          "id": "75283b3c-65bf-4b0d-9e40-ca06be976b31",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4edc95c1-bc54-4656-8b57-4a7cf698c614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edda85d-4412-4df9-870d-aa70990544a6",
        "cursor": {
          "ref": "e8fa545a-1e1f-4478-bf16-7d80438ec0d7",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "07aac117-8f9c-4559-bf32-8106babea154"
        },
        "item": {
          "id": "5edda85d-4412-4df9-870d-aa70990544a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f81c6fc1-4021-4532-af0a-98c5d42710c2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "9d704e78-5f7d-4617-abc0-296f0201d605",
        "cursor": {
          "ref": "a7d9d64b-42d2-424c-a55f-51004f82fad2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "263bea96-b960-4252-838d-8b61aa2175ba"
        },
        "item": {
          "id": "9d704e78-5f7d-4617-abc0-296f0201d605",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "73df1832-1d28-4c85-81fa-60787a6a2f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46090f15-96ac-4372-bf10-dbb451101a3d",
        "cursor": {
          "ref": "3da5c56b-aaed-4cb8-868d-a195065bd2ed",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "50065596-a017-4f4a-b4d5-89729329ca4b"
        },
        "item": {
          "id": "46090f15-96ac-4372-bf10-dbb451101a3d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "58b4b40c-a677-4831-ab1e-d4fcfc62f8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a69e30b-7f0a-4e5d-80fb-0edf97163bec",
        "cursor": {
          "ref": "ed57c54f-833b-4d7d-9927-0222803eeeef",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "76313d1a-dcf3-4026-bdfe-7c943c289f97"
        },
        "item": {
          "id": "6a69e30b-7f0a-4e5d-80fb-0edf97163bec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "488cd779-c2de-4124-b3e9-c898b9f08c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2520905-7264-41df-84dc-032197b3489e",
        "cursor": {
          "ref": "d4951681-27ca-4796-875b-f42d6da701c2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "819a2f33-037b-4fb4-bc13-d4bb311ed390"
        },
        "item": {
          "id": "a2520905-7264-41df-84dc-032197b3489e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9c4452c3-289f-494e-9b56-4b25924e1407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c90284-4a85-41ff-9184-622b4fa25fdb",
        "cursor": {
          "ref": "589f0b8c-0554-4ab4-80a6-a3ae0b329730",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b710080d-3d6f-4084-b2cf-179d85c57bcc"
        },
        "item": {
          "id": "17c90284-4a85-41ff-9184-622b4fa25fdb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b1768d5a-82e2-4ee7-a4b5-37e88abc5492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bd0473-e4c4-4204-ad3e-9787e0ab5391",
        "cursor": {
          "ref": "e03710ec-6d99-457b-ba00-173846e9e85a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "43ba23c8-41c0-47ef-a5bb-1cb150413077"
        },
        "item": {
          "id": "14bd0473-e4c4-4204-ad3e-9787e0ab5391",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9423996-f745-4485-905d-7767d2cd779b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a886ec-75b4-4ee6-98c8-b3668d768b9d",
        "cursor": {
          "ref": "5f624500-1bd8-41f6-8222-e1a40c0a4524",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1a6f3466-4a3a-41dd-8040-de7996faf2a4"
        },
        "item": {
          "id": "08a886ec-75b4-4ee6-98c8-b3668d768b9d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c8db80a6-f6ac-4477-890e-4150bf82a3f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "435e29f6-1e61-411d-8f44-3243fa5a20db",
        "cursor": {
          "ref": "e7773156-5173-46a9-a81d-685b68336c18",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2d502fa7-7587-4c7f-97b9-84dde4aebf56"
        },
        "item": {
          "id": "435e29f6-1e61-411d-8f44-3243fa5a20db",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "aab2f7a4-c4cf-45e8-868b-18e4836ca35f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "1afe8003-8a78-4397-bb89-95b6b463f214",
        "cursor": {
          "ref": "98839d6c-399f-4bdb-b48e-aa41855d128e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c52f85c6-5df2-4049-b6ac-afacb5e5bb17"
        },
        "item": {
          "id": "1afe8003-8a78-4397-bb89-95b6b463f214",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "344e2643-f6c6-41df-81c0-1352f5c66b1c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "ee5e1341-1341-4880-a756-905e0d1606fa",
        "cursor": {
          "ref": "b5705df2-6959-4bad-bede-92383040db01",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8501ae75-6dd3-4a67-a7a6-16feb8c0b3cc"
        },
        "item": {
          "id": "ee5e1341-1341-4880-a756-905e0d1606fa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4f71ba3c-3a00-4d96-a777-332936e05607",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "f12a7bdd-281b-408e-8329-a711dd26cb4a",
        "cursor": {
          "ref": "7459193c-2b1a-41d8-a28e-b311d9bc9800",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "28f1adce-7801-46c2-b826-bee061fecc29"
        },
        "item": {
          "id": "f12a7bdd-281b-408e-8329-a711dd26cb4a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e8777756-13b5-4325-9c9d-3a26aadfba5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "d19ae99c-edd7-4f8f-893c-42c063f56ef4",
        "cursor": {
          "ref": "ab50ca50-a15c-4efb-877c-227a02f02193",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fa87d296-1646-404b-b4c7-36e626a5d39b"
        },
        "item": {
          "id": "d19ae99c-edd7-4f8f-893c-42c063f56ef4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bc4967c2-55c4-45be-b18e-c1aa7f3672b3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "9185ca4e-a2cf-47ed-b97a-4189f2f88fab",
        "cursor": {
          "ref": "dff3e325-b4a6-41b4-a9b5-4dbfd22124f3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "53ebe3b8-3d2b-412e-a88c-a2c14bf47e0e"
        },
        "item": {
          "id": "9185ca4e-a2cf-47ed-b97a-4189f2f88fab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "22921dad-ab07-4b94-a9ed-4429201daa93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b60b37-b872-43ed-88a9-313b6559e185",
        "cursor": {
          "ref": "b0d4ecc0-18af-48a4-92fb-392c7a0f4642",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7c0d660f-60bd-4d32-a79b-f40c6d8759aa"
        },
        "item": {
          "id": "b0b60b37-b872-43ed-88a9-313b6559e185",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "39f6223e-44ce-4614-975c-cdf6ad9323a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752904fd-8b51-4987-8098-36a83a04fcfb",
        "cursor": {
          "ref": "0471b944-9ee5-441f-9c40-5d4e7abc751c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3790b3b5-7847-4d69-9052-f33228f68174"
        },
        "item": {
          "id": "752904fd-8b51-4987-8098-36a83a04fcfb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e3d78ffd-ce18-4da9-8b1d-fc8c16701490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705bc908-1a3f-45fb-9ca8-6e3121a058c8",
        "cursor": {
          "ref": "b4b8c57a-10e3-4b0f-9b02-6ddbce6ebc4d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "23fb580c-6938-408d-acf0-4f836d2f571b"
        },
        "item": {
          "id": "705bc908-1a3f-45fb-9ca8-6e3121a058c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "529eacbd-6c4d-49cf-aeb6-5cc4c33eba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9776e823-d175-4716-a420-0f9078186aaa",
        "cursor": {
          "ref": "3f04152c-0973-41a0-b022-ebe58c727fca",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9cabc282-f623-4be2-a926-db19f4c8c4b5"
        },
        "item": {
          "id": "9776e823-d175-4716-a420-0f9078186aaa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2d4b7bc8-6986-42b3-af86-a700eca321b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0d3574-b50a-4c4f-9e40-b9a045c25973",
        "cursor": {
          "ref": "bc6fdc51-134e-47f8-850f-9425f9db38a8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2ffa9af8-fe28-49ba-8c92-bcb325cae678"
        },
        "item": {
          "id": "2c0d3574-b50a-4c4f-9e40-b9a045c25973",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4c943bcb-0635-48df-afb6-bc46edce80d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a1cc2-4bc8-4f7f-bf13-2ce674f047f8",
        "cursor": {
          "ref": "314c0032-18a1-4341-98df-bc63e16d7cd1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "97fe3790-98ca-4f87-b0ab-e0cd8f5dac14"
        },
        "item": {
          "id": "a51a1cc2-4bc8-4f7f-bf13-2ce674f047f8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "004d42ca-9b15-4803-8eb4-b8afd33cb6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab698e5-ffd2-42f2-9c53-0a4355a6fd22",
        "cursor": {
          "ref": "7752f507-2eb6-4164-86ba-8be4a4f3a7e0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "87544364-b88e-4e96-be95-655781b835aa"
        },
        "item": {
          "id": "5ab698e5-ffd2-42f2-9c53-0a4355a6fd22",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "65df47f8-8eb0-478c-aaba-6cf7ee784deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1472990a-b6f3-4280-ac16-a15c0736cf76",
        "cursor": {
          "ref": "0f738277-c6a1-41ce-a584-7aac63162077",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0f06c3b7-f6e5-45a2-90e9-4f8c81928bbc"
        },
        "item": {
          "id": "1472990a-b6f3-4280-ac16-a15c0736cf76",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0184a3dc-5768-4028-b4ae-96c1f74e4295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d247b5-65fd-457b-844c-55eac6723457",
        "cursor": {
          "ref": "8c8d8162-2fb2-4d3f-871d-f99eb2831376",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d957fd6a-a70b-4b4f-9b07-b60269a4e05a"
        },
        "item": {
          "id": "68d247b5-65fd-457b-844c-55eac6723457",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "90cd0c4f-8c14-4547-91b2-684866e44fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4f1a45-2cdf-4727-a4ff-c6b606cc68d4",
        "cursor": {
          "ref": "389cf98c-b2c8-444c-a107-8b286f517b4f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7cdf9e1e-d7f7-442a-8c69-3980d2680dab"
        },
        "item": {
          "id": "3e4f1a45-2cdf-4727-a4ff-c6b606cc68d4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d52672c6-dc69-46d0-afbc-46a160bc29f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd7c7a6-9933-4f3c-af38-58ba78af4571",
        "cursor": {
          "ref": "0da4594d-3d4e-493b-a32d-4e7aaf4433f4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f1c414fa-0126-4c68-a6c0-5d0755bd7743"
        },
        "item": {
          "id": "6dd7c7a6-9933-4f3c-af38-58ba78af4571",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f5fb4296-5b7b-40c7-9ad3-75aaeba4911e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aa3a7b-9b64-413c-ac88-641cb28a2998",
        "cursor": {
          "ref": "a6422ddb-9a89-477f-af56-1d35dd0342e8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "89bdb12b-596c-4a06-b776-d4c52b80f1e8"
        },
        "item": {
          "id": "f8aa3a7b-9b64-413c-ac88-641cb28a2998",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eff4013c-d5b7-4c9b-a586-229ddfee759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2430319-3070-4eb6-aad2-9d8a42e95a40",
        "cursor": {
          "ref": "37b99f92-222f-442e-a1d4-c4645b026c34",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c8c7b45f-f62e-432e-8fdd-3b64ad711dad"
        },
        "item": {
          "id": "c2430319-3070-4eb6-aad2-9d8a42e95a40",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ce3b97ed-9ca4-4c36-96e2-cec7ff5a32c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832913e4-f4a3-4dfb-a61e-41be0a63b02e",
        "cursor": {
          "ref": "402098fc-bd72-446a-b721-198c02befec9",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d52417c3-d421-4e3c-8c44-09ff2dc556f3"
        },
        "item": {
          "id": "832913e4-f4a3-4dfb-a61e-41be0a63b02e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "062817aa-3e6a-468b-b4e4-c1f2ec4994ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d255b814-f7a5-4bdc-8105-f6e923bc932f",
        "cursor": {
          "ref": "6606049c-bacf-4d89-8aed-f660fe19939d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b56444d3-6ad5-47b1-a492-ff4b7736cda4"
        },
        "item": {
          "id": "d255b814-f7a5-4bdc-8105-f6e923bc932f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a13449d4-9727-4e2c-91c1-aa6f5e137e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b472312-cece-47c3-833e-23213a6de7f4",
        "cursor": {
          "ref": "58fb8e55-6c6a-4e73-afd3-95be05d33212",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d2a74b43-9d20-4f50-9738-464d51c46285"
        },
        "item": {
          "id": "9b472312-cece-47c3-833e-23213a6de7f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a362afa1-c2f1-4995-983e-e8c7c08335d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413314a8-c130-4e49-a9e0-237364e9c68f",
        "cursor": {
          "ref": "66333d41-11a6-43ec-96b8-cc94baab3da6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8f533ce0-6ae9-499f-99d8-6b6661ee30ae"
        },
        "item": {
          "id": "413314a8-c130-4e49-a9e0-237364e9c68f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cb54ac90-50f2-49e5-911f-a96ffe4ec9f1",
          "status": "OK",
          "code": 200,
          "responseTime": 195,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2fafd0f2-9333-4dbf-ae9e-d34b548af080",
        "cursor": {
          "ref": "9ced9c6d-9756-4a0e-82ef-46d3c5ad2d7c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6eabde6d-d796-457a-8b5e-2e775dad37e3"
        },
        "item": {
          "id": "2fafd0f2-9333-4dbf-ae9e-d34b548af080",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6b1739df-ac36-4c8e-bfda-0a70fe963ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7823a73-65f9-4484-925d-7e0047446d64",
        "cursor": {
          "ref": "bfe64e07-7dda-40c8-ad4a-0aacb494f33d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7329edf9-9535-408a-8464-80f9ff937820"
        },
        "item": {
          "id": "b7823a73-65f9-4484-925d-7e0047446d64",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e2d1e65b-cda9-47c3-9180-76e4b4068060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47178632-69e4-44a6-aba5-d56fe7a3dcba",
        "cursor": {
          "ref": "b52d6f6e-6710-421a-a1a5-22486616fad5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cb0049d1-0fc4-402a-81af-9fb85838544e"
        },
        "item": {
          "id": "47178632-69e4-44a6-aba5-d56fe7a3dcba",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f5d0bbb0-0e1c-4320-9931-ef2ab898d542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ac562a-0424-4c4d-a5b9-d492d6659fdf",
        "cursor": {
          "ref": "7e96661f-966d-45bf-842a-ff8a6355901b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e5a3e21b-f1f5-4f61-a27c-e76330ffa5bf"
        },
        "item": {
          "id": "61ac562a-0424-4c4d-a5b9-d492d6659fdf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6fda45fe-d2d6-47ec-a83e-caea5b87897b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89fc549-8666-4dd5-b805-c052434d8fc0",
        "cursor": {
          "ref": "8c684851-b7c1-4bda-9c1b-7984dd0bf3ec",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "caf6dfc7-05c2-46e7-91c0-e876e86763ff"
        },
        "item": {
          "id": "d89fc549-8666-4dd5-b805-c052434d8fc0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6b255eff-d10f-4ef0-8e61-27ea9ccfe604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5161aed9-b939-450c-b31e-3e9342ca62b6",
        "cursor": {
          "ref": "8b3aeb86-26ec-45e5-9fb4-ca5785728e2c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e741422d-1a02-4b54-a05b-1a86fabacb4a"
        },
        "item": {
          "id": "5161aed9-b939-450c-b31e-3e9342ca62b6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "543127f4-34af-4db3-bcdf-cb54890f305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d1b0bd-65f9-4ed9-b6f5-6a3888583ba9",
        "cursor": {
          "ref": "bbc098b1-1f00-4d5e-80fe-4fa83667466e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b8267c35-3aba-422c-b445-055cfcd948a0"
        },
        "item": {
          "id": "46d1b0bd-65f9-4ed9-b6f5-6a3888583ba9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d480d135-ad54-4fdc-8a67-850011ff6544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1178c8b-f6b2-4aa0-b20e-120d315a0727",
        "cursor": {
          "ref": "f9b0bbc2-c72c-456c-967c-259d65bd53d7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c08b2fcc-a3ca-46d9-b0d2-de41059f2eac"
        },
        "item": {
          "id": "a1178c8b-f6b2-4aa0-b20e-120d315a0727",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ddd8030d-165b-49ad-8d2f-72bb22cb8b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c471d574-6499-40f6-bc84-728ec2507779",
        "cursor": {
          "ref": "f258f014-ea95-4f90-bb72-a128e94b40bb",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "20b2b1fe-a079-4664-b9dd-baa7c54e8209"
        },
        "item": {
          "id": "c471d574-6499-40f6-bc84-728ec2507779",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dbc09192-4fab-436c-8f02-3e3c8c3cce47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fc253e-816e-4623-bf3a-dd0865651dd3",
        "cursor": {
          "ref": "871d50d6-21e4-42de-9b7b-4eb94f8c2f0f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8e5eaed0-4a7f-4eba-ae85-3bac8d46ef22"
        },
        "item": {
          "id": "c8fc253e-816e-4623-bf3a-dd0865651dd3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "19fdd650-f575-4e95-bd3f-d38560dd79a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e2398-43bb-4c61-89ab-ea35e0e89a1e",
        "cursor": {
          "ref": "e2fa1c62-5df1-4937-8a09-22807b83dfb0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "813157b9-323e-4591-a315-8e55f92ff4dc"
        },
        "item": {
          "id": "8b9e2398-43bb-4c61-89ab-ea35e0e89a1e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f6dd840c-e7b0-4943-b0dd-2dbe5ab741d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee9fe0f-c32e-4294-90f6-7a5a83b29de8",
        "cursor": {
          "ref": "0a4a30c2-7c4e-44c6-a6f0-e584ff101a6e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0748cff1-c176-4972-9b1c-77a5155d6f91"
        },
        "item": {
          "id": "aee9fe0f-c32e-4294-90f6-7a5a83b29de8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2cc16f9f-62a9-4c60-bcb6-3a923bf54b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02844a7-7843-4555-b462-334c55334752",
        "cursor": {
          "ref": "20d8b779-1d7b-460b-acaa-71be23182efe",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "076a0fc8-8e89-4fab-b0d6-b8331697ec63"
        },
        "item": {
          "id": "c02844a7-7843-4555-b462-334c55334752",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6a14826f-4408-44d7-bf04-209135a8f017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832e8995-64b0-4656-97fc-94cfcf7c72d3",
        "cursor": {
          "ref": "1b4528bb-7b7d-4085-84db-15307a2d79ed",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8f80da4f-1f0d-41b2-b9ef-a53a5561aae8"
        },
        "item": {
          "id": "832e8995-64b0-4656-97fc-94cfcf7c72d3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3cb948c5-6b4d-4675-b87b-00bd00cfbe6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467a26e6-0735-4c70-96f5-049146decae0",
        "cursor": {
          "ref": "2bbad4cc-7afa-4d3a-9daa-b877c45a67d9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "34df996d-f364-4792-876b-8f3479c8467d"
        },
        "item": {
          "id": "467a26e6-0735-4c70-96f5-049146decae0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "aa2e681d-7fc2-403e-bc2d-39cb11649133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad5067-907c-4332-9ef1-afd2ccb9c16c",
        "cursor": {
          "ref": "cbc2dd21-2af8-4d15-be95-5975a51d3943",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "651ec5ef-0cee-436b-828b-ea69b9e0d0ad"
        },
        "item": {
          "id": "69ad5067-907c-4332-9ef1-afd2ccb9c16c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2528c665-672f-4247-a9fe-0c2acf17d664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dfc627-60de-493e-b5cb-56e4949b9b68",
        "cursor": {
          "ref": "9f75c861-343d-437a-af6a-0ce862e0e251",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "368342fb-b4cb-4045-851d-2b20e93bc166"
        },
        "item": {
          "id": "33dfc627-60de-493e-b5cb-56e4949b9b68",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "92708959-514b-4066-a555-8212f32a4e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5971ba-aa2a-4847-b160-36923b20b9a8",
        "cursor": {
          "ref": "0be4b103-c4fe-4239-86c9-d2c51f6a1717",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ff9a80c3-7d25-4f7c-952e-692d67a7145c"
        },
        "item": {
          "id": "0b5971ba-aa2a-4847-b160-36923b20b9a8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "40cc9369-3479-4ada-98c4-d85070a45532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b84a68-b0c9-4716-a308-8f0960d6ed92",
        "cursor": {
          "ref": "266beaf9-a418-40c8-b464-3db652de385d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f9d81d34-bd5e-4902-a7fe-8c344135a6fc"
        },
        "item": {
          "id": "78b84a68-b0c9-4716-a308-8f0960d6ed92",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "55d51a40-336d-4a88-8888-15c2124d2d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5df725-6dd7-416a-ae5d-800caf4f0ef1",
        "cursor": {
          "ref": "461bfc82-8269-4d9e-b165-e1441113904c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8234273d-6c5c-40eb-b2b8-1674a9dbb84d"
        },
        "item": {
          "id": "8c5df725-6dd7-416a-ae5d-800caf4f0ef1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "811a4878-a2b9-422c-9296-e47b8f0f3890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de8a1af-1af5-416a-bff5-e43287f32969",
        "cursor": {
          "ref": "4dff2315-c286-402d-a70d-a88bff4b693c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f29c9c62-4ec9-4387-966e-81cef20e8d2d"
        },
        "item": {
          "id": "6de8a1af-1af5-416a-bff5-e43287f32969",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3fd10a16-04d5-4991-95e5-22cf399345fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22d469f-3de0-4a44-a251-005c82272024",
        "cursor": {
          "ref": "e2daa791-da49-43f2-b5ce-b60333f131c6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e00c5edc-0835-4370-81f7-d57f5dd0a4c4"
        },
        "item": {
          "id": "f22d469f-3de0-4a44-a251-005c82272024",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "36e0d1fb-8044-4f87-8757-49fef1e1799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c1165c-ca8c-4aa3-9dd8-e018f68cbec1",
        "cursor": {
          "ref": "23e03765-7b0d-4314-84a3-686ae4922e77",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "46c2f467-fbbc-43b8-b952-37501855bf7d"
        },
        "item": {
          "id": "58c1165c-ca8c-4aa3-9dd8-e018f68cbec1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fbb4be13-f31c-4a79-aff4-7499ae28a36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b968c0-ed78-4c15-8e43-61094ad9e254",
        "cursor": {
          "ref": "5b65174f-7fd4-46b1-a457-6afe5437fa8b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dba3bdaf-0823-4f3f-be79-85324754f2b0"
        },
        "item": {
          "id": "f8b968c0-ed78-4c15-8e43-61094ad9e254",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0fa7cdb1-2fc6-4d90-82de-9c23efd8ed82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c42dc5-7979-456a-a7a5-fb00c1a0040d",
        "cursor": {
          "ref": "cab1a4df-bf37-4952-a790-842826f11cb5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1bd229e2-e08b-4399-9fdd-564e124966be"
        },
        "item": {
          "id": "b0c42dc5-7979-456a-a7a5-fb00c1a0040d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a8b0d120-4a8c-4e5e-a82d-64696d346999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b28539f-0916-46ec-8576-7869215b3f31",
        "cursor": {
          "ref": "b0ba11f0-234c-48ff-a666-54d4dc8190bb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5ffb4d09-608c-49d0-bf58-e9f0fcdc4e44"
        },
        "item": {
          "id": "7b28539f-0916-46ec-8576-7869215b3f31",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "599e0a8a-b48e-4b3f-9193-a24fb98c4590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fba58d-62c5-48c0-928c-e303bc8b7ca3",
        "cursor": {
          "ref": "b2dd1f26-e50f-4d7b-8ba4-8188f4132f67",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cda77a32-537a-4e5a-a761-0d5a32127e14"
        },
        "item": {
          "id": "74fba58d-62c5-48c0-928c-e303bc8b7ca3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "04b49166-690f-4a1e-b437-b9e5481d8c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8234db5c-9957-40af-b73e-940a8cff76c1",
        "cursor": {
          "ref": "fe97baa0-e91d-429d-ac75-0b9c35219aa3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "58054d48-72d6-4532-bee8-cadb2d86b30e"
        },
        "item": {
          "id": "8234db5c-9957-40af-b73e-940a8cff76c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bdd8dac8-7d43-431e-bda4-f6127c1384bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2123f9c4-3b5c-41c4-b063-402443c95a11",
        "cursor": {
          "ref": "b5db1f8a-57eb-4b93-b25a-4d7f0d546f09",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0b917e6-651b-498d-b9b7-1d1bf731acba"
        },
        "item": {
          "id": "2123f9c4-3b5c-41c4-b063-402443c95a11",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4521f6f6-28fb-4712-80d0-d4a1f1dd9863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3989e0-d017-4de7-9830-815b3083da0b",
        "cursor": {
          "ref": "3bdcfb79-4743-4128-a28f-8adb04835cab",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3d5e8eb0-03a4-433d-912c-0121702fee0a"
        },
        "item": {
          "id": "1d3989e0-d017-4de7-9830-815b3083da0b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "01e634a4-9952-4a6e-b0fc-01da19fc65b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd793d2-9144-447a-918f-ac6b9a741eee",
        "cursor": {
          "ref": "11e9ce04-6775-48bc-99fb-748c70e90d7c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3c9e7030-c8ce-4165-ad80-c58a67d06568"
        },
        "item": {
          "id": "cbd793d2-9144-447a-918f-ac6b9a741eee",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ef586dcb-6a66-492e-b8ba-0a79137e8207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d3166-7902-45d5-a0cb-a2ed78d48c92",
        "cursor": {
          "ref": "63f46979-3c18-484c-8d03-0d7252afdaf9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "56b55f68-5163-4594-8e33-e830f873300e"
        },
        "item": {
          "id": "928d3166-7902-45d5-a0cb-a2ed78d48c92",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e89abce-5752-4c5b-9382-9f2241d3fcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00d6e89-679c-407c-982b-aeab571b8ee1",
        "cursor": {
          "ref": "38184d40-3e30-49de-a1af-6c31cbec3b6f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "230e90aa-89e8-42c6-81e9-427619f02306"
        },
        "item": {
          "id": "b00d6e89-679c-407c-982b-aeab571b8ee1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b5e91920-3305-4d21-8a6a-eef71801aeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2122628e-568e-4f22-a59e-76e5b6d197bc",
        "cursor": {
          "ref": "ac3877c6-d2d7-4297-bc11-531407e8cd81",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "762e50af-20f1-488e-a9d8-a34a8460118f"
        },
        "item": {
          "id": "2122628e-568e-4f22-a59e-76e5b6d197bc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c69529d4-362d-44c2-a91d-3d29b45872ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e3553-8261-4d40-9249-bb3fd34f2509",
        "cursor": {
          "ref": "dc3c5ae3-c69c-4b99-ac5f-8fceeab84cd5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "172c6b47-23e2-4cbc-a17d-bb4358ece5fc"
        },
        "item": {
          "id": "f17e3553-8261-4d40-9249-bb3fd34f2509",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "706cc851-b471-4d7c-b841-2870087814b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710bc7f9-3370-4c92-a7d1-0a50574e005d",
        "cursor": {
          "ref": "147acc1a-efeb-4704-aa71-1e126561763b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2a381892-2605-43cf-8596-1e39dd86080e"
        },
        "item": {
          "id": "710bc7f9-3370-4c92-a7d1-0a50574e005d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8fc746dd-27d3-4e6f-b750-6bab5dbb4d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dcebf5-aab7-420b-8e7e-ee448524ee82",
        "cursor": {
          "ref": "8bc7eaf0-5139-4107-8360-7939ed3a9fa7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8c8f5c9a-46a4-4d81-a8dc-14d3a42ac4fe"
        },
        "item": {
          "id": "52dcebf5-aab7-420b-8e7e-ee448524ee82",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8a3d6606-f5a1-49be-b910-9e0d5a848dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec2b99f-0a1f-4618-82c2-4516295cce6a",
        "cursor": {
          "ref": "f67f5402-fd97-4382-9b0c-cde23a9ff75d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "96fac9a5-d96b-49a7-a1ed-017172f81455"
        },
        "item": {
          "id": "4ec2b99f-0a1f-4618-82c2-4516295cce6a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "643c6bd3-85de-4e52-8af0-081a8e4372f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b373a-efc3-4ade-bc14-d59236b18076",
        "cursor": {
          "ref": "69ee34d0-a6ac-473c-b901-aefaa6463b83",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "937405ba-ba8d-4d04-b321-b3733a408aa1"
        },
        "item": {
          "id": "4b2b373a-efc3-4ade-bc14-d59236b18076",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5e053498-0ca3-4fb8-a640-ec10fa5c3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531fed93-236f-4a16-8e73-4221ebb8e93e",
        "cursor": {
          "ref": "c9dade0b-225e-4ab5-81b1-2b95ed6b6051",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9defad19-61a7-42d8-b22d-361291e161b4"
        },
        "item": {
          "id": "531fed93-236f-4a16-8e73-4221ebb8e93e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45e963fc-3099-4d38-9976-4f78dc77cdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ff707-9cb0-4c96-9af8-95335e5c424f",
        "cursor": {
          "ref": "7e2bfc78-cdcd-4c5e-9543-c965f3f44017",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b3006ae-eb90-4724-9b74-d689faccfdad"
        },
        "item": {
          "id": "6e6ff707-9cb0-4c96-9af8-95335e5c424f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b319cd44-c33c-4901-b277-fb20eb3b7622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357b11b9-40eb-46df-989f-2c4e796faa55",
        "cursor": {
          "ref": "4f7ed304-93cd-4d4e-b731-eec2920a1e8e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5c1ae2b1-d71f-46a8-9233-718cd5f6d920"
        },
        "item": {
          "id": "357b11b9-40eb-46df-989f-2c4e796faa55",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "039ea77a-b8e1-4056-a6c7-c5904f87400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e789e61-8961-4c6b-a12c-da37670cc5d3",
        "cursor": {
          "ref": "298ee00e-f174-4a80-b2b5-08aab72d710f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8214cef8-f253-442c-a448-58e1f3473e98"
        },
        "item": {
          "id": "8e789e61-8961-4c6b-a12c-da37670cc5d3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a185415a-583a-4bf7-9756-b5b979ad9e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c754e238-943a-4043-a3ad-c51681e80395",
        "cursor": {
          "ref": "cc56999b-65c9-425e-8df7-83ddf52022f9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "018d423d-fac6-44b1-b837-9d82eb457b6e"
        },
        "item": {
          "id": "c754e238-943a-4043-a3ad-c51681e80395",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5cd16006-641f-4d96-aae8-20e834016f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49024c60-1711-433e-a40c-0412ab879b15",
        "cursor": {
          "ref": "e52d1b92-c457-434e-9d4b-7ca6ccb261d2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d2173447-8888-4bca-9a99-2a3c42326eb6"
        },
        "item": {
          "id": "49024c60-1711-433e-a40c-0412ab879b15",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a7e35b0b-21b6-4496-99a2-f4de7435d2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacc4323-96c2-4502-b1c9-66093f4eab9e",
        "cursor": {
          "ref": "8dcc05f1-2748-4892-bfb0-8086a04e24ca",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b8c17209-fcc0-4a7a-aa38-3d39844448f3"
        },
        "item": {
          "id": "bacc4323-96c2-4502-b1c9-66093f4eab9e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "03f8b00e-9a90-4245-a9e6-8606c76f22de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd680945-ea28-4143-bc51-9d6fb0e93474",
        "cursor": {
          "ref": "63aa8478-6550-490d-8a20-d791b0f1c924",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "93631a04-6f1e-422e-abdd-dc428099dc17"
        },
        "item": {
          "id": "dd680945-ea28-4143-bc51-9d6fb0e93474",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "00277af1-7d0f-4087-96e4-47994adf6706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdeb322-965c-4392-b5dc-9014ced084b8",
        "cursor": {
          "ref": "a530f64c-f04a-4cdb-a50a-93fb5990851a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "13558ad5-8ea5-4ec4-bf80-38e6498b2cfd"
        },
        "item": {
          "id": "4fdeb322-965c-4392-b5dc-9014ced084b8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "31e5b50c-7b64-4028-8119-d98167508aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edffd28c-4fc3-4f52-b31e-f611bf29501d",
        "cursor": {
          "ref": "ceac686a-85b7-4743-8764-6d8cad468706",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "73735710-124a-439d-b8f5-e79e2cc4a33a"
        },
        "item": {
          "id": "edffd28c-4fc3-4f52-b31e-f611bf29501d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0f6c23a2-2db4-4e79-8b12-b2a04b650036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cedf216-59c9-48e7-ae0d-6a409e9ed51a",
        "cursor": {
          "ref": "f8a66caf-fbb1-49ad-aa53-d4e9ba57dabf",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89c32872-0a54-447d-ad66-a3fdf61a5699"
        },
        "item": {
          "id": "6cedf216-59c9-48e7-ae0d-6a409e9ed51a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "19190728-18f3-458e-aef9-ae8b5d38496b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e72066-2c46-44a0-adde-d6b0e7178de6",
        "cursor": {
          "ref": "41f18de9-ab99-40f4-90b0-94329a689dc6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "910c5d33-8c0a-4dfc-8331-a69c64ed30d9"
        },
        "item": {
          "id": "f6e72066-2c46-44a0-adde-d6b0e7178de6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "74e8a10d-b9d1-4ea9-8eae-0f94fd60bf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78df972e-0596-4a01-9528-6ba0656fa0d8",
        "cursor": {
          "ref": "31747261-03bd-477f-8941-47a3d0301095",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e62c6d7c-7cdd-4dcd-8c9b-0889d390775a"
        },
        "item": {
          "id": "78df972e-0596-4a01-9528-6ba0656fa0d8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7ed2bb37-b938-4a12-9152-6b24ee9f72d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a71fd-67de-4882-ad8a-3affd411d501",
        "cursor": {
          "ref": "e46cbf3e-f08d-49cc-a9e7-3c63fbd3263a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7858ffdb-ad09-4a49-8099-db91da4c4fd5"
        },
        "item": {
          "id": "3e1a71fd-67de-4882-ad8a-3affd411d501",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "24959573-4011-4dab-a593-4c38994be385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc864a2-3de4-46d8-b99d-68b0558b22c9",
        "cursor": {
          "ref": "4846df38-8d04-47ae-89d8-5483457fba3f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4bebe959-af59-4450-b161-677ca58ee16b"
        },
        "item": {
          "id": "ffc864a2-3de4-46d8-b99d-68b0558b22c9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e3accec9-a272-46ee-a5f9-62e26fa2871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f180ff-1acc-4074-88c2-76bd3f41f036",
        "cursor": {
          "ref": "cd30970d-0a9b-49c5-99a3-da55197c257e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f6cad927-753c-41e7-8336-3a1600dfd068"
        },
        "item": {
          "id": "84f180ff-1acc-4074-88c2-76bd3f41f036",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a95943f3-a1f7-4bf8-95ce-684bcb7a3424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f58fbe9-cd4a-4505-9412-cd6b7dea33f0",
        "cursor": {
          "ref": "1299156f-eb43-4f4f-b838-4e7c6e4b71ec",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c620bcd8-48b8-4fa3-8c50-c82bda7439ab"
        },
        "item": {
          "id": "2f58fbe9-cd4a-4505-9412-cd6b7dea33f0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "43b85f08-dfd7-48ff-a95a-c8c6a5804e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698d5f9a-a5d3-47a6-a640-71e9f2e5d867",
        "cursor": {
          "ref": "fec0c246-6361-4ba6-a172-94698c132eb2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "234f51ef-3586-49b2-8147-3a3b98d850df"
        },
        "item": {
          "id": "698d5f9a-a5d3-47a6-a640-71e9f2e5d867",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8e822196-16ec-4653-9c56-80f80229a4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e848e52a-e76c-4f66-bbff-fa94fd8a8e0f",
        "cursor": {
          "ref": "54c7c6b6-c88c-4372-9328-405ed983dad9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3013e5dd-05b7-4c35-aa69-882f8d47ac7d"
        },
        "item": {
          "id": "e848e52a-e76c-4f66-bbff-fa94fd8a8e0f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "79ef3762-9e5d-4f48-bb01-18ced9f44b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a4056c-68fc-4c24-93a7-5af842413078",
        "cursor": {
          "ref": "e35b891e-795c-4f77-b042-ac3d48b56e63",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b6cc4c98-0c53-46a9-898a-c01f5f449bfe"
        },
        "item": {
          "id": "d0a4056c-68fc-4c24-93a7-5af842413078",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "343263d6-3215-44a3-982a-6cffc907aec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1332a901-6071-4784-a9c8-4adc49dd14e5",
        "cursor": {
          "ref": "63630953-193c-43dc-b670-0e820f674be6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f08f50cd-66b3-4cfe-bac5-83e5b367b79b"
        },
        "item": {
          "id": "1332a901-6071-4784-a9c8-4adc49dd14e5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a52d38c0-fb25-4ad6-bb5e-108680cfc7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ed20ff-4530-4a8f-9683-0249af6ceadd",
        "cursor": {
          "ref": "62842539-19bb-4639-a2fb-d0c7706e6097",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "797814ef-45af-413c-b2d7-2a2bb5210084"
        },
        "item": {
          "id": "c6ed20ff-4530-4a8f-9683-0249af6ceadd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fbd1c8e8-a844-43a1-b8ad-264e96117882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadaa13b-05a2-4c56-acb3-8ee3a4b3cae0",
        "cursor": {
          "ref": "96d98a26-91ab-438e-bece-f668327f836d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7f91b383-cacc-47b9-9231-c5b3ceed8c4c"
        },
        "item": {
          "id": "fadaa13b-05a2-4c56-acb3-8ee3a4b3cae0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "db934349-e7df-4a10-9ca0-2c86fb7d7fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56744c9a-5925-4ea0-aef4-9caac9f88bb9",
        "cursor": {
          "ref": "4538d657-239d-45f3-ad83-99371500a1db",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "03d12ca9-a985-4d0d-857d-a58a0dc338ed"
        },
        "item": {
          "id": "56744c9a-5925-4ea0-aef4-9caac9f88bb9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "12691163-18ce-4078-abef-d98ec2995d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2492837d-30c5-48c3-84a4-460b0faa657c",
        "cursor": {
          "ref": "a7050c3e-2efc-43f7-9c84-7c5d944a0bbd",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "014f8f80-adb0-442b-84ed-d0095bd6d07a"
        },
        "item": {
          "id": "2492837d-30c5-48c3-84a4-460b0faa657c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a120bae3-2cf0-414c-aa3b-c6988dceaf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c60e84-5eea-46e4-a226-969656758f47",
        "cursor": {
          "ref": "d00ffe9a-8d84-400c-acb3-b1ac2b7e6e33",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f995b980-0763-4f7a-a66a-84c0afe05672"
        },
        "item": {
          "id": "f3c60e84-5eea-46e4-a226-969656758f47",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bc144fd1-3110-40ad-bdbf-050a0b6112c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63926973-0900-442b-9d66-68451944d532",
        "cursor": {
          "ref": "63efc1bb-350a-471f-a214-8b3fe94f6338",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "dd882699-be98-4c43-afe5-17ec17593480"
        },
        "item": {
          "id": "63926973-0900-442b-9d66-68451944d532",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1222f517-efbe-45b4-8b54-1917a261bd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2dca9c-a835-4c64-8d5a-0ed216f02671",
        "cursor": {
          "ref": "1b1cc955-054c-46ab-9af6-0d6bf4ebacb0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "73c30b29-ff32-4dea-8321-680c80991a45"
        },
        "item": {
          "id": "ef2dca9c-a835-4c64-8d5a-0ed216f02671",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "329af5f3-9bc6-452c-80d4-0732c57f0b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c844e534-edc4-44b7-ab49-51a45c4521fa",
        "cursor": {
          "ref": "7e24a700-a812-4c87-a1cb-788b839e4ebb",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "524ec9e5-612a-4053-927e-d5ea2d4a3000"
        },
        "item": {
          "id": "c844e534-edc4-44b7-ab49-51a45c4521fa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "702d6404-a551-4d8d-b208-3c36710a7206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40035220-3014-4418-bf05-79cc7ddd3892",
        "cursor": {
          "ref": "41b6c86f-0bc5-4510-8bfb-33a40aa02411",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "384f37dd-6986-49bf-b949-eb2e85363840"
        },
        "item": {
          "id": "40035220-3014-4418-bf05-79cc7ddd3892",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0ff72021-a6a2-4818-9176-4caf687a296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa0594c-4b69-426c-ae9c-1e7c6a2ec033",
        "cursor": {
          "ref": "26459840-2bca-44db-aa43-9ca5faaaebfe",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d85cef8f-bb60-45c7-a068-966e6878359a"
        },
        "item": {
          "id": "9aa0594c-4b69-426c-ae9c-1e7c6a2ec033",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b952f937-4190-42c0-8cca-9b85735612f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f673d2-7603-4aa4-96db-dbc2062654f6",
        "cursor": {
          "ref": "0037e15b-5234-4e24-b6a8-9c7991480983",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fa13f613-f91d-4e5b-95eb-a93731565aaf"
        },
        "item": {
          "id": "46f673d2-7603-4aa4-96db-dbc2062654f6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "41bb725c-3e45-472a-b82b-3fc5b147ff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113957e0-3b7b-4009-aee8-cbfcd912a706",
        "cursor": {
          "ref": "6950251a-fa28-47b6-bb84-a58644c87dad",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2330ce45-5e64-4cfb-80ea-9664d3c504fb"
        },
        "item": {
          "id": "113957e0-3b7b-4009-aee8-cbfcd912a706",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0bb020b8-7d52-44b3-973e-f8851157aebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2927c387-5517-4cb5-abd7-6f000c89e7af",
        "cursor": {
          "ref": "9cc95f44-c1de-4b5e-80af-efbecbadafce",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "96d71332-bc5f-48aa-bb06-ad029759cf6b"
        },
        "item": {
          "id": "2927c387-5517-4cb5-abd7-6f000c89e7af",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d5006917-09bc-4695-9f5f-95eb2d5178d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a128c39d-c8fa-4c00-8c7a-2a1a96fc4c9d",
        "cursor": {
          "ref": "a164b5c6-0a35-43ef-b99d-002409f2bde6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2c5c3ef9-f4a3-49ee-94ae-e5d78152ee02"
        },
        "item": {
          "id": "a128c39d-c8fa-4c00-8c7a-2a1a96fc4c9d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80011d33-0d18-431d-b605-ea1e195151f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38ce8c3-b76e-42fb-a6c4-5eee6003fa06",
        "cursor": {
          "ref": "171441ce-f0b6-4b4b-88a5-5faf0f83e656",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3790d837-9323-4d1d-9364-45c6db1d4969"
        },
        "item": {
          "id": "f38ce8c3-b76e-42fb-a6c4-5eee6003fa06",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b02937b4-6f7f-4541-a234-36e3a0fc3436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29434813-8273-488d-a22f-633590b36df6",
        "cursor": {
          "ref": "1bb9f4ff-3e6c-47bb-9e0a-ea5a4ef66f69",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "33ec0136-9394-4223-aedb-614f9a9d159c"
        },
        "item": {
          "id": "29434813-8273-488d-a22f-633590b36df6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d699ebc5-2bea-4234-9e0b-85761d2d3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9540f10c-fda4-48f0-93ba-23c88bcbcab1",
        "cursor": {
          "ref": "1ece9991-da0f-4c26-be0d-7a29ea2313aa",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "970112db-8386-468c-b2a6-7f33601cdfa2"
        },
        "item": {
          "id": "9540f10c-fda4-48f0-93ba-23c88bcbcab1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "09c3cd64-bad3-4df2-a3a4-7c79a058b347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0fa08e-591a-4ac7-88b2-b492c0fe2127",
        "cursor": {
          "ref": "11cad27c-e889-45e0-bed3-933eeae85f90",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2568b2d5-9d94-46de-9bef-2b49667e50b5"
        },
        "item": {
          "id": "5a0fa08e-591a-4ac7-88b2-b492c0fe2127",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fa6af08c-9222-45c2-b594-3747a8569cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6515df6-8a4d-4669-8d4d-ae8940090e3f",
        "cursor": {
          "ref": "9ac7a715-9028-4162-b032-d4dfcafcef85",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "936d12cb-ca3e-4bdb-aba1-75abda34829e"
        },
        "item": {
          "id": "e6515df6-8a4d-4669-8d4d-ae8940090e3f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f638b9fb-7894-4f68-9b6e-73906cddf4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59726659-da38-40a1-8846-db06341f865f",
        "cursor": {
          "ref": "d301ac5b-9831-4cc6-9f3b-241cdde53af8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "43784430-7f1e-4611-adeb-5b3c75af753f"
        },
        "item": {
          "id": "59726659-da38-40a1-8846-db06341f865f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7106e46e-6d17-469c-b114-a5cd7c40ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ca08ea-3ad7-444f-9720-c3c3dfc2ce6e",
        "cursor": {
          "ref": "4b1c0007-6606-4be2-9c5f-14104af184f8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e69e9387-d3a4-4e77-bd7c-4bb695ca13d4"
        },
        "item": {
          "id": "75ca08ea-3ad7-444f-9720-c3c3dfc2ce6e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7e4d14ed-d566-4750-9195-6bed97c102b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d864cfb4-c482-48c0-b296-5abe4c0184f7",
        "cursor": {
          "ref": "b4ebc684-460c-4eda-979e-d312acb4b1d7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f23f742d-9028-4a24-bf8d-a567cb507a96"
        },
        "item": {
          "id": "d864cfb4-c482-48c0-b296-5abe4c0184f7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c3591177-a0b4-4d88-b3a4-8d4197dad218",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e3857e-fb0a-4aaf-bd4c-4d5df669a066",
        "cursor": {
          "ref": "f676c665-f613-4c1d-ad1a-02164ef14acf",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aeaab6a4-a5a3-4d69-830c-1db4dbf629c0"
        },
        "item": {
          "id": "f2e3857e-fb0a-4aaf-bd4c-4d5df669a066",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3d82d974-3088-49fd-b11c-828f0ee8d8cf",
          "status": "OK",
          "code": 200,
          "responseTime": 3270,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fdd8d1-5074-45bd-9df2-e0c31d222955",
        "cursor": {
          "ref": "2e3fcaab-3e7a-49e8-a109-b06da80455a6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "32663711-740c-4e8c-8f06-e2400f376242"
        },
        "item": {
          "id": "22fdd8d1-5074-45bd-9df2-e0c31d222955",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b4202128-bd06-4b2e-85cc-7ed3815623f4",
          "status": "OK",
          "code": 200,
          "responseTime": 2496,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d882e8-6be0-4ae0-a265-360bf3593529",
        "cursor": {
          "ref": "d9ddf4d9-65f0-4a47-a36f-10661af12317",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4643e056-ab90-4070-b700-ff706b705e77"
        },
        "item": {
          "id": "22d882e8-6be0-4ae0-a265-360bf3593529",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e167bd78-506c-44ea-9158-e7af724d87ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d882e8-6be0-4ae0-a265-360bf3593529",
        "cursor": {
          "ref": "d9ddf4d9-65f0-4a47-a36f-10661af12317",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4643e056-ab90-4070-b700-ff706b705e77"
        },
        "item": {
          "id": "22d882e8-6be0-4ae0-a265-360bf3593529",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e167bd78-506c-44ea-9158-e7af724d87ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f374c441-81f4-41ea-8e97-12106821151b",
        "cursor": {
          "ref": "1604024e-6003-43b8-98fe-8021501c6e8a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6ffd22d0-94e9-4d28-a63f-226e7365da14"
        },
        "item": {
          "id": "f374c441-81f4-41ea-8e97-12106821151b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "93dd114b-17e0-415a-b929-02e5603f046b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf5bc8-fdd4-4a61-95e5-720398887e82",
        "cursor": {
          "ref": "e1f421db-a542-4714-8272-8be472c8baa2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a098f47a-5dc0-43ce-bceb-bc13577ce1fb"
        },
        "item": {
          "id": "26bf5bc8-fdd4-4a61-95e5-720398887e82",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "13bf8c24-a92d-4088-ba38-13f909997d7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}