{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5466ea65-d5d6-451f-b718-6c477bd3ca44",
        "name": "Clear Cache",
        "item": [
          {
            "id": "62ff4f39-921f-41c5-95e6-65d569d46fbc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aeecff74-9746-4ee9-87d4-9cd295b1eaa5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8914f3af-9878-4a9e-8b06-2138c9cb3689"
                }
              }
            ]
          },
          {
            "id": "e5b92eb9-8a20-4882-8e9f-ee04452bdcb8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31ee1cdd-5511-4429-a996-b575668d20b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1979182b-3242-4b63-a05d-87915d204791"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6454d7e4-2378-49ea-8123-8d346e4cb4a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "59a4386c-4efe-425d-b5ec-67f00c3fc9d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33b177bf-5878-4eae-ad6a-73a066cadad1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42ace74c-9dd8-4260-81cb-04c4047313a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc12560c-f7d7-4627-8a86-d5b28d10c8df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e6aa517-5ef4-4aa0-87a9-6f4419d54369",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a6c50ef-62bf-4c89-ac3d-43c94da18bb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b8a6f13-bba5-4bd0-983b-d7b499e584f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3026938c-9582-44a6-93a5-edb3957588ec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c392542d-92ac-4a41-96fc-1ee27391cfa2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "73b3efa6-fe4e-45c3-bbfc-cecf03b55d00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "657c211a-e224-40d9-816b-d69f2e6978a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ebca3ba-799e-48a6-afcd-013380f452a1"
            }
          }
        ]
      },
      {
        "id": "ad7b4ea4-b4da-41cf-8220-6cf012cb6e77",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7e796285-9718-4991-9f5c-8e9c9910497f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c496eabc-da3d-4a35-ae89-69186f858fc4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79ccf717-177a-4629-bf41-98ca055f0f90",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d5752c-4d82-4da1-a198-167bb9d7f452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1ae83f6-9522-4969-b2b6-e343f63ebf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5528b62e-709d-4155-889b-77aab50ca2e2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aed7aba-1223-4551-b799-391abe3896e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20fd7da3-994a-4c11-90ef-5c97190fa71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e59beb5-53bc-4917-8940-86b6e68ad960",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb795568-ffcb-458f-bcd9-3b39a9db4e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "111036bd-6084-4667-a795-65c6ef069eab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb7b4bb8-aba0-40af-9ef5-cf4d6866b65c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f815add0-aa05-48d3-83bb-830ebee8b500",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1b06a4-571a-499e-a5de-558378ef919d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "598848ad-85de-472a-bd5e-020256b420d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48423771-0857-46fc-9893-1c373937ed9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de580ccc-a612-48c0-a0ee-9ad02f1ea106"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d45742cf-a665-4db5-96f1-aa5f15052581",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e15a3d9-a790-446b-a348-916bc9c57f75",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcc21be6-d7ad-4a96-9859-cd2c71292731",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5c093425-0d6d-4f7a-aeeb-0f431d414e27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfd56f5e-5274-457d-a8a7-b05d293de973",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b19f6f98-267e-4d66-91e3-1868b76f72fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6213463c-d36a-4251-9454-68f7826d488b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca0d6ce4-dfd6-4f88-827e-46ab5f8bd299"
            }
          }
        ]
      },
      {
        "id": "be52aa48-bf9e-46a4-83ad-dfd0e1664399",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3162b459-60b6-488f-916f-d2ffffc9febc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3cacb1aa-e2d2-4183-99c0-f7352b986cde",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3c6fab12-57ce-48c0-8204-0a02361ede86",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58234067-a9af-4620-96ed-c86f632dcc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8ca5e6-a959-4ec6-8511-14997f7afc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9ce59c-ba1a-4802-a787-663847421582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac43c501-483d-40f3-be82-427a8975a9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663d0c24-8f6f-4bd5-9610-b8e6b6a985d1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174af6f4-b77a-4554-a357-cb9c111cad85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ec0781-a8ef-4d95-9c74-1f53647ed681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4671487d-58cb-423b-9a67-55ec23ac349a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8d15e9-d215-482d-9822-ebb4f3aaad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461ead40-57ac-493e-99b4-2b3f9f355ad5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918b5857-a630-4581-8079-d3d543fab4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa83a43e-1da0-426c-aaf1-f6fd0d66cea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10546284-b4e0-45d7-99a0-d4219fb25a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c15b087-0ffb-4e55-8cb3-687baa60b843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aba108-7b85-4228-b2b1-d811b40bdeae",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4c9247-ef13-4a91-93d2-fba309e60489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a6acf3-0f56-429f-8e1b-13ccf902b6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777797e3-51ee-45bc-b2c5-6cafb55e855b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3a2cd2e-c32f-470c-bacf-dd5d40c36591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d915661-e946-4468-8ce6-59e5022e6334",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61836037-46f7-4bfb-b522-7d57ee282a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79510cf7-38d4-4c99-b843-eecacf8647ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306637db-56c0-44ba-a482-9a08abe289fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef1edfd-5b03-4e81-98c6-89ff8abeb17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ee009b-cf3b-4b89-aa3f-de3bae829ded",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5528cad8-f972-4a09-9487-472cb763588b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee0d8cf-ddab-48a9-8d08-8ff8a238b3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4780a5a6-f550-439e-8534-68460505289e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "626eef9b-bb63-47ba-9fb9-6484d92cef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dabe4f-5d06-4ec1-9aef-2dd35cb0e1e5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57fa83a-b517-42bd-858c-bc4d219393ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8cfeec-3941-4cb8-b6e6-8bda9bb4a6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcb5bb1-0453-4177-9061-f6537736e543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aa64dcd-03f3-47a0-89ab-c5fe2ba62d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17860592-84f6-434a-a721-3f924a81fc4d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c551714-1870-4b56-928c-43f03256a0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ed370b-b91d-4f50-a915-bd03bdfc13b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67209a3-70e3-4f53-8654-f523940eee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cd48f39-366b-42f9-b43c-23d8057e1f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7521bb78-fc17-4bc3-8089-faf60552be59",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ab6241-d2e4-4c86-9dd6-b8b5c9f824f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a60ed52-4f66-4ee2-befc-7eace6a5f32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b8318f-3af7-4ec2-bb34-607a4a293990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6c812ae-cedf-4be4-8b3d-832d5d7156cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602aa218-0f02-4fad-9c14-c050ecc3de14",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152e6457-d5bc-4082-9bdf-e6bda8a273d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188f3845-5c0d-484e-b578-075a1ed9eacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bd9120-8983-41aa-9688-15e729483795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da19d01e-2562-4c24-af1e-7d755a38db02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148f35fe-67ad-4358-8cb2-77c3e60572da",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091c11e9-087f-4548-8d2b-68c3073950ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2299d756-a6f1-41b7-8535-4afc0eeb7ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74917c7f-3275-47f5-95ac-b96017b31506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8a99738-f922-4378-938b-0b5698fd0699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdbe4b0-fd93-4e9c-8822-b595503705e3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b14a25-18b7-4f6c-ad45-4258d49f8621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7907ba4-56da-466b-bba9-c5a108592ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e68b426-86bd-47c7-b289-5dad970dda83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38581d60-cf11-4142-aa04-796f0f9eddd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0c39ef-e7f3-44c2-aae5-cb5d03648aa8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88e883c-381d-42fb-b276-71c1041730e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ed0579-66f7-4d92-95f0-383db4859bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59d1252-1570-460f-92e6-64a32b21ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31fca293-21ec-4060-a3d8-3b85ffa6aa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e37cb0-25ef-406c-a973-96bfd7003aca",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36c4816-0741-4de1-8418-4247a164c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9058ed39-4fa6-4164-8c66-91be8b328fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bce7c0-80fc-4551-82e6-005428f5d158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf6054d2-2da0-4809-856a-e57f92138315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa669e0-5f0a-4833-b44a-f21e63d7bae8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bdd417-a233-466e-be4f-bf851e60f109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0897fde3-f367-441f-8648-376277811950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eba3ed-c322-449e-8503-6b3178c2bc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fb863e5-bcdc-4822-8223-3ecd603959ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6a102f-114f-4eba-87da-42a19649b5d8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cac9d6b-6232-4937-a18a-cf7765835286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c981779-f687-4c47-940a-895c1e6dda0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b628eb-151a-4d13-9b75-375b8832714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44cadaae-6d79-4a55-a04e-1dc70ede17d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a141a8-ae8e-4922-b4f5-64bcfa8d8357",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae28c8c3-9d6c-473c-91cd-e564d07e6358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7263edc0-af24-484c-9e48-c1071f507a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c384404f-b582-4b51-8a75-63d56f1ad752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7021ba68-a5c8-4940-b824-03de66f53a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f6da0a-d81f-453b-a3db-69f699b39304",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd47874-73d6-444f-b7d3-8d97d5109501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6be466-730f-4d88-b64e-bf36dcd1b128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ec27d2-4b88-4c65-b747-dec0b61f17a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c24c0e8-1868-4a8b-88cc-74bd020cc1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9407b5-a59a-459a-a194-3d01ddf50ff7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969c83fa-7407-4272-9eae-8ce9ed901cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d88991-8da3-4130-8d26-9f6d5551f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd36ee2-dfed-4d45-b04c-14f5a7c74deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da1cc45-acaf-4e0c-951b-a79cd8478663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c084aad-f815-4bfa-a58a-338bfb1892a5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee83843-ca54-4d7c-b3ff-da059541a928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf0a6f5-479c-4103-851e-94e3a35df589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27fb115-92c1-470b-af03-0aa471ee57c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26e3134-4d68-4976-a9f8-0fede129227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5115b6a4-b195-4bc2-91ed-8eaf1ddb6b25",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3403a34d-8641-43fe-a79b-68573acf58aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565020be-66cc-42a9-b065-9a0c86d6998d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128de9eb-d62e-4d5a-a3e4-212d58ebc580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c74d9870-ff17-4fad-9f3d-a67d4241ef15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e518fc-d1fc-42a9-a34f-f168b36918d0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7bb072-7512-4f48-a17a-32c4270e9a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2961a66b-d87b-4f4a-aa48-ca831ab4845c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02ecd24-dad0-46b0-a910-d34595127489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e1500b-be62-4ee3-b7b6-1264d3429e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89b12f6-3adb-46f0-85ae-fc01cf505048",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c8bf5d-ddc8-4ebc-a3b2-af6626b99f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88de777a-014e-407d-9949-4e9f96131371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6e3186-d9ac-4ed9-8ce1-308327e4b1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0ff8ee-ad8a-49e2-aeba-fd2aa335be2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873a7979-2580-453a-aa36-be9325aec6b5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d67fb5b-2ca3-40d4-941f-f9fce8590a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f469c7ec-15f8-434c-ba53-001aa5828873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3283a87b-2eb8-4700-b208-90cc0fb9c3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d2e5b6-cf0a-4ed5-b90d-1fc83f6a8c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a3b0a8-b5da-404b-9b1b-6cc416c60398",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2603164f-94ed-4784-a50e-65c955c6ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d47deb-c471-4198-8f18-7358a9c134cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525ea1f8-24b9-41ff-a8b1-e7321867ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d607d91-3e1a-46e0-9e0c-bc929eb70bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a119b4e-ad04-4260-833c-c6955d6cff88",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bb3d9c-929b-4471-b1fa-8b2f3afa09f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b93e91-14ce-4a3d-8a31-6daf36f11a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6516b285-5a1f-483c-9769-3fe9084c556d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad435d9-4dfa-435f-aba0-c9678553c33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fabda57-b9e2-446b-bad1-0912d80e1e36",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05824e7e-b0f8-4286-83de-b8b1852ce3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4540670-0f1e-4ce9-b180-45aa0abc69ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbba81a9-9242-4eb7-8f20-a7e9f6b4ccb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f0e423-bab9-4b82-b775-3005a194af42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ae45c3-7251-4947-9856-bf27e64d8642",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2246b8b-e40a-4aff-8516-4736b272fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0481aa-9ae2-42e5-8d2d-ab50015463b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6908a0-13e7-4d71-9ccb-be2507744ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70775bf8-34cf-4e39-b6cd-09b8b1bc9e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9988e4-54c8-40a2-bdb9-467019c0675c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cce136-adab-478c-afcb-2b1cf515d160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3325e81e-888e-4f4c-84b8-3d7ecec3dc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48a72d3-2824-45cc-afc9-9414f36bb10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a66b35e-e6c8-4039-b958-efd192e54643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03119946-6b1e-4675-8f6b-79e7f07e3337",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6999cca-80a7-40f3-a4a5-7a5dc8e7a897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e73229-a715-40a5-82c0-0e80a5c79277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e3626-5d3f-4a52-9eef-90add8bc90f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe415ee-cbad-4921-a99c-0281322c7c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f3556d-84d5-4d16-b7c5-19b305d81d8a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ced2ba2-f47a-4ba0-bfc4-04be04bffe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289664b5-3eb0-4f1b-9d7c-63cf5664a4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b5658e-8e56-48c1-9381-64fefaf955c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f92606-9d26-4276-9fea-100ff95d5819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be69857d-6ac3-47e9-bf44-f04f6b26375c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daac424-f9be-472b-bd58-ad66a6727c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d060658-c792-4449-8144-a5e54f9331c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca20ac7-291f-471c-b063-76312455dc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c7ec1b-6e84-4151-8a3e-07e6f61fb3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250b767e-b85a-4f83-8a4e-c48d1683d6f2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbd4c52-563a-41bd-b63a-bca3ad2fbbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee0a5bb-cad5-40fc-8fde-07ac9bb72fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2403a0-9226-42d5-88d3-5f0dea13e430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59b1f4d9-ffaf-4f30-975f-a717271754c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5818e6cc-f55d-4bbc-805d-4b6f150fd147",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25ff824-184b-465f-aca4-5af77eff8b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194cc7ae-4be6-4530-936f-d1c96eb7446e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6aa4c1-3697-4eaf-9110-ada8c82c4efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59bdcb99-99df-4444-96d1-0cd11c887cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b41284-edab-4135-b467-1604574dbd4a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a381e1f-11e2-4c91-898c-be8378d2a5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6d95f0-8015-4912-92f6-03e3bd40313d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcc325e-fe6a-4776-b8f1-c0e45791cf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1e39d0-5c00-4351-b406-9da9962fb55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e2a31f-80d2-425a-8347-3ea5b49e36e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33764484-b19b-4df3-9b9c-d9e5fbdf52a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ebc2c40-800f-464f-b0c7-beb7c567e87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489aca0c-1bbb-4444-abd8-8f0e88028ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d76bf808-afe1-4046-be11-46f517092678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce13828-dfe9-4b11-bb73-f5adafa4b9c9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa7835d-e3d0-4835-8d9b-6c6ad7ddf42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2beed2d-459c-47e2-adac-7565a2dae0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4390b610-894b-47a1-bd28-3e702c81cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe7d8ff-5cde-4d08-a869-2fd1225243d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c993bd1c-b91e-4240-99f0-caf60b7747fa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea5a1e2-824f-410e-a849-df976c2a63d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee1bc69-9324-4ed7-8692-7f433238d403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec42e3d3-5577-44d1-abec-5627585b5451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8707b2-11f2-48ac-af50-2e436e33fc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787c6c01-e04e-4937-b2d1-6787f1aa565c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dddd525-a55e-499e-840b-56a390c3a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599b47fc-9d52-4076-ab4f-01c1478e6669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d912dc-5ff8-4231-8280-3e4670f71242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9964cc74-fe78-4ce1-8f15-56919c6ebc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c6e44b-6bb9-4e76-9783-59b028492f6f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490e6c9d-73e8-4a37-99df-9be3a74b3423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5f8b6d-6b45-437a-b7e2-bb7aab778dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a597449a-7c29-4b13-b48b-37f4df442be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69bd1b2a-b24d-4b6c-a6ae-04622058dbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546ddbea-e188-4b57-889e-1bb722cc8265",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc986356-a342-4919-b5ff-8b48b67e8733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ae35f7-1cd6-45bc-86d5-96deacdf559f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9709aca-dbe4-4052-a161-939bebc77c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5f4709-7adf-469f-a8f2-764874ca806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436f46cf-5f24-47d4-a790-62388a0b961d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df7d60e-243b-4fd8-9869-7a201f2c1279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80206fd1-1c2e-4e3f-b5a3-1c2046d86a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb408c9e-bc15-4f8a-a429-d12df7bd0611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "41c44053-5202-4195-8eec-bf941e0c7dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ef3fce-42be-42fa-a65a-d27cb8aeab11",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e4fc5c-0740-4843-93e1-c01dd6e8b5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44311df7-a575-40b3-abe0-55001ca649d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbc8d9d-374d-4346-8d7b-4021019b64c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e22b460-0e68-40b1-9565-d48805fb7994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01599742-27fb-427e-ba7e-8ebc5ece428c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9836000-9b6d-4da9-a73f-8e82a1b8c18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f096500b-96dd-4f45-9a30-0e7ba0957003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0002688a-6b09-4adc-ba61-ab5c32e989a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3e76c8-6dfb-47c4-8e21-4a352ea8b06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a461f7a8-ea44-46b1-b87f-865265a46aa9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5ecc90-43ca-46bf-a9c4-b480b2b27753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d48449-47c8-445a-9f1d-ba4168c700ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f77afa3-529d-4293-8bc8-a80cc5fb641d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7459f93c-b2fb-4340-83fc-bb3138f0152e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b77fa05-bc5e-4865-8ced-bf7f8102eb4d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b72f4e0-5135-4a53-bff0-e2ea69f0ce23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de932a5-1537-472d-a01e-6e9a09c09403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b463cf-755b-446d-a633-78b454e0c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b4f497-2d0c-4440-be7b-389163bfb582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c3ba19-3c02-4fe4-96e3-bcf68314ba5b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d008d475-62bb-4d8a-b4da-480d809848a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf064d8-6071-421a-a65e-4fef7c24b9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4555df-c293-43a0-85ab-f99377c6f1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82e10fc-66a0-41c3-9baf-5cff4aec150b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d944a-01b3-4134-8d4c-c4ef2b69f7ca",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f50c5fc-dd8c-4e7e-bd66-b185057bf948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570c740e-88f9-48a9-9bb1-f88f92a82712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e82139-99cb-4458-9975-db58d89f1619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b34544a-8991-46f5-8beb-5d6de2054583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd3487d-27bf-4de6-90ae-deca5fd3e7b9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423dc7d7-29c2-4d90-b8a7-7495460d7f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4226049b-3fb0-4395-9ee5-b04b7a7843b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edfb772-6158-4571-abeb-d67f1cb5b535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74922f73-c069-47a1-ad72-d98a2a3224f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1abb54-55b1-42a1-b657-5e33ffb4c89d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d51b2e-4e03-4c68-a367-e262bffba875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19015b9e-bc3c-4586-8629-2c8838cc07e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac381c70-1832-4a34-a528-c5c08e94544b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4459cbc6-4bbd-4efe-9d5a-16761843e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4df4e6-2f2f-4b66-9eb9-cc10bf286c78",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917fc148-5717-4b5d-b584-270ecebe7752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7550aab-2ea0-4546-99f9-de2168e7f438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362e28cd-874e-4001-aeb6-0075fca1f71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "923d687d-ea43-4941-9f41-34012f95bfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409adef0-b292-4105-ad7d-0479a1c05026",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0211d4-69ab-4be3-9608-3869fb2752db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7fde0c-17f6-4eeb-8d68-1f676d204a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7868ed-694d-4ccb-a66f-194bac32de8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c4ec3a-362d-4b75-a4bf-fb1033ad8655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4dc842-20cc-4041-a68f-e0da013dd40d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4ab203-fd2e-4ba1-b8e0-0dfff489a2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e818861-21f6-49de-b79c-afaea805da9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9af469-7ff4-4e24-985b-e92b9bc820d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5838f40e-8e08-440e-842e-e585b90c6a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4443f95e-869d-4508-b3ae-280787dfb7bb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0dac0-aac0-4bb0-bd38-169b5d8f1f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5420ba01-45a5-49e6-9273-bca64e2b2ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2904f289-d8c0-4fbf-b9f1-9469bc38b374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfecc4f6-04e3-461c-a6cd-121b23f8152e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa24511-8d2c-4baa-b7d2-d87723e5f94a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00c8440-67d4-4cae-ac38-8b759f7b60b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee83798-54ac-4137-ad0b-21df2fa638c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dacfdb-7419-4d25-b375-c6d7f6674ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb609adb-4420-4cf3-a09e-fa317d3106e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a188a626-cbe4-4efa-9e59-a521cd6ed36e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c122736-90de-46cb-b020-d593a3652e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04e51a5-c7c1-4322-a023-5338a8581d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c20d11-ad0c-4d33-882c-c85ee173b9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3fdabc-b227-4419-baf4-5df711d2f2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3969ad5e-032a-4aae-9419-32d246eea36a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79c1a8e-9dab-4a49-bdcf-63ede645cc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff16253-e429-4139-b777-9dadbb87da76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba210e8c-a72a-45fe-8e0a-0270335ac344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc45c3a-63ff-438e-b90e-f4ee5e010dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5d9d10-d279-4985-9e53-64ccbc567f3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d1ba0d-724e-4103-8c1c-8c83dd964346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ad8598-416a-40e2-9559-4ef28a5b91a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294ac17b-52fe-43e0-b5c4-dd5f5971c1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f195fb7-2a08-4431-be0f-0558c82a002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1808f60c-8d69-40f1-9f65-0846c1ffea5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0f9316-2f40-44a6-b493-ed14dc26201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfe19ec-ac53-41e7-82f3-1fdaef9387d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269a338e-38fa-4e93-92e1-509161d9733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a12b0e70-246b-4d58-97c4-0689abb2ed54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60faed11-276b-40dc-a190-a46620d14f9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9b10d4-0cf0-429f-b984-c00dc9402609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc754f39-9e94-4ad1-a34b-88cfeff64a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0b475f-885a-4d8a-9f6e-dddd21def92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb41cce8-5e53-4098-8b5e-870e844c26a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa569d16-29ad-4c39-88c1-114c5ea9efdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3f5e1b-4ae6-46bd-a089-34f4a3ef1a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356c975c-7f12-41cb-8fc5-e2a31d5e6c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72c2252-b2d8-47d2-9f38-e8d385a6fcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe5161e-12ee-4ca3-8309-8dce1b173b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b487f26c-c2c0-4088-b76d-b7ebadf9ba2b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93228a7f-2916-4742-a577-c55d5c9589ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5615a55-79cf-40b9-bd7f-53fae2d45358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81338818-ca47-42fe-8a7b-45c7360445b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "957481c8-0964-40fc-a1f9-ad8dd32be50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abf1cd2-17cb-45ed-8e0d-d7ffd130c288",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff2327a-4123-4f19-ad35-b356f08fdb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcef2ad-e96c-4a1a-9e6e-e03f24ba801e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85a476c-efdc-45bf-befe-493a04518c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfb0dc3-112e-4ea4-b3b2-22564970ee6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b0b6d3-dd8f-4f61-a6af-777948912cdd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b081fa-d6c1-4321-bb4d-ce8c519afdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8d9437-1a83-424f-817b-8d5505118b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b237d814-150e-4f94-965a-6a4691aada36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7a42d4-286e-4438-838b-0462ab7b06e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64009464-0088-4c65-88b5-b622ca7bc912",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c3ee63-ebff-44ad-9f54-32adde80894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4c9f96-1bc7-4924-a442-803ff5587eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8004ae-93a7-4569-a9a1-9ac715b386d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9431b2f9-fa5f-43b5-9ada-a0dcd6b6fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae24131-51a3-4611-b1e6-2fb47d98a91a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53109236-d714-4f79-ba9a-f8e6d624c638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa630563-547b-4e1a-b28f-f2881d987f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011c2877-8475-4003-9517-4e853e31d3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e52c9236-2c3c-4507-8c46-32d41ed1febf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baa42aa-f60f-4414-b7b0-553fcfec59e2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663f3d2d-16f5-423f-bb17-083ff3d3c3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9cb613-4e6e-4ca1-8daa-fa465c18f732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d3dd39-93d4-4ca0-8a3c-da382159f030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dde037-fd9d-4314-b8d8-2c45dbe32f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e31f72-eee9-43fe-980b-17681e6e671b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0749776e-5289-4f0e-b885-3157c4e7c3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c42c1f-c4f1-4d63-915c-365c5855ebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7104ae-d8d2-4c3f-bc26-50f60e890cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ac1bf4-2a39-4b94-a87a-881488b265f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f64260-a745-47fa-aa73-a5eeb9419679",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c068d74e-f30c-44e1-baf5-26edb0fa69cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb07bf1-922a-4b17-956f-752cf0dce6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147bc9ec-41a3-4528-8a77-77a8232a317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d6fd9d-f134-41c7-a587-51111fbca622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323bcef0-ee43-4384-bb46-d76d6cb9a693",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f46b93-748e-41b8-8b7f-5a505044f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36944447-5fe8-4a17-9fd9-e22f3153ecfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b34877-b0ea-4a73-8d97-c066b6c4eb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d49801-9613-45c5-b825-c69878dc5f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a404c15-6f8f-427b-9469-24d57b0b9ab5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00faae0-3d1e-40ff-b80c-8fc70e55938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d315255b-2315-4d29-81c4-6276afda442e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7743738e-b39a-4c88-8557-cdbd8504f504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78aad80a-d67e-4f3f-8dbc-9aa788ffd904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de1f62-4a05-4dde-b307-32cce8b22095",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e9185e-4f0d-4b21-921f-56c4f04f6f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be56ffb-dd04-4538-ab69-0d8552aae46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a52009-2f2e-46ef-b684-d71c335a457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d313a9-e5f3-4c36-9739-f93a2c540cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f396f73d-7dac-4599-9937-f4149b81033b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c39e7a-f95b-4886-bf78-df08db781178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503f4677-602a-4f49-8595-931e96adaa7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c129d18b-744b-4a7a-8955-23054ec43cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16d534c9-54ce-44d2-910c-8cb7f616a9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5510909b-4a89-4f92-99a3-5699d3f5c911",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b286627-60c8-4f90-9fb6-f414a95cbb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c1aba9-9c74-440a-8977-da0148a13071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0c9bc9-d20a-4765-ab72-2881f9bb51b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8c6b86-c458-4c02-8507-8f4ec0035575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9977f441-3f1b-44c6-ab15-04c62cf01814",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b50103-a678-4783-8f47-d187e1c24303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844043d9-97a1-47bd-a239-bc981303a137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76991588-4f7c-4a17-8e1e-f2c19b650842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaad787-1b74-4ef4-8459-560c5e5e502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2b2656-3975-4052-9783-04e1a5aaaba5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc55ecd6-737e-4a65-95f6-b8af8013e5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c69873-2d4a-441e-a48b-94c192ab035e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4ebdc2-a8a5-4703-ab67-68a1b5e7171a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b658f5-d51d-4d51-b864-62428acd82b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717c45d2-c1e2-4cbe-8a70-916f51d1ef23",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73a235c-e112-4228-8995-a3e74c2613db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98ccaf1-9c87-4a75-bd6b-9a86e58252da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca13705-6791-4b41-9f56-be12f38fb3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a931777-c7c5-4222-9a5d-5d46bf11cde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f31e3be-b37d-4a0c-b507-84ee6a5d41fc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15efff4-c1ae-4af7-8526-a5c44bbfb60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7a5f34-6226-4370-ac3d-153e64c10fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8029a5c1-304e-42ee-9272-fc2a5d781ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1ab688-56b4-4182-9f1b-dd00b5818270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a38d0d-84eb-4aac-a756-2c0aff1df246",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a797af-3796-481c-83ba-b6153bb472f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f185970-e164-473d-b5c3-64cfe505e54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d467386-ed5e-4f78-8369-3ff6f67faac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "282c9703-0a23-4745-a403-3e1718ccfc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a736e-4889-49da-805f-9a12188d6e26",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f266aab2-333f-4ea0-b56c-c4a9604c635e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc8f1c8-5f2e-4b80-b45d-e05c11366e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb9ec08-e416-49ae-8c1e-bfa524197f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca19051e-ee0a-486a-9c6b-01c836ad3cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70ac98-bf56-4870-8619-0cd7f5793bf8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72f04ec-c929-41b3-a1fb-3828492086cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e95c6f5-d9e5-45c7-80ea-4fa5bb7d0739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a63efd-3789-4654-9796-1756aa63512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a53c7548-4589-40f1-82f9-f6e406bc7154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28edccba-4045-4b6d-95e4-d661c9b8d475",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1c0d38-3c29-4862-b941-d2d41758bc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f513e97-d727-4761-a3bd-131e2f83e8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b034d2-ccfb-4d65-9af2-05558845201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c570a1e7-241c-4697-bdf8-5301f483f143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb03238b-a9f1-46ec-9ea1-a6bbc11fe827",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339667dd-d547-44b5-a517-10e7141bf816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d920ca64-3577-4b22-91bc-3eef97b7b7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de286c4f-4bb4-41eb-b820-b6753276f33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a2cc76-409a-4689-83ea-d3bfa3aa96f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bd3a9f-a12c-4fcb-a78c-7169406eb8b7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb0c476-e4db-4634-8e3b-b2cc574e8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1afa7b7-33d6-4434-8240-aa402d3c2935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bd513a-7e00-4468-b94a-1cc1a8834ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8556014-0b8f-49f2-82da-1cee7fda6ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc296886-41ae-4da9-92b0-f14027f8f0cb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d797d798-a89c-48eb-9775-40d0534cb1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2006e663-90c3-42e1-93e3-68dcbca82ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12741a-b417-44af-a708-d36c65be8704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10faccd7-70fa-4560-8e3e-51c74b628c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc46651-9bec-46ee-8e79-d551de96c944",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3380353e-bee8-4801-a730-72fad9011d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78181294-df07-434c-a217-83e2a4a5c960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1a15b9-4ee3-48bc-a5e2-50db7ca7e1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f15ddcde-a4f2-49bf-9f79-b22d47ff6775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f58222-e8bc-4e4a-a488-e92073e49431",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21ea487-bc3c-45b5-93b2-7714e7a9641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737dd215-f56c-4f68-b34f-d9b34aa65937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b2fea0-8516-4f4b-8b54-2b5d2ab2fa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c429fb47-4c68-41b4-b5f6-8b9879063cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78164e89-3ba8-40c9-8bb0-f281c917d24c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9615b85a-8a0f-4cf1-9d53-29f1f5cf3b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf87c464-13f6-4db9-a419-9f1bfad88599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5defa2ae-eb50-4e02-a2cb-5e917dc38c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9286fd27-030c-4bdb-ae01-c613ae2c3f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f39742-1287-4730-9c1c-4ff20eaa68dd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1a3b99-9787-44b0-b709-946bec6bcc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fdaa27-5f7a-4342-87f5-e178da19ec6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c4edef-ebf2-4181-9db6-9ab41021118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29543cbe-6df3-4a56-9eca-f612c53fa80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8271065-811f-4d39-a2b1-096240de4945",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7b0914-0d09-4a8d-a4a0-12e3d85000f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cbf7b6-d504-4749-a5d8-295cc3e5235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d472b1e1-f968-404b-986f-11f511b2ad86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4133ee-0297-44e2-9441-be164ed6bf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5162026-4e36-4281-a14d-aeb3559e5b88",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bca523e-a849-4db2-92f4-dd2ee92bf222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8035aa-d652-4727-8af4-967e9e20e5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09c77e5-cf4a-4416-a9da-b3742b7a17ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe9983f-416f-4a1b-aa15-7ba5856e4ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73522651-a67f-4cd6-82b8-dc0696ae8f22",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d539ff-59de-4098-8f09-7ef50bdb736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "139b0b1b-c07e-4b2f-b8f0-3e118a35ce67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0208771-2968-4c66-b4d0-df72a89bcbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a571f123-2dce-4820-97d8-15d74c80ebc8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07b25fbb-1e5e-48df-b851-4032728c0d73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cf1b607-8aea-49db-a757-7b9092445fd1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf87043-57b2-41d2-8fb6-7b1ed4b9107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f641b9d-73fc-47dd-a416-65074c942421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422e1f17-8506-4b50-8bbc-6dc66ae5cc35",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fe02387-1968-4c31-ace3-d914655b7583"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87be64dd-63e4-4ded-a00e-bffb2214f8de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae589e69-ce50-45af-b5d4-67644a004686"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd9be4ac-e968-4357-846f-b282cbd72148",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d93d872-a1e0-441b-a39c-213f1b68a2c3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79cf33eb-005d-49ad-a852-a691e91f4311",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d25fd670-6551-4366-a051-d81d813bee41"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cdb302ea-28f1-40d8-94b6-73270ff3a0fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1ca0188-3f7c-41ba-8b48-7d38e1c3d03e"
                }
              }
            ]
          },
          {
            "id": "03a32fc2-93f7-4b26-9f6f-45f59e0f119b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52f0df4f-d2ee-43e9-918d-f10b01d806b2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5568b087-9b57-4b89-ad52-ab34ba5317cc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddfbbf8-917b-4adc-a840-d79025e857f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "94c77b6e-0f01-40db-bcc4-28aea7512646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88b4a8a-3cbe-43d6-b88a-f0a4baea00ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512da51b-bba8-4b3b-92da-da7a8db6658b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51e68813-05ad-4eae-8704-b8ab63725496",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0497a294-26ab-4d12-b916-90731420f226",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35da28a5-3130-40b6-8dde-5ee0bc71b05a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "539d7479-bf42-4fa3-a352-ef25033cfd5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "833a0f51-b7f2-4a7a-9a7d-86f95fa54ad5"
                    }
                  }
                ]
              },
              {
                "id": "09bd6e7f-d796-444f-b4b2-cfa8d56b6307",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cb5bab4-744e-4f41-86b0-937100d87305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b113cc63-604e-48ec-9537-942ae26f6e8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c08e8c9a-a172-432f-b853-be733b3ccc7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa3794bc-4c40-41e6-a597-01ff67e1d395"
                    }
                  }
                ]
              },
              {
                "id": "0ad2494d-912b-453d-bc90-640635bd1903",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7270a47e-2430-4425-8fbd-0986ed5a3cd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12bcecd5-b74f-4297-ae52-f267ebcfbc75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5309c124-49cb-4bd1-9d2c-f91d5b7c00e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba72e9f8-7045-4959-8451-5d7eb9181236"
                    }
                  }
                ]
              },
              {
                "id": "ecc6ecc7-83e0-410a-be55-e5c5540076d7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61539ee6-8645-4781-b4f1-25f74757408a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e05028a-a113-4703-8f10-68e78c1167fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e3f230f-d922-4702-a35d-59cff648b5c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "41259bc9-79b7-4e0b-be05-570c7e772fb8"
                    }
                  }
                ]
              },
              {
                "id": "088dfdb3-2350-470c-8326-b305e3c9b022",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90660672-89b2-4298-880b-a52c8911121b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc7151e3-c1e7-45ee-8276-bad9435f77b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9935737c-6c8e-45dd-bee1-8a6c2fcba8fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "da2fbb8f-0a24-435a-b841-cb364a7e5f38"
                    }
                  }
                ]
              },
              {
                "id": "992dfe3d-2da4-49d7-8bb0-b8d6ce053c47",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de7e094e-d818-4ec5-8347-e63f4678c2ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98a0e758-d7c0-4a5b-b2c2-e40a3821516f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1c59723-ed6d-4d17-a609-f4d9fed6a841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec223db0-6355-4c96-b6da-64c27b10fe8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97775a3a-cc8b-4a0a-8b44-f59920033937",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b821192c-eac9-4d57-a289-6a8ebf8e68e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3a62b011-dc5b-4268-bb25-139f302670db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "336843d6-c3f9-4349-8713-28c3655f83e4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd5a80c0-96a7-43af-8d6f-bfe4904fd76d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dbc30628-9da8-46fb-928b-baa4da9a4f14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75bda180-a7a3-406c-9e3a-ed694e8bc5b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dc11aa8-6104-41ff-9371-5b5f7ed885c8"
            }
          }
        ]
      },
      {
        "id": "7d664ac9-c8cb-46c8-a5c9-a336d3cf7ff6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c5f6aae7-b272-45f7-ba78-5a3f49dc3bc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e876421f-4a4c-4ad9-b23b-8077c5f83793",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "199a4473-a4d4-41fb-8783-bf3db3650868",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53878a78-4faa-4641-b32f-17fa28bbc00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbd2e33-cb38-46f2-800b-c6c179717fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec44d167-11c6-4b3e-9118-ee282e504416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6f6014-a1da-49fe-92ad-e42551303f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe37365d-2e04-4732-89cd-db07e3aeaf84",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb42647c-00ef-4d58-be5d-62f98a7f1ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3c9f97-4d8e-481d-b52b-c9fe975fec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be74744f-d906-453d-a52d-02be0af1ef8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e98c672-d881-46d1-b0b0-57462057eef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27bdc78-6fc9-4bbb-bf6d-cae5a92a4996",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b10864a-d9b1-4ab5-a075-39b4f86dc992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb49e5b-b496-475e-ad84-dcd3134a2998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d103e4-43f2-41a0-94b5-dcb815b14764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d743454c-eae7-45c2-bc05-247f301ab4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f2ed02-2c84-4bd5-81be-53db354b8642",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081c08f7-1e23-4309-9845-c53bd3e72bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdba164-eb9f-46c8-b0d9-08f92c43f6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336852f8-51b9-4b18-93b7-91413c8004b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a21c340d-6fc7-409f-8d68-d773d62baf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddf447f-c174-4a60-8c9f-e37e7e4ae4d8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c831a5b-4445-4c0d-8daf-736db5eaee40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a4fefa-c67f-465b-b51c-30ade063eb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1129de3a-9fb8-456a-952d-9e77a2e54660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdad949c-7232-4415-b608-e4a401d5b2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503291b2-290a-4976-9922-d1af6bf46f2a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1f64fd-eb7e-42d3-a2dd-6698ce13c0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c619c3e3-21bb-49ef-9faf-107ff20619f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4c7091-269d-4c4c-bc24-46e2f133a059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45a128ff-a954-4b8b-af32-98714eed1705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badf29e5-b4c4-4553-b485-f8b9f0018f07",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3963754-ed5e-4fe3-8429-062474d25ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8442fd8-5df3-4d01-bc95-f8e2d6cf6860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d6fb2a-9146-4406-84d0-c4f569efc329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4413d97-da6e-4faf-a405-d23116cfc593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b3d8df-65bf-4fcf-995c-3f4959e760fc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0d9a25-29cf-456d-9875-4d7a3c3d8a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d205985d-6044-4ec9-9654-5011c2bebe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94c2f97-d1d5-423a-a12c-119779469955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b69f4e-af04-4c62-bab7-499a4cd28a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b14917-f417-45ba-9490-359789af5200",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5b9309-633d-45a9-b0e5-ead6b4d79e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed148006-5d7b-42a0-841e-3926d8c4ab2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3574fe-2bf3-47fb-8c08-0254b35f13c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "667e5e77-bb4e-4821-b9e6-9e5a0f65ef92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaa2a51-2c1e-4e63-bb3e-dccd9e11da03",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7adeefc-08a6-4e49-92aa-e8015f1acaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991cef77-eb49-4d77-a7e4-2f2c353b490b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c780de-3f2d-4f19-b97f-438a68b042b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de7c013-ae7c-45ac-b5d7-685b3d5b02ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07104342-8fcf-4cd4-b1f3-1c124b65d0f4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f1c018-671b-499c-af63-aab0c1c20fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff328e0-ec07-4ab3-ad9e-b65c28be99f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a072ec86-22b9-4986-b60d-0b4b5ec21cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8ab6b4-67fa-47e9-a621-3e9d4140451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbd5be5-94b2-4c20-8577-3a8b014bbfe2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3913dcef-5b54-4500-828d-3c6c3124be2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12d40d4-b89d-4427-be06-435e3a9dc8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2854d192-e838-42ca-aa58-e134e0b384af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73e88530-526f-45f7-ac08-97b8ba0a9a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538ed3c5-6da6-4d30-8b0d-f60dd36c77f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75a6acb-047d-4d6b-8ce8-d7b2c0d7e8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c47bb4-252e-4945-9676-0e674a793492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a24196-a515-4139-a43e-8fad6b4f1028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55681213-0819-4141-b0e6-2446b451f0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4be2178-5387-43ef-bb29-119855b63e74",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b3f437-7030-4fc4-a5dc-f5b564cc0b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af740a2b-c910-403f-bd2c-91a3e71dcdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc954b48-ab2a-4aae-a068-b720f7e95d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "887bf475-8f5b-44b3-9a75-616aaf0721d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab2ff2c-a46a-4be2-a22a-4811bc128de0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e0824-97d7-422e-acc0-364d4058ea83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcd904f-3d04-4973-9f4b-57aba0a9f3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fe3521-5594-4be5-adb0-ab57cf52ac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff6cd1b-21a7-4b21-a93f-a48e2802f4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb96e426-7500-4dbc-bbe3-6fb905b76315",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99ce500-5105-4149-b7a8-0bd9348caff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eda5236-7f03-44bd-b192-cbb4355d6140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5557d156-b4a8-4b5e-a32a-3c151ebae7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0b9300-62ff-4908-93c7-92dc9d802b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d50475-c63f-4e64-b6fd-3a217ed5087c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccf8abb-4892-4b14-b499-7845730504e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfcb50a-4687-4b79-b4ea-44f81f9a7ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b1a379-3b6f-4184-8976-40975542cb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "71164c0e-7a92-4cf8-bf44-ca105f45e3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31063bb3-9fe6-4bfc-b987-947065a38e5f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c128c9-ea31-4b45-88a2-1d3485fbc8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbedf50-8c28-41af-85ac-142a96943052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c0eb36-0e00-46fe-b001-5629da9f539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60987a0f-bc39-41f0-84e5-486d5a92948d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2425bca-5e42-486e-9aef-b509094b15bc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c32090-51d7-4bff-9019-a8ecb96066cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c211e5-4d8b-4a3f-9174-b1ad52c1074a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6b3fbc-35cd-4a3b-9fcd-642c76b2fc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4a73ba-9ff6-4567-b622-29cce0425a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c4a31d-c64c-43dc-95c6-442e330e0052",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc374c3a-2e74-4697-98a2-c99cfd8dd5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf733da-ab95-44ba-bd24-3d62b1cdbb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c199ed-ddac-4dfe-ab2e-84043bf5410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bf6425-02f5-4fc7-be94-3c0447187287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a89ae72-2842-4868-9db3-9b864d289a9f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4da69b-016d-49ed-a36a-205cb54811bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee3e9f0-1001-4663-bd9f-e54f81b6ff6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a164becd-44fd-49f8-8a8e-cd1fb1ba339b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06299cfa-5f71-4b62-8934-b6d9ef880d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a5e760-2de1-4c3d-82c5-386ad895e997",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02631e6-851e-4eee-a9e0-535be9469b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402216ad-5fdb-4442-9a1a-88962f34d7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabf1926-e276-46cf-a49a-431f604982da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c39a8cc-8f7a-43ea-99f6-76f8399d1fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2597f766-a50b-4880-a3eb-ca0b9855a639",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9134d14-17f1-411b-9376-9a7c8bcc378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a59203b-f5de-4cd2-b3b8-372935b399ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57401a84-8442-4819-839b-4fedec7e6d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c234f2c-d465-411a-90b7-b9aa8e35cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95841108-57a8-4e94-963b-e139d64bbab4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b83afce-bcfe-432e-bc08-48317e664413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7441f7-5817-4d4b-82d4-730468538a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fc28c6-1c5b-44bd-a72c-9f21fdd2bb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2fb999-d680-4fc1-84d4-4d75f2c7072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47710677-95ae-4b13-a547-e5c878371034",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23faee5-f826-4eef-b76d-127de1bead41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f68ad9f-56db-4dfd-9130-96b7f6f171cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2604bac-3df5-4499-9d26-83ff3d8146dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47aa9984-0267-4a9b-bf78-3063f71592a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ffd75a-38ea-403e-9e49-9066060c50da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27e4a93-e48f-4af8-ba1a-c6fa7037ebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2894fc0f-a838-410c-aa35-c4c02e7b68b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e092bf36-94a1-415c-9041-ae7eea91a93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fee084e-aedd-4904-88f7-a3aae08eb7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ca360c-465e-4c64-be8d-5ac8e0e0761f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d4e385-e88d-4e60-89fb-09dec2d9af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90b2fc9-550d-454c-b614-99bb69905041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8d5f2b-0ac4-4b68-b765-ea34dccdc8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "349739e8-7350-46e8-9f0b-6f7f304df0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bc2033-25cd-4d86-9f86-cc4adefeb5fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d6250e-4df7-492d-9c05-5bb15483a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3173b385-1479-4d93-a5c1-11af1cc3ead9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c7c30b-effa-465e-a371-0cda49d4b4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e24e17-ff05-4b32-b654-02acbeabc13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacfe763-2379-456e-9494-ceb742c134a8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4362b861-e23d-4adb-bd12-e1f5b24abacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e1fc06-eddd-4d22-ab94-6db96123bd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda4f1a3-100b-488e-9b59-4a2ccdffcd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af53bfb-33e3-4be7-9402-4ce097849067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74eadbfb-d963-4129-8c9b-15bb265b9248",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af05129d-0c9d-464b-8743-06d006e66ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b6d03a-4fe8-44f5-a168-5a0ab0e526dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2f93a4-d9c5-43df-b614-e6fa33905af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64b2f045-2f60-4ce3-8ee6-80040c2222a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e50cac9-2812-4250-bca6-4359375c8fb1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6272492-eb3f-45c4-926a-6434a62d7fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff609050-08cf-4f16-9b0d-dd9267b469a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cb4154-cf01-4db3-af54-576f971f35c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f23a3a-fe2a-4e76-95c9-668ccdd87f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8a54ee-ba7f-48b8-b2bc-59abe01c0342",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1226fe69-5c46-4f9a-b836-2c02cac59015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50786260-12bb-46c7-8bf1-c8fda22b7974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc5d5ce-762f-42b6-9b8e-7f8fc700f45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c10618-f6c7-4f37-9ced-5f24bab37351"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a44a6953-3984-45f1-acc8-94f169329205",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec13b05a-a65b-44a2-8218-cffe7172f1e9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416b87d2-2ea3-45c3-a453-bbe6bd8ab8a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f772f9a2-ab8a-4f7c-b29c-f6ca131f2aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ef13a0-af27-4310-94b1-9f41d7c40ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2a637f3-da7a-4cd7-962f-28d316852a30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c675275b-d94e-42d0-b910-251ad6253bff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93d84388-3ed9-4b2f-831c-a72d4edd5c31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "513f11cc-21a4-43ca-a63c-65640ec8df5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fc2425e-97db-445e-963b-efd8f7baf2f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b96a3f32-a43d-4594-9f87-d2afa35891d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9b10044-3110-422a-930c-a6ef5f5b2519"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceff1d84-6baf-4c40-a3fd-a05c6c508b01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e037018-e345-49d8-b3e4-4fba4fd118cf"
            }
          }
        ]
      },
      {
        "id": "978ab15b-3960-4ae2-aca2-6dd06f9340ed",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "150cc57f-c01d-4c5d-9fb6-d10c8ce9ba03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff83d27-639c-4d30-aec8-e33bfa11c59a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c5e5b23-958a-406f-834d-ee838c67d2bf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19901c22-b51a-408b-b676-82111a934359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595df4d9-9338-4488-80a0-70c3dce56046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5fb579-bab5-478e-9cfa-19ed428c58ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87456bd-652e-413d-a3b9-cfb53581107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72fd17c-dc68-4bac-9e96-963e49f2f091",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcef329a-ade5-4919-8fd2-a275955a07df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f265b3-3bc6-488e-9775-5d7a87bffd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a134b0a-3ebc-4a4e-b00e-429f5a6699df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0a5d61-970e-43a2-9607-25102d325445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c1d263-4735-43cf-a5ea-92d2e1044f3d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd6de0f-bfc5-4d4e-8515-d2b83ea8455a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ec0f3b-058f-4f44-bdae-f99a62920fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec406bda-2c3d-4df5-8d6c-e4a15c9e101d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4ad524-d929-4d11-82ac-27dcc6a2ff14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6157c2-4270-403f-9a01-f0b8c6fc026f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68eab700-901d-46b4-b1e8-faf9394bb352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a24a73-9f00-472c-859e-147a75453f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a949a82-b7a1-4abd-80ad-1477db73cb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "461cd8ed-56de-48dc-a3ca-389bcb399134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f005cd-2dfb-49dd-86cf-e4340248ada5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ab8a9a-5ed6-4490-bf0f-793570575086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0036105e-c292-4b83-8e00-540e64e1e9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650107a5-704a-4853-9fb3-1cb7f7726d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce8b26d-7a98-4e5e-8d57-440d7f2e2ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43205cb-b74e-4236-a35e-a925aa05a5e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825c8727-b794-465c-8082-2c92c81ef21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fb07d3-cdd9-406e-a071-533f278c2332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2230548-4a1c-435f-9058-41dfaad2fe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fbd461-01fb-47fe-b866-c801e9382b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86ce05c-16ea-438a-ad55-da8a16be56a9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc26df-ade6-472f-834c-f865ef7bdd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd6159d-6f5e-493d-b68f-8479298468e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc544d64-6861-4934-ba25-b5f3d58b992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "358ccffd-36f3-448f-8704-405436958d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63247634-0e08-4f02-b706-3bc052726325",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9278bd43-89a9-4722-84b2-8dc45cc171aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8955f4fa-f27e-4d47-ae15-c7cff2275535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a1bfb3-bf58-4c05-9576-d1aaf4658248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "172d4b47-359e-44eb-b451-f042421989aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0034a8-9109-4ddf-9e91-d417709caef5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab27ae78-30ad-4de6-ac6c-31f3597242b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309325f7-fbfa-4716-a58c-15f9e7c6c7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bf0a2f-9b00-4ff5-bb8b-95b6a4d7c246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab6c83a-6cc2-4c55-8467-b2d55a07e1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158f1239-928b-475d-9c60-dcfffd22e297",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eef8e3-65ea-40ba-858a-6c87eb90234d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fdfd2c-436f-4a77-8755-58c14d44b8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6082349-8bee-4009-9822-2a8c360bf915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3110602c-d5f1-47ce-8d4c-605169093248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ee6d6d-85bc-4294-84e5-f36e378eb7fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a626460e-bf40-4d0c-ae92-fa3a560c38cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc9ec16-980e-43a3-bcd2-8899f9529511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e023d5-d1de-4883-a62d-c9e4ccaac991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b352aa21-15b0-431f-a0dd-e7a2d0d4b0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd23ec96-ecc8-424f-9893-1243db5717e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2f9c57-0ab0-4888-990d-bf22633ff540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0828f5-503d-4fae-b1ea-a8eeb49ee094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ace6f72-33ef-468d-b029-65237dca1167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf3f9ac-ba46-4af7-b2e8-bcbea8576f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8334e35d-11f7-4125-8628-4c6b33839e25",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e4b666-8723-4bf4-aa45-917e163150b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad4b9b9-f012-4f10-b033-57e887c34bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59561b3c-4d5b-4460-bc54-bd4a8d509979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08ee2f6-07e1-48cf-bcb7-7145d699a423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4da2c0-9a6f-4a12-800e-d17a33e15758",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4c221d-3f49-4e48-891f-ee57a6254546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ccb728-d00f-402b-9694-238fc7365c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e083e5-469e-47a7-b8f6-21168a8e0cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aef1f02-44e9-4b01-93d4-7e1675f1e61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb972ce-d6d0-4fa8-aab7-2dd8130a9768",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdb2b6c-577d-4870-ad5f-9580b766c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a608e916-5dff-403b-9b02-c12d6faf805f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9ff7bb-7c6c-4103-b327-ab898f39cf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4087a91-6957-4a9f-96b3-b15ecae9e370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83653f7-134d-4494-8e75-ca429b0dce73",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476bccbd-b34d-4381-82e6-ef6564dbe969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5182a869-c63b-42b8-987b-adbad2cc32d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e999ae1-a15c-4b0a-8cfe-31d59fc0bb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd86972a-993f-4a26-907c-5b49432a7670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03a720c-c3ca-401d-92fe-0bdb1d125c11",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b55531-46ad-4197-b8a5-b915ee4c9bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347b510f-5b7c-48ce-9e49-0e47c87c8d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317500ce-45b6-4891-a0b8-8cf3ca18f2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb43bec-0aa2-46cf-96dc-39d9575760dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef395b16-7a65-4691-b0b7-827bad7efc8b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9248d5-fd8c-4d10-a3cb-dbeaecacba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8794e9-30de-42bf-8bcf-10e637fc3189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6750054-3293-4285-8fbd-e4898b3da390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4067d47-8139-4c72-84d5-9986611dc7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f35884-2ca8-43fb-a2be-d3400d2d66b3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7940b4fc-4cb8-4368-99dd-0f2417ad7a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d671fdb-4e0f-42af-95e9-a996728faf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f111997-42d6-4fbe-847f-586ce88ab14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b3b2bb-25ac-49f8-9edf-efcd4eab4f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239f110e-b90d-4be5-a13e-876164500b66",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b453649-841c-4f59-8a5c-86d0e2d096b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5295fc-5293-4c22-b07c-7dd5ffdb58e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6428fac5-ea13-4084-82bd-1f878cee4018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0a1448-2e70-4842-be33-0e514f92d978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbee2ab-3255-4c75-a446-1d9d9f05d813",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c6271a-7f27-4bd2-b916-8195da92757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591bb0a5-d8f7-4302-a671-6c0b42b07337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6ae379-c0a4-4aeb-ad38-14c4ce8fa5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60e2338-486e-4367-94c2-77959d334437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fec5277-64b9-4b09-9a55-5edf46d6ff37",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c1688b-a1c8-43f4-9617-7c379a58e264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b2395d-660d-4015-9626-b04275ca648c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2026940-f92d-4c09-9585-62108b8b6ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bac1a6c-bbfc-4112-ad6b-8cb61be6819c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e417a4ba-0633-4c06-9acb-e6752b8ce429",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff87bd7-a57c-4f70-ae76-38dfecbf7fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a2de95-56d7-45d9-8a1d-bc699ffdc275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f16cee2-dde8-442e-b8ba-2c3706fb164b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ad549d-fe79-40d8-b8c2-2c4a4be48fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdc180a-1ec5-44f6-9298-2f25edb84b9a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126ad2d4-8a99-4f5e-bb80-cc72a55f6207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee5f5d0-d524-49a1-a0b3-35e127e421b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c80fa1b-54ba-4755-8ee5-664fe69a7f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7773d00-ab80-43ea-bd6d-bad2f8650702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc6e30d-e7f0-4ebb-a261-d2004a1d4c3e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0678e54-635b-42f7-ad28-c1db42bec7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e6167f-07df-4000-9891-599ff66f1a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae4577e-0d64-4a37-afc7-e7475056a13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "857918aa-1b7b-4b1d-8b9c-f4a59798c06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf58a14-57c1-4559-8ea4-bd59f143bc7d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da78eade-dc77-4d00-ae87-e7c3fe51bab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c865ba8d-9469-4099-b37d-8997a78afe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8bd7ab-7cc6-4095-a982-9633b2da5fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79543104-3938-47e6-80c3-20d240dbb850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f32a1aa-66c5-4001-83e4-d3239ad007cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eefcc9a-be9e-436c-aa61-f97f72d3076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7a0905-c408-4ffc-b8b4-cc3e30a20845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3c26c4-79ba-4083-9dee-3a2bd0b066e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "705e48ae-2434-45ff-96dd-f8ff68bc8862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f139b16-ebef-4b84-9e67-9d2669aa89a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefccfb1-6bda-4c9a-a053-49bb6849e2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1969760d-5fc2-4050-979b-ded40312cf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da52d070-8241-41a8-b986-ed19123c7fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3412c083-9faa-47a2-aa32-3c301eef909f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965f558e-281b-4423-a7e0-05094e019f33",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d166ae7-103b-410e-a79c-92b8b526a4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8d008f-c377-413e-92e7-e60a4a3e5008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbbb827-ebc5-4241-a7d8-cdcaee2a9014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "274efe30-ff78-4314-9d4b-1456e8489fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cdf73c-2c6c-433d-bf5d-7067482f3f9b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ba123c-f7f7-4350-8e75-368f757c61e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53840c64-1892-4896-b6f0-25e7b2a994de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fada0831-7bc0-4d46-bedb-2e7462eaa6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54aedf7-6497-47f9-ae05-647dcffb47e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb39b166-f360-4a15-978e-72173de03f76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b3560-c458-4511-8f1c-ec63ec9c221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53580df-86e7-49a6-b4dc-0e082aeeacf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4902619-9024-47fe-a947-c87075b4534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88dd1f05-b877-4f2c-945f-c420ae3a911a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4515c54b-4364-485f-af22-c5beda5bdbdd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a494baac-93b0-4d23-8b86-d89dbe6dc6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e81faef-d54c-4539-913c-3fd8b18d9df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7ac56c-5b06-465f-a38a-2c1ee5240b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce0c2ed-10ed-4092-8b86-cce5c7c5b017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95aa40c6-81c8-4540-9772-08342c09c703",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acaa610-58bc-4d0e-a0c6-ab3572d94913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5bb38e-1529-4cf9-b5f1-202da79f65a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e66927-4149-4755-97a7-714cfd3898b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7750087-9a7d-40e0-bb38-c745f5146ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b479f3b0-16fd-45ec-956f-085b6d1e457b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac09b1ad-3a21-43e7-b4c6-b8c883efe89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b033738a-778b-40aa-afd4-581e2a3e2734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0f26e5-3fbb-40cd-bbda-a12c910a975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4761da28-da54-4034-83ae-195aa60f160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1e9b40-942f-452a-9c4e-0ac2e9829a10",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ba1372-1f53-42ab-8517-3ed3b970f520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f4f6ea-8dbc-4e8c-b00e-ca233ed16554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5dca26-93ce-4c84-9e0a-f5742f9a6735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6482f54-c612-477e-8d07-fcba3692ea1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47285948-0aa7-4e2a-9b8f-0d2515528750",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9b8330-bc74-4a62-98b6-7c8884479bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a693b078-6230-4458-a7ed-6e0777b4b111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9fd987-6e82-4c21-bfea-c0dc4d58fa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc311ee-2fa0-42ab-8f32-4fecf019a9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9e6023-8f94-4d49-af20-82d33e714334",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1e1310-d77f-450c-8620-523630c6f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5403db-9ec6-4d04-8a68-32ebb32f1cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61514e3b-18b1-4d18-84c3-a29c844ddeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c48771-c31b-4da4-abfd-6a747a7dafa2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d88bf873-6396-4d2c-9691-bba40525cc19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f420b62-914b-4341-8395-b1d58e02e858",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfab26d-43a6-4986-9fd6-10067c943e09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38de6d84-9c3e-4cfd-98a6-85bb91617890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d91d0dd-726e-4d68-83e7-901f8c6f9840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3e7bd7e-1705-47e5-8978-08b2e3520a59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4388ceca-a795-46da-87c6-75ea72dfacf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecffb0cf-f52f-4694-b32e-a60d8b7157fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8303624f-d3a8-42f1-a77c-589836aa73e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eda6a570-c039-4477-939b-3d3ee4c948d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a950657-a0ea-4610-bbd9-db1a7c88f361",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f224986-a137-4538-a289-11558c10dda8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b75dbdcb-d2d0-465c-9df1-2e8552b64b68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d950d7b-0ce2-4a01-a501-94c3acbfa338"
            }
          }
        ]
      },
      {
        "id": "b9ead3f3-d919-4ccc-b829-bf4c04d0278e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4a471cfa-ea64-4f08-9859-e003f3c236fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6ff924c-9d75-4a50-a0d0-766cd13f07d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d0f1871-5b5c-4ed5-81ca-958f4bef40d1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb25dd4-d0c8-40de-a25c-6e03ba5c6f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943b69d1-fb86-4dfb-ad4c-40cb8cff1077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda46666-4d3c-4c9c-883c-e9e1516b5e90",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc8d010-d5ee-4aa0-8da7-f105c80192e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b363745a-cc10-4acc-ad25-100433e260ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c6b39d-1465-463a-b0ec-c7dac1b45d5f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cae0154-a986-43c7-a627-f8280884c6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347bed9d-4d34-4b6b-b762-c3cef1f9192a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b42f635-4329-4106-83cb-72d025ca1691",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d938fa-67e8-4739-842f-cec4e9d10106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80faa6ba-27ed-4327-b30b-e1bec20083ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f31a46-93fa-45ea-a984-73e8d732ef4f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969f7bf3-1dad-41ea-9ba0-269c82224dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61115b30-bc42-45da-b403-fedc3178b7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b9bed9-83db-42ab-8d02-58ae33824215",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45080b09-b767-4aaa-bee4-308783c07c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5123fa0e-1b24-497d-a183-fc3d1467ff09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478888a8-f519-4b3a-970d-3e69deea3ddb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c646c357-a929-48fc-bae0-1e3e1239a95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72d8871-74c7-49c7-b65e-b7b9b0a5b8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0cc724-24e0-4b7a-a7f1-53494e7c6950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf4bcd9-0ce4-4367-ac10-919ce2dadb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311e43fd-6716-4114-b906-e394818b2abb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b523a207-780e-49b8-897a-ab75490e0b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53721397-a930-4d3e-80a1-3e9aeffe8dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f570a4-e6cc-49df-b3e7-65d6596265cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc06979-10ed-4e83-81b0-f3a1ffb091e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4455d0-d9bf-4390-a340-f1bc4de73aa6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5a0a30-6dca-4f13-a0ad-18ccc00ba719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d96a0fa-6e65-4285-9a25-50add41889cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1660334f-b1e6-4288-bbb3-f89a3c230a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b42f22-416b-4efb-8a95-76647d39edf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b101cadd-8656-408f-9a55-5a6b2b21d73b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dd3454-fdc6-42f4-a957-78c4740ae260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5080496f-9ead-49d0-809f-84de65707bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaeac287-6979-4486-893c-87ee15d14b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04044b0-4bdd-45cc-b927-2d000d2b60bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975cf5c2-e61d-48e8-a8aa-5ce345a99226",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ff9210-7249-4f1d-9827-ded80f213dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21a4072-150c-491d-b737-e8b9cf4cd5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58769613-c1b8-4d6c-8611-20f42f9435df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ab8160-b04e-4278-8211-4c9ffe9ae1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a488c56-2003-4b68-9d1d-46f958afe68c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd0ceee-4cc3-4d14-8f22-a158e87afdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d5c3c5-4920-444f-85fd-914b8ebe8226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6145d28-1c7b-4ea4-9267-768ffbb38c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22a7843-e6d5-4fb4-b349-92783b5ceff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54cdd60-2ac0-4227-a8fa-89e5912ae60c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0583cec-4450-4bff-bb05-484c250b57be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7854d2b0-e011-4c24-ab2e-929eb99f4406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dea64a-e11d-48d9-84bb-84547c6668d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a10396-3196-466d-aafb-32d4e4fc259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42be7b7c-d3f3-4a1f-9808-4b3f2dbfda2b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ce86dd-ccd7-4fef-a923-46fba1e739e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd326e2a-c277-47ad-a0f9-0f99be51a2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d9ef72-d4c2-4c90-86eb-745c083e0dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c1cb0c-a6cd-482c-bfd9-920eb6cd2e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e4c52f-a60d-4d5f-93ec-9946cfe903af",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd4baca-cf8e-44b7-a420-748394ed54d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9ac1de-5aa1-48a2-9559-6dc5eb9b0d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438ef1a1-f896-4efd-ab04-a3f859216bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b860482c-1880-4566-b3ee-805d0aaba2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca31f1d-a927-4b31-a1fd-df404653212e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb81df43-2dc4-413c-9628-bdcbe2511926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a73e36-9440-45b6-999f-36b2c1b9cf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2fe840-b5be-4436-9f58-ea796b0abb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c02b15-49e2-45de-9033-3f9ac792fff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240b1280-bd88-40d2-83c7-eab7b46dd689",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c608df0b-6177-4140-b158-a9cc330ec536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1413261-6f09-4feb-8347-82bc4449d013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e036d7-2f80-46ea-b720-95822c03e058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6aff6a-4fd8-4ab1-bb30-6b6383f3458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fc630b-a55f-4cae-85b2-d9260b5589b4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8fc356-45fe-418f-a064-4ed7e1eaa924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4426b6a5-2d52-40d9-89ae-c3f88c8f5d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540c353c-7c9e-46ad-a9b3-6e65e57d48d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f418983-552e-417b-97a5-d6d7708ca9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7b529e-af9a-4f47-a452-87b72cbfdffe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631d65fc-5ab6-4216-8c6b-9e8c2ae4beb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be317a1b-9375-4012-ad4e-8d9f1dad844b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba615a6-134a-4223-8629-2f7da4017f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d4ff28-68d5-4616-b168-88c65f26e5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c76a134-4c1b-488b-b4bd-9ad0e20b9f09",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf8a3c4-a243-466d-9060-2b22eacc5f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecd0865-34fb-4ebc-aa69-12bad1ae9d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2308fba9-21f2-4413-8e57-2f3db2fd4428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc31b5b-eb5c-4c14-86d3-9aabe53327fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f45012-2b46-4353-8421-fdd3093bdb21",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e21345-45d8-4b17-8ab4-804820baec28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e2559b-31c0-4a84-9157-8bef7bb71c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d095d742-293d-46f3-9d7e-470086df0b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50005392-784d-484c-b8e6-a6ba40bf1644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301b27cd-02ab-490d-8a1c-b7ca9a532413",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d333da-6698-4728-b1bc-32c1317ab912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c250f4d4-faf4-4019-b87f-5171de24687c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78b9a5b-5f91-497c-a72b-94d14a58f117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5176e99b-1098-4dee-a14e-5c56788cc414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d063e178-0057-4d88-825a-b5b3badbdafd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0e62dd-9335-47fb-8715-ff03e756bb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aec73ac-7f77-4283-bbc1-68eb8f31b9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a73be-38bc-4175-941c-f52e869a0251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b460b97-4b7e-44e1-a506-3f411dd4c73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5088401-ea00-46d6-9f98-7c4fe49a6106",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0052df1-2f3b-4ee2-a522-c26a0db776d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be528f5-7a5a-4527-abb6-2fca15f9e198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b158f87-09c3-4a1c-a89f-e576f59403c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e602071-c2ed-4d3d-b598-eb40abbafaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b108c7e3-1d80-43b5-8372-a3d2f6cffd77",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d52d0e5-79f3-44e4-bfa7-4f79878c34bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49004119-9114-4b96-9396-4dff0eb2bb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38668f66-261a-411d-b31d-d2516227a08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146f700d-eda5-425a-8cb7-7e3554b41fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0941f66e-aec6-4ed2-864a-9cac69009bc5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7856fe-90b9-461c-85af-7da30140eae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9f0136-f849-404c-ab1e-56b5592b6c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b9b6ce-1a1c-4589-978e-a9b36c0dd31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddb0fa2-39d4-4bed-a5a9-880a4be4f003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b864f15-2aef-4f51-bf1f-c0aaeced9903",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64399b15-8629-49ca-99e0-7c1a33c78bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a8b847a-4b7e-4260-a07d-12fca3bc4055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc75ea6-b67b-40d8-8eb5-d7b532cb5be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a220efb2-9362-4b48-b51b-7497ecef6c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592de94-6d08-41d2-ab2f-b8218f4ac31b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863ec43f-1edf-477a-a7d0-dae8ef6e7c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e252781-c5ad-425e-bdf9-5ae1e1371318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1174b8a-c482-4da3-9e1c-61da202271fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2282f28b-4caf-48da-ab0b-12fa0a72a99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9483184-24b5-45a7-bf5b-e0394464311c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9eb451-337a-4850-8a52-ebd890670402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8e9318-388d-4496-9ab1-bda89d3caf2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8048f4c7-ee6c-4801-990d-4805da1560ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c7140a-3d46-4159-bc43-0cedba354cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eccd277-950f-465e-9ebf-e610d4d18519",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca819ac4-ab4c-43fe-954d-1fa0d89cf1c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d004b0-8f59-45e9-bc85-0234aa619daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2659fb-d6b1-47fd-bf56-8f9d3a8a322d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf20be7-cc1d-480e-b95f-d274197cc8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9f1f80-83ba-45e9-bf57-84b8683bad29",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a368e8-6c90-444f-942f-f57c59cfffd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8424a7d9-7ae5-4bd3-b2bd-8e6f5e3b54a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f72c63-46ef-4ad8-8ad1-e85080aebb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739d61ad-1435-45ce-b4e4-de5e0470224f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31470bf-3af4-4b9a-a9bb-a35e6dc3ffa7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b239a23-a181-4f7a-a9bf-e672b806158d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce105db9-a2d4-4e6a-bed5-bb379f5e9314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97b4b6e-154b-487c-bb9a-863c5ee3d976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcefb60-7045-4372-be7f-d8bc6e5a5f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31117e0e-cf66-412e-b6b7-8331edcd15de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57adb909-dca6-4e09-b3c8-a0b83ab57761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95fb21b2-b774-45e7-b7e9-d701db4417e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2bce08-5372-41f9-b552-62d69fea9c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653c210e-1368-43a2-ac0f-480f3d2d713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174cf409-09cb-4095-b8f4-e73c70bca75a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4afa75c-f451-4038-b9ab-e4c7525eaa31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568c23d4-9100-41c4-b084-cc20163fc858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e85c258-ae0e-468f-8b46-1b668ba403a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daaf629-9117-4caa-8d0d-45b540a29008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9266213d-148d-44b2-96f7-e1556ef1040e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85434125-bab5-4f87-ad37-3754ca362321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1045092-1d9b-4a47-97ce-fd91f63686de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b73580-dd3e-4027-a19a-c66ef80f1801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c11a58e-ceb2-41be-b43f-8e7df9dcd0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b590a2-5892-4567-95e4-938560344da9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746d1ab6-8908-4941-b460-9572830bb1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79ca41c-cb95-48f2-ad5c-e6a950ac126e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfb15e2-11a5-4fae-8e5c-852eb056fa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef7cd38-c584-4635-9c05-ba468f69c05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2beedd2-9c46-4a86-8c55-2511bc2d42eb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985bb39f-f8d0-480a-bff3-3572e3258ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c52be5a-13b3-455d-a4bd-2336d10a3b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0ec7fa-8216-43ef-92b2-c16ea5ef511f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479e9223-277b-4e8f-aabd-0227dba2ee93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a2d9e7-5084-4a0a-98e1-02d94455929d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3854398-90fd-41c1-8e59-255bc05ebcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33747e67-7551-4bd2-a178-825ec1554a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e56268-fcb1-4dea-8e15-668e7c744f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd42393-ce71-4ca1-97d2-2931c912ca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a0cfbf-430c-4739-b418-5322c5fd3112",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9279860c-915f-4067-b26a-4b74e4c28306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c1d21b-f44e-4a91-b8b2-441f4104bf6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd7ceff-cbbc-4e8c-a72e-8653a46ccdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5bb640-766f-4e1f-b915-c4dcf48f1c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d37a86-c1f1-4110-84a6-a7d4daa660f5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec0c091-1449-43b9-9c86-7ddc7305d5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ded2436-496d-41b7-8781-06ad4320f128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9484a4-73a8-449f-95bf-e9887e72f6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac346ef-9812-4c48-b962-31a21ce6ddaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2103f67-bd5b-459c-86b9-9f97758ec0c5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02cf8e7-4bde-45d0-b1af-aa0c995b197e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de691637-c18c-482c-9ff2-9b2c691b60cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fe5171-98b5-4458-9c8f-3e2c3ad33185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76864e4a-f5d8-469c-aca2-cd19daf6cf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dc6add-e4d3-4855-928e-0351cf898993",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ba742e-b020-4fb7-be40-9946d9e8fb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea7574d-d023-411d-b180-2a82b5b5c5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fe143e-280f-457d-8ffd-5e03ff2f6895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fd8c95-f7ee-4736-9313-28cc7c68e486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af67ca07-efb1-4b1a-b33a-296485514f56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f7bda0-ef20-4e84-84ce-4cf3724ad6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4214e05b-4a30-4264-9e9a-2f3a86ad6642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c38070-732e-435e-9f19-a07567909051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c9747f-0e8e-482f-af3b-c030d1886094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f809c7-2190-4279-9632-09e60999b729",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64e6e62-9c53-4dc3-a120-a286772af584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c8aadc-c495-469d-953c-4a2217563bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfab4af-4606-4307-aa14-684b0d297661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3686a39-f8da-46d6-b361-5e676ed2dcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368bae2f-e9cd-4052-bf3b-f2b20df816c3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8133a11-c190-4422-a829-eddef0a9b9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d710dc-7dde-42b6-842e-f37eed715267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c70295-75ae-46d7-87ff-5a70185130c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68abb77-c8e4-4b6c-88ef-716b05d97fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd9e141-d0b9-4bc7-890f-90e253315942",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cf33c9-7f3f-4110-875a-8d783f3364a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7ed49f-967f-4f7e-96e7-5c238af4e427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08712b6-65ea-4228-9dc3-5db0f31d25d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b45b4f0-3914-49ad-a6ee-703253e361b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05f270d-9372-442d-8539-889b3712d8f5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba56e81-9cb6-4c9d-94f6-136f43d3a437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8876cec-6dec-45dd-a1fd-8afb3902a59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "852f7095-c800-4eb8-a865-30993607386d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217f799d-a66a-4632-a58c-d633223c58e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b24beae-c2cc-4d14-8f77-0ddbb8440ac4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b093f15e-5568-4809-8955-8500133c7e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb3e89f-7c16-4d88-ade8-48e594b96fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cc8f02-7429-4395-b80e-2d59d60f1172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafd9e50-6b0f-47e1-b42c-1b535ae3f0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e1220f-39f9-4142-bc9b-56090d0ff2f0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0349093-1ced-4f80-a12e-50ef80275bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17cdff4-6e77-455e-a952-1d214dc2a384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e546780-9d5a-490e-9788-66769326b426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc47244-8db0-4ae6-9f62-a7193059c280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9988fb-875d-4ea3-ba79-a267d524a1f2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb64b12-e23e-4d4e-b847-52b0b8507819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ac6898-cf12-4427-95c7-0630edb1fc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c8a156-4d48-4ccc-a754-6776d43fa46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4e571d-a0ae-43e5-b6c5-5a38f9569175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9540a669-8deb-4ab1-9f9e-2a4c766b0e0b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db25107-4774-407d-9620-b289fe5640fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6f2ee0-5904-4d5c-b7cb-3d8000869364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3962cc-f27d-4f58-bf29-9c97e51c2bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99360cf-33e3-4bed-a70b-5b618679f70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f45666-fee2-479c-8a66-f240d0126c82",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513e6ae-dce3-4c3b-ad4b-2bed8d62e89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568e9c36-694a-43f9-aaf5-9aa1254dccd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8964a8b-4889-4ebe-b9ad-885eefe3e123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94ce284-5f78-4928-b6b8-1d1ef1fbdb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b5b625-1f5c-4a74-bbeb-df92d3115662",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d88c7c3-516b-4161-9976-ed1a2203856d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99698180-6caa-46c2-8d34-f2bd0c42602c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68ab477-08fb-4a54-917d-fa5929172c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507c7b42-939a-49b3-a551-ef8ab8684dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2c4c41-2072-4ac8-b4f7-61be7b51f3f2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f3cd16-2177-4535-b1f9-4279f72ff914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4834c3-aa62-4e60-86e0-1372ba0ca2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6060fffd-d38c-4024-bd98-dbe0e19b0a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c3e934-0c97-4a10-901d-ac2d2eabe375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb278d5-17b2-471d-bf8d-be23879845a4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863ced8-7186-4290-b89a-55df72c7d809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b75efc8-59ee-4a86-a96b-8d3d5f20c8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6992f38d-7592-41e3-a258-5cc5c2a4fbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a138917d-3110-417c-a474-a2548690958b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7cd151-4bd1-4c34-be88-486b4e66a2ec",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611575de-7e24-4549-a01a-db31a78ee18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a51e290-6a40-4d40-b3cb-3cbbe4a2ff2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38a8590-fc82-4fa5-be3e-17ae523c9a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e53cbef-f37b-4f1e-92be-7c0f6e1d6192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78333d56-d201-4c69-a793-e61ba150351d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a41ebe-2536-4e78-a8b2-401e1a935a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991814c3-86bd-4bda-ab09-7686914123be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580c7ec0-b9bb-459a-94d7-ce63f0eb1f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe814ee-96c6-440a-a1ce-edddfe7e5ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e859e11a-ccb7-4265-a63b-c31ca6e06ad5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6fa78f-6393-4131-a74b-dfa6bbc031db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305ca8bc-dbb9-49c6-a60a-e785c2dbd082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64741031-583e-49e3-aea9-5ed206a80123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f244fd-4faf-471a-9584-9b5a21b97271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96da3eb3-de85-4dc0-b1cd-f4e17bf69dd0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653ce21d-aada-4144-8605-79ad9a557654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e72132e-5748-4f95-a443-9f74885170ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42592316-bfad-45e1-9b03-c468c7b05e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd535a4e-37cf-43d3-8699-037218d3d7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daeacd91-2e97-436c-bdd9-6023e1a021fe",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd5cf15-d7a9-47e3-b61e-5fec319b7a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03b08ca-f09f-43ad-a0aa-a6ea567721b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44e5338-21cd-45b5-8ec7-3a64a4bbfc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0d8410-de56-4f91-a327-fe15f81fcec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1c9554-9f56-4201-ac2f-8d3ee91d0f59",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b749ef-b6c3-4b10-8178-b52dbd739c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edda8b0-eae9-44e8-9db6-77c11afa6c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44944a9-28b6-44ba-8bb5-67666df19e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62aa60a6-c15b-470f-961e-5a3e0c6e2353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8eb56d-f91d-4111-b034-e7747b808e30",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef459656-ed0b-45ee-a5b3-70cbf36b34fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a76279-0b6e-4002-bf0b-36771434ed5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534b4555-6f1c-4084-bb9e-f6d81d5309cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5231866e-9459-426a-ad07-d1565d2de171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98c8b79-2959-4006-b325-e77cec20306c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffbdee1-511e-4049-b36d-c6719f311c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07390e3c-2ab6-4a9a-a954-732ca4e57b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dd5062-243b-451d-b74d-1bf15cc22e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9391faa-2f2b-4106-bbe4-4f0eccdffcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2591a5b-7b75-4d89-9329-80a22b49640d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b722d87-b20c-4d7f-8bdc-ff335e7bc29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f209a8-c303-4fba-84e8-900edd74c4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb32a28-b727-49c5-8c7b-6827fdbdccf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633cce09-2f4d-40d6-bb89-b1149395995f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98b0321-5770-4c51-82c1-8b9fdb7b5cc3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3fa9d2-e4d1-47f3-8667-84ca89829d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3318562d-baf6-4ce7-bf1c-ed2063361a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d8ae22-3797-4565-a408-d42e376f0955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb438910-7693-42fe-a121-1195596df742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2efe736-e6f4-4516-a8d6-6f89d9f93d0e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5007112c-baf2-4884-87e5-15b6204050f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89623f51-65a3-4e2c-9f8a-4307353f03ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f629a6-cf66-435b-bf76-c52bbd164332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6affaa5-a5ea-4484-b2b6-ae9a3efef2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6690d985-349e-419b-b675-8dd310c72f58",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad7b2ef-67ae-4671-a3f9-a551398d203a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc79bfa7-c2dd-48b6-899e-72236356fd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd17b58-7f82-4ab2-bacb-36766a35db91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa51c95-58eb-4a30-91f8-36b75c447e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205800c2-a7eb-47b3-a18c-5f9a44ca305c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9cd9bb-776d-4f37-94d0-5903ebea0661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b68651-e8fa-4d0d-aab4-8768a592fe7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa3da7-2066-419a-8e13-f39bbe32119d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa9cfc5-f9e6-4649-bb2d-71de014a412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1309ec-c627-482f-a439-53d986183002",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde334b0-690e-4ff1-bf4a-090f6f6ee77a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1282aabd-e0d9-403a-8f12-d25ed93a2f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34624d1d-6808-4720-9564-41dbdeefb70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc15b36c-74ae-462b-8ccd-598b9316d8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4874ba-eaa1-455c-b7b2-8732655a32d9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a75c8e2-164f-4e2c-9b80-4892551d668d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497e3dff-7446-48cb-a66a-c87d34805708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d8345b-c043-42ea-abf5-ae79f6ead6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac37520e-1f06-4b62-8a62-4cd661889740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2878d3d7-b334-49ec-a951-fa0cda18faaf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c3d4e0-7967-4033-976d-67b192e5e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eac9975-fb8b-4cf3-b7e9-63d9eb9e670f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e072d87-23c8-4ec1-8dde-945e8f0dc8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8719079f-1e5f-4278-93fe-4eaef8678914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f2c827-0578-4b47-b0e7-260919a9006b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a087189d-0c76-4f6a-84b5-7eec2e466596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdbbbcee-4e97-487e-8e46-4051e0b029ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7982517-6fdd-4323-bea1-e08fccc56e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94738e3d-0d03-4cca-a154-27ef076ed477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f54d76-30af-488d-8d42-86f8887555c0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1813fc-d93a-463b-a25c-9925cf579e26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc251be3-528a-4c74-b17d-7dd724744f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521cdc46-e770-465c-8c93-f562d4b55f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c14ca7-6dc4-4aa8-bfc9-065a69dc4c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9897678f-6bcd-4152-9ef9-63de269365db",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdb1770-3cb3-41b3-a722-e7f837d7edef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a73fe5-2dc8-405c-9934-ecffff3aaa45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d84d74e-8599-41c7-af99-eec82b23b632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89214c76-03c2-48bd-afd7-7b6e6b3c7e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d003bcff-6bc4-4c71-9917-11dc9c6110de",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deaf9f1-c72a-42d1-97ae-8947ea60cf51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e527c400-e70f-4035-a97a-e29ce2c41dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee1fe0e-607f-4895-bd20-f3e0f1961dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92d1544-7ac9-46cf-bc0b-d03252d74c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a53e529-dbf1-42f2-88f0-6ef358f4eda4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ebc920-e671-42ab-8899-2461a98ccc06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744347a8-d52f-4d28-b76c-63361852eaa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51723a47-4f02-4c35-9a1c-07d393508c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484d0b4d-ae8d-4b89-999c-6a02330431d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b052ac-b7f9-46d2-a3b5-412e81bc1897",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b27271-a00c-44fd-8404-88176f07f669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c10264-daa3-4b7a-9329-71d99820cfcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1d6a18-f154-47a1-b706-9c66615f6186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab57944a-74b0-4b8a-bd2b-532793fed66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6061c746-b358-45a0-b81a-2248ddc42663",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a335f180-b18c-4050-9414-c228a8c342b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f367ce-2916-4c10-9272-68b9df99e29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0353dc2-899e-44fb-918a-6e227ef9fb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ca8f75-7698-4950-8073-eb436be258ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b7929-96e5-417f-8ca8-ba4f77b75641",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fa8a59-0db2-4510-b8e8-e1a4e57c5bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34de1553-7509-40a9-9e0b-624ea2cea381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d6a40e-023e-4c07-b591-c9e0e898ca95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fd1bce-39ed-4476-aebb-a8532c26b299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83302db6-8753-4917-9156-a23d59517147",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ea4847-1e49-4c91-b603-423930af56ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e6397b-3aef-4574-951e-d4b075fa4cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aa6c4b-6d4c-4803-9a73-6b794bd256f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1724d6-bdc1-4e80-ad86-daa8a7c745b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d96b5a9-f3ef-4207-9aa7-0ac343436eb3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22af8360-bd06-410d-ba0e-bd8503854c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1d1582-f7e5-4017-8118-435f10ce5c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce79b4e-9df7-44b9-86f8-356380511ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b4239b-761c-45ec-97bc-e7672c23fd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5d1123-9202-4671-80e1-bd2c2e4742f7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd45b16e-ec60-45ac-a3ae-75fc9e015161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cd4720-a3a8-486f-95a1-fb4e24a30813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be964a4-c9bc-43c6-9d2b-00ccd544ad74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb19cd8-64e9-46de-9a7f-482ef0daa7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7389dc37-2a55-47e0-834e-cb1d630100a4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad017ee-4f52-4de6-ad6a-83df8972b071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e96fe721-f53c-4c09-a321-f813a8befab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574e6f05-e60f-46e6-b706-bf5428e36fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247116a3-23bd-4bcc-853a-a17c1471ebef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831e107e-4fd5-4b1b-99ab-7be68aaacf91",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be652d2-0cfb-4b8f-b73b-bf2d28aeb0a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "571f5cf1-72d5-4f1f-9a72-0317cd73803a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b069d8-6f26-4a80-ae9b-ba3fd4586aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c76b5e-502a-412a-9973-061974abc8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3a868c-9146-4d25-b3e4-45f6c0cb0a21",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9171971-8a39-435f-87bb-8262ddce04f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d4b785-7a8e-4c5b-97a9-cde15cdab95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5d6c95-6295-47a6-a99a-62f7342af9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68e2565-c1c0-4aa7-a869-293ded9c874e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246278bb-70d6-49f8-963d-46571f96ffdd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc32471-5ea9-4a14-b38a-ca92fe52edb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e73e3af9-cb7b-436d-a449-5c90e1fcc34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb813b8-681e-4864-8b9d-a43d566248d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc6b9c8-478e-403e-b528-6ccbc5fd5d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73310478-254d-4968-973c-75d92a46e30e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5271730-dd2b-41e7-b041-223cf7d31501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4e8159-aab2-4b38-955f-b023faef76c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ee59a1-9a5f-4e0d-9a7f-db23fba817a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89689470-4e59-4789-8688-d7fdcaa21308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9758941d-290a-4521-b4a0-15879fbe406a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5b3ecd-fce8-4125-a7ca-6d46dd75c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acefe17f-d253-42a6-8026-1c332f27ab4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2072e44f-bde7-4e62-98e0-41f9c375dfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333d57e9-a894-49d0-a914-d861ddc276af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032f6529-8d5e-4a76-9057-5ed1d6029235",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea06e8be-d2e6-44e6-9eda-3517d62c5121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ed00c1-12b6-414f-9f01-64c7da1496da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e6e707-da7a-4656-8463-5cae908bba52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a54d72-4905-41d1-9a84-48b41ff822ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e07ea-6dde-4b0a-9049-f964317cc6ec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a7d1d8-c6b9-444f-bc60-662e5a88f64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe43827-cdc9-427f-bb51-6a3bea3abadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d038f2ff-413c-44b1-a65d-420d8526a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac77653f-4ae1-4925-a83b-1b310931b932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edacbc5-bbad-4ee1-8b5d-2ef991796259",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bcdef8-94db-4f8d-890d-e152f60f99da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4168e9b3-489e-4abf-8792-492aa236917f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fc1d9a-37e7-471b-b66d-50f1c42743b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e53588-ebe6-4a70-b74e-ddba69501ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce500a8-4ad6-487c-ba0f-7606bb6a61e0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c164630-a568-4c2d-8277-94f89e212c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf7ac56-6695-4585-b27c-f375f42c07ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dba1ce-e6ad-46e2-badd-49bb6eb0efe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b61b091-b6bc-48e0-88e8-1f55aaf5ea98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987e9068-0dc4-41c9-8c10-471ff4c68aef",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efe32ff-550c-492f-96ef-827dc249f46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d896e18f-dd52-444b-8d07-aed07334f70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea21933c-18b9-4e20-a7dd-1eb2290a9e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a7ca2d-a64d-49db-b8fa-83e9509f9135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c86e5d0-13f8-472f-aa42-5a6eb51b95eb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7330b1d6-f660-4e3f-af91-7d12f99999d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a33192-b1f8-4624-9da4-92902502ecd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b947d3d-b8e4-4c69-9ae1-914aec5aa9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185cc10a-898f-455a-bf1d-75800a668a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b8d7ec-20b7-4c1c-81b6-685c9e45ac80",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f0f557-d865-4cc6-a785-ff32b835e7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e864f62b-394f-4268-a8cc-55b2c665f09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dd3d3f-8588-4071-8098-d6804348e5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabb76d9-57e9-4a7e-a1a0-850e51706c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31079528-4bb0-4f9a-a547-a5130c826fc7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209884cb-7daf-4325-9d12-4f46bcc83f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e10e25-f157-4fea-ac84-fc3ae09909db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe420e1-516a-4f1a-9e30-00d246a99586",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c5800d-0bc1-4258-8c78-67d839221920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4a5398-27e7-4d04-a37c-6bbbd2fcc70f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0813e14-1092-4671-b004-cf56b3a8c4c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ea56f4-6e95-4ee3-9ef8-428b8e63a0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e9b783-cf07-4391-b3bc-90208d70d873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a33dfb-f9aa-4fa3-b1ae-05d7151700e8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9885cb2f-5144-40ef-9dfc-f50dc4e35a95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa7ff7e7-545f-4a8b-a81a-56cc32f49eab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf96a770-4701-4b0d-87ce-274a90a81c97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24aad701-8816-423f-9ac4-05792ddf05ae"
                    }
                  }
                ]
              },
              {
                "id": "ec6e51a5-65e9-4295-bd95-c3d7ad2c193c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4506f4c-f9a8-4854-afb0-1b5b5192c4ca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f109e8-8c42-474c-b601-2376de750c99",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "caa844f5-924c-4a23-a933-86b8db761c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd25833f-738a-46e4-85fa-22f504bda169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0927ce01-4774-4d94-a00e-5b1fe8229528"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e2907f9-ae76-4be0-806e-cda33bafdd4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c04fb94-4d5c-4bda-81ec-28a0ee18508c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0265ff6-fece-4959-a23d-2937dc81345b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fb29603-7cb0-4e38-90af-cb764d1c37f3"
                    }
                  }
                ]
              },
              {
                "id": "ecc428fa-7828-4508-b17d-5e22fe0a8f10",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3c576437-c2e7-4e1b-a366-520e4f38c109",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171161b0-c69c-472f-bd63-08259752e23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "549d033d-4505-482a-b659-33bc6a653693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89e314c-8ac3-4d4a-8d47-b4bfd1878db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87af4e10-3b93-4744-abd2-6a7190379d91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa96b1da-cb9d-4056-b360-453f21aacd14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89dae326-022f-4623-a840-f9ac7056f681",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08b7f281-7054-44da-b8e3-ae59d4c03ceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46244e33-149c-4d81-b1a1-ab0cc5e582c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a21dde2-d48e-46cd-9474-b8f0c911a39e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c005abb8-005e-4580-b9e1-c868166f9432"
                    }
                  }
                ]
              },
              {
                "id": "6cac0133-b548-426a-a50a-f2c7d4555e31",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebc51277-9e74-4d48-885f-3deda9006662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5973a0fa-3991-4f94-9dfd-f4e507c37069"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "904facea-9a79-44f4-b12b-270855c41343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f39e377-dd77-4354-bf97-ea84e9873edc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da05e8f6-42e6-4d2d-a0d5-d7c06cc101bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ea79990c-98af-4849-a090-5a087a1482aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b4fadcf-cb0a-4f0b-8de0-0382fff7b5db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46a35787-72fb-4f03-b906-99bc2d43264a"
            }
          }
        ]
      },
      {
        "id": "b688f4a6-38cd-404c-8862-330f4c27f4cf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "34dfaafa-4e10-45bc-8291-8f2be93b44be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee031f07-9291-49fb-bcf0-540e41f78307",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1785157-d315-43ab-af83-493ba08b97cc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecafece5-941c-4034-b022-237ad2068705",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d03d6e69-6957-4f6a-b56a-ca3fdbdea622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef5c469-dfd7-41b4-9961-67074be37683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daf76a16-41fb-4ff7-8746-d424c2dc7b78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f59c3562-529b-48d8-82c6-3d8ec10c50c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01ceb696-834e-4462-9dc0-1a1f3048c70b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a6d716f-b3a6-4124-88b7-8c93b422a4b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2bd161b-bccd-4e71-9ac0-4948fddb6636"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cfa4905-54b0-49d1-9814-e364f1b44fa8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9a668935-accf-4ea7-aea7-c1170544f533"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f13de45e-ba22-44d8-a49f-4a9933dc8c31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f573c3de-8223-431b-9131-bf82e1932bb2"
            }
          }
        ]
      },
      {
        "id": "6bece4e1-f8b2-46b9-8818-c70dbba62294",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8097d719-e8f7-46a4-af9c-cb266744cb20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79dfbc23-a29e-49aa-8869-4b92bc3a72c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9ed6773-2263-4474-8642-e1c8be70180a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee546e16-7475-4c34-aa56-799ed5ce58d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "475250c2-aaa3-41c5-993b-101fec6573c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831598f5-e4b6-4c02-89bd-b7b617123def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02cf1bee-3b4b-4f7e-ab1c-1f9006d21903"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d62a5880-1d1a-493a-b5e3-d01b032b806b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e70ec804-826c-4dbd-ba78-34ebe9f9777e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fa7c245-0ae3-450b-9c0e-b22bbca51de7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2478f086-be4b-441a-a3d9-dfb9ad605dcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "957c222f-1590-4261-8b9b-fd7695a973fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c58ef04f-7327-4019-a548-2c59f2dd9c6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d659d0c6-8fb0-4dca-9acd-43edbf6899ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39d5a93f-5dea-4b65-9be9-c9749177fac1"
            }
          }
        ]
      },
      {
        "id": "406e660a-fe8b-4033-b61a-dd3bfa8a9720",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b6fd776f-bec6-4326-b69a-c0a724bbf366",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4692edc8-9b5a-4727-a001-10dcbb921c8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "720b1536-ac5e-4c6d-b825-a4fb2a4a342e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf2550c-73d4-4503-8daa-9d2de3d3e8f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15ecdf42-99ef-4348-a745-970569b64edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4417eb10-f5dd-429e-8651-6128e06de879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1930448d-6a2e-4ac5-bc10-faec5a7ec02b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d103012a-baa1-4cf2-b00d-328466884998",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "872decc0-c5d2-4500-bcce-2f5d0b289c85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8978c4e8-9209-4276-8a77-7d4d212554b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f72aef0-7cd5-4640-8f49-8c282b7b6464"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce503abd-0de2-4442-a9cb-c9f4cfa20d43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "314dca04-cac0-4677-98e3-3cb1474a9fdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e7a6762-5a4c-49bb-b225-5ee3f9870aa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1655f7e9-d19a-4d81-aa42-61c1769997f7"
            }
          }
        ]
      },
      {
        "id": "578c100f-32fd-44fd-802d-6b9bf34e2a7a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "616da776-5175-4ae4-a0d8-e2efdd56d95e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "154b7f33-9506-458e-8030-53e11adcbb3b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b7761f02-e965-4067-88e3-623f92ee4e4d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4fde94b-3b4b-49fe-b0c1-8bef7c33093a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcc7bae4-43bc-429f-b2af-4f12763c4425",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 134.77543859649123,
      "responseMin": 6,
      "responseMax": 9035,
      "responseSd": 588.2379982240464,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710117323717,
      "completed": 1710117371321
    },
    "executions": [
      {
        "id": "62ff4f39-921f-41c5-95e6-65d569d46fbc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "90b90af0-348e-46a5-967c-b3a28a51ac1a",
          "httpRequestId": "55734f32-45af-4835-b232-7af07d49b2cf"
        },
        "item": {
          "id": "62ff4f39-921f-41c5-95e6-65d569d46fbc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "714ae924-3d6c-4f50-9515-367e834a2051",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 0
        }
      },
      {
        "id": "e5b92eb9-8a20-4882-8e9f-ee04452bdcb8",
        "cursor": {
          "ref": "fb968b86-03f6-4e53-a479-e8a795afa98e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ece516d-d56c-4204-b344-2267037e88b2"
        },
        "item": {
          "id": "e5b92eb9-8a20-4882-8e9f-ee04452bdcb8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eb285ee8-74b6-4f26-9212-f73463774ef8",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "33b177bf-5878-4eae-ad6a-73a066cadad1",
        "cursor": {
          "ref": "69494f66-73d8-418c-8b72-a9ba9dbc58aa",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2b21f84-b183-41c4-87db-9843fc9c8a9a"
        },
        "item": {
          "id": "33b177bf-5878-4eae-ad6a-73a066cadad1",
          "name": "did_json"
        },
        "response": {
          "id": "ee16ec08-94c1-456f-975e-a42764a8e0d5",
          "status": "OK",
          "code": 200,
          "responseTime": 387,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ccf717-177a-4629-bf41-98ca055f0f90",
        "cursor": {
          "ref": "f1a05d65-8028-4c49-9e9a-8f9f25e67e8f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bfabfd6-b804-4071-9bc2-d61230fc4692"
        },
        "item": {
          "id": "79ccf717-177a-4629-bf41-98ca055f0f90",
          "name": "did:invalid"
        },
        "response": {
          "id": "1c0c9669-60a2-440e-9bb5-8901ad5661d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ccf717-177a-4629-bf41-98ca055f0f90",
        "cursor": {
          "ref": "f1a05d65-8028-4c49-9e9a-8f9f25e67e8f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bfabfd6-b804-4071-9bc2-d61230fc4692"
        },
        "item": {
          "id": "79ccf717-177a-4629-bf41-98ca055f0f90",
          "name": "did:invalid"
        },
        "response": {
          "id": "1c0c9669-60a2-440e-9bb5-8901ad5661d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5528b62e-709d-4155-889b-77aab50ca2e2",
        "cursor": {
          "ref": "8b725b21-6ebe-4925-8236-8fcb7db68cde",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0958f5d1-7f62-4630-bec2-fe8026457cee"
        },
        "item": {
          "id": "5528b62e-709d-4155-889b-77aab50ca2e2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5a44ca06-e7c0-42fa-a711-16090b38a3fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e59beb5-53bc-4917-8940-86b6e68ad960",
        "cursor": {
          "ref": "7caf7008-b5b0-4438-82f6-6fee91890c1e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec09a91c-d40d-40d5-b7af-dfd3ae723f2e"
        },
        "item": {
          "id": "2e59beb5-53bc-4917-8940-86b6e68ad960",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f46192ff-050f-4144-98ae-028eb7a881d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f815add0-aa05-48d3-83bb-830ebee8b500",
        "cursor": {
          "ref": "60f281ff-34d0-4464-a386-b1cc08326ed0",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ea30757a-826e-4ffb-a8ce-23fbd498ba0c"
        },
        "item": {
          "id": "f815add0-aa05-48d3-83bb-830ebee8b500",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "56e597a9-3b97-4f69-9207-416fb48b8b35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e15a3d9-a790-446b-a348-916bc9c57f75",
        "cursor": {
          "ref": "aa7163f7-3ffb-4f7a-916a-91f9ca9a991c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "14db9cdf-1b69-4bea-9cd4-077436d63130"
        },
        "item": {
          "id": "2e15a3d9-a790-446b-a348-916bc9c57f75",
          "name": "identifiers"
        },
        "response": {
          "id": "30872e10-d045-4506-8fdb-7204bd21b502",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6fab12-57ce-48c0-8204-0a02361ede86",
        "cursor": {
          "ref": "52f40deb-51c8-4029-85ed-1d4b0c4504ba",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f690300d-980e-4199-b775-18f11a13e1db"
        },
        "item": {
          "id": "3c6fab12-57ce-48c0-8204-0a02361ede86",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c7f8dbbd-f3a7-4b19-a04a-b64248f8faf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663d0c24-8f6f-4bd5-9610-b8e6b6a985d1",
        "cursor": {
          "ref": "4d98f9e2-6015-42fc-9378-c1629ec5f5b4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "920761bd-1878-42e2-bc62-bbda62863174"
        },
        "item": {
          "id": "663d0c24-8f6f-4bd5-9610-b8e6b6a985d1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1324fe40-1883-45f3-b76b-b24668010a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461ead40-57ac-493e-99b4-2b3f9f355ad5",
        "cursor": {
          "ref": "6cd3ec86-d38d-48b0-af4a-e203405b1848",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aa55e5b5-2aeb-4914-af07-c819d2183dc3"
        },
        "item": {
          "id": "461ead40-57ac-493e-99b4-2b3f9f355ad5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "687badc1-11bd-4082-8b42-932c906368d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aba108-7b85-4228-b2b1-d811b40bdeae",
        "cursor": {
          "ref": "36c66eea-e244-4e6d-a44b-2ece28dfd028",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "243d177b-31b7-4843-8e04-35f9c91f8d5f"
        },
        "item": {
          "id": "28aba108-7b85-4228-b2b1-d811b40bdeae",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "19a933ab-0b8f-44c7-89ef-17ab056379fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d915661-e946-4468-8ce6-59e5022e6334",
        "cursor": {
          "ref": "9939ce81-9f9c-4b6d-9030-344d134e351e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ef68c3f3-aa55-4018-b647-b1b035284032"
        },
        "item": {
          "id": "8d915661-e946-4468-8ce6-59e5022e6334",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5ebfa5ff-ed80-48c6-958a-4d96312e913b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ee009b-cf3b-4b89-aa3f-de3bae829ded",
        "cursor": {
          "ref": "9aa9158b-3d4e-4fcc-946b-9cb452672c5f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c47ceb0e-3023-40f3-a4ad-159b17f85d66"
        },
        "item": {
          "id": "68ee009b-cf3b-4b89-aa3f-de3bae829ded",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0311335c-7c44-4f20-b7d8-f94b01cf4d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dabe4f-5d06-4ec1-9aef-2dd35cb0e1e5",
        "cursor": {
          "ref": "ec58cc50-11b2-4ebd-917d-f6ff07125f96",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "02f9bbb2-0e98-43fd-b6db-5c5c7ad4502b"
        },
        "item": {
          "id": "c8dabe4f-5d06-4ec1-9aef-2dd35cb0e1e5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d12586c3-3857-447a-a9c9-7ca1e1fbfc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17860592-84f6-434a-a721-3f924a81fc4d",
        "cursor": {
          "ref": "6205b011-09e7-4eba-ab47-3a2381643dc1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4e37360f-8eaa-4193-887a-49ad41b4667a"
        },
        "item": {
          "id": "17860592-84f6-434a-a721-3f924a81fc4d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7dfb90e3-f2ab-4520-b16d-ca2b34cc95aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7521bb78-fc17-4bc3-8089-faf60552be59",
        "cursor": {
          "ref": "37824603-bd35-44d7-a491-cc55c8793e1e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7aa91359-ecca-414d-ab55-237067a59764"
        },
        "item": {
          "id": "7521bb78-fc17-4bc3-8089-faf60552be59",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "370f42aa-a7c5-470b-9ee9-f65ce31942d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602aa218-0f02-4fad-9c14-c050ecc3de14",
        "cursor": {
          "ref": "dcda18db-15e7-4732-9040-5b8942da577f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2a16908e-eff2-4d32-802a-2c50c7a51b88"
        },
        "item": {
          "id": "602aa218-0f02-4fad-9c14-c050ecc3de14",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ab7d2dc7-a43e-4602-b083-92ec611ebca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148f35fe-67ad-4358-8cb2-77c3e60572da",
        "cursor": {
          "ref": "06ecabe8-71d2-43f3-90aa-6753c40a984a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a5a3d4a-194f-4242-a758-fe35bbfd5331"
        },
        "item": {
          "id": "148f35fe-67ad-4358-8cb2-77c3e60572da",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ea8a1724-c00f-4294-a5ef-5c2bdea8d6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdbe4b0-fd93-4e9c-8822-b595503705e3",
        "cursor": {
          "ref": "c05b1e05-8e45-45ec-9d17-4f5c85d00107",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c00e979e-fad4-48ad-a0a7-22205d98e2c8"
        },
        "item": {
          "id": "ecdbe4b0-fd93-4e9c-8822-b595503705e3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "866c212a-ca39-4ec9-9b55-8307d33948ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0c39ef-e7f3-44c2-aae5-cb5d03648aa8",
        "cursor": {
          "ref": "0a142dab-1666-4409-a5b1-e62dcb15e47c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "66b1dbcd-fab1-467c-8b98-05ed29c8e5cf"
        },
        "item": {
          "id": "8d0c39ef-e7f3-44c2-aae5-cb5d03648aa8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4a2c5fc5-3077-49b5-9632-31bf748b04bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e37cb0-25ef-406c-a973-96bfd7003aca",
        "cursor": {
          "ref": "c06d2ef2-21b0-4723-a6f2-48389ace7571",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "18e66ae7-6d1b-4bcd-bf04-8e29f914fafe"
        },
        "item": {
          "id": "e5e37cb0-25ef-406c-a973-96bfd7003aca",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "21591b93-36e9-4411-a3bf-02c4b24c12d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa669e0-5f0a-4833-b44a-f21e63d7bae8",
        "cursor": {
          "ref": "bce816a0-161a-405e-8c6a-85bdfbf0dadb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5ddc47f2-4b6e-4fa0-a662-f11fbc4cf7fd"
        },
        "item": {
          "id": "0fa669e0-5f0a-4833-b44a-f21e63d7bae8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4d2343f2-915d-4184-9c1a-1ce69805c8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6a102f-114f-4eba-87da-42a19649b5d8",
        "cursor": {
          "ref": "0874a717-fe38-40ea-8904-1a53833118bd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9dd39b77-a70c-4584-9488-f1e24b12f6d2"
        },
        "item": {
          "id": "ee6a102f-114f-4eba-87da-42a19649b5d8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "928f0809-989b-4d27-8e38-a6b32b3546c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a141a8-ae8e-4922-b4f5-64bcfa8d8357",
        "cursor": {
          "ref": "68304850-ba18-4b8d-ab7f-a1005d048d11",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "72d5ae8d-b80b-4dc7-9f58-9b7ad3119465"
        },
        "item": {
          "id": "47a141a8-ae8e-4922-b4f5-64bcfa8d8357",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e90ec96c-7ff7-419b-b4a2-62d66025295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f6da0a-d81f-453b-a3db-69f699b39304",
        "cursor": {
          "ref": "41de1e7e-b4a6-48f8-a71e-2c6531901093",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ac8b069f-a23a-4e2b-8ccd-d218d24670a5"
        },
        "item": {
          "id": "17f6da0a-d81f-453b-a3db-69f699b39304",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2049f681-dcf0-43e6-8c71-e62e517d3b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9407b5-a59a-459a-a194-3d01ddf50ff7",
        "cursor": {
          "ref": "c78e5b26-93cb-45ce-9d2e-0b87a129beac",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b85ebb3e-34e5-43f4-b842-33c52f0f46e0"
        },
        "item": {
          "id": "3f9407b5-a59a-459a-a194-3d01ddf50ff7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0d28c322-ab7a-476e-b3ea-72f5640f9c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c084aad-f815-4bfa-a58a-338bfb1892a5",
        "cursor": {
          "ref": "389e773a-a1bf-4c2e-933a-d74f0c1b784f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c901d6d9-a11f-424f-a2b5-85102fd6b72c"
        },
        "item": {
          "id": "6c084aad-f815-4bfa-a58a-338bfb1892a5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f50c64cb-195f-4d76-b5fe-d929eaaea361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5115b6a4-b195-4bc2-91ed-8eaf1ddb6b25",
        "cursor": {
          "ref": "fab86297-abd4-40a8-b236-4222a33728b8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c19a19f7-435f-49f7-b0e5-777ca3c1ada0"
        },
        "item": {
          "id": "5115b6a4-b195-4bc2-91ed-8eaf1ddb6b25",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ed3aaf8-0954-4746-be4f-776519352871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e518fc-d1fc-42a9-a34f-f168b36918d0",
        "cursor": {
          "ref": "553d1883-50b2-4efa-b6d7-bdfd543c6d73",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4a838db8-a441-4c51-802b-c7fce2927952"
        },
        "item": {
          "id": "68e518fc-d1fc-42a9-a34f-f168b36918d0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "72f4df17-67cf-4b61-aac5-6ffdadbdd250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89b12f6-3adb-46f0-85ae-fc01cf505048",
        "cursor": {
          "ref": "2fdef3de-8d6a-4c6a-9fd1-eda860e84857",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "763fb869-f807-4e9e-9a6d-900800be1143"
        },
        "item": {
          "id": "c89b12f6-3adb-46f0-85ae-fc01cf505048",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d79f811a-64a6-4995-b659-7fe443352161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873a7979-2580-453a-aa36-be9325aec6b5",
        "cursor": {
          "ref": "5b6033ed-4b06-493f-baae-c7e4f05c1b8a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0b3366a9-07d5-4095-be01-2dcd324d52c2"
        },
        "item": {
          "id": "873a7979-2580-453a-aa36-be9325aec6b5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e480b176-d6c9-401f-a33f-222526c680a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a3b0a8-b5da-404b-9b1b-6cc416c60398",
        "cursor": {
          "ref": "b8b6dc80-ca28-4120-b4b3-f10ab249c2b9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a206ae27-fabd-401b-a918-21c88b090a5e"
        },
        "item": {
          "id": "b5a3b0a8-b5da-404b-9b1b-6cc416c60398",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b1346bfb-beac-49c5-8d68-9f367a6b81bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a119b4e-ad04-4260-833c-c6955d6cff88",
        "cursor": {
          "ref": "3335b499-141d-421a-bcfc-1f3e430dc0a5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5b625657-f8c9-4f06-b680-53fc17576cc9"
        },
        "item": {
          "id": "9a119b4e-ad04-4260-833c-c6955d6cff88",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "84a4f8e5-11b5-4ba3-8590-72c098de83fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fabda57-b9e2-446b-bad1-0912d80e1e36",
        "cursor": {
          "ref": "03ec648f-440e-4fbf-9094-f1d25ebc0868",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c66d824e-ebe6-49ce-b20b-f98d843df213"
        },
        "item": {
          "id": "8fabda57-b9e2-446b-bad1-0912d80e1e36",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b468f4d0-2f1b-432d-9a3a-fe2116929f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ae45c3-7251-4947-9856-bf27e64d8642",
        "cursor": {
          "ref": "c7682346-ccec-4fcf-86d6-490593f55a82",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "66f182b0-3312-4dfb-99e0-3080299bb7dd"
        },
        "item": {
          "id": "a2ae45c3-7251-4947-9856-bf27e64d8642",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0a288ed1-2ff6-4afe-a4a7-a5a5d94db6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9988e4-54c8-40a2-bdb9-467019c0675c",
        "cursor": {
          "ref": "c74c5a7f-78ce-4bba-8e53-b84aa6a1c0f0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5fc7c4dd-e5c8-4a73-8e04-a9d53d9e3033"
        },
        "item": {
          "id": "7f9988e4-54c8-40a2-bdb9-467019c0675c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0b622543-1f90-425c-a7af-e62ef68c7ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03119946-6b1e-4675-8f6b-79e7f07e3337",
        "cursor": {
          "ref": "17e4cbc4-0e61-4bcf-a8f8-2348e729cabd",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "45aa6447-6269-420b-9ea8-2b93dfcacc44"
        },
        "item": {
          "id": "03119946-6b1e-4675-8f6b-79e7f07e3337",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a7918532-66eb-4347-afcd-81f1d53f6945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f3556d-84d5-4d16-b7c5-19b305d81d8a",
        "cursor": {
          "ref": "22f8c749-5f75-4d88-a98d-bb07e36ed2a7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1fb42fa0-5da0-4934-8cc0-cdd81a43e6e4"
        },
        "item": {
          "id": "f0f3556d-84d5-4d16-b7c5-19b305d81d8a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4cd6971e-9122-4d7f-959a-3a68941f730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be69857d-6ac3-47e9-bf44-f04f6b26375c",
        "cursor": {
          "ref": "eb6c3e13-ef3f-4f4a-8a22-ac93ffa18607",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1b0dcead-23ea-492c-a906-7345afe1e1d1"
        },
        "item": {
          "id": "be69857d-6ac3-47e9-bf44-f04f6b26375c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7da8c008-992d-4559-bc63-ecee90c3b994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250b767e-b85a-4f83-8a4e-c48d1683d6f2",
        "cursor": {
          "ref": "95a558c7-efc7-4100-a360-d7a3f70091c8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0c3ecc13-e91f-4a1c-a542-bce04f9251a0"
        },
        "item": {
          "id": "250b767e-b85a-4f83-8a4e-c48d1683d6f2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5378a475-421e-4c58-a5bc-b5b035590fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5818e6cc-f55d-4bbc-805d-4b6f150fd147",
        "cursor": {
          "ref": "76451716-7db8-4f1e-a884-f33db1d87fc1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "64eb5f04-e90b-4afd-8a0f-def39b801b5f"
        },
        "item": {
          "id": "5818e6cc-f55d-4bbc-805d-4b6f150fd147",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0e30d09b-8e2b-4b1b-8500-932426c83cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b41284-edab-4135-b467-1604574dbd4a",
        "cursor": {
          "ref": "74426acc-cd42-4f7b-954a-fbbeb57e15c3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6f08b40d-7eba-49ce-aa7b-8574e676c40c"
        },
        "item": {
          "id": "84b41284-edab-4135-b467-1604574dbd4a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "57f40bd7-2e3b-44a2-bc6d-5f025f3e85e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e2a31f-80d2-425a-8347-3ea5b49e36e0",
        "cursor": {
          "ref": "b8293896-8ecf-4b30-9ca0-dc05adcfd8cc",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dc1d65ba-18b2-4300-b064-d24f603ff14d"
        },
        "item": {
          "id": "25e2a31f-80d2-425a-8347-3ea5b49e36e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3283b8ed-a738-4cd6-847c-236ae0674d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce13828-dfe9-4b11-bb73-f5adafa4b9c9",
        "cursor": {
          "ref": "4eac80df-364c-45e7-8bd8-9172ef965d49",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a070a70c-4dbe-4c45-bddb-e8f7b2039188"
        },
        "item": {
          "id": "8ce13828-dfe9-4b11-bb73-f5adafa4b9c9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "07a5cd33-b0a1-4c4f-a050-a513160a4bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c993bd1c-b91e-4240-99f0-caf60b7747fa",
        "cursor": {
          "ref": "21395208-7f2f-4554-bd8d-996caaba6269",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d2924bda-4554-4509-93a8-6d0f0a53cd61"
        },
        "item": {
          "id": "c993bd1c-b91e-4240-99f0-caf60b7747fa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8980252e-ee0a-4094-bdbf-3bd56c6cebf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787c6c01-e04e-4937-b2d1-6787f1aa565c",
        "cursor": {
          "ref": "2a6b1164-1791-4a05-9549-8102d6faf746",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8e40a936-defb-4510-83a2-bd8ed1686428"
        },
        "item": {
          "id": "787c6c01-e04e-4937-b2d1-6787f1aa565c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ed8a7e7d-dd83-41eb-b4a9-b701b70c1e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c6e44b-6bb9-4e76-9783-59b028492f6f",
        "cursor": {
          "ref": "9193e52d-0bed-4396-a9f1-ef617621dc0d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e4f1c1a6-44ea-4e9b-beba-36e533ce99e0"
        },
        "item": {
          "id": "90c6e44b-6bb9-4e76-9783-59b028492f6f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "151a4c93-31f2-461c-bba8-cd7416507019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546ddbea-e188-4b57-889e-1bb722cc8265",
        "cursor": {
          "ref": "33924b2e-b467-4f8a-9909-b3b893a91314",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a7a0dc47-fdc8-4541-bd1c-ef25bb3c1094"
        },
        "item": {
          "id": "546ddbea-e188-4b57-889e-1bb722cc8265",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef37ebf1-f856-4964-9268-8b1dfc595347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436f46cf-5f24-47d4-a790-62388a0b961d",
        "cursor": {
          "ref": "f2bea7c2-4130-4d7f-9687-1f42e81bc60e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c468e51d-bd11-4c02-a819-08cc969ecb95"
        },
        "item": {
          "id": "436f46cf-5f24-47d4-a790-62388a0b961d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "11a544f0-0599-4393-bfea-db4eb2b75da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ef3fce-42be-42fa-a65a-d27cb8aeab11",
        "cursor": {
          "ref": "8886596e-cd37-4421-bdfd-b73c2b5f3eec",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8a9a9bdc-493e-409d-8c84-173f19b117f2"
        },
        "item": {
          "id": "f6ef3fce-42be-42fa-a65a-d27cb8aeab11",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cb94d891-7afd-4630-b2e6-7798e1f555a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01599742-27fb-427e-ba7e-8ebc5ece428c",
        "cursor": {
          "ref": "19265560-2d17-469b-ba18-3ca0f9ae1133",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "93876975-833c-4bf3-9aa0-bec94e6480dc"
        },
        "item": {
          "id": "01599742-27fb-427e-ba7e-8ebc5ece428c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9a2d88e2-c4a2-4ca2-8ee2-918fe521cf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a461f7a8-ea44-46b1-b87f-865265a46aa9",
        "cursor": {
          "ref": "36567d75-e1d9-4f60-910c-fb39f51d8f52",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2d8c8c36-8b94-4d07-8d86-0a0569401645"
        },
        "item": {
          "id": "a461f7a8-ea44-46b1-b87f-865265a46aa9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "589664eb-dfb2-4b18-9300-1adbd854d655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b77fa05-bc5e-4865-8ced-bf7f8102eb4d",
        "cursor": {
          "ref": "a58b32a9-3e9c-4878-99b7-894a4d44810d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ef28862c-5817-4877-b9c7-a0c591c0d20a"
        },
        "item": {
          "id": "6b77fa05-bc5e-4865-8ced-bf7f8102eb4d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4b8e9eaf-bfd5-436a-9e80-c4b380b3d1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c3ba19-3c02-4fe4-96e3-bcf68314ba5b",
        "cursor": {
          "ref": "f1ab6cae-457b-4220-97cf-fc0ba61478df",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6966f83c-ef14-41de-b455-24b9dacfffd5"
        },
        "item": {
          "id": "65c3ba19-3c02-4fe4-96e3-bcf68314ba5b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "99c3df78-bbc8-46da-a3c4-cc4d449edf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d944a-01b3-4134-8d4c-c4ef2b69f7ca",
        "cursor": {
          "ref": "ccfdde4f-f8e7-4ec5-b046-53121af411a4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8366c4c0-d65d-43bb-ab77-172a5d6a1cd4"
        },
        "item": {
          "id": "4b9d944a-01b3-4134-8d4c-c4ef2b69f7ca",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "02485323-2ac0-45f3-aedc-0363a0228bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd3487d-27bf-4de6-90ae-deca5fd3e7b9",
        "cursor": {
          "ref": "49209cbc-6b85-431a-b42d-84febd4047c2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "192e6e19-8d59-48f5-be2e-48ce5bcb37b3"
        },
        "item": {
          "id": "5fd3487d-27bf-4de6-90ae-deca5fd3e7b9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a0226fbe-efef-48bf-a63b-e842a05b09b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1abb54-55b1-42a1-b657-5e33ffb4c89d",
        "cursor": {
          "ref": "2599e4b1-9577-4c09-9e85-db9a00d4316f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b6dc9b21-c893-440f-a02f-a7eab94f0e7f"
        },
        "item": {
          "id": "cd1abb54-55b1-42a1-b657-5e33ffb4c89d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b934b4ed-1693-4a74-820a-d4d14cd043ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4df4e6-2f2f-4b66-9eb9-cc10bf286c78",
        "cursor": {
          "ref": "15a5f7f9-977c-44de-b7e1-8a970ddee8df",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9494407e-5065-4c16-b0fb-1ce4968e67ea"
        },
        "item": {
          "id": "1a4df4e6-2f2f-4b66-9eb9-cc10bf286c78",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2c43a1ad-b2f7-41b6-b584-77c60ad76cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409adef0-b292-4105-ad7d-0479a1c05026",
        "cursor": {
          "ref": "0e1bc87a-718c-494d-96d0-147d8eb90078",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5140daf6-c0a5-4582-9220-fbd709751a67"
        },
        "item": {
          "id": "409adef0-b292-4105-ad7d-0479a1c05026",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1fab47f2-5970-481f-9370-4eb94d2b4789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4dc842-20cc-4041-a68f-e0da013dd40d",
        "cursor": {
          "ref": "df89b46e-fc91-4ae7-a9e0-9f1b17b09993",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "24f0342a-39a7-4266-8abd-48248247c0e8"
        },
        "item": {
          "id": "0f4dc842-20cc-4041-a68f-e0da013dd40d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "91beb417-bdb7-46e2-908d-76bc41d30972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4443f95e-869d-4508-b3ae-280787dfb7bb",
        "cursor": {
          "ref": "70d319af-ac2d-4fa4-9008-fb779c59b115",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3dc1193d-3131-4a1c-8058-a254bc575020"
        },
        "item": {
          "id": "4443f95e-869d-4508-b3ae-280787dfb7bb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1fcb4fbb-c033-4b27-a4ff-6bcf1fca8a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa24511-8d2c-4baa-b7d2-d87723e5f94a",
        "cursor": {
          "ref": "74695e77-f990-4786-b290-7d31847744f5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "987baa6c-2618-481c-8e7d-e4f4ed559d9b"
        },
        "item": {
          "id": "4aa24511-8d2c-4baa-b7d2-d87723e5f94a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "72251773-d7eb-4361-bff8-93ff7dcadc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a188a626-cbe4-4efa-9e59-a521cd6ed36e",
        "cursor": {
          "ref": "308ecb61-96d1-4206-b53f-999bdc459e90",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "83167ef8-09d6-4ca6-944b-370d11919299"
        },
        "item": {
          "id": "a188a626-cbe4-4efa-9e59-a521cd6ed36e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8460b7ae-2076-49e2-aaae-b86392c0776c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3969ad5e-032a-4aae-9419-32d246eea36a",
        "cursor": {
          "ref": "8bbc969d-83f6-4d45-acad-ef31bfaf15b5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a565499c-bd8b-475f-a237-9ab4703bc412"
        },
        "item": {
          "id": "3969ad5e-032a-4aae-9419-32d246eea36a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "88a5efba-8cee-445e-a43f-76ed153427dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5d9d10-d279-4985-9e53-64ccbc567f3f",
        "cursor": {
          "ref": "e523d507-c6ec-4453-b4ce-e78917ea8721",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6e8e0660-45d8-4748-a5ff-2880abe7a074"
        },
        "item": {
          "id": "2e5d9d10-d279-4985-9e53-64ccbc567f3f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b7323c43-ce08-4e4a-bf90-0aeab48eee07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1808f60c-8d69-40f1-9f65-0846c1ffea5f",
        "cursor": {
          "ref": "66fde415-e96a-4cef-a785-38c0b97f3853",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6a6d27f8-d926-49b6-93a9-cd455f69ba8b"
        },
        "item": {
          "id": "1808f60c-8d69-40f1-9f65-0846c1ffea5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bf38f484-5141-44ba-9e4f-356260353181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60faed11-276b-40dc-a190-a46620d14f9e",
        "cursor": {
          "ref": "d4109517-3ae8-41bb-b2a5-5a73d322ce45",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "babb66f3-3ab5-46f6-b3d4-ec021daa9cc1"
        },
        "item": {
          "id": "60faed11-276b-40dc-a190-a46620d14f9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "30c54de5-fe70-4ac9-b4c7-6b3f34aa90f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa569d16-29ad-4c39-88c1-114c5ea9efdf",
        "cursor": {
          "ref": "849863b9-9c65-4e0e-9f33-6821f3da16a3",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f4fbcc37-c871-4c58-b4b0-15ebb4e3cd8b"
        },
        "item": {
          "id": "aa569d16-29ad-4c39-88c1-114c5ea9efdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5992f191-bc6e-4974-b89f-f38c9f6218e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b487f26c-c2c0-4088-b76d-b7ebadf9ba2b",
        "cursor": {
          "ref": "f07d2380-1afc-4ac8-8024-6c3af7c018e2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "59db01b4-daec-4ac9-8d89-de6909e644c7"
        },
        "item": {
          "id": "b487f26c-c2c0-4088-b76d-b7ebadf9ba2b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0baa8aed-9b73-47b1-be83-c5a3ae78b447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abf1cd2-17cb-45ed-8e0d-d7ffd130c288",
        "cursor": {
          "ref": "ddfd4112-7ae4-4295-a069-8d5d2d1ba8bc",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f4038559-da68-42f9-8eb5-04e54ad86703"
        },
        "item": {
          "id": "2abf1cd2-17cb-45ed-8e0d-d7ffd130c288",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f180910b-dbff-4c8b-8da7-4cdbe49af675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b0b6d3-dd8f-4f61-a6af-777948912cdd",
        "cursor": {
          "ref": "ea6a2705-637e-4b9a-80c1-281ea7be3109",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9907102f-c913-4630-abcc-23d542a4f3c6"
        },
        "item": {
          "id": "f2b0b6d3-dd8f-4f61-a6af-777948912cdd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0cfc3e65-8847-431f-b3bd-5984238c78b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64009464-0088-4c65-88b5-b622ca7bc912",
        "cursor": {
          "ref": "5150ef97-6db1-4f3b-b435-7e20407cc061",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "789ea244-c26a-466f-b266-3fc0dab045de"
        },
        "item": {
          "id": "64009464-0088-4c65-88b5-b622ca7bc912",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "461fb220-5e6c-442f-8029-731dc8f0aee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae24131-51a3-4611-b1e6-2fb47d98a91a",
        "cursor": {
          "ref": "263b6802-e3ae-4256-9770-8582a83a4b16",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "97bf22fd-ee18-4adc-971d-3ecb3b52fb87"
        },
        "item": {
          "id": "6ae24131-51a3-4611-b1e6-2fb47d98a91a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dc02e3b5-b0b7-4f67-86ee-03c151d8d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baa42aa-f60f-4414-b7b0-553fcfec59e2",
        "cursor": {
          "ref": "850f8ed8-78d3-4c6d-b7b0-c5397d1f7ae7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a4c78eae-c710-489b-8639-7fba158e4351"
        },
        "item": {
          "id": "4baa42aa-f60f-4414-b7b0-553fcfec59e2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b21eaec8-9478-49b3-a520-381c7f34859b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e31f72-eee9-43fe-980b-17681e6e671b",
        "cursor": {
          "ref": "25dca61d-230a-4bb9-ad8f-af9292e88f01",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7a45de9e-ff1b-4b62-948f-799675f1f7cb"
        },
        "item": {
          "id": "53e31f72-eee9-43fe-980b-17681e6e671b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a8bb3a5c-7c51-430d-bf17-97372c4f73ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f64260-a745-47fa-aa73-a5eeb9419679",
        "cursor": {
          "ref": "9403a418-21bb-4e40-a671-52711ed70535",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dcc12257-e843-44af-bc5b-c06b6549604e"
        },
        "item": {
          "id": "72f64260-a745-47fa-aa73-a5eeb9419679",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e85eebaa-b4cf-4d85-b580-9c039692d0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323bcef0-ee43-4384-bb46-d76d6cb9a693",
        "cursor": {
          "ref": "1852ad97-3db6-4295-a757-eb4f8ce883bb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "07e972dd-b6d8-4e83-88a7-b0a8f3fb92e0"
        },
        "item": {
          "id": "323bcef0-ee43-4384-bb46-d76d6cb9a693",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6c6fc80d-2848-4af9-b21f-1d84342e96d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a404c15-6f8f-427b-9469-24d57b0b9ab5",
        "cursor": {
          "ref": "cf000153-e4ba-414b-801e-18e71352c547",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a28b9a9d-86d0-4484-8960-1d40ebaf7caa"
        },
        "item": {
          "id": "3a404c15-6f8f-427b-9469-24d57b0b9ab5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c84a2d64-cd03-4664-bc8e-691e8628b4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de1f62-4a05-4dde-b307-32cce8b22095",
        "cursor": {
          "ref": "56f2d4a6-9ec1-4e37-aa6d-888a01559f90",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a91b9322-fde1-4c6a-a706-7fd6f7a68dfa"
        },
        "item": {
          "id": "39de1f62-4a05-4dde-b307-32cce8b22095",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9997f352-0b8e-41b5-a793-19475463464a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f396f73d-7dac-4599-9937-f4149b81033b",
        "cursor": {
          "ref": "715ad597-34d3-4313-bec6-f707c51f70fd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "429c9558-8ffd-44e8-8cee-7ed112383ba9"
        },
        "item": {
          "id": "f396f73d-7dac-4599-9937-f4149b81033b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f66231e3-cc62-4a7c-93da-62365cb0f428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5510909b-4a89-4f92-99a3-5699d3f5c911",
        "cursor": {
          "ref": "168bc419-575f-4ba4-aace-bc7f416be906",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ccffb0fc-dd01-444c-bed2-da4c6671db48"
        },
        "item": {
          "id": "5510909b-4a89-4f92-99a3-5699d3f5c911",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c30c242c-908f-4943-a9ed-127c48944cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9977f441-3f1b-44c6-ab15-04c62cf01814",
        "cursor": {
          "ref": "f3988f86-1233-41ce-ace6-6872c6419779",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d09da1de-139b-406d-9f76-8f521ca218cf"
        },
        "item": {
          "id": "9977f441-3f1b-44c6-ab15-04c62cf01814",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f65c9a2b-c252-40c8-9a90-5767eb7668b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2b2656-3975-4052-9783-04e1a5aaaba5",
        "cursor": {
          "ref": "8ec97497-c2e5-4b54-8b99-cceefce3785b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "44bb9d1e-cb61-4956-b582-a2319bea7706"
        },
        "item": {
          "id": "6f2b2656-3975-4052-9783-04e1a5aaaba5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b3d9dfa1-b2bf-41aa-8b0d-b06671f29b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717c45d2-c1e2-4cbe-8a70-916f51d1ef23",
        "cursor": {
          "ref": "3c5f1129-03e1-418a-b3d8-0470c061b036",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "69dea617-1368-430c-b516-5fba006a235d"
        },
        "item": {
          "id": "717c45d2-c1e2-4cbe-8a70-916f51d1ef23",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "80db3f31-de9e-495b-b46f-d9160c03a436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f31e3be-b37d-4a0c-b507-84ee6a5d41fc",
        "cursor": {
          "ref": "02928810-9549-45d9-be82-9ccdcd11571c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6f31a97d-3c0b-4979-8a3a-577807754aca"
        },
        "item": {
          "id": "9f31e3be-b37d-4a0c-b507-84ee6a5d41fc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9be38955-09b8-44f1-bd78-b72aeb50cb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a38d0d-84eb-4aac-a756-2c0aff1df246",
        "cursor": {
          "ref": "d4b18d75-cfd4-461a-85ce-77ddb02f2ac5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d7c7cf03-0d1c-4d35-971f-98b86672c25d"
        },
        "item": {
          "id": "a0a38d0d-84eb-4aac-a756-2c0aff1df246",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9ebff2c9-1a66-452e-be8d-8a9632100d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a736e-4889-49da-805f-9a12188d6e26",
        "cursor": {
          "ref": "7892b59e-bcde-4efe-b2c5-1e8b944728e8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "099b1c15-8828-4d2c-a882-fbf2b4f93346"
        },
        "item": {
          "id": "237a736e-4889-49da-805f-9a12188d6e26",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "33597dbc-9476-4395-9ee1-a75f680886a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70ac98-bf56-4870-8619-0cd7f5793bf8",
        "cursor": {
          "ref": "f2167b96-00dc-4eb0-b735-5c6efff17f9a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "96c02c6c-f4a6-4364-9f3f-1561e55c78a8"
        },
        "item": {
          "id": "3a70ac98-bf56-4870-8619-0cd7f5793bf8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "75d05e27-ea5e-444e-97d3-f7c9aaf24955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28edccba-4045-4b6d-95e4-d661c9b8d475",
        "cursor": {
          "ref": "bdc715b9-307a-43da-b9fd-382b5d701a8a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0f5d34f4-e652-4143-a568-e9942dcadb68"
        },
        "item": {
          "id": "28edccba-4045-4b6d-95e4-d661c9b8d475",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "03f396ab-d9ee-4ec3-87c4-28786f4bf75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb03238b-a9f1-46ec-9ea1-a6bbc11fe827",
        "cursor": {
          "ref": "bc48b4c0-9abf-471b-ae1b-1eb524b2c688",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "54c7a255-8129-473a-8b2e-2ba4b78561c4"
        },
        "item": {
          "id": "bb03238b-a9f1-46ec-9ea1-a6bbc11fe827",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0a7ec75f-0102-47ab-a878-0516d5e4f93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bd3a9f-a12c-4fcb-a78c-7169406eb8b7",
        "cursor": {
          "ref": "fcf4c195-941d-4625-a047-c2b2dcacd79b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f3e790be-fe59-478a-ba8b-0d1a2df4358b"
        },
        "item": {
          "id": "21bd3a9f-a12c-4fcb-a78c-7169406eb8b7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "db54b92a-c89b-44cd-8d84-3013afcafdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc296886-41ae-4da9-92b0-f14027f8f0cb",
        "cursor": {
          "ref": "4cdf4676-966c-4595-8c92-32336adfca26",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "982e73fa-b362-44eb-9170-17bc1691dbcf"
        },
        "item": {
          "id": "dc296886-41ae-4da9-92b0-f14027f8f0cb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6496cf94-5ae3-44eb-a6b9-f3f3afe66253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc46651-9bec-46ee-8e79-d551de96c944",
        "cursor": {
          "ref": "941e8c0c-0946-4471-b71a-9b857f19a3ef",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2ee3a60c-54fc-4e61-8efa-724edd17918a"
        },
        "item": {
          "id": "fcc46651-9bec-46ee-8e79-d551de96c944",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0f629e41-c9c6-4215-a5c1-6f1f541b38ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f58222-e8bc-4e4a-a488-e92073e49431",
        "cursor": {
          "ref": "087cddbe-03be-4bea-93ee-45abd946c2a5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5ef44903-15c7-4b48-bff1-937849ffb926"
        },
        "item": {
          "id": "72f58222-e8bc-4e4a-a488-e92073e49431",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c5f8e261-4e4e-431b-a3cd-3310a1320684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78164e89-3ba8-40c9-8bb0-f281c917d24c",
        "cursor": {
          "ref": "5c2d4cb6-9097-47d9-940a-d7d694f68ce1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d4f4ee24-81a6-45a1-a072-8614e5feb6d3"
        },
        "item": {
          "id": "78164e89-3ba8-40c9-8bb0-f281c917d24c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c5de7531-b09a-41ee-bd7a-c0d0c0cd8bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f39742-1287-4730-9c1c-4ff20eaa68dd",
        "cursor": {
          "ref": "38bf8024-c0cc-4019-91e1-79ca9b25b47a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1e9714a7-ef05-4fda-b75e-fe5d578f24ce"
        },
        "item": {
          "id": "10f39742-1287-4730-9c1c-4ff20eaa68dd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1a278a93-bb7f-4a6f-8539-c803a71ba198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8271065-811f-4d39-a2b1-096240de4945",
        "cursor": {
          "ref": "26b73bd1-df25-44d2-a9f9-1dfa1c169d53",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "abd728a6-23a1-403d-90d0-a385be998738"
        },
        "item": {
          "id": "b8271065-811f-4d39-a2b1-096240de4945",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "186c9c13-3b3c-4cc0-bcc2-92acddad7bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5162026-4e36-4281-a14d-aeb3559e5b88",
        "cursor": {
          "ref": "8e9f5f9c-c230-4f08-bf86-1b7ae6427142",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7f7c8910-9180-44bb-8b4b-e3230dffaeab"
        },
        "item": {
          "id": "c5162026-4e36-4281-a14d-aeb3559e5b88",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "51a360ca-881d-4138-85a2-403d836e81b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73522651-a67f-4cd6-82b8-dc0696ae8f22",
        "cursor": {
          "ref": "cbd5ba38-652b-43a9-81e7-3b2cac07845f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "146bc754-97c1-45f3-96c6-98a07599d318"
        },
        "item": {
          "id": "73522651-a67f-4cd6-82b8-dc0696ae8f22",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "15872f9b-d957-40e7-bb55-7c9e96b24cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf1b607-8aea-49db-a757-7b9092445fd1",
        "cursor": {
          "ref": "91208a57-3b89-480a-876f-eabc2e795bd0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "429c4309-e795-48c6-b0ad-56ccfe6b814b"
        },
        "item": {
          "id": "4cf1b607-8aea-49db-a757-7b9092445fd1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2767c3d6-cd54-4e24-9408-d59172247365",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5568b087-9b57-4b89-ad52-ab34ba5317cc",
        "cursor": {
          "ref": "e844a46d-d82f-4215-b14b-c327c216bc28",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fa24ac55-0de7-4ba4-b001-9ea5287c7514"
        },
        "item": {
          "id": "5568b087-9b57-4b89-ad52-ab34ba5317cc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "25a3bc33-e758-4522-9c64-61ff85bdd158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "51e68813-05ad-4eae-8704-b8ab63725496",
        "cursor": {
          "ref": "9574563a-1a27-4421-8e84-e4b2a1e8f306",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eff3df50-d1c5-4881-b26c-497eb11dc541"
        },
        "item": {
          "id": "51e68813-05ad-4eae-8704-b8ab63725496",
          "name": "credentials_issue"
        },
        "response": {
          "id": "92a4ea06-01c5-4bde-b70b-30eec29fe927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "09bd6e7f-d796-444f-b4b2-cfa8d56b6307",
        "cursor": {
          "ref": "e41acc2f-2fd4-4eac-9f05-94dfb0670125",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "39f8a701-182e-4385-9a97-ce61dd951cfd"
        },
        "item": {
          "id": "09bd6e7f-d796-444f-b4b2-cfa8d56b6307",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b98a74c0-9bac-4b78-9445-e9c2a9325a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0ad2494d-912b-453d-bc90-640635bd1903",
        "cursor": {
          "ref": "f998e0be-5344-4bac-a18a-930f22b14ca7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cf1a14f7-cc1b-499a-ab02-5800c548cd30"
        },
        "item": {
          "id": "0ad2494d-912b-453d-bc90-640635bd1903",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c088052c-c3dd-45fc-b070-7042d2b29137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ecc6ecc7-83e0-410a-be55-e5c5540076d7",
        "cursor": {
          "ref": "d89a1a1d-1ce7-4eba-a051-5e4ab0264f11",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ffd8f9ae-cd47-471d-947b-35b4e5a0d2ef"
        },
        "item": {
          "id": "ecc6ecc7-83e0-410a-be55-e5c5540076d7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7e944a1f-1dc6-427f-99c5-9d4695b76636",
          "status": "Created",
          "code": 201,
          "responseTime": 9035,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "088dfdb3-2350-470c-8326-b305e3c9b022",
        "cursor": {
          "ref": "c8c7f850-4631-4f74-86af-54277246289f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6dacaaaa-d17f-4293-8c4c-24d07a1c99dd"
        },
        "item": {
          "id": "088dfdb3-2350-470c-8326-b305e3c9b022",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b0d5a5d9-7634-4044-90c0-28ab293ae9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "992dfe3d-2da4-49d7-8bb0-b8d6ce053c47",
        "cursor": {
          "ref": "23bd97f8-0576-45f4-bea1-c2dfef00af48",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "051d84ec-ed7a-4d20-a6ed-0d994fe0905a"
        },
        "item": {
          "id": "992dfe3d-2da4-49d7-8bb0-b8d6ce053c47",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "945dfd00-b85a-4fdb-a449-6b87e940a12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "199a4473-a4d4-41fb-8783-bf3db3650868",
        "cursor": {
          "ref": "65164b46-4d0e-4828-8b75-51230a973462",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b5c79b5d-9eff-45a6-91fe-13275c846f2d"
        },
        "item": {
          "id": "199a4473-a4d4-41fb-8783-bf3db3650868",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d61f7ba4-c9a1-4345-b373-1525dd7383b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37365d-2e04-4732-89cd-db07e3aeaf84",
        "cursor": {
          "ref": "45a876d9-fe7a-47a7-afb3-08ca986d0de4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d910e4e-e5ef-4323-90cf-13b9fbfe7940"
        },
        "item": {
          "id": "fe37365d-2e04-4732-89cd-db07e3aeaf84",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "843526b6-d47b-4215-895a-52004839b92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27bdc78-6fc9-4bbb-bf6d-cae5a92a4996",
        "cursor": {
          "ref": "53f545e6-d6ae-4029-9a07-eabf0100731a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3cb30cce-f719-4cd6-a52e-6b3d4e3449d5"
        },
        "item": {
          "id": "a27bdc78-6fc9-4bbb-bf6d-cae5a92a4996",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca768615-1266-416f-83e5-1811482196f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f2ed02-2c84-4bd5-81be-53db354b8642",
        "cursor": {
          "ref": "c25215b4-5f29-40f5-a3bb-d730665cc43e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f43e6bdf-82f7-4373-b4c2-1557fa52fbf4"
        },
        "item": {
          "id": "83f2ed02-2c84-4bd5-81be-53db354b8642",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "22e01387-1f8c-494b-8342-0b27174e92c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddf447f-c174-4a60-8c9f-e37e7e4ae4d8",
        "cursor": {
          "ref": "eb19fe8e-502c-4865-81e1-7c5f7aa50622",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7148d2bb-349b-40d3-a5f0-600570f9a127"
        },
        "item": {
          "id": "6ddf447f-c174-4a60-8c9f-e37e7e4ae4d8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78c05f4a-78af-4d88-9e0f-028cc55bd2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503291b2-290a-4976-9922-d1af6bf46f2a",
        "cursor": {
          "ref": "33574394-8194-462a-bc88-7fd82311c3c8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "812f87d3-57f6-4701-84df-7a563cab5485"
        },
        "item": {
          "id": "503291b2-290a-4976-9922-d1af6bf46f2a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7b352368-3bb6-4280-9bde-2247d497761e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badf29e5-b4c4-4553-b485-f8b9f0018f07",
        "cursor": {
          "ref": "f9238c5f-c1c0-41a5-b49d-62d8422748c0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8c88ac6b-5e40-4f20-9c72-b44303a027da"
        },
        "item": {
          "id": "badf29e5-b4c4-4553-b485-f8b9f0018f07",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f91068ef-3be5-425c-8b22-41d6882d0fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b3d8df-65bf-4fcf-995c-3f4959e760fc",
        "cursor": {
          "ref": "9af6cc54-0c4b-4fca-9dea-d00f40d93d5f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ab1ab63b-2c10-4196-90ff-db3d622a57e7"
        },
        "item": {
          "id": "92b3d8df-65bf-4fcf-995c-3f4959e760fc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3e09d2c7-d6fd-44f6-9bd3-c66b4fa6d6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b14917-f417-45ba-9490-359789af5200",
        "cursor": {
          "ref": "e87264b6-e2b4-4d1f-b0cc-49e1fcf00242",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8431cd5d-0872-4cec-844f-ff4973ef3026"
        },
        "item": {
          "id": "19b14917-f417-45ba-9490-359789af5200",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1c5844eb-55c0-4dce-b87e-19e0bd8a84f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaa2a51-2c1e-4e63-bb3e-dccd9e11da03",
        "cursor": {
          "ref": "31b9f059-0436-446a-a1c2-a0055d9c308b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "33843361-0cab-4060-895e-dee7ba6beae7"
        },
        "item": {
          "id": "dbaa2a51-2c1e-4e63-bb3e-dccd9e11da03",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2d71ee03-d840-47cd-9bfb-98946bedccb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07104342-8fcf-4cd4-b1f3-1c124b65d0f4",
        "cursor": {
          "ref": "99023f3a-064d-4600-b70f-e06ca5702755",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "09f29c53-f550-455e-84e7-538090d013d2"
        },
        "item": {
          "id": "07104342-8fcf-4cd4-b1f3-1c124b65d0f4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2c9aaf64-4bfc-4318-be0c-c2b9b9a527a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbd5be5-94b2-4c20-8577-3a8b014bbfe2",
        "cursor": {
          "ref": "4413a03e-8e6b-44f0-9339-057cf3f587d7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2b7a92ea-bbe1-4aa5-8fab-3d844e2a6459"
        },
        "item": {
          "id": "bfbd5be5-94b2-4c20-8577-3a8b014bbfe2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "204e17f1-1b0d-4ecf-8ddf-eb30f699ddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538ed3c5-6da6-4d30-8b0d-f60dd36c77f6",
        "cursor": {
          "ref": "bfb8c422-555a-4ae3-affa-09be74b8345f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9d7e3b38-532b-4bf1-8dc0-a80cb7cd7b80"
        },
        "item": {
          "id": "538ed3c5-6da6-4d30-8b0d-f60dd36c77f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "45ff0441-5361-49e9-a4cf-d927a38b9190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4be2178-5387-43ef-bb29-119855b63e74",
        "cursor": {
          "ref": "16179360-2e51-41d4-a3cc-45502823fb81",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f3d826e3-73bf-413f-ae7c-2f7fc834537d"
        },
        "item": {
          "id": "b4be2178-5387-43ef-bb29-119855b63e74",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e2e52505-dae0-4e82-a57b-99eb919d9d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab2ff2c-a46a-4be2-a22a-4811bc128de0",
        "cursor": {
          "ref": "4ec30f71-c435-49cf-82c9-c4cec800e265",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6077501d-05ee-4613-945c-aa372997c10a"
        },
        "item": {
          "id": "2ab2ff2c-a46a-4be2-a22a-4811bc128de0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "02fa8d25-1830-45e0-a8ba-b6531e25ab08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb96e426-7500-4dbc-bbe3-6fb905b76315",
        "cursor": {
          "ref": "dc0021fa-b382-410c-a0d1-06849ffa45b1",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8b5620fb-af09-4684-b477-c3d44bec5823"
        },
        "item": {
          "id": "cb96e426-7500-4dbc-bbe3-6fb905b76315",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fbf488a6-7299-412e-8c01-12dc3c8449c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d50475-c63f-4e64-b6fd-3a217ed5087c",
        "cursor": {
          "ref": "2597b327-c2a1-45f1-8a7e-ee51d60419c6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dc5c1241-f1ec-44e7-a809-24c7e45686de"
        },
        "item": {
          "id": "32d50475-c63f-4e64-b6fd-3a217ed5087c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "286ee04d-dacb-4f1b-91a1-b8c4191d0bb2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "31063bb3-9fe6-4bfc-b987-947065a38e5f",
        "cursor": {
          "ref": "b233da17-99d5-427d-be5f-6d2d4ebfa16b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "81a9c041-ed37-49ed-8d5e-966edeade230"
        },
        "item": {
          "id": "31063bb3-9fe6-4bfc-b987-947065a38e5f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "32ccecd5-aa1e-4033-84df-605f66684d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2425bca-5e42-486e-9aef-b509094b15bc",
        "cursor": {
          "ref": "3023ee3a-d664-423e-a14e-485dc2f574e8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2707cece-88a9-4e5a-bc87-5040a6ddb5cf"
        },
        "item": {
          "id": "a2425bca-5e42-486e-9aef-b509094b15bc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5df7a519-b3ea-4c45-836a-fe2e5841d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c4a31d-c64c-43dc-95c6-442e330e0052",
        "cursor": {
          "ref": "c919968d-b972-4c44-a337-187884d7f817",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bd5f872f-9767-4e4d-90ba-058060b02f83"
        },
        "item": {
          "id": "30c4a31d-c64c-43dc-95c6-442e330e0052",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "deb2d0cd-0c7d-4c8f-b6d8-b9ffbb717123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a89ae72-2842-4868-9db3-9b864d289a9f",
        "cursor": {
          "ref": "406fe82f-7e61-4b4e-9f13-66c6111a298e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "961d578f-ba7c-449e-9c03-8633cd350ae4"
        },
        "item": {
          "id": "2a89ae72-2842-4868-9db3-9b864d289a9f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5fcac747-6671-4d7d-8130-8e4b5fa9c1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a5e760-2de1-4c3d-82c5-386ad895e997",
        "cursor": {
          "ref": "de4e4f11-787e-444d-a7c1-a2342718e3a3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "865ceeb7-9f7f-4c69-a4e3-c01fede20368"
        },
        "item": {
          "id": "99a5e760-2de1-4c3d-82c5-386ad895e997",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1518470a-ea2c-4fe6-80f7-e2d04592274f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2597f766-a50b-4880-a3eb-ca0b9855a639",
        "cursor": {
          "ref": "6de09ee6-1692-4d98-b013-8dab7a100bdd",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ce0fec78-6a87-4c30-8885-88bcaed7ff2c"
        },
        "item": {
          "id": "2597f766-a50b-4880-a3eb-ca0b9855a639",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75a7b91f-c2b4-4025-9096-f855f25eb511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95841108-57a8-4e94-963b-e139d64bbab4",
        "cursor": {
          "ref": "17c2ff21-628a-4ca9-8c33-d7a37c3ab522",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "49a62a08-de25-409a-9f0a-f21478671089"
        },
        "item": {
          "id": "95841108-57a8-4e94-963b-e139d64bbab4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f027009f-3910-4037-be7b-d7c44f91dbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47710677-95ae-4b13-a547-e5c878371034",
        "cursor": {
          "ref": "772eeb4f-3e17-43b6-b316-1359004185ce",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5cdb2932-f6c8-47aa-94e7-03717610d95b"
        },
        "item": {
          "id": "47710677-95ae-4b13-a547-e5c878371034",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4c71a83e-ebae-401d-9a0c-42f64fe0e1c9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "67ffd75a-38ea-403e-9e49-9066060c50da",
        "cursor": {
          "ref": "dcebc62a-a8c1-4289-83d2-2e4a5cf0fe52",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a714bf45-a532-4b09-9ebe-b3517fad81e9"
        },
        "item": {
          "id": "67ffd75a-38ea-403e-9e49-9066060c50da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f1fbda5f-88c1-4121-a2ba-b6564ccb1270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ca360c-465e-4c64-be8d-5ac8e0e0761f",
        "cursor": {
          "ref": "2ac39314-b2ab-4712-b622-8408a0bfab04",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8a50331f-b670-444a-881e-8a23c4e682ac"
        },
        "item": {
          "id": "67ca360c-465e-4c64-be8d-5ac8e0e0761f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "11887f76-0b42-4de9-824f-9ba35306a71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bc2033-25cd-4d86-9f86-cc4adefeb5fc",
        "cursor": {
          "ref": "d4bccad1-698c-40d5-86f1-ec000f0bab7b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4b3623d3-3129-47e1-bec0-72eb5eedec48"
        },
        "item": {
          "id": "89bc2033-25cd-4d86-9f86-cc4adefeb5fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6d30488f-acba-4b6b-9d75-7ff5d53420b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacfe763-2379-456e-9494-ceb742c134a8",
        "cursor": {
          "ref": "b6603dce-c20a-4446-a392-e885d1f8bef1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "76a554e6-e105-426d-8beb-df454218b738"
        },
        "item": {
          "id": "dacfe763-2379-456e-9494-ceb742c134a8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7beee154-8043-4bc7-86ed-d85805a37522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74eadbfb-d963-4129-8c9b-15bb265b9248",
        "cursor": {
          "ref": "bec42f27-b9e6-46ab-8a95-dcd2bda76079",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b9743fd4-398c-4937-8856-1519a81a7842"
        },
        "item": {
          "id": "74eadbfb-d963-4129-8c9b-15bb265b9248",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "572087da-bed0-4159-9b6e-e691e8d64613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e50cac9-2812-4250-bca6-4359375c8fb1",
        "cursor": {
          "ref": "c438e196-40bc-4b2c-bf05-8a10e10dddf6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "73cc6eb0-eadf-465d-94f7-2f88245b1beb"
        },
        "item": {
          "id": "2e50cac9-2812-4250-bca6-4359375c8fb1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7a2564cc-1c17-441c-9989-90d7566c7f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8a54ee-ba7f-48b8-b2bc-59abe01c0342",
        "cursor": {
          "ref": "c6bbca60-eb10-488b-b414-8af3f7e7aa4a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "af01c128-2179-4def-b253-6b013ff3b185"
        },
        "item": {
          "id": "0f8a54ee-ba7f-48b8-b2bc-59abe01c0342",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "73ca561d-8d7d-4ee5-9e19-e99cfdce0577",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 139,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ec13b05a-a65b-44a2-8218-cffe7172f1e9",
        "cursor": {
          "ref": "d4543aa6-9f0b-4361-bdd5-2914bca8af2c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "54c5ec80-0b36-4be0-9868-d2a220441ef5"
        },
        "item": {
          "id": "ec13b05a-a65b-44a2-8218-cffe7172f1e9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "767be46f-0dd3-43f4-8b5f-40853a866ec5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5e5b23-958a-406f-834d-ee838c67d2bf",
        "cursor": {
          "ref": "06c9791f-2886-44bd-9e2f-7795707654a9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b6b44213-e707-43e3-8e7c-1d448dac3600"
        },
        "item": {
          "id": "1c5e5b23-958a-406f-834d-ee838c67d2bf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a6be8802-80d5-424a-bec0-13e243508815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72fd17c-dc68-4bac-9e96-963e49f2f091",
        "cursor": {
          "ref": "669c1572-8fa3-42fe-bf5c-c08f5b147730",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3eb6902e-0720-4b1e-853b-92d4722a361d"
        },
        "item": {
          "id": "b72fd17c-dc68-4bac-9e96-963e49f2f091",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2bdf26c6-e148-4c58-9070-ce75701cd4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c1d263-4735-43cf-a5ea-92d2e1044f3d",
        "cursor": {
          "ref": "33261b0d-9bb3-4c50-b122-d3fc1545a132",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "13897669-d02f-41da-a9fa-ece6529ffb4d"
        },
        "item": {
          "id": "38c1d263-4735-43cf-a5ea-92d2e1044f3d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ba274b05-b090-49a5-a049-30eda25dddc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6157c2-4270-403f-9a01-f0b8c6fc026f",
        "cursor": {
          "ref": "badc3a89-6ec6-48a7-85bd-b91902e7c36a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1d01c34e-ad42-4f07-ac84-3057734d86cb"
        },
        "item": {
          "id": "0d6157c2-4270-403f-9a01-f0b8c6fc026f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bee078d5-7372-43bd-b39c-172b0365956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f005cd-2dfb-49dd-86cf-e4340248ada5",
        "cursor": {
          "ref": "8316bba3-6666-4da0-b2e9-2902367af9e6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "629b0512-1f84-4ce8-9577-218964f43b66"
        },
        "item": {
          "id": "e8f005cd-2dfb-49dd-86cf-e4340248ada5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "099b6285-b74c-4b99-bde7-db49867357bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43205cb-b74e-4236-a35e-a925aa05a5e7",
        "cursor": {
          "ref": "89677c83-db43-44b8-8b02-164bd80d2f6c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c1fea3ad-59e3-4d9c-b24e-e90a623716ce"
        },
        "item": {
          "id": "b43205cb-b74e-4236-a35e-a925aa05a5e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "69db8644-5d43-48d3-8ee1-8096cd2a287d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86ce05c-16ea-438a-ad55-da8a16be56a9",
        "cursor": {
          "ref": "6b5be6ec-c80f-4d74-9bce-d0608f5dfd82",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ef54caa0-3745-4c82-88a3-c1c49530595f"
        },
        "item": {
          "id": "a86ce05c-16ea-438a-ad55-da8a16be56a9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2927da80-d526-4fc7-8e91-c7825c2d04c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63247634-0e08-4f02-b706-3bc052726325",
        "cursor": {
          "ref": "42254b21-aa5b-4174-9f7c-9b9172c8a746",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6080679e-d678-4e24-a5a5-69138594349b"
        },
        "item": {
          "id": "63247634-0e08-4f02-b706-3bc052726325",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7672951c-c907-4d12-93e6-850380345c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0034a8-9109-4ddf-9e91-d417709caef5",
        "cursor": {
          "ref": "29472810-584c-4980-b0f4-48dd02693752",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1496567e-03f1-4ea7-be9c-1f4d34bc9b03"
        },
        "item": {
          "id": "bd0034a8-9109-4ddf-9e91-d417709caef5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "55c94ca8-1d9e-4209-aeec-13e92f3ab153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158f1239-928b-475d-9c60-dcfffd22e297",
        "cursor": {
          "ref": "1ff16ce5-f89a-4a84-abdd-70128322ca48",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9b91614a-e2c1-445f-a261-965cd5caa200"
        },
        "item": {
          "id": "158f1239-928b-475d-9c60-dcfffd22e297",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b4c542a-a08e-4ed6-ae17-86f17d37af5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ee6d6d-85bc-4294-84e5-f36e378eb7fa",
        "cursor": {
          "ref": "ce0a1009-fb40-40ca-a4b6-a6096cff27c5",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0e0da253-d3e2-4366-b8a5-b6663494c090"
        },
        "item": {
          "id": "e6ee6d6d-85bc-4294-84e5-f36e378eb7fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6feabff2-9d90-438a-86b0-3a1cc5d4914c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd23ec96-ecc8-424f-9893-1243db5717e7",
        "cursor": {
          "ref": "27c6c272-5ffd-4456-b749-ea77dd250f00",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b2541252-1f7a-4691-b742-d9ff7a0815ba"
        },
        "item": {
          "id": "dd23ec96-ecc8-424f-9893-1243db5717e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cb9fbd3e-e5e3-4c85-bdd9-ffb173a9ef99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8334e35d-11f7-4125-8628-4c6b33839e25",
        "cursor": {
          "ref": "25c64308-6c68-467e-9284-43b9dd1855bb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e4e38d1c-b5a7-4427-8a79-2e4e357770d5"
        },
        "item": {
          "id": "8334e35d-11f7-4125-8628-4c6b33839e25",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0d6491f7-f331-46d1-aba7-970b061c4f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4da2c0-9a6f-4a12-800e-d17a33e15758",
        "cursor": {
          "ref": "c9792c36-e19f-4495-85dd-4621f45dfd0b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "de08799f-8ece-41b3-a342-2a3b18f2fa1c"
        },
        "item": {
          "id": "ff4da2c0-9a6f-4a12-800e-d17a33e15758",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e6e43e61-f2e0-4f82-b5b1-2941339ea9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb972ce-d6d0-4fa8-aab7-2dd8130a9768",
        "cursor": {
          "ref": "f6d6fe4b-0f2b-4a99-81ef-46d17f683c67",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a3f00004-477e-4b8a-b077-8a01705c418f"
        },
        "item": {
          "id": "abb972ce-d6d0-4fa8-aab7-2dd8130a9768",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f47a8fd5-7f1b-433e-a67d-1bbaec747d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83653f7-134d-4494-8e75-ca429b0dce73",
        "cursor": {
          "ref": "fe75ccc6-dc7e-4420-9e9d-32ff5f310feb",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a2cd96e3-415c-4da5-becc-1cc307f0d9e5"
        },
        "item": {
          "id": "d83653f7-134d-4494-8e75-ca429b0dce73",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "15019e95-0bdc-4faa-8a09-f833bfd50cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03a720c-c3ca-401d-92fe-0bdb1d125c11",
        "cursor": {
          "ref": "dd3095f5-47a6-4efe-9117-ef3ea029ebf5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "34d76923-89c2-426e-a5d6-cff5f4dcc901"
        },
        "item": {
          "id": "b03a720c-c3ca-401d-92fe-0bdb1d125c11",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "872a8d5e-3db1-4817-b4f2-3ee78adeb659",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "ef395b16-7a65-4691-b0b7-827bad7efc8b",
        "cursor": {
          "ref": "38322e13-93e3-4169-aa62-5d23db472e9d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0c713827-72f7-401f-99c1-1336c1ee6b89"
        },
        "item": {
          "id": "ef395b16-7a65-4691-b0b7-827bad7efc8b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f196fdb0-013d-413e-9d25-8cdec03f7f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f35884-2ca8-43fb-a2be-d3400d2d66b3",
        "cursor": {
          "ref": "9a20a7ce-2aca-40c2-aa99-68c023994ee2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ade73e67-8be9-420f-ade2-95b49e0cfcc2"
        },
        "item": {
          "id": "a2f35884-2ca8-43fb-a2be-d3400d2d66b3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "63f09641-e4a8-42c7-9098-5c88f75417d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239f110e-b90d-4be5-a13e-876164500b66",
        "cursor": {
          "ref": "38412f37-8354-42f3-9d27-1f468ea88479",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cb7ddc3a-497d-45e0-bfa4-249edfd2ddb6"
        },
        "item": {
          "id": "239f110e-b90d-4be5-a13e-876164500b66",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "18d7c250-2203-4302-b064-a6e80e09457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbee2ab-3255-4c75-a446-1d9d9f05d813",
        "cursor": {
          "ref": "6d516dfd-2ae3-4568-a6cd-a55f36411b28",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a7d2a1ed-b26c-4b60-a5ec-cf5f42bafd0e"
        },
        "item": {
          "id": "1fbee2ab-3255-4c75-a446-1d9d9f05d813",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04c2f97b-6806-4b11-a39b-65b854bcb800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fec5277-64b9-4b09-9a55-5edf46d6ff37",
        "cursor": {
          "ref": "4bebb31a-e033-4c9c-88bb-4b1ec353e449",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a0709dc9-6562-4261-933d-d5664a7689e6"
        },
        "item": {
          "id": "6fec5277-64b9-4b09-9a55-5edf46d6ff37",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e762b0ef-35b0-44d7-ad4e-ab60c4883f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e417a4ba-0633-4c06-9acb-e6752b8ce429",
        "cursor": {
          "ref": "5a95fb44-285e-48bf-a17f-4ae6a5396efe",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bf94e2b2-3d1c-4a4c-a4ed-93aaa7567d3e"
        },
        "item": {
          "id": "e417a4ba-0633-4c06-9acb-e6752b8ce429",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "32a767d2-c566-4dab-bf29-f154adf4803b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdc180a-1ec5-44f6-9298-2f25edb84b9a",
        "cursor": {
          "ref": "0369d4e6-fed3-45ee-817a-4980dff67f12",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0758fd95-f7c0-4804-a2fd-246ef991dd40"
        },
        "item": {
          "id": "5bdc180a-1ec5-44f6-9298-2f25edb84b9a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7281c6b4-3f24-4b74-895a-1ce1877612c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc6e30d-e7f0-4ebb-a261-d2004a1d4c3e",
        "cursor": {
          "ref": "eb842f4d-623f-42ce-a79d-b081a01a65d2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3ae78aa2-69f0-4083-9a02-0b07a139389c"
        },
        "item": {
          "id": "bcc6e30d-e7f0-4ebb-a261-d2004a1d4c3e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d5241af7-b3ce-4bd7-9d4a-24ab6abfbb8f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "1bf58a14-57c1-4559-8ea4-bd59f143bc7d",
        "cursor": {
          "ref": "0f22f260-bd62-4a69-b39e-12cab35e787d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8ab8cc9b-2307-4bb1-8181-d69c6548569d"
        },
        "item": {
          "id": "1bf58a14-57c1-4559-8ea4-bd59f143bc7d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f7dc8803-549a-4dbe-b144-2d265b16a2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f32a1aa-66c5-4001-83e4-d3239ad007cb",
        "cursor": {
          "ref": "f8a8c9c2-ddfd-49c5-9723-e69353b50299",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dd7035c2-3228-4332-bb19-21606e2143dd"
        },
        "item": {
          "id": "4f32a1aa-66c5-4001-83e4-d3239ad007cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b784b88d-1f54-4d77-8922-510e5c783475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f139b16-ebef-4b84-9e67-9d2669aa89a5",
        "cursor": {
          "ref": "09c271c9-53a4-4e8b-b8a9-6c44572dac2c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1f6f02f1-c988-4676-b627-929d8d472c64"
        },
        "item": {
          "id": "1f139b16-ebef-4b84-9e67-9d2669aa89a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "737c82f4-5796-45dd-ac12-92d8f69d4632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965f558e-281b-4423-a7e0-05094e019f33",
        "cursor": {
          "ref": "f17226b9-4ce5-427b-ba92-3914b31832fc",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4a427a2e-f5ce-4d88-ae66-c153c2a57cab"
        },
        "item": {
          "id": "965f558e-281b-4423-a7e0-05094e019f33",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a12a241b-d738-4add-b577-62e6abff897c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cdf73c-2c6c-433d-bf5d-7067482f3f9b",
        "cursor": {
          "ref": "4e0dbf15-8cdb-4dca-ad91-8eb5ea2bc179",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0aef2c2a-0be6-4372-9ddf-00eac20d0af8"
        },
        "item": {
          "id": "b1cdf73c-2c6c-433d-bf5d-7067482f3f9b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19d4628b-5b8a-495f-b0f2-1d684af84671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb39b166-f360-4a15-978e-72173de03f76",
        "cursor": {
          "ref": "7d9c537c-6650-4b2d-88f7-ad3bd898675c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "476c5d1d-947a-45cd-bebe-cd636cd18080"
        },
        "item": {
          "id": "bb39b166-f360-4a15-978e-72173de03f76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "94a5a044-f7cd-4416-922d-0d0843654e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4515c54b-4364-485f-af22-c5beda5bdbdd",
        "cursor": {
          "ref": "ada958da-0f4a-46a4-9077-bb61f8bc4b1d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b156664e-edda-4561-9b93-c3316bf553bc"
        },
        "item": {
          "id": "4515c54b-4364-485f-af22-c5beda5bdbdd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "616c36fe-0dd8-43ea-aff0-65fea65e8143",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "95aa40c6-81c8-4540-9772-08342c09c703",
        "cursor": {
          "ref": "24052074-6cfa-43f7-96b8-d88a2980f927",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2370d07f-39a0-4249-8894-91b134783702"
        },
        "item": {
          "id": "95aa40c6-81c8-4540-9772-08342c09c703",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "62ab7c1b-26aa-4c7c-97f2-b6d1dc1ce927",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "b479f3b0-16fd-45ec-956f-085b6d1e457b",
        "cursor": {
          "ref": "d0de334f-a3ae-42c8-b7b9-43a9a3b7a8ab",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "168362c5-56e1-473c-b36f-e17a09115eeb"
        },
        "item": {
          "id": "b479f3b0-16fd-45ec-956f-085b6d1e457b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ef4d2c32-484c-4dd1-9327-5638d54169b3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "bd1e9b40-942f-452a-9c4e-0ac2e9829a10",
        "cursor": {
          "ref": "125416b7-255a-4ae1-8a5d-e56ea333dcfc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c550f04c-e2f2-4448-bc51-ba610336c490"
        },
        "item": {
          "id": "bd1e9b40-942f-452a-9c4e-0ac2e9829a10",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d77da859-2713-438a-89d8-70e1a326d62b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "47285948-0aa7-4e2a-9b8f-0d2515528750",
        "cursor": {
          "ref": "9075ef38-2a92-4dc5-899d-fbefa2670a6c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5006e7ee-01f3-44c9-9ed9-9b71909b73db"
        },
        "item": {
          "id": "47285948-0aa7-4e2a-9b8f-0d2515528750",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e8d5d132-d74e-4006-8911-02ca2d6e946b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "ae9e6023-8f94-4d49-af20-82d33e714334",
        "cursor": {
          "ref": "4a31d8de-af7a-4211-bf63-99a57639e0f3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0ff986fe-eaba-4b84-8f12-20a6fdfd1768"
        },
        "item": {
          "id": "ae9e6023-8f94-4d49-af20-82d33e714334",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f8fdc0c0-0011-4a19-afed-ff85c2055fd0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "0f420b62-914b-4341-8395-b1d58e02e858",
        "cursor": {
          "ref": "9eee975f-76fb-48fb-a3a0-b9a9cc4e59a5",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9e5a4f05-9ca8-404c-b9b0-b04729e22955"
        },
        "item": {
          "id": "0f420b62-914b-4341-8395-b1d58e02e858",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "19c44a13-7346-4d4a-b1ef-7eda72904c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0f1871-5b5c-4ed5-81ca-958f4bef40d1",
        "cursor": {
          "ref": "15a37883-dbaf-46bc-845d-e82b7604bc15",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "58982cb3-a2ea-41e9-8f67-8bb548340f6c"
        },
        "item": {
          "id": "6d0f1871-5b5c-4ed5-81ca-958f4bef40d1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "22e7983c-3753-4105-bdac-2f89a4fb6756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda46666-4d3c-4c9c-883c-e9e1516b5e90",
        "cursor": {
          "ref": "5b2d491c-95e2-4fd5-a162-dcfd7ddfded9",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a15d4fa8-6600-45a5-9858-d8241ca8b91b"
        },
        "item": {
          "id": "bda46666-4d3c-4c9c-883c-e9e1516b5e90",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c3410f4a-4bac-47d7-af02-fb6400e1e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c6b39d-1465-463a-b0ec-c7dac1b45d5f",
        "cursor": {
          "ref": "456bbfe1-00a8-4ba0-bc68-f2d04a6bf7c0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bf37dedb-2f33-46f6-b862-a5abab31d08a"
        },
        "item": {
          "id": "43c6b39d-1465-463a-b0ec-c7dac1b45d5f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0ba58356-51ab-43fb-8b0d-cc7dc6c88de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42f635-4329-4106-83cb-72d025ca1691",
        "cursor": {
          "ref": "a6617890-7215-4e4f-b2b5-c9ce5ba92d12",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "68ae539a-5148-479b-9df9-8cb0fdf86b3e"
        },
        "item": {
          "id": "3b42f635-4329-4106-83cb-72d025ca1691",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "21a4d9b2-9504-4eb4-8de2-945bdf612529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f31a46-93fa-45ea-a984-73e8d732ef4f",
        "cursor": {
          "ref": "84a8dffb-cf12-45ca-bfdf-bab2600f722b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "98a19033-0528-4e95-997c-6bcd017500cd"
        },
        "item": {
          "id": "42f31a46-93fa-45ea-a984-73e8d732ef4f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "96796a6f-5ea6-4131-b202-0d5c2ab96ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b9bed9-83db-42ab-8d02-58ae33824215",
        "cursor": {
          "ref": "a40ce0a8-c980-4d58-b888-abe49f4be485",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "917f5a69-666c-415f-9440-ad27bf651115"
        },
        "item": {
          "id": "b4b9bed9-83db-42ab-8d02-58ae33824215",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "14dabc83-fa43-4d29-aab5-ebca620096e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478888a8-f519-4b3a-970d-3e69deea3ddb",
        "cursor": {
          "ref": "60613c95-1f8e-4226-a1ac-67940ec8c41c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dde61777-7729-41b9-9dc0-209df8b3571a"
        },
        "item": {
          "id": "478888a8-f519-4b3a-970d-3e69deea3ddb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bb59f3af-4c84-4b98-8b46-9eea1aede559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311e43fd-6716-4114-b906-e394818b2abb",
        "cursor": {
          "ref": "c39c1768-6fb7-410c-ade8-e2b41e395098",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c5a4debc-3df2-4156-bacf-f673250d61f9"
        },
        "item": {
          "id": "311e43fd-6716-4114-b906-e394818b2abb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5932ac0f-19da-4cd1-8c6c-a0a24d233c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4455d0-d9bf-4390-a340-f1bc4de73aa6",
        "cursor": {
          "ref": "4c89e83d-d23a-47e4-a6d9-be25befda720",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "aa47dc33-0de9-401b-bfc8-4913db768637"
        },
        "item": {
          "id": "8b4455d0-d9bf-4390-a340-f1bc4de73aa6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "045f13b8-e8f4-45ad-bcae-b6ab78e1a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b101cadd-8656-408f-9a55-5a6b2b21d73b",
        "cursor": {
          "ref": "4a26f4e0-a317-421b-847e-088839e3fb25",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "999422e8-4265-4dff-a762-a6e1155d5b20"
        },
        "item": {
          "id": "b101cadd-8656-408f-9a55-5a6b2b21d73b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0db1d27-49e1-41cb-9fbf-2bf1f1b3b57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975cf5c2-e61d-48e8-a8aa-5ce345a99226",
        "cursor": {
          "ref": "561ea8f3-ffe0-42f2-b748-abcf6583db72",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "785cb5f7-5631-4ad4-b120-6b7daf027f71"
        },
        "item": {
          "id": "975cf5c2-e61d-48e8-a8aa-5ce345a99226",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "16708b56-ba33-40ff-9069-735ea126cb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a488c56-2003-4b68-9d1d-46f958afe68c",
        "cursor": {
          "ref": "ed9a4d68-0e98-4eec-bfe9-0ae562ae6bc7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa5019ed-4004-417f-92c4-838479e4a00e"
        },
        "item": {
          "id": "0a488c56-2003-4b68-9d1d-46f958afe68c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "da80f1b5-db35-47e2-bb72-b7b3a0678b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54cdd60-2ac0-4227-a8fa-89e5912ae60c",
        "cursor": {
          "ref": "702798df-a61b-4772-b7c6-d38126c50626",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "22f53328-b304-49ec-ba0c-0309a459778f"
        },
        "item": {
          "id": "a54cdd60-2ac0-4227-a8fa-89e5912ae60c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c1cff0af-dcce-4973-a29e-a43b67691462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42be7b7c-d3f3-4a1f-9808-4b3f2dbfda2b",
        "cursor": {
          "ref": "b7ff6eb5-79b1-462c-bf63-084bb1c6f59d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "58c452be-9d62-4093-b446-ee8e75e49307"
        },
        "item": {
          "id": "42be7b7c-d3f3-4a1f-9808-4b3f2dbfda2b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5244f784-eca8-4f00-aa77-3a852a2d3d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e4c52f-a60d-4d5f-93ec-9946cfe903af",
        "cursor": {
          "ref": "e930dd24-2f64-4671-abf7-58aacf4e31f3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a99c351f-07c9-4438-8942-6d6c23e39915"
        },
        "item": {
          "id": "28e4c52f-a60d-4d5f-93ec-9946cfe903af",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ac1082f2-3cb8-413f-a897-ddae69d0e88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca31f1d-a927-4b31-a1fd-df404653212e",
        "cursor": {
          "ref": "8825f2bd-c6f4-4c6a-b6da-25ae5276e8d1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e76a05a7-e8f0-4983-90a2-c1cafadd17fe"
        },
        "item": {
          "id": "7ca31f1d-a927-4b31-a1fd-df404653212e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ed82b0b-c955-4050-b19c-a3c31f477b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240b1280-bd88-40d2-83c7-eab7b46dd689",
        "cursor": {
          "ref": "42da47b6-e19d-419b-97ed-2dcdaacb6817",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "751166fe-699c-424b-be7f-f7ac61243288"
        },
        "item": {
          "id": "240b1280-bd88-40d2-83c7-eab7b46dd689",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0025c647-c3af-43d3-b168-64046f6ac1d7",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "f9fc630b-a55f-4cae-85b2-d9260b5589b4",
        "cursor": {
          "ref": "62d306a1-f560-43de-9157-3e1c54b45409",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8edfe59e-f91d-465f-8ab1-d23c2e1cc4e6"
        },
        "item": {
          "id": "f9fc630b-a55f-4cae-85b2-d9260b5589b4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f8e2aef5-9073-448e-87e8-01cb392566b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7b529e-af9a-4f47-a452-87b72cbfdffe",
        "cursor": {
          "ref": "b62865cf-51b5-4f54-8244-00da670c0c71",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cb01d238-74cc-48d5-93f3-e15fed777e7d"
        },
        "item": {
          "id": "ca7b529e-af9a-4f47-a452-87b72cbfdffe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "80cc3f0d-a725-450a-81a2-a8966a2e47d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c76a134-4c1b-488b-b4bd-9ad0e20b9f09",
        "cursor": {
          "ref": "f7743dd2-7826-4249-8a62-417f8f94fcef",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9537655b-8d31-4fff-84f1-3c2ec8d7616a"
        },
        "item": {
          "id": "0c76a134-4c1b-488b-b4bd-9ad0e20b9f09",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2e7bef02-4efa-44da-9729-32692796c4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f45012-2b46-4353-8421-fdd3093bdb21",
        "cursor": {
          "ref": "94af369f-3ad5-4924-8a6b-adc8cbc729e1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d3f9adf1-c7b4-4796-bb63-593722868fa3"
        },
        "item": {
          "id": "92f45012-2b46-4353-8421-fdd3093bdb21",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "65a377b9-644c-4502-9757-1d6437357b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301b27cd-02ab-490d-8a1c-b7ca9a532413",
        "cursor": {
          "ref": "1cf367fb-d4af-4538-959b-2c170156b601",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b55459d9-9061-4667-8dd8-627d61143073"
        },
        "item": {
          "id": "301b27cd-02ab-490d-8a1c-b7ca9a532413",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a914e019-a989-4f90-a5ae-37f86c9bcde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d063e178-0057-4d88-825a-b5b3badbdafd",
        "cursor": {
          "ref": "ed476584-3392-4808-b067-78bd05d62a2f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2497cbb3-3491-48dd-822b-1a955f66ad4d"
        },
        "item": {
          "id": "d063e178-0057-4d88-825a-b5b3badbdafd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ebfb2320-d90f-49de-a420-fe2f4de660ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5088401-ea00-46d6-9f98-7c4fe49a6106",
        "cursor": {
          "ref": "ac7b278c-00dd-40ae-a10f-40079c501e90",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4acb2f7a-604d-41c0-b9ff-276b6aee73ae"
        },
        "item": {
          "id": "e5088401-ea00-46d6-9f98-7c4fe49a6106",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "832e5dd3-7d68-4b93-a878-c4510c86be7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b108c7e3-1d80-43b5-8372-a3d2f6cffd77",
        "cursor": {
          "ref": "65a25d0f-1d4a-4fbb-91d4-54218fefd1d9",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c461a2fd-08d3-42db-9093-04f06df1f1bc"
        },
        "item": {
          "id": "b108c7e3-1d80-43b5-8372-a3d2f6cffd77",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cb116dca-0666-4a6d-9e30-b6b76fdc7426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0941f66e-aec6-4ed2-864a-9cac69009bc5",
        "cursor": {
          "ref": "f3d3273d-6c37-4fbd-ad88-4e27e57c3876",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "91632f9c-c0d4-451f-a8ed-3a88e0cba6ac"
        },
        "item": {
          "id": "0941f66e-aec6-4ed2-864a-9cac69009bc5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "edd62d5a-24a3-4510-9483-7241f8f2964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b864f15-2aef-4f51-bf1f-c0aaeced9903",
        "cursor": {
          "ref": "d449dbc3-8210-40bd-9172-7196ccaf9595",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "149af168-360a-4675-8148-7b8e0a099e02"
        },
        "item": {
          "id": "2b864f15-2aef-4f51-bf1f-c0aaeced9903",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e9ca91e0-59f7-4be8-a203-a6a36ba6f20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592de94-6d08-41d2-ab2f-b8218f4ac31b",
        "cursor": {
          "ref": "d5aa9ed7-0485-4dcb-8952-3dd6a1ee1a45",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "178461f4-e18d-4396-bd92-225d08f5689d"
        },
        "item": {
          "id": "b592de94-6d08-41d2-ab2f-b8218f4ac31b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a9e3d0e4-28e1-4318-8959-b29e5149b5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9483184-24b5-45a7-bf5b-e0394464311c",
        "cursor": {
          "ref": "f8f85baa-fc53-49be-be4f-55320e9d3741",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1cc69d84-e571-4bd7-8764-b6d1e9976355"
        },
        "item": {
          "id": "e9483184-24b5-45a7-bf5b-e0394464311c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0e16d68f-a5f7-43ae-b92e-f81be77e57ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eccd277-950f-465e-9ebf-e610d4d18519",
        "cursor": {
          "ref": "9542a532-11eb-426b-968f-590f137b8660",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f9a66f3d-523d-489e-b4fa-c83407e8c2f6"
        },
        "item": {
          "id": "4eccd277-950f-465e-9ebf-e610d4d18519",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ad885e23-8d62-4e93-ad26-bf261c9edfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9f1f80-83ba-45e9-bf57-84b8683bad29",
        "cursor": {
          "ref": "5fc2d34f-f148-4d24-bae9-1646491be08d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7cd416a2-6d9d-4ab6-968a-a2ffbc4f2276"
        },
        "item": {
          "id": "8e9f1f80-83ba-45e9-bf57-84b8683bad29",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "39cb0e40-5713-4963-9c2d-464becbfb835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31470bf-3af4-4b9a-a9bb-a35e6dc3ffa7",
        "cursor": {
          "ref": "6f293260-811e-4d6d-aca2-33f70c32c6eb",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9c56b308-f00d-41a9-ace8-dca797de2df6"
        },
        "item": {
          "id": "c31470bf-3af4-4b9a-a9bb-a35e6dc3ffa7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a98bb5fa-a312-4457-9a9d-4eb991e3b550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31117e0e-cf66-412e-b6b7-8331edcd15de",
        "cursor": {
          "ref": "fed128ec-48c6-4abb-a3cc-53d814acde03",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f2d55144-3b7b-41ad-8cc8-dcf20239809a"
        },
        "item": {
          "id": "31117e0e-cf66-412e-b6b7-8331edcd15de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cbfe2f43-e9c7-487d-8070-10ef66cfee18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174cf409-09cb-4095-b8f4-e73c70bca75a",
        "cursor": {
          "ref": "a8bfac2c-4747-488c-92cc-97825f064d1e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2aecf05-bb67-456c-bf90-2b5d1bdd175a"
        },
        "item": {
          "id": "174cf409-09cb-4095-b8f4-e73c70bca75a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a53afb6c-7bff-4ff0-8a42-bfacaa3fb478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9266213d-148d-44b2-96f7-e1556ef1040e",
        "cursor": {
          "ref": "e80868b0-cfca-42e1-8013-41e894a59abd",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "673399ef-abf5-40d4-9e37-0db6ffad29c9"
        },
        "item": {
          "id": "9266213d-148d-44b2-96f7-e1556ef1040e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e7922627-be91-4fb0-beff-2ebeab01af81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b590a2-5892-4567-95e4-938560344da9",
        "cursor": {
          "ref": "b839f8b1-43fc-42bc-890a-c46323a00931",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "86327c03-015d-4802-949c-28312c383069"
        },
        "item": {
          "id": "76b590a2-5892-4567-95e4-938560344da9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a20c5423-3dab-4102-8633-e368de6db01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2beedd2-9c46-4a86-8c55-2511bc2d42eb",
        "cursor": {
          "ref": "e1e89cd1-4960-4dc4-acf0-a064f966d4fa",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2b850712-7c42-433a-9b33-1a5b40ce746c"
        },
        "item": {
          "id": "b2beedd2-9c46-4a86-8c55-2511bc2d42eb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "67c89e8c-b85e-4812-b1f5-b8fd25d06b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a2d9e7-5084-4a0a-98e1-02d94455929d",
        "cursor": {
          "ref": "9304ce48-3f9a-4a6b-bd7b-bcbb211671a1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ee07bcf1-163e-4ee2-9df7-c9d420ac04b5"
        },
        "item": {
          "id": "f1a2d9e7-5084-4a0a-98e1-02d94455929d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d17a4bbd-4040-4ce9-aceb-f813a118cb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a0cfbf-430c-4739-b418-5322c5fd3112",
        "cursor": {
          "ref": "b5f4c48a-936d-4975-adae-26d79ebab7c0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cf00da0c-c55f-40fa-80c6-4310263f02c2"
        },
        "item": {
          "id": "15a0cfbf-430c-4739-b418-5322c5fd3112",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "30c846af-1f83-4c51-aa73-0956819b75e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d37a86-c1f1-4110-84a6-a7d4daa660f5",
        "cursor": {
          "ref": "356f0e05-8540-4cca-bbc4-5ca0ef88b80e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7efe39e4-f817-4c41-94d6-9b7728da4b2a"
        },
        "item": {
          "id": "60d37a86-c1f1-4110-84a6-a7d4daa660f5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b9e1c9e1-6af1-449f-9351-86aa7b7dd7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2103f67-bd5b-459c-86b9-9f97758ec0c5",
        "cursor": {
          "ref": "f8577984-ee98-42e1-82e6-9c6378ea26d5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "408e9eb1-319f-4825-9916-0c31cb55b850"
        },
        "item": {
          "id": "d2103f67-bd5b-459c-86b9-9f97758ec0c5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c3e6d9d6-0a22-47ec-b008-580d22e7a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dc6add-e4d3-4855-928e-0351cf898993",
        "cursor": {
          "ref": "ca2efa4d-2c13-450d-8d89-4e0bbddeffa2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "20c93cf5-88c3-412d-9fad-c2b93cc82309"
        },
        "item": {
          "id": "c1dc6add-e4d3-4855-928e-0351cf898993",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f0aafb75-6360-4cd1-8579-10c559340e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af67ca07-efb1-4b1a-b33a-296485514f56",
        "cursor": {
          "ref": "62c841ef-96ab-47f9-99e9-79ab1e99622b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bdcb6c43-bd17-443a-a962-e1caea465488"
        },
        "item": {
          "id": "af67ca07-efb1-4b1a-b33a-296485514f56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "37b29f43-0562-4dc1-a292-ce81ee5d8d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f809c7-2190-4279-9632-09e60999b729",
        "cursor": {
          "ref": "13ea6e4d-a0a9-434b-b885-179a193413c4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bf3e72cd-4380-4511-9833-2e039ea8f39c"
        },
        "item": {
          "id": "37f809c7-2190-4279-9632-09e60999b729",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ba458b08-f5f2-49b7-95b7-05490c4d960d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368bae2f-e9cd-4052-bf3b-f2b20df816c3",
        "cursor": {
          "ref": "63a9c3fe-68c4-424c-ae12-d8a5fd79cf41",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "908b21a0-bcf1-4dde-8b18-691b834e2d0e"
        },
        "item": {
          "id": "368bae2f-e9cd-4052-bf3b-f2b20df816c3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4c403d7f-bb25-4f95-bab5-b4b2bd28aeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd9e141-d0b9-4bc7-890f-90e253315942",
        "cursor": {
          "ref": "3d015228-e47e-4f32-8b43-78d76974fed9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "711087ae-3e10-4e73-9460-420bb8492119"
        },
        "item": {
          "id": "3dd9e141-d0b9-4bc7-890f-90e253315942",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a579a35c-bc95-4c1c-8ceb-367a004637f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05f270d-9372-442d-8539-889b3712d8f5",
        "cursor": {
          "ref": "5efb4b94-46d6-4eee-94c5-5617689f59fa",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0167913d-f94f-4594-835a-4b470adc2c4c"
        },
        "item": {
          "id": "a05f270d-9372-442d-8539-889b3712d8f5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b5e9fb4-cbfc-4609-a873-47c0d7538d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b24beae-c2cc-4d14-8f77-0ddbb8440ac4",
        "cursor": {
          "ref": "e9391329-2534-4e76-8c84-3d1809e11e5c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0954c4d1-7919-4dea-97ac-6ad42b2c3c57"
        },
        "item": {
          "id": "8b24beae-c2cc-4d14-8f77-0ddbb8440ac4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "38f78d85-352b-432f-af9d-f83d2c4d414e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e1220f-39f9-4142-bc9b-56090d0ff2f0",
        "cursor": {
          "ref": "91d48b72-bb4d-4345-91d6-f717fa1bba6d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "74db3439-6fbc-4566-87ab-7c1403604e3f"
        },
        "item": {
          "id": "69e1220f-39f9-4142-bc9b-56090d0ff2f0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9b045bd7-3019-495c-9e78-9b2165dbc03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9988fb-875d-4ea3-ba79-a267d524a1f2",
        "cursor": {
          "ref": "ad2f21bb-7fc9-4f14-8b1d-2e8b6dde8373",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4dfb4573-2f43-4c05-8f33-b18e6175d2c7"
        },
        "item": {
          "id": "be9988fb-875d-4ea3-ba79-a267d524a1f2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "524b8d04-7a8f-4885-af59-de3d8fbf5c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9540a669-8deb-4ab1-9f9e-2a4c766b0e0b",
        "cursor": {
          "ref": "58bdd457-b4f3-4665-8647-1f2220f159f4",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "25442593-da7e-4f66-b2e9-f70c9aa9d375"
        },
        "item": {
          "id": "9540a669-8deb-4ab1-9f9e-2a4c766b0e0b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a22b577c-b83d-4736-9742-0ec1956864bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f45666-fee2-479c-8a66-f240d0126c82",
        "cursor": {
          "ref": "7fb22aec-bd07-4246-ac37-ed694bd1967b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5206cb2d-f07c-41dc-903a-3934afcbb6c6"
        },
        "item": {
          "id": "58f45666-fee2-479c-8a66-f240d0126c82",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a39cbc9f-6cb0-49ad-8f31-5f7ddee1d896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b5b625-1f5c-4a74-bbeb-df92d3115662",
        "cursor": {
          "ref": "556a2b5d-a21f-4009-826d-f122333e8747",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "34b890ff-9bde-4304-90f9-b8cc8b347429"
        },
        "item": {
          "id": "a9b5b625-1f5c-4a74-bbeb-df92d3115662",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0c042c5c-4b85-4b62-9fce-54ac9f9436f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2c4c41-2072-4ac8-b4f7-61be7b51f3f2",
        "cursor": {
          "ref": "0925dc11-7b33-4c94-89a2-ccad10eebff8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7974ff61-24e2-4f14-9fb3-d52f62bb3364"
        },
        "item": {
          "id": "af2c4c41-2072-4ac8-b4f7-61be7b51f3f2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1b905455-c210-450d-b944-7eb9adfb4900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb278d5-17b2-471d-bf8d-be23879845a4",
        "cursor": {
          "ref": "6673858b-66c3-4819-af71-ef7979c2d007",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c653d298-54c6-48d6-bf99-41f2ef2c7f5a"
        },
        "item": {
          "id": "1bb278d5-17b2-471d-bf8d-be23879845a4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3e19169c-ac8d-4ed1-a1ce-1bac06051427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7cd151-4bd1-4c34-be88-486b4e66a2ec",
        "cursor": {
          "ref": "52065c2f-6679-45ef-b5af-bd485b8c6c4d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5fd00570-e81b-43aa-9fdd-a5ab03711292"
        },
        "item": {
          "id": "6e7cd151-4bd1-4c34-be88-486b4e66a2ec",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d54cda9d-ae39-446c-b809-4c68f8a3b005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78333d56-d201-4c69-a793-e61ba150351d",
        "cursor": {
          "ref": "5430a301-3e87-47f4-b4e2-81d3c8523b6f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0e697536-d908-4e2d-8786-abc65943ded8"
        },
        "item": {
          "id": "78333d56-d201-4c69-a793-e61ba150351d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6fabd66c-261f-4e7c-ac3c-05eb4add8b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e859e11a-ccb7-4265-a63b-c31ca6e06ad5",
        "cursor": {
          "ref": "3b45719e-d312-4d79-9f63-bcf51e6a2be7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6cc95cbc-38f0-4940-ba91-dd4a76a63c4d"
        },
        "item": {
          "id": "e859e11a-ccb7-4265-a63b-c31ca6e06ad5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "96d71d6a-ef31-46ec-b169-0bfd412459a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96da3eb3-de85-4dc0-b1cd-f4e17bf69dd0",
        "cursor": {
          "ref": "d16833ef-5164-41b7-847a-ec8ae56e2923",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6f353f51-6dea-4534-82de-f06bb0dff9cc"
        },
        "item": {
          "id": "96da3eb3-de85-4dc0-b1cd-f4e17bf69dd0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5843b652-1a29-4c49-ad07-3cc10fcce975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daeacd91-2e97-436c-bdd9-6023e1a021fe",
        "cursor": {
          "ref": "0d167beb-a935-423c-a324-0d1edb762b5d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d1df521d-1204-4993-89dd-32a59cb33ef8"
        },
        "item": {
          "id": "daeacd91-2e97-436c-bdd9-6023e1a021fe",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "da4eb798-6109-49d9-826c-b5cc2e7a009e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1c9554-9f56-4201-ac2f-8d3ee91d0f59",
        "cursor": {
          "ref": "41743402-567c-4828-bb85-ed7c888771f1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "23d36f16-2ada-4054-8a40-a33cebe5baf2"
        },
        "item": {
          "id": "2b1c9554-9f56-4201-ac2f-8d3ee91d0f59",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "612410c2-d170-41cf-8bc0-2a50f79f4891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8eb56d-f91d-4111-b034-e7747b808e30",
        "cursor": {
          "ref": "b99da505-fe3d-42de-a839-514cd603e5cc",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9e1e217f-84ad-46dd-b5da-b56b11e9f904"
        },
        "item": {
          "id": "6b8eb56d-f91d-4111-b034-e7747b808e30",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0fa7cd72-56e5-409a-bd6e-54fb913118af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98c8b79-2959-4006-b325-e77cec20306c",
        "cursor": {
          "ref": "7142f9fe-f3ac-4e33-99ff-9e65fa8ca9e8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "551ddbfa-d7a8-46d1-b0b4-f696238ce896"
        },
        "item": {
          "id": "e98c8b79-2959-4006-b325-e77cec20306c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3d9d63b3-30bd-44b2-abac-21d35f95e683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2591a5b-7b75-4d89-9329-80a22b49640d",
        "cursor": {
          "ref": "d5f4b001-c21b-4ffa-ac85-e3c48e858152",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "16fc64c3-799d-4650-9e35-4e8ca35b559c"
        },
        "item": {
          "id": "e2591a5b-7b75-4d89-9329-80a22b49640d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd485ef0-57b6-426f-8d11-6f45043a4729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98b0321-5770-4c51-82c1-8b9fdb7b5cc3",
        "cursor": {
          "ref": "0d7a5570-6e8a-4595-9fb0-6ad34c2be839",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "69bac8cd-ba71-45f2-95e1-2c9c336ae4d3"
        },
        "item": {
          "id": "a98b0321-5770-4c51-82c1-8b9fdb7b5cc3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f06f4ef9-198e-4197-9faa-357f7ece5d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2efe736-e6f4-4516-a8d6-6f89d9f93d0e",
        "cursor": {
          "ref": "a3c22bb8-1585-4bc8-911a-f907a7c0c978",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1985a844-a291-4936-b6af-f8c1cc6c39bb"
        },
        "item": {
          "id": "b2efe736-e6f4-4516-a8d6-6f89d9f93d0e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "02ff1400-4c8f-415e-89a7-9267987d7b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6690d985-349e-419b-b675-8dd310c72f58",
        "cursor": {
          "ref": "597a1083-afda-43d5-8e00-b74adcfcafef",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "413f3b03-596e-437c-8711-1b9e65dc2941"
        },
        "item": {
          "id": "6690d985-349e-419b-b675-8dd310c72f58",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "62161abc-1f92-4cb5-a690-da41fb215929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205800c2-a7eb-47b3-a18c-5f9a44ca305c",
        "cursor": {
          "ref": "cc690d48-ab2e-4509-b0a2-a881d6217466",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77e374e1-126e-40e7-9f07-0e4ae5a5ed2c"
        },
        "item": {
          "id": "205800c2-a7eb-47b3-a18c-5f9a44ca305c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6fa03f56-3baf-40f9-88ed-755f1ff8bac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1309ec-c627-482f-a439-53d986183002",
        "cursor": {
          "ref": "2d676aa6-f1e4-43b2-a7f9-a7b947401db4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4ea82a1b-89d0-4423-b47f-248a7a311e8e"
        },
        "item": {
          "id": "cf1309ec-c627-482f-a439-53d986183002",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "06780962-b782-4e97-b074-84b4cfef57d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4874ba-eaa1-455c-b7b2-8732655a32d9",
        "cursor": {
          "ref": "212d1dde-44fd-4937-a05d-1b8245b29f90",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c65dcbe5-ec30-41bc-9bca-f405846fba7d"
        },
        "item": {
          "id": "ff4874ba-eaa1-455c-b7b2-8732655a32d9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "311cae29-b0da-4fdb-98b5-a46a4dcbb798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2878d3d7-b334-49ec-a951-fa0cda18faaf",
        "cursor": {
          "ref": "60194deb-4443-4c8f-a92d-fe61821fe915",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a3c18cce-a13d-4dcb-a928-6efbeb8f3eb0"
        },
        "item": {
          "id": "2878d3d7-b334-49ec-a951-fa0cda18faaf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "40d341a1-1be3-4a13-8089-084ac4e7a240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f2c827-0578-4b47-b0e7-260919a9006b",
        "cursor": {
          "ref": "56d9cd35-cd3c-46c7-bf76-b86e73bae335",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b33b8a66-9b91-472a-be67-c3cc03180ab9"
        },
        "item": {
          "id": "39f2c827-0578-4b47-b0e7-260919a9006b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c8252afa-ef16-4d3e-a316-5c6eddb39d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f54d76-30af-488d-8d42-86f8887555c0",
        "cursor": {
          "ref": "e910f080-3eba-4599-8938-5485e66eebd0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7b823cb1-cdb6-4a07-89ab-0fd86fe23e4f"
        },
        "item": {
          "id": "c5f54d76-30af-488d-8d42-86f8887555c0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "16146562-272c-4b0b-ab61-e225d1cfddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9897678f-6bcd-4152-9ef9-63de269365db",
        "cursor": {
          "ref": "d4933c8c-77d2-4440-911e-d0e97649b5f8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5cf84393-4140-43ec-8a6e-6a314ea5479a"
        },
        "item": {
          "id": "9897678f-6bcd-4152-9ef9-63de269365db",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3b4c5a63-3235-4aa1-ab80-b57654c84fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d003bcff-6bc4-4c71-9917-11dc9c6110de",
        "cursor": {
          "ref": "4adca304-5d46-47e0-b140-b982314c1444",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6638c1b8-a826-4a42-85e7-51cc6e51dcff"
        },
        "item": {
          "id": "d003bcff-6bc4-4c71-9917-11dc9c6110de",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f7d8adee-1eeb-4dc6-a7a4-526cd4da7e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a53e529-dbf1-42f2-88f0-6ef358f4eda4",
        "cursor": {
          "ref": "ad7fee38-8961-41f5-a307-a1f6b9d7796f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6ec93a7a-287b-44c3-a30c-03b87ac62568"
        },
        "item": {
          "id": "9a53e529-dbf1-42f2-88f0-6ef358f4eda4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a0735dbe-3dd7-4ca9-a14d-9369c963bc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b052ac-b7f9-46d2-a3b5-412e81bc1897",
        "cursor": {
          "ref": "9d74d4ac-3e86-4fbd-8a44-4687eab1e1bb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "38fb0682-0861-4598-a214-fc52a9759a3d"
        },
        "item": {
          "id": "44b052ac-b7f9-46d2-a3b5-412e81bc1897",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a4c85657-9502-4ac5-ac68-95cc5cdaf27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6061c746-b358-45a0-b81a-2248ddc42663",
        "cursor": {
          "ref": "81b664a9-98f1-4802-8054-675f436e2232",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c2446c2b-b043-4714-ad4e-5545634f30b7"
        },
        "item": {
          "id": "6061c746-b358-45a0-b81a-2248ddc42663",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fa2d45fa-9a36-4809-832f-5f8a2b9d102e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b7929-96e5-417f-8ca8-ba4f77b75641",
        "cursor": {
          "ref": "15484f49-130a-46cd-ae97-fc86d6be9843",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7c35dbdc-de6f-40bc-bbc6-e21d1818609f"
        },
        "item": {
          "id": "128b7929-96e5-417f-8ca8-ba4f77b75641",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e5996b80-8d91-4371-8c30-80b1c0f363c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83302db6-8753-4917-9156-a23d59517147",
        "cursor": {
          "ref": "773e1581-42fe-4181-b54d-6e65b42becea",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3d94446d-404f-4fe7-afd0-583ea0d8862b"
        },
        "item": {
          "id": "83302db6-8753-4917-9156-a23d59517147",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8837dfb9-df3f-41e5-b347-93b8f2216635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d96b5a9-f3ef-4207-9aa7-0ac343436eb3",
        "cursor": {
          "ref": "4aea11c7-89d6-4fe3-b512-aee8f3e18e59",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b1d00283-54a3-4e79-8980-473db33301d5"
        },
        "item": {
          "id": "0d96b5a9-f3ef-4207-9aa7-0ac343436eb3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8f3036dc-f22b-416a-bb51-3ae928bb0731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5d1123-9202-4671-80e1-bd2c2e4742f7",
        "cursor": {
          "ref": "70a20e2b-457a-4606-a000-238228eddf90",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3bea7a7b-d225-4c36-9228-d646cafab0bd"
        },
        "item": {
          "id": "db5d1123-9202-4671-80e1-bd2c2e4742f7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b95e6dcc-b820-42a8-bd6d-3c35040a5289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7389dc37-2a55-47e0-834e-cb1d630100a4",
        "cursor": {
          "ref": "23eb3f67-1169-4123-a40e-205b587efa9b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "066af81f-35b9-4421-b383-8189824adc29"
        },
        "item": {
          "id": "7389dc37-2a55-47e0-834e-cb1d630100a4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e67d1c47-96a7-4162-aecb-500174eefa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831e107e-4fd5-4b1b-99ab-7be68aaacf91",
        "cursor": {
          "ref": "9cdb4843-207e-4145-a55f-63599c9078cf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b74f65fe-46c8-4786-a2fa-bd4c2322c9e4"
        },
        "item": {
          "id": "831e107e-4fd5-4b1b-99ab-7be68aaacf91",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5c166006-83c9-4966-ab5a-61d002dd0f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3a868c-9146-4d25-b3e4-45f6c0cb0a21",
        "cursor": {
          "ref": "51984de1-c453-4478-9985-10b8acc7ea15",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9c42aa68-5644-4ac1-88d8-d5eef4058846"
        },
        "item": {
          "id": "9b3a868c-9146-4d25-b3e4-45f6c0cb0a21",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "49e89d70-68e8-4ad3-a117-3265234b04fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246278bb-70d6-49f8-963d-46571f96ffdd",
        "cursor": {
          "ref": "87547b8c-bbe7-40e9-a101-43cfd9dee6ab",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "221e4ca9-c633-46fe-8539-f11f33ea4cfa"
        },
        "item": {
          "id": "246278bb-70d6-49f8-963d-46571f96ffdd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bc7346f8-d102-4465-b03f-348cc9b53f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73310478-254d-4968-973c-75d92a46e30e",
        "cursor": {
          "ref": "1eb42345-8c38-40c1-8361-7c63ef6a7905",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3bf8999a-2d74-4a6b-a6c1-faffadaf82e5"
        },
        "item": {
          "id": "73310478-254d-4968-973c-75d92a46e30e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "da89a876-a06f-46c4-b2b6-71774e8442b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9758941d-290a-4521-b4a0-15879fbe406a",
        "cursor": {
          "ref": "60fdedf5-f957-49c9-8b4a-7d8b1a190a19",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3c36e85a-00e8-44ef-9419-61ed30d50932"
        },
        "item": {
          "id": "9758941d-290a-4521-b4a0-15879fbe406a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b191cc7f-545e-4297-8822-3d96270f44e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032f6529-8d5e-4a76-9057-5ed1d6029235",
        "cursor": {
          "ref": "222c8a8c-7c9d-4a29-b620-e70e3c36cb41",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "69451ddc-76ff-48e0-96d7-c8201a686bb1"
        },
        "item": {
          "id": "032f6529-8d5e-4a76-9057-5ed1d6029235",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "16376331-c3e5-4506-adda-17909515e7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e07ea-6dde-4b0a-9049-f964317cc6ec",
        "cursor": {
          "ref": "67a7691f-a67e-4912-8629-678af2fabfdf",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e51b5530-9d4f-4fbe-8409-eea579fa04dc"
        },
        "item": {
          "id": "2b3e07ea-6dde-4b0a-9049-f964317cc6ec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e1a78a36-ac51-4949-aed9-4a05360ea2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edacbc5-bbad-4ee1-8b5d-2ef991796259",
        "cursor": {
          "ref": "c7b51f69-2490-4fda-8f15-4d6a48b1225b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e7e08eff-b6ce-4e9e-948e-bfbd60d753bf"
        },
        "item": {
          "id": "1edacbc5-bbad-4ee1-8b5d-2ef991796259",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "13199fd7-79e7-4170-a38e-2813362c2937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce500a8-4ad6-487c-ba0f-7606bb6a61e0",
        "cursor": {
          "ref": "73a9c7e6-7d67-44de-bc6b-0a1d87af2999",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "922f504b-ecc3-4a84-a733-58712bde3e62"
        },
        "item": {
          "id": "0ce500a8-4ad6-487c-ba0f-7606bb6a61e0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "10c65921-0f35-4cb6-8f46-828182fec84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987e9068-0dc4-41c9-8c10-471ff4c68aef",
        "cursor": {
          "ref": "3622d2e4-4abd-4f51-9da5-bb2a5a9ada18",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a84e340d-395c-4a46-9cd9-71a4557ab4be"
        },
        "item": {
          "id": "987e9068-0dc4-41c9-8c10-471ff4c68aef",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "96b75a26-d7d8-4b33-94a4-94fac0fa7be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c86e5d0-13f8-472f-aa42-5a6eb51b95eb",
        "cursor": {
          "ref": "76ceba99-2837-495d-ae75-5877283b006e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "414d67fc-ed7a-4da4-baf8-3f3a0a5cad8a"
        },
        "item": {
          "id": "3c86e5d0-13f8-472f-aa42-5a6eb51b95eb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e5cd3482-96b0-4dad-b6ac-eb69c84f9003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b8d7ec-20b7-4c1c-81b6-685c9e45ac80",
        "cursor": {
          "ref": "43177d1e-e4dd-4511-9878-cc9901b12e70",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5c313935-41ae-49a2-b102-d6c0db8f4718"
        },
        "item": {
          "id": "36b8d7ec-20b7-4c1c-81b6-685c9e45ac80",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b3b4e0bf-f16e-4ab2-9ffa-48a8b285ad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31079528-4bb0-4f9a-a547-a5130c826fc7",
        "cursor": {
          "ref": "a4abdf92-8266-45be-a046-69ce409a0a83",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1f9cf677-087c-44f0-b1aa-947f07097af3"
        },
        "item": {
          "id": "31079528-4bb0-4f9a-a547-a5130c826fc7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "171ae89d-c354-487c-9e7e-96a3c24bf4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4a5398-27e7-4d04-a37c-6bbbd2fcc70f",
        "cursor": {
          "ref": "13398e93-f09d-424b-b1dc-caed2c5ead17",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8b9e200d-9a3d-4d8b-94fa-50de542b3794"
        },
        "item": {
          "id": "bc4a5398-27e7-4d04-a37c-6bbbd2fcc70f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a8f3ba58-c495-483d-b606-567aee7d4ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4506f4c-f9a8-4854-afb0-1b5b5192c4ca",
        "cursor": {
          "ref": "c113fee7-3d65-4727-9ad2-e486fb58c08c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "55634b99-f231-486f-a7e0-39749a2bee1a"
        },
        "item": {
          "id": "a4506f4c-f9a8-4854-afb0-1b5b5192c4ca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0acf7a1c-a6d4-45ac-9694-1b8d766286fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c576437-c2e7-4e1b-a366-520e4f38c109",
        "cursor": {
          "ref": "ee780b1d-0604-4415-9486-57f425756b31",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f3161ff9-711c-4725-9841-6318dc0b0432"
        },
        "item": {
          "id": "3c576437-c2e7-4e1b-a366-520e4f38c109",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5572e9c0-2112-49a7-aad3-32f0797130ad",
          "status": "OK",
          "code": 200,
          "responseTime": 623,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dae326-022f-4623-a840-f9ac7056f681",
        "cursor": {
          "ref": "68cf863f-a040-4a38-9938-9ceed07090fa",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "38c0de62-0747-4824-83b4-c6e07c361206"
        },
        "item": {
          "id": "89dae326-022f-4623-a840-f9ac7056f681",
          "name": "credentials_verify"
        },
        "response": {
          "id": "912eabbd-b8a3-4dde-909e-85ab023f02c4",
          "status": "OK",
          "code": 200,
          "responseTime": 2770,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cac0133-b548-426a-a50a-f2c7d4555e31",
        "cursor": {
          "ref": "47a5f364-0125-4c2c-abf5-9007405c181c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bcbc8b98-67ba-414a-b6de-a696a2d4c972"
        },
        "item": {
          "id": "6cac0133-b548-426a-a50a-f2c7d4555e31",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "30fa2601-f03e-43c2-b24c-c2bfd85bf10d",
          "status": "OK",
          "code": 200,
          "responseTime": 2796,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1785157-d315-43ab-af83-493ba08b97cc",
        "cursor": {
          "ref": "f9240040-602a-4441-9fbe-0b33f85e9111",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "92ce39ff-4297-4670-b488-fec694b7c9ab"
        },
        "item": {
          "id": "b1785157-d315-43ab-af83-493ba08b97cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "44a566f9-6f88-4c5a-ac09-64b22a173f86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1785157-d315-43ab-af83-493ba08b97cc",
        "cursor": {
          "ref": "f9240040-602a-4441-9fbe-0b33f85e9111",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "92ce39ff-4297-4670-b488-fec694b7c9ab"
        },
        "item": {
          "id": "b1785157-d315-43ab-af83-493ba08b97cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "44a566f9-6f88-4c5a-ac09-64b22a173f86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ed6773-2263-4474-8642-e1c8be70180a",
        "cursor": {
          "ref": "214c6454-f41b-467e-81fe-d0b210ece619",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fc1fbac8-0c19-41fa-9211-09e6c4cc0616"
        },
        "item": {
          "id": "e9ed6773-2263-4474-8642-e1c8be70180a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "408157c7-e0cc-4fd4-80e1-d58df55e864a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720b1536-ac5e-4c6d-b825-a4fb2a4a342e",
        "cursor": {
          "ref": "4ed718ad-534f-4c25-8b20-30478fa246f4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8e420876-e2b3-425e-a432-159a485e14e2"
        },
        "item": {
          "id": "720b1536-ac5e-4c6d-b825-a4fb2a4a342e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6bb67582-8061-45e7-83f7-fa04d0b959ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}