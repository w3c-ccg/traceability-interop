{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6cc934fc-9ca6-4429-b8e8-88ba0bf2ca57",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e2284b04-f931-4e70-9967-acfffbab4061",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cd7346e-e7c1-4130-b751-338a9ac69224",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c3be606e-8a8b-4af3-9c83-9c43ac2743e6"
                }
              }
            ]
          },
          {
            "id": "e42d3ab4-df00-48c7-925e-5975fe13d99d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e66abfda-8a79-4055-82eb-476338708935",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7c59b794-4e20-4399-a900-3f0decfbe0b1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b8a03b23-2c18-46e1-a472-d585f365025e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cb35b02c-5ae2-4f29-a9b5-02cf09fb944f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27f8fecb-4325-4712-b9ad-f71fdeec2a32",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e982b48c-9477-442b-bfa7-ba911fbe3096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e8c00bd-5799-4728-9cc1-899bb2a98d24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cc2aefe-6062-4e83-96ba-f11292e0d979",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d562e62-2d8e-4c83-9f28-b6f106b04712"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad219eae-bf5e-4317-877e-817dfc1e38e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ea254d1-3d7b-4f17-b4f5-3b4459515b99"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "824b334c-1d76-4300-a3b6-5f1c4b23caea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "764fa51c-2604-41e4-b05d-00cbc718b937"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5941f1b7-a78d-4225-a6f7-c0687021a78b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4e1c9bd-a329-4563-8577-46ce5f1e8f67"
            }
          }
        ]
      },
      {
        "id": "da3fe41b-8a0b-4241-88db-1cf959fab070",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "410e3ed8-5050-471c-bb5f-e147ef9001ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19999da6-af3b-431a-9269-4ba3cb9cdd5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b570d992-2338-48be-9086-d2e149a5d9c3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550f4103-1460-4ede-b932-09aecb28c52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90068e9b-2e0b-43d6-9182-9e516798d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795e401c-e473-45dd-9538-9f7d2e42fc90",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87744990-860b-4a45-9a57-72819a87ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f842a08a-3ecb-482a-ba37-da5715462733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aaecd2-5c5d-4e69-b863-7b46c514c00b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c424c4c-fddb-4035-800d-17afad479ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48fea0cf-04e0-45e1-95b6-7c06079a9dc4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "960fc3c0-31bd-4c6a-be16-7b18f0f782f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cef3add8-d9ca-44af-ac54-41c1cb46fc8d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16241f36-96b0-4606-bc65-1536e3424523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8b0ac50-5b36-4df4-8044-69560672f24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790fafaa-3868-4f18-b0c2-39e3260bf00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18946c29-efdb-4235-8a04-4a4734f20828"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac8faa47-6ab9-4550-8954-689fb91bd1af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69539320-4d3b-4b2e-bbbe-b434d70f50d2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2561b4db-7d7d-4750-92cd-272120fea3a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "53c22999-2f7b-44a2-8358-ea7718e50a70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa4b7ac7-fdc0-4a5a-9357-79f317e0e8e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "84675da8-1953-45d5-87fb-c99da64478f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4a421b0-2662-41be-a299-56b1e44becd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ee0dbbc-8108-4541-8ad7-9f737013efde"
            }
          }
        ]
      },
      {
        "id": "f8906ba3-913c-4baf-8632-ef4c1ccbc295",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "16a4a10d-f1fe-4e73-8730-a6f9dadd19b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a7e40de-82fc-473f-85e4-83db479948c5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "508f157d-3b3a-4dc0-9433-d2035f8d6ee6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bfdd35-7df8-4550-b354-8c481019dfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc915d09-4710-4835-a1af-c739b644930f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c455cf71-20bb-442d-a0e0-1272d095e06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48778161-5265-4c45-b0b6-2028a7f213e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cf4ee8-e460-431c-bcca-e170d1776382",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcd721c-0f71-4f22-b1a4-9c8c1656ee78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa37b7f1-a84a-45a8-a456-97d873afedc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4530ee-7cc1-4517-8a14-48934d7be45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b06c64cc-296d-464c-8e43-81c136ec8127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41218665-e532-4d21-88fb-3d265c950c71",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e970eca1-ecfe-4424-b1ac-72caee62d4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f80864-86b2-40b3-b15e-26e957cac067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99221f13-b091-4a77-965d-f602b2e30cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3fcaf24-04f4-42c7-9ae7-3cdb11de23d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a2bd82-3ba6-4da5-aa75-9968c1071b11",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90615800-a42a-4862-b951-dcd374c678fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98146b4-5e3a-49cf-a136-8e71924ae3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b684a1e-7106-4de3-a074-5b8a82733705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4590862d-5a1e-4904-abca-26da5e474d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f1f37f-8d32-450b-ba13-1ed5d65e783f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0d3e4f-7bff-4cb2-9298-17ab6ef8aa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8034277c-6fa8-425b-bb80-91e61f82ab67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4532f142-80f3-43c8-b1f2-526181776205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1ec0d2f-ee30-4da2-a938-4102746396b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840cbbc9-d85c-4535-9697-b1be5fd9f62c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2f81a8-c1d4-45a8-8b6c-766202cacf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b76680-0d83-48ca-bd26-91f19539e704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f5c25-8363-4aa4-9156-f1529058f6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0061cb65-b7f6-4d98-afeb-30054d13ffd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1058968-d01f-4a2e-959f-651ddb81da9c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89159d3a-3994-4fc7-b48b-d73df7f32c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bb2b0d-d2fd-4828-8bad-930983778ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deb3fd4-0631-41ba-b4d3-014e0cdff9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74ccbfb3-8de4-4300-b4cd-e5b87f2c4cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2acb1c8-2b39-422f-81fb-a2838eccd7f7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec0058c-a8dc-48db-8dd3-a8a5bd59d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33144e93-cb4b-4a59-bae9-980e25e31a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a734b0-ad7c-4cca-8304-d4e4de0bc5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69f2aadd-17ae-4829-87ec-917ab0d8e262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df00b6b-61ab-4723-a14b-ff631874a20b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f3c15b-75cf-4728-9a41-c8e53ca9b658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7f81b1-e070-4a4a-9b45-c991c0353190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8282bc3d-4c99-4d24-9f66-985cf78baa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7dd557-4c0d-4e75-97a2-b4beebcd02f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd00fc5f-df67-4330-8ab1-83ff495a7f33",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9331e2f5-c07a-4fdc-8cef-fadf2e019224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df78f2a4-0f28-4213-96bc-9510c4bde649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135e33de-34ba-4429-84bd-7897dd3af874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e1c67fb-4056-4631-b1fb-0ba927a7f423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fea1fc-1441-4631-9639-e89e370d4256",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb50348-ae3d-4e59-befa-17cf6dd4abea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b24ed2d-738e-485d-ae07-f69e5299d41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03808b9b-a11b-4302-a1ed-261bf7c71d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b684c736-e51c-4010-826d-df46a9c0a400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7247fb89-7d0c-4e59-becb-19503618ebda",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be18e2ed-e605-4fc5-b7e8-64b266433b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932839ba-5ac3-4455-90a6-d9400651192f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20a0f40-d85a-4801-b4d7-3256c27d807f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5b84ec7-6800-4a21-9db1-4f2fc585976c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8969fb4f-aa34-4b42-a7bb-a7a120c8ebac",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0150c998-3bf9-4537-bc53-32a0cf37659a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71967438-8f47-4e55-aaf5-6166d1a331ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63951ca6-f070-4e48-9ca0-94e1da4eec43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d83dbbd6-0f41-4d56-8c47-1cb411cea154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f95251a-259a-490d-98f3-c5374185584d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de0e037-854b-4ebb-94d5-457e51196edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d63b192-baa3-4cae-96d2-63cac5679a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedcee87-4d35-44be-812c-e0d88235277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ba413a6-bbe7-4b54-9bb2-e210f942c55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9606881-d882-4317-8407-16c6975243c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ce111f-2574-41f6-99b8-2d80c4a42de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ea893b-6fa9-4eeb-946f-f4b3621d8ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549b2655-9e6b-450d-a7c4-454832e236cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a3ce7bc-6621-491e-9cf5-1a896bc68632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baca4ad7-0b31-484f-babf-9190cac0c825",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c483f7c3-05a2-48f3-b1e1-9648156e6d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5e3117-c167-44c4-aae0-d8c0e1ead5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db4747f-5a49-4d4f-9d16-b2d224a3721e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4509404b-c496-4cc8-b9db-c733b9680ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b58ce89-2378-40f3-a3ee-8fc0ca21a648",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffff752-be91-455a-8d77-eb90009f71b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df35f6f-3538-42b9-bf15-5de5198e2bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67be84d8-2580-4ab7-b72b-822e6e09f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b80acc14-517b-43ed-9177-01752c0d8ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1ae222-159a-4423-a24b-c9b28d089ed6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e29fc6-f664-4721-b7ab-862c5141f5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b5b619-329b-4ea0-8e2f-c4c0beef2ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432351ad-1f89-471e-aaa1-774ad1a33caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf06b58-cdad-4df3-b9fe-d9d53324b044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c3f6c0-140a-4bf3-aeb0-96b6eae75e94",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50c439c-6d67-49c7-9034-49b20ed01d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcca02ec-8c74-402d-bd12-8418c51d31d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258b83c1-2fca-4feb-ae3e-33cb820df9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c5d1c9-a6fd-4137-b676-9d7fa2f022a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5fb19e-6e78-4c22-a0f4-66f1919e5668",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e956a8-31cb-475f-a696-94701d00e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75569ea1-955a-474f-b9c0-0eba2fac5183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0582ed51-e049-4f8e-a75a-ee03a7c6dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74e3ab4-afab-44e5-a942-9e44143ed83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f74cd8e-a360-4d1d-9dd1-f62411cce6f3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e12c3-f7e2-4c72-beb9-28ebc405acab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1058bd-f423-4c5b-97df-d0a26576a456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f777880d-792b-4476-8564-6e073cd2f94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd78bda3-ab14-4fd1-9ed6-7fa4ddf49a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee55b4ce-061e-4906-99ee-761af8120614",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2915d948-6364-4545-9727-2b0ed1ad84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017a89bf-7955-44fb-a15f-50776782e39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aa0d44-52e4-4f40-ba3a-86a01ed38b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39fd7f87-7c53-4c87-a45e-8c757e7ad808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06ad56d-b07c-4733-bd2e-bf2d0d219a2f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad61e498-3ea5-4485-9753-ee0cb81ccf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ddf016-1f3e-4d7c-8d67-a229384f489b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c425b8b-6410-4b4a-8ee2-99b96dd07609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "356fa35f-1401-4738-af60-27185323ccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781aca04-fd3a-49f0-b04c-b580aa2bcda3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca73eea-609a-41f9-aab0-05a5297f76a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af9adee-fd75-44fd-a8f3-f1ca49a55cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ad4cc3-6b40-459b-b700-34606f5d7bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "89488eb5-2891-4240-b6a5-d8e5eee22298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574e156e-34d1-4cf9-9619-6043a625c09b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4357e628-a3fd-475e-a096-d378ba1b69e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e15fe9-44ee-4809-85d3-6fffd59b3f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea141bd0-dd32-475c-8920-9e2cb5eba0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d97de363-5e83-4ca2-8e5a-86c322cc22f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a27b28a-d5a4-44b0-8a87-78f1c2fd0d3d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e7332-fb97-46b0-a06f-b8e821990286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1709751-a185-4afc-bb00-70b050f43734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de13563e-ffac-4ec6-89da-cc02ac45be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a273492-2889-4ad9-8a81-29293bedbf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530cf44e-b9e5-48ea-b162-38c890b1395a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c96d11f-16d2-462d-a075-8f2e617921ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e2b5bc-be5d-4065-8dd6-236a57e4aebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c520f8bd-6cbd-4308-bea5-09012d69e406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35529402-5f69-4f00-b35c-029c964bc485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fcd9ff-cb44-4f1f-8116-086f97a46b89",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf04998-abf0-4c4f-a6dd-8c7018a11162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49c9417-725e-48bd-b224-5bb9a4ead941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d13fa65-eee3-44ae-84b4-6cfe752da93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec91e35-05ae-4678-9966-50a225897a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7b36b1-41de-4484-a104-5d2ae752da27",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dd668c-8183-4ca6-92a0-52509d3064ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa8b3f1-d423-4d48-93a9-cec855ba70bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcddc13-e2c8-49c7-8540-e698bf9df021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5396e62d-aafc-40cd-8566-1588cb8d36d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75d69db-caa6-46c9-be9c-8b7688498c03",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5387212c-d5ce-48d2-88f3-464ff66a2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676af189-4564-4d33-bbdc-a73c5fc0b2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1b1c3f-64d3-48e0-8385-97619184fee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "05cbf964-d074-457a-af67-0bf7f38cabf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2183d23-48c4-480d-be92-8acffe1f9ad8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018ca0fe-f332-486d-8830-fd5f96dbc9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c750a80-c044-4446-a377-524dd90f526e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15c9cf9-eb18-43da-9d7e-94518835d776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d26f3c1-656e-4fd5-b445-f9ae0e7eb2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b392a7-20d5-4242-a514-a31513302ade",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65038547-c7df-4ccf-9476-81bc9a913637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b041a6-83da-4201-9bff-94487f1ebed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856da99c-d574-4b5b-b339-0bc56d21b975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab3d7a1-b254-4dd0-873a-6c3668e071d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ada144-fb1c-49df-bc20-691b94fc1c33",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4095ad-2493-4aea-ade4-5495638538e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b790db-d69b-412c-ba4c-3e572ba64983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740d632d-7c9c-45d1-9aed-a51def0e6569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa07e0d-29be-486e-999d-4186475b837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdaa351-7991-4031-ae57-89f1c9439b0e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aed8e26-a2c9-4dce-9199-9317dc5fcfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6227737a-9482-42e4-a1ea-3177a97fa158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4a5bae-f3ac-4e81-8633-1dddd008736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "548791d8-5106-4f7b-80c1-20fd8d870f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4421f770-1a62-4d95-b1c4-293c1bc2b198",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038c395a-9385-4005-9db8-ea791fadef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61529410-28f0-4669-adaf-7ddb62eb5dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1613c8cc-8ff8-441a-a385-48472a9998e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "18f8bc01-cff6-4446-83fc-df3937ff1076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29965fca-f67e-4a08-bdbd-8d23e91db9ac",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f8432b-ab56-41e9-817e-9568786e41f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47884ad2-1120-48dc-99ec-99dbfa457189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828587ef-d14d-4bba-a63a-d0f000f40533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44f6b75b-8ae3-4bbb-a951-c8e04a6c4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71aeb8d1-ea83-49b2-9fbb-48b31af0eabd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987d7796-43d7-4aed-aa25-724f6fe2526f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacb4c08-6665-452a-988b-b4db21834e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1a2767-174f-4600-b3fc-d9c73d5fd215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "304e7c3b-7c43-4f20-ad50-53e5032693c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c03de9-f505-45ae-ae6d-23f1282db8be",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202de53a-9e00-4c70-b520-1573de767c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d8a2a0-eb15-4f46-851d-d9564e1f9756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cd990f-aea0-4d40-ab48-c3d21b7af8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9778e9cd-37d7-4d32-bbef-dd74f74df83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cba14f-e40a-4dad-862f-87d42234df73",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8a77ee-b89f-4ead-a223-af47c176d5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4427487-f60c-4c76-9bba-779ddc171ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd1ee04-5643-4ee2-a50c-dbb6c9031d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "493e9ccd-b672-47dc-b7c7-7698115d4b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6a138b-6fa9-4f0e-80d2-40099403ec98",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a7c310-b359-4b93-81b5-2020c0c088de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b255ee3f-f241-4eb5-9b1a-21df08d138f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec36834-ae01-4a58-b4ee-dd641f9258a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c4eac8-e7fe-4d8f-9117-cd4666d183bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dad5046-efdd-40df-b1a2-b40fcd4767ab",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad20afb-1686-4862-b638-eeb8f95e7dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cc00f9-a934-40e2-8c1f-8f7521a35a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60532070-196e-4d67-aa0c-943e8219a0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd6abb9-37f9-4c19-a35c-015af98c7c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de7463d-b179-4a3b-9281-f27c24a467d3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217bc172-ab38-442b-b901-a3a7a4f665ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447bb269-48be-4c5f-bb7c-3f054a371a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e68e2b-8fb1-4de9-8e6d-31dd04d6f467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3f35d08a-f4c7-4c89-9510-7399ea28d65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c9a627-f766-40eb-8b0f-e87568866bc1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edf357c-e795-446e-9c7e-5d887f84c864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c6699d-0f0a-4e0e-83ee-63c68b4a8363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0337927d-c7ba-45dc-ad97-59035f04c8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "182f7e62-478e-4610-8cbc-6d308afa58d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90de00b4-fb16-4e48-b34e-3a417f4de537",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f60f2d-bce8-46c4-b251-4907ed66e8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c23781-441a-4f65-b56a-943a2c40c74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703b9695-262d-4596-ab2d-772f485efe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e18e1502-8ad0-4c0f-ac5f-0ffb63595f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56415897-a376-491b-aa01-0432d478fdfb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81c46e3-d413-4adf-98eb-60e6cb16fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d07a26e-70fd-4120-8d1e-df83381364ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f200a8c-745e-4fec-b970-ea5ab9b50b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b6dd2f-be1a-4199-9cb8-9e39e968eeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d069a5-67ee-4e77-96a9-90403b5f624b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af42a55-41c3-4429-9f03-7fc766a465ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645a1c6b-a2b7-437d-8053-8ef3c04cabef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c71d41-0f14-4dc2-b300-d988cad37663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ca699f-8bb7-4bbe-b2c2-9ca831d1c860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a459f960-5187-40be-940b-34410966e5d5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa629e91-a81e-4db7-aeee-9c0b830b442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ede0df-079f-4a24-bfcf-39a0051c95dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f280cc76-d4db-4fd1-a0a8-8592df222abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fcbb23-46b2-4550-bf86-1fcdcea6d4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964e1f23-7614-480a-9564-9fd8a32360db",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37b56d2-d254-4803-9ba9-6b4c88d93411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e61cf06-ea6f-4074-9eac-3bba59b7c284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a585e9-b582-4d8c-abd9-a59db9dbcba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b17d75-c548-477c-84c2-7d0642839649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914f834a-b4bb-4c60-b65c-f8bbba5486c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f5dbb1-6384-4f98-858d-87789cd1c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b752e147-4955-4d74-9e89-03f7ca6a023e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b79f701-12d4-4799-923b-b86390fae949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4383628a-07ee-4e60-91c5-3d5cf0539bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0434054f-a57e-4e09-a47b-7e51f06b836b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216af728-d6fe-4d0f-aff2-96fa7f695301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a7ce68-551c-4d47-b464-9ef0b4d148f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d26928e-e406-48e5-ac57-7b77f25d9b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "972c06ca-6393-4ee9-9755-70e29e5c322b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f921ee3-f37f-45dc-b90e-476422362047",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82582f66-032a-4523-9bae-f32545018617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c5bdca-e335-48c7-9024-415d40d3815d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e618f589-5863-4499-b78a-ec25e6f26b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "92218408-eea0-4ca0-b25d-0b9d470a53b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccb2773-f045-472e-94ae-67bed8689e97",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2185157-2c9d-4f33-81b5-879adc5890c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c421b11-92ec-479e-ad59-be0c47d40586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93da71fa-7902-4ebc-977d-6fcaa4dd511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f84cee-5e96-4077-8b34-3790e09b35f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93625225-c657-4e9e-8f42-80f2f2664b1e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3455647a-b457-422f-9b0a-2cea65eabd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79c8785-1e47-4591-aa4f-754f8180cfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268b792e-cbd7-4623-9f5b-a6bb7bd56e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc123779-c208-44e6-8ad4-6fc990415292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cfe732-a7b0-413e-ae54-25662070cb03",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f0ad69-dbb6-43e9-a236-667c41f0f28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42ab19c-8e4d-48ee-92fa-b62baae6344f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea185fbe-8fdd-4dd8-a594-7b39d54cb79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81cee770-0692-4e37-b9de-54ddb6dcc72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9b4aa9-c4ee-4a85-8d59-74cf0823f6d2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbd9085-6e0a-4daa-9f41-7c32c4eea2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fccbe84-1609-4eab-9c2d-153d8580ecf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc75855b-81b1-471e-8863-76648d363d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8045d498-4bca-4727-963a-96c25e63d517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3901c4f6-a575-46f8-90d7-7b4a8bcc6402",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc6c848-c6b8-4166-b82a-4ece42017fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005c9725-25e9-4137-8bd1-e8637a69aaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fc66e2-8164-421f-bc3d-c86f3864fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "551ac985-054d-4d95-b32a-08508dea1996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c298dd-6761-4f8c-b791-9e4ca9f18687",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43333e52-9c3d-429a-9ac5-c05ce17af508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa1e8aa-1acd-4f95-9dd4-a52ee762dd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7eaa35-00d5-474e-8d4b-bad81c313831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8530bf-0e1f-4ba8-97f2-bb12fa649543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89704f3b-3460-4e35-9c9f-9787ae2e457a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7512700-7cfa-40fc-b21e-736597557ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aa28b2-9a60-4f4b-8e92-29cb903b34d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e19b4ae-cdaf-455a-b68d-be476f1ac431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f44d498-0019-4eed-bf9a-330baa311300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc58b608-98a3-4da9-8c5e-fce2a240eb8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c984ac1e-352e-4ffc-b114-7bd95c01ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a431774-3ffe-481f-8d54-4a0e138c4b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95771e6-8bb1-43ac-9c45-22304f9ec99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01c7b230-dc6e-4d95-b1ac-9d045ed052cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a339ad-9331-406d-b13d-61787a304e27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54865ef-1e08-44c0-ac99-d9b522158f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8085a77-04f8-4b20-b978-332d3aaf516e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1318c5-a9bf-410f-b81f-6c38441ffcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a40752-195f-46d0-8014-f52e6b917d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987393c6-fda0-4597-8ada-72859afbe17c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca335d42-98f3-4cfb-8ff7-1c7706ed4cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7044fb7a-3b85-4594-83a8-d0aae5a0ce91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc2b9a6-f77b-4d38-9f28-cd3c67a5bb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1590e396-9158-4a4c-9463-48e83fe02e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c97976-e9fa-4fdd-b341-80882c455a1f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ba356b-dfe3-485f-916b-969e184de62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bbcaf7-6b3c-4623-bf7e-3fdd5ad737bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623331bd-9f0b-4d9d-beca-b2105263c1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b481efeb-a8e9-40cd-b0be-947c4e35c269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bac0b1b-ea69-40ad-a159-a3da30714ba0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5f3ad0-2b66-4166-bca0-0ffb30028f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70c5280-1c8e-4ef5-a7b9-83cc7166d138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d3cb5c-9a58-487c-b8cd-06d56b78bbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77c9029-7299-42dd-8101-f29909c7d9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5043b4b-cc3c-467f-8b46-7eb4ac44b27d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4044a229-1d48-4d91-a7d2-68b128ad0aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90949803-2e67-44ec-bdd7-ab55434caad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906b91d1-075f-4190-8a44-6673c0a84906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b915a2-26eb-4e67-8145-0122e0017c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fee2b34-0a1a-4cb7-98b8-8cd6f5cafec6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941f447d-9227-4831-b5d2-a2999dddf611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2c159-0f7b-4057-bc47-be0a0fc4ea15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c4dd83-c501-4188-8883-1ba12cf7f629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0234df-226d-4a81-a02a-29b58a636454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650c1579-7661-4b46-aa15-8a020391d8f9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02d0169-9522-4bc9-a676-f9f2ac322d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55657ed1-447c-4bfc-867e-e6c18c951f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dff759-7f7a-4593-bac0-f8daa27fee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6810cbf-6b44-442d-a4c4-0e642d63ea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c1fb1f-e815-44bd-ad39-67071948c075",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1896fa1-6176-4b0f-a66e-9c985f9a4cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7511cb40-e54d-4945-86bf-41190373086b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fe60e0-61ec-41f3-82ec-ebd42bca444c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84c245cd-4bd7-454a-8bc1-f6697f73fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f769f2f9-92ab-4283-bd6c-c5d97f122d45",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d2a0cd-e2fd-40f7-aa10-2ca388dc69d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bfa3f7-37b7-49e0-966d-9bed3e840a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df1ee20-6c9a-48e1-8c65-98ed6e7cbda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "407affcc-bea0-43db-aef2-d59b1502354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efd99b1-1c78-48b7-8814-7202fefbfbe8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b58fdf-37d1-456d-840b-413dfcc30049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc4c380-ca0c-4e56-a8f5-62a6ef50f788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a465821a-4170-4104-86a9-9c028a3286af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ad8394-743a-4617-956c-ffd4c1905999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a738936-1f2a-430f-bcf3-6ac6216dec39",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cb3e51-6ea8-4137-879e-d1c3607dd1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af10093-3a32-469c-9560-985b3eae38be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1c1a7f-4952-4cfb-ba77-8a94e6dbe27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db60e3a2-1f73-4da4-a460-bb4d345ed023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13d771a-7bb2-4d9a-ad90-548528ccdd34",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d472c897-3915-4153-9431-f716027f3337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e9c1fe-8904-40d0-a702-85e1443a85ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745d0a9b-6744-40e5-a6a2-bdb7c1c41598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9989ae9a-c760-4288-a3d0-4fd1f4bb39ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccb40f6-68d5-47c1-921f-fc6229360d4b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ea06da-b942-4c28-aada-596a24ec3ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943db236-105e-4575-9c56-d6c8a62f2f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219333c7-dea9-45f5-8b17-8f21fb3c5dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3029b112-3cf6-40d9-b16b-9256720905f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b5913f-1ded-4243-8691-4a58b713925c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319a598a-ade2-43e7-b0e3-5ec785a32071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df1858d-b2a1-4193-984b-19113af7c65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8f9d21-24c6-4fa0-bdb6-3ac6d4302047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76a5ebf1-e578-4bbe-aad3-81e7f50d6c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e14f4ad-771c-43a8-bd2d-a2c76da33e77",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df50100f-ceac-43ef-8b7f-ae0972969d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcddfdf2-e2fb-4d51-b9a5-8ff19e380c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552bba1f-5b2f-4ece-b8db-35b4d20c5297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10afcdef-f30f-4f16-8993-0aa237f9f433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245d104e-d51e-4ec2-b3e6-c9a1415f0009",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cc8dd3-72f5-4357-acfe-ebba0607cd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a957cd-b6ae-4b87-bfc8-681731a81eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4df4e3-0cbb-4da3-8e3e-fe4f3af7d88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ae8510-aea1-4206-b4b8-aa0614776fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1abb613-7f55-4174-a0d4-028ce344c9d5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc38a5f9-4fed-4e03-869a-54b1adf12c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11730f7-acd5-462d-be24-d91337ddaec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5450c4b-a746-4de8-8cad-b787de043af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfdc752-59ca-4542-95a6-b7f40a6d0b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4adf336-5601-41d2-ae9b-1bc046d3cb14",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a24ca3f-8141-4e96-b744-e8df58b34b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c40d2e-062c-4cf8-97be-5612c51feace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c19821-3fe5-4843-a6eb-c52c10e274c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73228d8e-e65d-40d8-b002-80daafbdde36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234dbf70-e0bd-4b09-a117-ea9819a7d69b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298a376a-0801-4158-9313-d8bd8dd4ede1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9aff6ff-f5f6-4274-8a8c-f992eee251b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea57c2e7-0940-4f27-a5b6-42955fefff68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea34377-810c-4e22-9798-06c84f889bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396cef90-b327-41ef-8fa1-20b11d603e0e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9719c15a-50cf-4cc1-9289-b0faaa8a741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023c2b40-2896-4eea-848c-c77a613e4801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954bc033-8b4e-4ca5-94e2-7c7627967b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "575be768-fad7-4eef-a943-33b0ee5fa55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1aa927-6b7b-471a-956d-b2a30eacd92d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b5ebc4-d2cb-4f22-afb0-8ae5457d70d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7458bb-3d97-49ca-9cf6-c9d61041e501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ea3c5f-e8ee-4884-a55c-d03137d997f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eafa1cf6-926e-4d1a-93a5-a55089b4ed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736685af-6a7b-4336-bee0-a827d4b253ad",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29bd571-cce6-4c8c-babf-6a60c3b5f919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bafe112-29be-4c84-ab21-d83e339ee97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cce82d-1ae7-468b-bda9-b2f177f29bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3db27fd-24e4-4fe4-ae68-65a9b2ab1654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a2e1a2-7163-45aa-806a-c00aad03274a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf87ad1-5ddc-4f15-b48a-fd5afefcaf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fe109b-985b-4256-bc17-caca05e51f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bd615d-596e-4012-85f8-5ec16c1178eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a3fe58-0aba-4c3b-8298-eb1e3ca7d0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41ab3ca-a61f-4a6e-bf26-0bdea762df61",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c402867d-6624-4502-96c3-c838f96a7348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6509ca-ffab-4a66-8628-614f6cc20092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3716727a-5e92-4238-9646-5ca60dec45e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90923a3d-a04f-427e-9ca5-bac3908c8554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b913dc-e61f-48fa-a7d8-404820e1b5b7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfd4289-a022-4c53-9705-cd0fbf6fd441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e93161b-bc39-4316-bf8d-7b0fc8e01563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce270e41-095d-4f18-8fec-49174c875396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d77343-1c07-4d8d-96c8-b8afce5d4062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b14832d-757f-4084-81ab-93f94c15b1a9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071b9802-bded-4343-9fd2-45e09dcf6024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cd885c-ee08-40bd-8cfd-e70ba93e1949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55ef6f2-110b-47d1-832f-0903fa4972ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdd704b-6880-4689-b02e-f1ab519c5cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098b0a79-da48-478e-ad5e-712434591181",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46566f8-1dc7-4895-9ff1-9edc9b4b20c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a71fa3-7da7-4a84-b412-0a0ac83da35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c987617d-0d04-4351-966a-529448e6d31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93e50916-e2da-4e94-986a-b7c2576a5d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a749735c-e6f8-408e-80d5-43f342e7c029",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0f745f-d2c0-44d0-a34e-3f23286bfd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aacaa5-6393-4417-a5ae-c3f89db06e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9a584f-7018-4475-9ecc-3256a3f8911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65062fec-3d6e-4070-9359-0508771c0700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6a1cb9-14d3-4f7b-83a4-da45bb581ffa",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a545838f-1c44-41f1-a6c3-00c2131de067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f72d466-e519-4eea-8c01-fce9911e4ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb6af06-4c86-487f-8426-428cc69e0185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89745b92-33e8-4fd6-9158-953a431dbda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cbeec8-db93-4489-ab65-69744cc33891",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9112a6f-96c9-4474-a3bb-6048f7ff5aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1987768-86f4-4a82-9e6b-f7fc4d81bbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d18da90-1d54-4ba2-8309-0d11cfcccb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2619749e-fdfc-4d0e-adce-e2edb20eed3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e34b8a-378d-4bfe-bf51-c9994d463299",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81309e43-637f-4c28-be47-5c78b9fb5b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53def670-20c9-4163-b08c-208b12c1778f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a8189d-71e8-4167-8b7f-89677e3542be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd27fa77-d064-4192-a99f-f20b0eae8507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ab82ce-b73b-469e-8d63-b7086988638b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb884a6-24f7-463f-8e9f-67a52cc56c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5054da-1e7d-4187-8fc9-f29e60e53700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751b4532-dc4e-4666-9ccb-3b41b247f5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dab4b435-47ab-4cb1-ad27-9d74886a662c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be4138d-f6b9-4c01-bdf8-7241ef993967",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6b854d-a5ae-4ae2-af0c-6f5196ea309f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6823a1bc-6d32-445a-ba2d-7bd8cb290039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c734ee-3f29-4673-8412-f8ced863c0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb760c4f-a4c2-4305-be04-df2daf8e2ef8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a653e63a-ca8b-48d1-b46d-81117642568a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3cc8dda-8356-4812-ab84-64cf634eda03",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53182382-df7b-473d-80ee-5157cbdab308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd2de032-0afd-4536-b179-6b1c643f4afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4453ae6-7c0d-4e32-a635-1f1b86c29d83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4584fcf-1c3f-4d73-afc0-9e6f2cbd1fe1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05ae3dc0-52e0-4928-999d-fa97b9f8f0f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9386a75a-b00c-460c-b3d4-514b8b7780d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6770121a-ed83-46eb-8458-b8a7d2d3923b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "629f3e16-bf8f-41cb-9575-f99e9119bdbb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef5e39ac-859e-4e1d-b3b1-d7867639ef4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a4351ad-a1ba-4752-b768-45afd9cf996f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b98d363-a717-4b77-a056-103e31e4bd3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6e04b88-bd6f-41b6-b2d3-c92ec76c1545"
                }
              }
            ]
          },
          {
            "id": "57cdd966-9178-4f21-bc08-99dc89a258bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dec781a6-b82b-40f9-9323-34ea657ffee7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7d859d34-207d-435c-9111-bbecdeb693dc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37e948f-bf0f-49f2-ab4b-4108a7294023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eed832cb-0bbf-4a50-987a-eebd38df2557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1f7210-3cb7-40ff-9797-fcc7907569df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5659df05-5ab0-406d-8647-84a346f408e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ac63a1b-c4f8-4e49-8496-7629edc3fb51",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "780a92eb-7a2b-4aaa-aa98-2210c07c26b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "538d897c-5083-453f-b909-cdd7457c45ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34744a4f-cf00-4698-b3e3-229971b8ba97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cf62129-622e-4d19-ba48-5a42d2942237"
                    }
                  }
                ]
              },
              {
                "id": "d1713e7a-1732-4034-818c-0ff84e46ac49",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59b4a123-c188-4a6e-b132-e8fee8fbee69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19ae9f2b-d7d1-4655-8cea-5330f8eab2c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac45e483-1895-4abf-8684-90db6256b1e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96f1ed87-934b-4469-a81e-0fc26d89a7d7"
                    }
                  }
                ]
              },
              {
                "id": "1af5b897-50af-46d0-be8c-bc214be51be0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd6e3a32-c4ad-4da2-b1e5-b576c5aa3505",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "387b15cf-040b-4e32-9f9f-a14016851949"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b77ba7cb-3864-49ab-bf90-4c8927a05357",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f8c3030-701b-40f3-958d-c78d7053c776"
                    }
                  }
                ]
              },
              {
                "id": "38864644-a261-44d8-8c8b-32b4cc3500be",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b08d1a4-2f7f-442a-8b65-3a00bf32ffb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11115ada-50a5-4a79-b970-98a1137fb798"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b67e8580-94e3-4524-b723-ef2fcc20ef5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "74cdd77f-ab54-4d17-974e-8a4188e50a84"
                    }
                  }
                ]
              },
              {
                "id": "b24a6ad8-b97b-4de7-a20a-17feabcbb59c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9ade919-6d2f-4bfa-b7b3-d514ebc27e5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50f488c5-db90-4230-98cc-99717862f593"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbbd5442-4cff-4ca7-a6a8-1f17d70c0dad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "51464e28-2a5f-431c-97aa-92bc41193357"
                    }
                  }
                ]
              },
              {
                "id": "0a4331b0-4db6-44c6-ba1a-ea7948eb16fd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39a2ee1e-78f1-4a8a-8f1f-5cb762eb0c25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d2ebd5f-e5f4-4b47-9a0d-b580c19d25e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ece2da9-b5ea-44c8-92fc-b582ac36a09e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca39ec47-45ac-4b31-aae4-bb9d01b2713d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab6c13da-b522-4c10-930d-03250412c085",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41e153ef-53db-4878-ade9-eb8840057904"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43854615-d84a-4196-b950-5e0816826a90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "659e94a4-fb01-42ef-93cb-f0c254498ceb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a69ecade-cafa-421a-a7ad-c0f49c43f22b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3ef7150b-7cd2-4f98-a537-2f3e20a22617"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c49daa73-e809-4851-950a-3dbbc1053cda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08ce6652-bab6-47bb-b639-2fda5adc7d52"
            }
          }
        ]
      },
      {
        "id": "2f9e8e10-7cc6-4c66-86d6-34a2cc938b12",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c29429d3-cf6c-47a4-ae66-c792b86a827a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe50af5f-f277-444c-9451-424f2502e424",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e907794-20b8-491c-8a78-2baecfd712d5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4da925-2d07-4ddb-b34e-d210ba664b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b76f7e-1857-470f-bc9a-c7fc24d109f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ace182-88d5-4441-9fa3-2cb0557e689c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d95825b-24f1-4128-8c8b-025fba65a938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc04639-f9dd-4ca7-9f70-2c6d81eadab9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d683ba5d-8efc-477a-9854-e4936269ab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9292b77a-8c69-46c5-b0a9-44629807ef6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26879015-c5f1-4599-b3e3-b21f9b992596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9a2e92-e26d-4a68-bcc6-9d65cabdf8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f42e16-cd54-4141-9dd4-8d0e9a4f6e40",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05eb862-920f-4784-9204-580c92df5bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c535f960-e48d-410d-9970-e139d2dfaf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6970511-87f8-46c0-ac91-a9871c8f3ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc15adf7-27c2-44f5-ae66-7c99da974a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba4fe2b-b3b3-4c4e-8743-793a3ae61691",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca64a03-090c-4aff-ad4c-55e45d1256ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5589f345-c78c-4474-9c17-d497d1708567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a4ef12-218c-4daa-89a0-cdfca339d63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e643c6c5-003c-4384-b24b-759f560a7741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5b4f84-655a-4cf3-993c-c02b3828d01f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fabbc2-4462-4c06-852f-d0eaae473f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd03227-2703-45ad-9cd7-7ee7a5d6165f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df23e2ad-3842-4a9b-ae99-01fd6ab2c3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d24527f-53b7-4786-b286-3293f9168d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a6c56e-ad43-45f0-a0ff-ab4480fbe44a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5ddb2f-d01f-4053-ba19-4e991007b6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd25b327-822c-4467-803c-5d423cfdb858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056723c6-e70c-45f1-8713-620d8254e707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4147ec6a-5680-4681-b8da-308547ac4250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f5e24b-cbc0-4440-9b49-baf357b97136",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cbfbca-4654-46eb-8e30-9158cbec1adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501d1204-7e49-4c4f-aec2-85096b1be4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9320e747-cd97-40a8-bf20-7c53fce45526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6001ffa3-8337-48ac-b7cf-3daf5af601b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ee25d-4092-4208-8324-2968684b9ee3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ddbd9a-569d-448a-a2de-6e7ee3711ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ddf60a-9585-4913-8d44-718dde667648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7d5a25-9f84-4cd2-bf15-e409e61cc23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8128974-e8fd-4450-85d2-8784c2936ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f68561-ee29-4972-b2b6-4ed2afff262b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7095f86c-92ed-4445-9252-05a8f3ac02c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0d82e7-037a-4086-a306-5be471348163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041b09bc-722f-4169-93b9-485453773822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "673e0d43-fad1-4cdb-bcdf-c5d3230809a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d395e5f8-fc9a-45c5-9d69-0627ea1d2169",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174a975f-2c3e-4b62-9e44-928432c08a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db827e7-b718-4bf8-abb6-f5010da7ce16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd53c7d8-56ee-430e-ae8f-f87bc5034980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b185d61-7194-4d9a-bb44-288fd621d710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8d4519-a2ea-41ee-adc7-a97d61431984",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5580ba63-1cc6-4316-8bbe-d41706a3dc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a11582d-f932-4f56-b2f9-d9202a1f841f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add61b46-6980-4590-83fb-e2f19d234796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "11b5cee3-bd96-4b2f-9a48-5dd6c31e5a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b25cb92-3d4b-4af9-b6ee-5383f75696d1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ccc4b3-a241-4a4c-813f-dbceb560523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5530148d-9674-4e45-9d80-c9231ded204a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31895c94-1d25-4b43-9cb8-533b1ed82c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87dddd92-60b9-46cb-8590-8f0cf43240e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2d9d7f-706b-411c-bc72-aea3cfdf9825",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daca1fc-a613-405b-8c6f-e5051b1da215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317e1666-866d-4465-af93-0646247cd818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ba3548-8ea5-4c4a-bf68-23a2c45f758c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "259b633b-4d41-473f-a5bc-8f5d70579348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434a124b-b410-4602-abd7-7590cc566b7b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fcdc3c-aaba-430a-8185-b9fb0cb876fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0887916e-7057-40b9-800b-77bcf0dba92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026403b2-fb52-4713-b6d1-92af3d9da9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "34409a92-72cf-46e5-a350-31d9ee1daa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf46951-76cc-48fa-a4f3-b4b1e5d9efb3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2938d83f-b16e-4330-bb7b-e5d0994970bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcdba78-b5be-41f4-b821-d5efd2ae8eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d6b1e2-6fad-4185-b386-c26d3ce6dd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "55573cd3-71b9-47fc-9643-b559b15d1867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8c6344-241c-4452-af0e-75f4529b3b66",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c11135f-8c15-411e-9545-8c3e5a633ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee205c3-b164-4aae-8615-7bd563dcf5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd1e1ef-90d4-442f-82fe-bd1439581e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a106c5-6272-4692-9b61-207265de16fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24207c99-78ad-41b9-9fec-acf044d61eef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149e63f4-33fa-4d1c-8a0d-7df0c317c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5d0a2c-6d57-4563-8db9-037f89f55e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384b210f-2402-47ac-aa72-58fdb284f3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6b8c00-9ec4-47ca-b54b-7ca5e077b496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d448853c-95f8-4bb1-94aa-be9d4ce1c826",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b59825-1a66-4c29-9f77-374a28728409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729e17fe-3b64-4077-a46d-f89fe5c3711c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d09f38-0160-4c12-9c37-bff4ebc2c9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a29d87-7219-41bf-8392-9a9e4a20c092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79383958-5820-48e3-ae7a-b7a5846a1408",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98857d2d-5b25-4b1d-8766-839972af36b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06754a36-4f54-47b0-ac86-efcdbb9315fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd77d177-52b2-4271-a8bf-b411c9f18de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d78c0fd-69e7-4164-abeb-742057b8a9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83619bea-382b-404f-b848-f1099ecd8d73",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e1ab04-350a-46cf-aaa0-4a9d88084938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4795d80a-fbfa-41bd-9f07-afae41c6edc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dbb566-f5b1-452b-a31f-214a52ae876a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9abbb3b-d546-4610-a691-45b525571db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a54c24-a746-4e19-a25b-b7231cee61bb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55c74d0-c5f1-4c37-9bc8-1f4c678635a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718ae969-6063-44ac-9518-0842bbfdd0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49736e5c-cc45-480d-92bc-a0411fa659ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc6a80e-2fc2-44cd-a387-b5b6b866f405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1154a7e-9b81-444a-8469-be6aab5f0047",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe314b0-b7e2-49cd-b8e4-1437968c304a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542888b3-65a9-4356-a85b-981d38f4e569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd9face-381d-4241-a547-c99ae5bfdbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df551a5-7a50-4ac7-bae6-94ba5de1b4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad531ca-fba0-48fb-934a-0c02920062d2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9ed489-6d27-42e6-a51f-a6a09c56e3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607db5d2-4a4d-4123-9bd3-db9866f900e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b86dae5-eba8-4575-add5-024c78b0ef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7912e9-c9d6-4f55-8af9-e7d8f37b8761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b9577c-5bb5-45cb-b17f-db833af262dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2ef6df-4c07-40f2-b0e8-3de3c6a70d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58925ec4-ffda-4a13-98af-1bb95c449b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85549699-e422-45ac-9ba3-0330fabff751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6b0539-187d-4190-87e9-fd8527243aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea60fedc-a4e9-41d7-b727-f0f0e7e071fa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750bc977-bbab-4ed0-bbf8-c900a659b10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4713f4aa-6346-4756-8d05-c52b542e4cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544014ee-1c35-40a0-9279-39ed154b1858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76e85f4-e2d2-490b-822d-3e93d391594b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9453e39-b75b-4377-b08e-4072ca02e65d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6df80b-cca5-4925-ab69-dfaad2148497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11403bf5-b93f-473c-98bf-ed2d8e006f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85acfabc-8553-48bc-be55-3ae9e68fe196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9420fac-bd92-40c4-8f77-cc7bcbd31857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cec41b-2de8-49cc-8e62-85b587707513",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccb4409-1f6d-4a4e-aedf-f352c0396e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d959529-210f-4fa0-b5a6-02c8745ea922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18e8533-22da-4ad6-b7c2-368a16534e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd97a37-f082-41c5-96e3-815db8aca94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9453c36c-0180-4158-bee9-dd4465db00ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4126f3e2-a4c7-44f4-a1af-036c6ba3edc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653a05ed-2f1e-4f82-8a9a-43606cbe6e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1477005-724b-4068-8681-b45087b14e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37def499-8a8a-45e9-8af8-6c8e1b92ee0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8113314-7245-4f15-a096-f48d1a86d816",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d2b64d-6600-4b7c-a86c-7ad55865fba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e8ef6e-7b50-451b-a3ec-759ed7fea61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13c414e-703e-4b48-bdfd-fdc17405a240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9467c43-80c4-4b35-8f55-1a6771d472c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c961fe-fbb8-417d-ad1f-d83cd264dde1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215e1c57-9350-40da-b389-65f0c001a4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fc5616-8c5a-4678-a7e3-7d8c5e588b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d815ff9-aebd-4263-8689-4566140cae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d68f1cf0-f402-417e-9a52-dbfb75064a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8718014-76f1-45bc-8b4f-73a273702e74",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5096f4d-2ab0-474d-99ec-1af111e962b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152c28d2-d603-4893-898a-90d18239e204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d45ef9-ae0a-4c61-974f-5e0c8f496477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06c0a21-b71a-4533-b741-306cee20c364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84136d8-a621-498f-bf29-f45b69155328",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ce5151-ae30-4004-9c2d-c3b24b469179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77f2066-b40c-4455-b85b-1501ffa1863c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b464507-694d-4193-bc15-22973fb9e7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abed695-cc0d-4a5d-9f1a-597f9d474dda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d9a9fe1-a23f-4a56-bd6d-732457e6e463",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e01de3f-0b5e-406c-b4d8-9e83d565b510",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4401070f-5e9a-44e0-9e3c-6f5ac317fb9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6bb9b1-556b-443d-925a-aa260e716954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df69c21-cdc3-47f9-9036-5f898660076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88f4887e-7c08-4259-bba4-0a31d6d9ca85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4eec34f0-2b8e-41e9-ad2b-452896e66677",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7db4c46-80ae-4929-a16a-1069fe4bd816"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70635146-02fa-4e78-b7b5-0e9572d06ced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bdaa56d-644c-4e0f-8c28-3b3859ffa46e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71ab6548-a304-40df-b69b-531523c416b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a13d9a59-44e0-498e-a1b6-28b04ad3dbac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5af4345-3b5e-46c4-ae80-026e8f313fb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcafd5d6-0c33-4aa0-886c-2ed65b0d94e3"
            }
          }
        ]
      },
      {
        "id": "fadcd3ec-2caf-4958-a745-806f3fdc0cc1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "43123220-25f0-4675-a291-e6c1120326d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c8ccfbe-6cf1-4fb4-8f37-2f1f4aaad5f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c39be63-f3ca-4bc2-9a27-91bebf167149",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7f8461-a137-40f5-81fa-71da2708a352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6875d26d-847a-4efc-af8a-9afe4feb0658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd36b46-ccf5-43f7-9e7c-c38fdcf94c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "527ebb86-501c-4dbd-afd6-00db83c10530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a3b440-44ce-4440-91a6-4c45e5d1380d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1218c5bc-1872-4033-a4c5-29b4bb31ea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0150d72-70f3-4abe-9fb6-dcb91e78bfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99e6892-6448-45ae-a317-ab26f9b83600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "697b120a-8184-4c2f-9ed1-11b4ac82b71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18f62b8-77a9-4b1b-ab65-da862e2197c1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36b5b45-fbc5-413b-9680-793a81059ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1119c04a-c9fe-4da6-bce1-c8e2339a1c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6d865f-5d00-4902-9619-84071194fad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6db421-12e8-4ea2-8a7e-7d5aafd51ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ec661a-a0b0-4afe-821a-f55cf4a345d0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa42cc4-21e6-42a9-8b17-1309813e757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4d7980-615c-430f-9b4a-7af2e722a6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394d20dd-5778-4d45-a575-5d1f711feaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64460c91-3746-40de-a8b6-45cb54746e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637780fe-b4de-4530-8d1d-362f4d1be54f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d1a0ae-53f1-43e1-b4d8-b0a2cd608976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd799ae-6010-4829-a950-2c65a6c37807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb2d5d0-4725-4bd0-be54-3d725b1f5821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04a73b8-6bba-4554-9f4b-fce4706cc8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8db809c-b4cc-4299-8b3f-86a38a423561",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6afffe3-b571-4d9d-b587-f3e2783711d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe218023-dd63-435b-9193-0260750c5cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ba7dcf-406f-414a-976b-388e801bb74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee8b8e2-6202-4ebf-97fe-de00beb6ec3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0b2fc2-608b-4aea-bfff-9897fd1dea16",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cf2f97-daad-442d-89d9-15239068a1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c7c4de-4e07-4f2d-aaac-fededcf91403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8763de7-e710-4649-b86d-6f983a09def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1edc0acd-f379-4640-941d-690c6d0f6eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25ba88d-e760-4470-8680-6e0f1bc2655d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce3c9da-fbf9-4921-a388-89fb7ff28512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcd74f0-caa9-4d36-ad3c-29d772f4cb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651bcec8-2039-4772-8097-d33465e770cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b4cc79-0823-4213-bab2-b63675fe4f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ceeb5c-41a2-4da7-8b95-5dbafd2d3a8a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799f059b-a91e-4eec-be76-5e0552790a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ba8162-f014-468f-9709-306aa691165d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14271660-8c18-47b6-8c58-5ee46acd2ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ed9ce7-a0ae-466b-80a5-d646db1cc609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea474bad-9630-4b9d-8d05-a01fb6d46dfa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55533d5-989f-4101-a4f0-021201367fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32903e15-c2f2-46b2-8657-588d2d68841d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f858dc-d281-46f5-858a-8ed80ecc35d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8612dd-8e28-4b82-890d-17e16e0bc1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d45940d-df0c-40d7-8111-1c873764bfc5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494e1ec5-cc50-4e02-bb27-b1be656210a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170be47a-50f5-4d35-949c-29a7a7fde91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bb7fda-b22e-4f41-990a-acf4c71befe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3478f7-46ae-4202-bb85-b03bfd43d0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5c7cfa-7664-48da-acb0-5613843a2a25",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971906bc-8717-450e-95bf-d3a286ab5acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8245b773-e63a-45e9-a794-2ee09e6dfdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee136b16-f454-4cd8-9790-d897b2e15e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d3aba2-1acd-41eb-a7e2-3c1deeee9b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc9134-9000-414a-bc10-c9051cb9b988",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe650905-e080-4ab8-ad89-4e88a96f2d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9c8d50-3691-4e59-9ccf-84514417cb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ca9cae-51b2-4ffe-b416-601a7c726f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9397e25-c14a-4f51-9786-ff4b383b5567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4dd88b-85bd-4c57-aff1-356f758fce25",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe71739-9f43-49c0-b1d0-0d699fe054e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e29be54-d545-4c85-8e6b-1c2a5531c758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c1e2b-e3c9-41ad-a0d4-2742c17e69fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f530ca7a-23e6-4e63-912c-7a8a7d957901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606bab82-ccf6-4e29-84c0-3e3845c9aa70",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc067944-5764-4d9e-abf9-91a78a562f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afe28a3-e1b8-4c8e-b0c1-6bc07c29c241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7267abc5-32c1-4e2e-83c3-aa2ab852457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17c665b-c224-4c26-8005-bfc0a3cebc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c22a03c-0a8f-4a1d-9d40-fbb16a74c52c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d6b79a-e613-470e-9ee1-6cafdc294ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed5ad2a-1985-4769-8318-e4c4004152ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc87234-4baf-4531-9005-f189a5e3e215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f389ee26-7c1a-49a3-b96f-d5f98ed66335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b981db-5266-4785-ad9e-f8571697c33e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f7290c-d93e-412f-8239-af361d8aa2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ce54f6-e492-4a9a-922a-8c5eee899ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1c50e0-9f11-4034-9d25-e25ee405e0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2460a89-acce-45aa-864e-4db12f87c48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bbd33c-14d0-4e0d-962e-18de38f3191c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba8a3f0-fc39-42c4-9210-185a1505738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f5a0b2-5320-4d94-9539-343d073c1727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29855d0-9b77-4f44-ae48-6ca3d17edd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec1faf9-ec5a-40ec-ac1e-37ae08998bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00fa92b-aff8-4933-a16c-0a487d18dbd2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36749ad-b55f-4ffe-9d8c-9e4bd9bb3356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a36ed8-bffd-42f4-b7f2-1fadcbd0e0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5a70be-c855-4581-9917-a004fe1d2e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b0f3df-866d-4e0c-a4b6-bb8530452fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3f4efc-ce90-4683-af07-8fb81c69c215",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d19b8f1-30b1-4477-ab52-195ac0b9301d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c746e0-eeff-4832-baa1-432c485d4003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e45fb5-9744-408e-903a-1bf64393fba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20e14c9-3e5f-4b82-a170-916f8d128a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388c5160-fe8d-437d-b6fa-e153b96eba6b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dac7119-1221-4313-a6d9-08fda7c8e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c86a531-0e3c-4338-9897-00fefa7d425f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e865255-bb25-466f-8b3c-91370f753861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6f846d-e550-438e-b33d-144c11efc0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb3e190-868a-4432-9467-e699eda31674",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbeee96-49e1-479c-b2f0-45a489f32742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeda7ca-d294-47f8-b584-f745e16851d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c50985-4702-44ca-a805-effda9a232ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d01ba98a-75f9-4a6d-81c9-2f783dc0c91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8089fa7-8075-41ae-b25c-e24a7562d39c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240d182b-afed-4c71-b38c-536305d7d882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333082b0-0b47-4777-bc7c-4ac22da725a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbaf13f-ea37-4b6e-ad14-4bfdd0401270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128a0605-c081-414f-b60f-ce02e0544bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07f4dc3-e7f2-444c-b676-81ad8114ed7b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca3f4ef-f92e-443e-a59f-25c08aff4430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b756c53f-2ad4-4e8d-ac39-6674f0920593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985a3122-e5b3-4467-a74d-74ee517908ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5be6cbc-8bc3-4b75-9f2e-1e1383d9a851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39254ea-db75-473b-9aa4-26c3f60e1031",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c223120-aa79-4163-a06f-f61bea754c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fbb975-6880-43d2-b05f-280ee99c034c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0744573b-0ece-46e5-b1d1-928b1fc7bbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "085d9a64-af82-4015-b494-8249922aaa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad73d08-422c-47e0-918e-8d7fe6565692",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da09ab20-a192-4ea8-a6a5-6bd66e5176f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c6e900-0439-4e39-8281-8f5f6debb46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a8c372-334b-4abc-848e-069d81cd7878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2ed9b0-2ebd-49da-b790-f0a4894e658e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4d1d87-2a22-4595-b6ae-34bc379435b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5ff93a-d1ac-4425-87ea-ff68a6887c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f49c4e-95dc-46c6-8535-0a990dd7ea68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7a49da-ca62-4cf3-8f11-4c62cebe2295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d330945-7522-4cf2-89f3-07dd7b14e58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27844d22-a4fa-4581-a57a-b8a51ae2f994",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67318c72-e507-4829-8788-ff4f99112c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b78eb2-e19c-4ba7-85dd-6135e4993cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de02e1f-dddf-49f6-a5d5-890000fc16f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83819639-d467-49eb-8822-e84f354f0d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b3f2d6-cf39-43e0-b586-7ccbec570a5b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfa0906-d97c-49ca-b9e0-39c640d2c690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9aa6cf-4158-4d04-9ac5-9246619ae1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b377c2-a648-4675-b839-677d3d59607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2550c295-1c7d-4be5-824f-2afd925356bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397d1cbd-ceb3-4d9b-8eb1-e194876129d4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d4f0bb-5494-4658-81c2-ddebc8a6e017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e89dbf-7407-4531-8c0e-365d687254e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5701796b-1736-496a-aea2-02ca0a3b9093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d40a56c0-baa2-412a-9a87-58abb8e2dd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fbbc9e-3d1a-404e-91ee-ab771680f81a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4558f8ac-af49-4e9f-98b1-0808d3a666e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0b56f6-9287-488c-ac9e-5b53ce36bb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080dbef3-21ee-49ff-b05a-43be10139475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9a542b-9fc0-4338-91c8-e14f2dff798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce43420-6a5c-4820-b028-e84a5a3d80b7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6876de1-fadd-4d36-93c5-000411efa250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64230c8d-a2ef-480e-80bd-87c7df036021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e5ee47-cf9b-4a9c-b51c-c2d65e1eb707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e617f758-3170-4cc1-9cb6-a02ef4f786c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daa7378-74df-41cc-91ca-f79d80bf1833",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c449b2-0242-4e15-bd5f-cea922dcc6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3ebd30-401c-4d8d-8947-f358c5493f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef1ef49-ef56-4c0a-b413-9d37d178f638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a83f92d-d1ca-4252-9f4e-fd6d31433097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015c9d65-c859-4629-9660-1f4e083183d0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c224071-57b2-44f6-a8b7-f3e36e570f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a58bc6-5d9d-4dee-b9ea-21b3c5d752fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b088140-7f48-4ef7-ae07-16036f844f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f35446-a120-4bad-89f4-2fd31aea055a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab0a60c-9a34-4824-8b67-c49af5da2095",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6c8c12-ae3a-4b6f-829d-dd67fcfd7550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7045054b-ebc3-4b77-b515-47ea03aee1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38afd87c-c443-415f-85e3-7b38271af7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2facccee-e398-46d7-a690-7f646175eebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1201f3-32c3-4662-bdeb-548aaaee221f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62721055-75b4-414d-98f9-2d70c7f8e2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c6788c-d060-49d1-a309-78522d57824f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb655f1-794a-4156-8303-be9db804002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc324dd-3be9-4b18-bf1c-af011fbba3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15985ae7-25dc-4ca7-804d-acac3c95f68c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b18e846-5ec6-482f-b158-a291a08c9406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bffa848-47ad-4f44-8587-781d6620575b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578889d5-b7b9-48f5-9a74-bc6a4312c5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9c639e-0285-4e7e-9e9b-9291b97abb79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c454d38c-4428-4c90-a5b1-72af74992968",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72db8c99-dcc8-44e3-b65e-385f8ad02149",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115ba61b-b904-4b1a-b4a6-33c08d88c9e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "31d14c89-a6f4-41e3-b91c-a614d284e019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e31957d-5df1-4907-adc8-0800b76e326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ca0ab39-d57c-41dd-9f6d-c3a65bc9ca26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98a97a0b-3384-4f8e-917a-5faee10388c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52688a2d-808f-4d07-a175-f83d78962b24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70c032c0-be94-4c71-a4ca-6c15fe570b04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d26dabb9-4aa3-400b-9877-f392c1628e7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85adf085-5014-4639-8020-ec293e96c81f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a730eba5-40b9-4851-ae00-2d754f4c04d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43ed557d-a606-41af-8c47-1e05e161e105",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf9d6096-0ced-4e8e-9d99-8587e708ad6f"
            }
          }
        ]
      },
      {
        "id": "61f37cba-b3f1-4525-afd7-29e7736bc02f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a08cd9b7-c15e-4372-8473-7353d3612c6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e19ecdc2-b8c8-4f13-ac69-ffb797a9725c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1a7eb54-9868-47d1-a4b1-8812a9e706e6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b46dfc-9751-462a-afd6-5899bbb06e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6e9152-f82c-43d4-a1be-1db9f890e01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36d8b71-b24e-4370-ab85-9462112e63e4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e95c983-87c8-4b2f-bb34-7c1093141cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2a5ca5-54d8-414a-bbea-95146cff0df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24de1372-b558-4ecf-8406-f8384046237d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f9d41a-f3aa-4f68-b638-34c01266d8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b60ef3-37f2-4996-990d-cf877b26ed57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee62002f-b63e-4c93-9a41-0390180828aa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a92cca0-7b76-4c9d-97bb-9b5901d55292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f15459-1ab8-4e23-abd7-ddd6f316850a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58a382e-8e3f-487a-9f6b-3ddae4fb29ed",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e372f8-05bc-4a30-b3f9-d2927ef8b139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc9b3ca-8dcc-4794-83df-b040e602f5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b279fbb6-bb31-4e6e-9449-28567f5c7a64",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd185ad-9a02-44c9-b772-2d4c5495ac38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1ea628-289d-4684-ad2e-ef24dee20def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d68a7d6-3b95-4a23-bd92-68351325e8ae",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f75d1d-14a8-431e-9b26-a2ec387e5b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ef4fec-8803-444d-ac01-75efa1a0254e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd19b1f-69f1-424a-8859-a169e04789b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b91703a-32b3-4a2f-9ee3-903b34be2bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b12769-04fe-46b0-b1d1-2bb5adae7672",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4468c9-f0c6-4d7c-b1f4-7735fa316d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f3eeec-a455-4712-92a6-3f463b450df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bef121-8b02-46db-8fff-187a3a77351a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1c1125-dc4d-405d-ace1-d6f6c5cf585e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59766cee-f5a4-4884-a149-124dd7a8ce53",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c048a8-0bac-4c56-a70b-8dd0e0fd8705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79fb993f-5705-457c-b2c1-e2b41efa42f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ff3792-643e-41ec-883f-aa0d3146af33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf24f3b-cbc2-4fdb-817b-db6ee710312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cba1f93-07ac-4420-930e-e3afad17c6c3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5f9831-401d-479d-8f37-c651e597f928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e75dac0-58ab-43c0-9271-16d8da4283cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005c08f2-9b73-4658-a779-910f4f598f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca5bca5-4017-4649-b80f-55e13289d7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bdca97-1d22-4523-94b8-3c81532d0732",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0367c2d5-0645-4f48-a88d-ce303596f4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b607fe16-c8f2-44ef-9d9a-7bcd4c45521d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18419d77-bffa-4e0c-a84e-6ed55643c086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0cd92b-d2db-4ed9-8b9a-de1562dba778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0ddc15-a3ac-47f8-b088-789977f57cc2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb9c4f2-999e-4781-8f16-b9b675da671a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747be320-7508-424e-b396-e735818ce297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9843138d-140c-4e59-9059-62df20cc3255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeaa496b-84b7-4fc9-8b1e-178ed12b3014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ed1f9b-aff8-41fa-8a9c-58044bd30aa4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4e0960-d565-4e5a-b8f8-b118d13897f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e48356-ec39-4d3c-a534-dc96beab8092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ac1049-3244-4b7b-9a79-d4e58585630d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cfdd50-6b91-45de-af3f-837c40b18b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e1aef4-6554-4272-8a10-4c9fe95d9ed3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9078627a-134b-42d0-bf2a-7c5af4ba8d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95310eca-f05f-42b1-a442-14305ac0807a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d458719-a77b-4c6e-9126-6923755737ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9393b561-9186-447e-8152-9b77916ab14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52583f32-3427-4731-a8b9-0e98270a34e7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed9a036-7ff6-42fc-a6e1-d94e31644bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8de5fee-d5ad-44af-8517-1d964ba067f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56865458-b133-43d7-8055-13f613cbdddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d48452-e626-4237-95e8-8488e5e4a2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea62c3cd-f694-4049-881c-be2bdf34b3c5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43696a0c-e794-4b02-ac70-d21ba4eb298f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f882975b-dd37-4431-b2c4-77c12370ae58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5c8d13-a6b3-414e-819e-ba15fd009225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fa3bc4-cafc-4adc-8a97-0118baa20b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f7ab6e-f4a7-4573-913a-206eefb862db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9b0ed1-0314-416a-9724-80bf6b0bc697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8bd9a6-30c9-45a4-9012-9f98e5c34df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9129a129-eb82-4bd5-a363-fd2391b3291c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b393d2-3014-4eab-bbd1-b331ac51f46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f00eb3-fe5e-41da-8fd0-f59812ca2877",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97034c8f-070f-48db-bd99-af9a8a6b1499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1343047c-44ac-4f4c-8a5e-110dff5f0530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf5883d-310e-42fe-8eb1-b097dd137f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86dcd00-bb54-4f83-9d03-fb4f029efcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aef45d-82f7-40d4-b30e-05ee60aa16f0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c613ee-4f77-4b9d-93b3-f4a4d5d6e788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9229159c-d0e8-44d9-8d60-99d62ecb6ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97436d89-53ce-4e4b-9d34-d5ca48b8ca2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f403d05f-5406-4dcc-b07f-3c01d40e1c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2d6d30-573e-485f-a851-33790075600a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c2ce38-6caf-4397-a426-b5dc8eb9c471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ce3da4-f943-4081-9357-d9b569b508d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172a6716-4a8d-4c0a-bb9d-ebd4281a84c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08e87af-ac11-4c6e-b941-ea72a829afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084ba8b7-1b02-48fa-a21a-bcd41bd5e858",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac975e1-a367-4e57-915e-2eb8acd44f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5899d6cb-f5ae-4d04-bce7-a38b8662f1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b866e6b3-9cc8-4c69-a370-35c2774cad26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114c3557-2526-4bd0-8218-230a7a60654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f505717e-8ec6-4526-a2ad-2f7a91bbbf5d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c827189-bdfd-43a1-be49-899f2a820b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c19205d-35f8-4e95-9212-3b5395761656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc95f377-8098-4ccf-b8b2-eae00eac8145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7083123-f023-496a-8367-2436ba766b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8a052f-3b9e-4af9-82dc-95cc58797570",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ed28df-4c49-4566-9898-1513c7a6ff87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4916cc27-dc39-4539-8874-5562a0dedaf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8dc2a4-e7c6-4c72-bc73-d3ed62f8451a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf46de0-0a26-41a8-a6d9-5114c90f7541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99259ea-c77b-40ee-85bb-4022997b3c09",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb0eb2-166e-4fcc-9573-187d1c37228a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a17691-cb5b-451e-b94f-c96791a73047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a112c-43ef-4780-948f-0cfdf648acfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6979d4-09b5-42a1-ac1f-c16ace55e007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b3c3d7-9cd0-4344-9c41-e79c30805b73",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e84c52-64b3-44ca-a32d-cd2d4fe15efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868876c9-777d-4407-a416-e919a1704c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8174210-37c2-437e-8e55-81e93f96c858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e312ce-8c28-4159-a26f-3bbed89b5c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdac730-7f41-41a4-93bf-db9e7d01d308",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a60d0aa-7a95-432d-b743-335f45dbece5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42da19d-715c-4521-a150-a1898af2e272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2e638f-9fec-4c04-ade8-bb388f62bff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf814a85-f1df-4e1e-927d-07aaf200168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d99606-4543-4d9f-ae15-437d3581fad7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3874cd5b-1d97-436a-a6eb-9a0b4afd46de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7024c3-9285-4db6-9e24-c5918f8fcad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08bc856-e1da-48a2-950d-aafcc88361e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d656855-5fdb-4a33-9404-f78f779f998a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4403ffbf-d825-46d0-837c-65385cc47d21",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdede576-73e9-4d3f-97f4-b30f4be6ff78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9b6576-12b0-4960-ae05-5ff4a887bfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0f1c03-8923-4bdc-93cf-8b709f325108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7446e5bd-d88a-414b-8303-6d1561fa71a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee1ae48-b4cd-4dd4-879e-ea3762c5f135",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45460862-d8fc-4253-a218-7571f6fd8edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e7c9a8-aa74-4f3f-959f-b410fce6dd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c6a1f7-bf39-4e72-a755-2b57a9f5a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f46e76b-1290-49e9-99ca-b4ad87c1d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682970a2-cadc-4b23-9a11-824b6371c7b5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bab6921-01e9-4834-9437-84c67bf3f843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e5b4e3-6533-4544-8a10-bb2ebbf868e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc59741-11cd-4646-9f11-b1fa0996eda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec21f3f4-3ffe-4137-ae0f-80ef5bf2c177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28214fe9-2273-4f78-b7c7-a746dd45387d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b9ff6-e636-4037-93ce-d8f6a7a4a656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56dfd8a-48eb-4909-a2c2-808bc43c8cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc45f468-fe2e-4302-bc49-da834dce4263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf051fc-b8c4-4210-989b-c0982c094d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14481dd-020a-47c6-809d-37abb422d53c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025da509-032f-4dfd-bacd-6400aad174ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309d6e8a-14aa-4732-a47f-3f349cffd0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0309646-490d-470c-af8c-c54b807aee1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04428ee8-46dd-48b7-b17a-4b54bca4108b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c44dd63-47a9-4d58-9207-d4727b2a8b57",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdefdf69-9ac6-4bd9-9da6-3604f73a7a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57abcd4b-f886-4490-8f10-6fa152244689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bc2d8b-90d2-465d-b5df-e2f064031a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372b5a2b-cb3a-4022-987a-52a79d12e853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f70b480-2e17-470f-8d13-e8e0fe5a8e90",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773144a0-717a-4070-a2a5-fbe55aef655d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf6b089e-1bfb-4a3f-b17a-014419cf5270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97743f5a-4b15-424b-82ad-eeb12528afd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8f51bb-2118-4065-8a8c-9ea178e1a0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d1e3b1-ae8c-43d3-89af-d37178ecc356",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ced1a-3191-4974-acfc-88cc25360f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac7e46a-dbf9-45e1-beee-0c78be551e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a96e4e-9f6e-44ad-93fb-cc635720fe70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26168968-53c3-400e-aa29-fa9c22a772aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac60b772-ac83-4e47-80cc-f60bf79e247a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2fdf62-2c87-45ef-9696-d13077037274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf24861-e1f7-4189-8fc6-2ccf47f5557f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4f244d-df87-4a69-936d-1aa8252cd3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce14e52-efbe-4022-acde-addcdd99769e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a05cb09-4a04-4ab1-8a49-bc6372718afd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7a5248-f913-4907-8460-040a7cb5ab66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be081819-c9a9-4b4f-83bb-255405e61c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef931c7a-9282-4e8a-a2c2-f98d993356f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c72655-46d2-4b1c-b53e-e41cbebdb182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3e770c-c876-41d2-a4bc-9ebeb4ea83a8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c836ee-38fc-4c25-b456-574c5a4deb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cebbae-4aaa-40c8-80f8-cc34542e39c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4299b2-0d7c-4648-bc1b-1f84299d4385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6812e4-5b5c-4641-a253-0139fb059aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a53ce6-ae3f-4096-bb73-28e22cadf5ec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72704373-5ce7-47b2-ab2b-d41b6b059095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68165390-2788-4509-bfbb-f6dbcd37062a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f056cd-3ec5-4b35-8d97-bc8a79d591cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf279b9-5c59-4c56-9325-998d86674334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb6e12-5ba6-48d5-ac51-bbe2896c2589",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f482960-e532-4ed5-a9c9-887861ca603a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0dc744-8c67-4d3b-adac-9dd3fea0cce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a62855b-e8f8-4bf0-b9b1-53d46202c3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea2bb2a-4070-4aaa-998a-99cf7415c2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16c2705-f56a-4d33-ae51-fa067481d575",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aca23a-e785-41cd-8aaf-dc8f4be94c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbb6572-f75f-49b8-a7ef-1e97f49a381f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd947df-66f1-4459-b17e-d4f8a01a828d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb0fdb4-b92c-44f9-b9a4-4c4aafd92028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1414b54-fba7-42c0-9ff9-b65aaaddeb59",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2660c299-937c-4686-af4f-d4ea6226e2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8975fec-3cb4-4d92-96c5-6fc7d3bbcf6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0eb0ff-f7b8-44c8-9f5a-0a0d0a262949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7a09c8-ff64-45aa-b473-ed93aad5634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc7c4d7-0d65-420c-a674-19c7af4095b9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f979af5-1791-447f-8271-75ac8f351861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd9e701-c9f4-434e-8223-33dd75485c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746ed584-bd72-473b-9616-aeadb54ab490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70103bb1-953a-41e7-87c6-23123d673e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd34ce36-b35e-4389-9f9e-dd087f97e2fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975ffe27-65b6-4963-9f0c-9f41dfe35062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf4443b-8d76-41e1-984d-968a33788485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28084cc0-4d01-4ea3-93e7-1f9964864c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e053a44e-bc55-4c4a-9b44-91b3f7975235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3734878-2c54-4686-947d-784192668eb1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44216eb2-9985-4f80-8d30-5832d14669b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e666774-04c8-49f8-897a-699491f0c195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0391644a-4395-413b-86c1-96c2c71c64ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec7e43d-d477-439d-9c91-de3cde96a8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1f6a29-371f-4873-9fed-6d088f101202",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a85f313-ce30-4bdf-98d3-c3d637c85ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69cf86c-087e-4b61-8ac2-bd7b3ffa3ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3a2608-7b80-45b7-8647-ba5a4b1bb84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a808d038-a34a-4682-b812-07d6a6ad8c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e140dbe-f3b1-45e8-955e-496943ee046d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d6af8e-7494-4f99-9fad-f0c40716f965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29463f8-7c3e-472e-a0e9-fc57d6cb9649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60c6e37-8d9b-4f44-b7ab-ecc88d4a2053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf0ea4a-52a4-412f-865d-972f5c7ee67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde06ccd-a0d1-4083-ba1d-1b08b149a7ee",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdae3677-6a88-436d-9c3b-6ff16473fda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c0c92b-8289-4388-a9ae-0b586d3db957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7d0428-285b-4e03-9274-8fe24dcf062c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63d31c0-aa97-46df-9c3c-fa08c85c47b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97947f9b-8645-461a-bd5f-00a7feabbafb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ca53cb-abec-4763-94dc-27a49a609049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dadea6c-88bb-4a48-9bd2-9be46be93290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d562546d-099c-464e-992f-2b10d9f4132a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bef585-5d6e-40ec-b927-5b5bfb285402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cddbc12-95f9-4cc8-b335-4542fc2855f3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96144e72-cd76-4d5e-be83-fb802195dd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af504fe4-a536-486b-89dd-7dd826e12f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc5acef-3c4e-43e0-b0e3-c2b13c5bba9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b7a78d-fc40-4f00-aa81-3ec41cc7229f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d27b7a0-5c8d-4ce6-b803-8738f032b684",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2549b82d-f38e-4686-b731-3147adb05e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e652a4e5-b8af-4f3b-b56e-28bb67381e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b2b8bb-0084-4b4b-adbf-a60a55f3de25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164cedf5-6d86-45cc-a042-f2dcd324c11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074b7613-7b26-491d-b410-1585998b9519",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b178f3-fe30-4e8f-8973-f5792f17d880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272ba95b-de49-4153-9295-767d8e613f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa4b8e6-cb3d-47e9-9a9b-49dd2987484b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1221e52d-d3c8-4a08-bdd7-5e04b86e8e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a62a78-169c-4fe3-b5a4-0137e0b9f593",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd137a21-2df5-4171-b235-f18b6c687dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3132ec55-95ae-4cd0-ad32-3ec4f308547f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f53107d-53a5-49a0-8dd1-09af431b1563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f69dab-45c3-495a-96ce-6f17a2c9274c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd5201f-397d-48ff-8a00-58571edf8949",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5738023-ebc6-4566-ac1d-9d23aa057079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f78f4d3-3853-449a-8265-d2b78818c4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5a8d7f-f1df-45e2-83bb-ac5f0115425d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b047a5d6-3c26-4126-84ca-518aafc00549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb50fd9-19d5-437c-95df-14023d7b28e7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a0f126-514f-4a62-ad13-ecdcb4c88978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b03c3a9-cc40-4d34-9a46-3cd3ed9bd585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfff530-fbb4-49f0-80cc-9d003fd0b985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03615492-42cd-41a1-bff9-2345a8f7b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbc1d3b-ebf0-4af9-b75f-a63e0494a489",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5af10de-e50d-4794-beed-d944a569414f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c25c7cc-da1d-445a-9aff-02ca42c43280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758d7b0-790d-4141-9431-af412a5b8d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ac9bc0-aa4d-4d38-a4c7-5bd9d9813412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53205f7d-a392-4a9f-a4bd-a0e66fe48776",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f518011c-df78-4f60-8116-b4b2549eabae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293fa0b0-0f3c-4a5f-acb8-e3f71d7ecc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e241e3c3-fbad-4f47-bcb3-21307dee96ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d577ca1-216c-46d5-a58d-f21b7118243d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48adc45f-5a44-4740-a029-c7eaff8b76fd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6944e6b-b0d3-4a73-ae1f-88c51b3c1b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6926d8-1887-4988-ac6d-a120cb75426e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9640257a-636d-4600-81da-a4a9e7fb6588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1a1c5b-0295-42e9-97ef-4c25a29dba01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e873033-b915-4c0c-b84a-f825dd3a7bb0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518103f8-4436-4655-81b5-247beae61e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c85697-d128-49da-bc93-52419d2ebf60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34be38e1-af71-4f70-b0bf-cb09e8cd76b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766eff8a-d67d-410b-be94-f2e90db68207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d627b06e-4d79-4ced-b7ff-f7ffa217455f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b753b3-718d-4309-9748-d88aac691d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc03ea4-e21b-4f64-9581-6563cfcf6513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00784dd4-8f1f-4663-ba24-8688de5af22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cadd215-3bc2-44a4-ad8f-9a73d16a7582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ed99da-5f30-4b0f-82cf-25526ba09422",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63017150-6d26-42f1-954c-8aa89a65c508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9b710a-5b23-4618-b2b6-edea2cafec2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f1ac7-6108-4fca-887b-5b2b1ed7a98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7223ee67-61a7-4ae9-9584-27f70cf56b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217fd1a3-4d4a-4bbe-a14b-f2b6c9d28f05",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8ad068-a496-4d92-ac9d-db8ebbf8e2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3819474f-bd77-49ce-96ce-39a4c8c08323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e63d10-cd44-4562-a496-91f6cedcea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445d253f-a1b9-47cf-9004-57e6cd98a5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8563d946-1999-4d82-9b1f-0de9f6b31934",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45907af-ed2e-4c63-b836-06ca2ca6f5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfea8d8-f10a-4872-9cf4-64852192ba52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578df3d0-06af-40e4-b026-a5d48bdc350a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdeaf51-dd44-46c7-b5aa-66b8121ba0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574e48dc-3900-43df-8fb0-10c48588db4f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb378e3-79a4-48b1-8f39-07c6feaf23ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213215c0-3527-4d16-bdd4-98fd235c4e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad4e5e8-6300-4faa-8867-8355add24c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db80d8d-0d7c-43e5-b692-2c3dd1d7d010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f4e756-9108-4b8d-923a-8306e9da2aa2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2de635-5291-42e7-8103-ac8691c738b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df23539e-1698-4898-a12e-3f19421feb81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbd9af4-e82b-4c2b-98c3-9e75e3303edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ec0615-94d5-460e-aa0f-ca8e23783ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0b0abf-2cbb-4f48-af98-54779825494c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1adaad-779d-4828-9552-c82db9c677a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73274f19-9189-4763-9fc3-3071c675a266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d6ea16-984c-48c0-aaf4-e803a69feaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8646124e-6578-460d-bb9c-c95fb850f7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c57b977-0995-46de-a2a1-b366e8b161a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3419f0e2-ea85-4bb4-b596-2240263762e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397d61fc-c06c-4739-824c-abb444ff955a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedb1e65-404c-4fc8-bf51-a729bc699207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a78f013-dc57-439b-8be6-fb2c5b4bb2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e009581e-3a67-4908-858a-b5de128924cc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8079d00c-3542-4094-a636-5ee63fed3103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c584f29b-06d1-46b4-967d-f856f4d17e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9eba9a-c636-47e9-af85-e1ceda4f6a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9deb7bca-fcbd-44d7-8577-8bbfb2a9a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f972320-7252-406d-9039-2ecb009f9a64",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37e528d-5250-44cd-ac5c-141c3dc2734a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf0e5da-3536-4f8f-b36b-ed5cd883d0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c749c15-7345-4762-aa2d-22ec9bb00ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7938df16-0e44-43c4-9ac5-79fc1e12e576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d6ce17-ff24-4833-b7a0-7611277329d4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca4a9e-3d80-472f-b9ce-a31cc1a347e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f42c158-5ce7-4a83-b6f4-1252fb8dac2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f1debd-7e96-46e0-95f2-524d6a657d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00605ca-a93e-4bf6-a8ed-130595a75164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b091ac2-e1d9-48ff-9c3f-20536a6d3b0b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a634aa00-0831-473c-8fc8-be969df11eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c498ff37-2111-47f0-a091-2a8461f0d08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d6bcfc-2370-43a5-a7a2-11028b9c91ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffceada1-da72-4224-920d-cf5d7de90a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359c2b95-db87-47e7-9e65-e86610ebcb8e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c7f2b6-fd1f-4b2a-abc0-d526a2d6a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef93949-5b01-4093-8a7d-ae03dcbf7a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a2e97a-bbdd-4b52-ae69-f647f3c2b2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34a07bd-580e-4953-88ce-b50bf1356d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0443a136-9912-48ed-9806-638bd28300b7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d566c6d3-80ef-4295-962d-e2397dcc73e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfd37cf-a370-4f7f-8855-e5a51479ab62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a30aa0-8707-41a5-bc28-5bf6c94ac017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258613a7-e085-4130-89d2-7b2eae0c31be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69299f94-7390-4f0e-af4c-e29524a7e5d4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de49920d-50d7-4be4-8a96-643a3cbfd8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c134f1e-4bc5-4556-a5e0-2d2b51baa85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb2fc5-db40-45c4-a90a-c511c0b15b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bad968-1362-46da-82ee-b4203801e1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2421a062-8aae-47a2-8e9e-b29f3b2eff8f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5b9392-e16e-48da-9b2c-6982c7ecf906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73660944-4dfc-401c-a181-c1d16c1957a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019990d6-8791-447e-86f7-64c91ec8d613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd4e508-452a-4777-9522-d43132efdac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919eb85c-51d6-47a8-be47-24ac288f1d02",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82da57d5-a9c0-4752-8867-1d192d18400d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e6a692-c011-41d6-ac7a-b0d1cea00321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7b6734-f341-4ca1-b9c2-4ba8367faafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10ca982-52f5-4a47-ab02-84806dc772fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aae62e-b5a1-4a58-84fd-9537b6aca702",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d510f8-092a-4253-b88e-fd75a50c2c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96fe86a4-200e-4035-abbe-78d73b71fa77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d15fa-c0d6-4ec8-a6ca-d8ef140353c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ab4ab9-fd91-40ae-914e-bd4722dc3219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1411a4ac-064c-48df-97e9-19792a55473b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8f1a55-e0e2-42f2-81e0-6b13d0a0b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeade2be-8ada-4182-a36a-dddb0425d621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a701ba-b5b0-4410-9c3b-aa4de11180b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28955dc5-5b48-4f3f-9f3b-c14138bea463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b722dcd-f33b-436e-9e20-967ecd3ebf3f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfae25cd-f206-4e73-9be4-433e87eb29a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177727e4-e37c-4b13-a0d4-02fd1ba6bea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41448761-0460-4101-a630-2ec4fc42f85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdffb658-84c5-4200-92e2-e9cbd84df877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce990376-dfbd-4b4f-a9b3-6d9ea88dc45f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6093c357-c2d5-497b-84ed-8e8d72c99b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137c5a14-755c-469b-baf3-0fe8f81599ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b185592-1d38-4887-892e-831f742cf63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b94f71-c179-4665-aca9-66fd2dc62945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849d4493-6d4c-49e4-8204-6b0238ee06e5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2664306b-6c2b-4e14-972b-5fe2b571e863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3edab70-9e25-48c5-a463-404829f9a471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe0ce9b-19c9-4b7a-9ae4-d6a4c1d3cc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ac96fb-765b-4b25-b029-8dfbd01b521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e407ff9-cf9c-41bb-9b76-54ede1546ba8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c46c0c-0c1a-4336-8fd2-bba519329db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d701f96-dd80-4368-b77d-feafc4e1e0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afff0557-0dab-48b6-989a-19866040ad4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa13fd2-4570-4e97-a47d-4a08d9738d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec8f637-bf79-4f25-a6ca-586de4a60a66",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2ee25c-1649-445b-baeb-eaafb8fe9d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85befeee-c9ab-446e-a561-f3404c715e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c402f718-abd2-4b6b-861d-aa72fb253b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a578be-9fa7-4512-b707-7ece7d02236e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e772b7d-723d-4efb-ae2b-d3f2c824614b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6fb18b-2425-46dd-b3c6-e22c7a951129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f0e40b-ecca-4ac7-af2c-762e1df9f572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46405a29-995b-40a2-8f99-a01f49aef732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e3d5d3-087b-4a7b-9b37-60774ad460af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb5ba94-6e94-4b82-bcaf-9bb16bc3cd41",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18992b5-fc5c-4dba-8760-81f58f0adf1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a8dc64-1a28-48e1-ba8d-bed553b31688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce520101-064e-4f9a-86e2-ec1214a76a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a085e0-b30d-4ef9-b5f9-fb62254154c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f780d867-ad99-4ced-b10e-4d70289e2133",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40af3de9-c502-4bf6-8003-f79b3919b09c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe27682-59bd-4e25-a8c9-7a2c2034fa62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1562654-cfa8-4411-8294-e8a09bb27613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777fe937-d29b-4a84-928e-f696239232d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4ce4c9-a4ec-4237-9ca6-05444114c836",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916ac909-73be-4294-a589-17015426c4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ff2f40-fd91-4f99-93e0-aaebfee4e60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67653a91-5ffa-4f37-8f6f-78ca2e53738b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1398b54c-ff77-4b13-984f-1ad703fe1b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f43b7b1-8256-4c72-878a-92d739e8d0f6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6dd1bb-cc64-4ee8-85bf-c508bed00e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d64d12-bde3-4f17-9d4e-14e5d9cacc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a39e9e5-d4de-4a5d-8cea-ea36a461417f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93291314-d2e9-47e8-9966-04d348492734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec39884-22cc-442d-950d-7189dc8d5ef7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69876a4-0bec-4072-8f64-0fd6b4d7fafe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310e34e1-0104-4dbe-9d25-11618cb461d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32095e20-1fe4-4327-819d-31d512108056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc18596-ef90-4784-bd94-352c3823f9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5a86fe-dbaf-4eb6-b810-010f7c69b0bd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6936c7-6715-4c91-9b74-af812e4240ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0745a3-97b8-4bbd-836a-1ffb28d4010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246a590b-79ae-43ba-922b-eaeb11664d86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4136c1c1-a22e-468e-8d03-872e7abd64f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cb830e-f344-40a4-81c8-88d17fd3c680",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a52173-7085-46be-b908-499c262ce00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbc74cd-7637-4550-9700-0de9914d1fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3c553e-82a4-44a8-a06f-a7c0b5c51656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c0a6df-535d-434d-8f61-124df7cb1a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42308438-0ea6-4020-915d-6628242936c2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c5b0f0-698e-4aaf-8958-9b2dfdd0cbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10b54be-6527-4821-a34b-468ccc24d2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77aa9ff-c54a-4233-84b0-4e8b960264e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2922416-f106-44da-aa34-08a62b9b7aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249c6ae6-f218-45e9-9b93-315a6fdd788b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d84a5e-165d-44e6-b735-5a55e1593dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38615630-e8d8-45e9-a2dc-1765855f69ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077093ca-b03f-440d-a7c0-f8cf5179754e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f82f02-333c-46aa-9077-80ef3f52a0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad552cf-e288-4596-be47-c31101cc0f58",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057f1b4d-7d15-4e84-bfee-046121c78ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc37329-30f7-4046-8357-ed8e18f408ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d612f12-7d8b-405c-ac84-52ccb7b5fc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6870ce3d-dca8-450b-8fb3-3f284c30792f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f30cf1-c64e-43f4-a097-1a53b032fa3b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38d39d4-168c-41d8-bb18-15d1b1029757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d57f66b-de55-43b4-aeaf-3e5b80be0943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42408cfe-7387-4795-a497-797231a055db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ab0056-4245-4e51-9769-5dde533dd1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbc21f1-eb63-4646-8e43-7cb933abceab",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9ec6e1-3586-4f8a-af51-001bb8a4b2c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba6d005-dde5-40d4-9368-6ef6e5df62d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcc7ce3-62a8-4b26-9bc0-3e5bf0c1af69",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d35c0a-3ea3-4faf-a3db-9f0986cbd5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169ae6f3-4676-41d2-90e4-864d7b1447a0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3da34fe-4515-40eb-80cc-d2d64ca366d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42d4ca1-915a-434e-9b26-8bb84fb4997c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acfe423-09a2-4c31-8b89-5ee2bf9bcdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2deac25d-21d8-4d8c-80cb-c7791f6cc023"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af9be3d3-dd85-43d5-8337-1119ade5b073",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5305f633-4965-427c-abda-321a5eef8d3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "277d5b6a-cccf-4b44-a33f-62595b2ec28a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a59d294-58be-4794-8694-ccfd5084d938"
                    }
                  }
                ]
              },
              {
                "id": "568b8996-1772-409e-9795-4c015232276a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c11fa1b6-f5e8-44f4-a74f-2a96b68c57bf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78bf67f-9e70-41c2-b2e0-8ee1128b9d77",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1ceb11f7-0364-4b5c-8001-c1929845b66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1c1ce3-0097-47c8-a21d-110458c6cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6609521-1de8-4734-82ee-d24fb77a0175"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5e842c-8d41-4d04-9579-77c15f3ad887",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a9b275b-985e-4194-b339-2b9ab61d2d39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07f4010d-591a-4e3e-bb20-3e889594a963",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7269f949-8cb6-4e37-a84b-2d2b034bde02"
                    }
                  }
                ]
              },
              {
                "id": "860ecf5b-2648-4107-affa-9301896c3829",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7f9bb22f-2b6c-4fde-9dc8-792aea310ff5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8224286c-9c96-4123-9f94-9f29ff7bbe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a3457a19-4cab-4f77-a974-0eeff981869d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33e6d92-ba93-41d1-b4e4-d0036e77d3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573ced1a-2b2a-4ecf-ad8a-0bda16ed7a69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e433f8c-f64f-4b88-a427-8f91485b6e6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07620f37-bc32-4933-84f2-2fd2b1cd4926",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80328455-11cf-499e-989f-cbb04ce0e1a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a00fa4ed-5673-43d9-ac84-78aa78c1d60b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bae1a0f-e6b5-4099-abdc-4a030b66af12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26e74851-87df-4dfe-afde-ac618da09b04"
                    }
                  }
                ]
              },
              {
                "id": "dac96692-92c5-4c93-b705-869e6842ef69",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "146f1622-5b8d-4508-93e8-bd500ff578b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0299dfb8-b2db-471d-8b2b-431280d9e19e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba71dbdc-a0bf-4bb5-97da-0313da848df3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6adde64-4cf9-487c-a178-37ee9ec90ae5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2437da87-3444-4b0e-833c-7618acd98a3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b4d5cd5d-0b44-423a-ba64-b94480e6e9a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a25b45b7-90d2-4636-861b-efa47ac31b76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a91caa50-c145-435a-af7e-14a1a08c3b66"
            }
          }
        ]
      },
      {
        "id": "cad82089-c0e7-444f-b93e-d6636f58019b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "44f5b0c4-6167-4b3c-a708-17b0f903633d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df5a3abc-b135-4492-9870-9deaa55605b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5269fdb4-7463-49e3-967a-fc8da65736bd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81715b99-8bae-4f9c-b2ba-ba85e33e7e3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "68f8a274-6074-4170-954b-eff9c9c2b410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fdcf50-ad21-40bb-97be-69e2a1f3d24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "351e8dba-43d1-4e6d-ab78-1d76c4e7eb25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87328956-5486-43b0-aa8d-28867e1e4ca9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a63f9c3f-cece-455c-993a-0aa9350b7aa5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3bedc46-0e24-4652-8e54-f7255ce740d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc6d690-73b8-4818-a1df-e968dcb4516f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fbd0207-e2db-46af-9d79-9b5ca67251fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "83c1442e-0981-42ec-a32a-f2c936639d12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d9fa737-2703-443c-a985-d10d68136487",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e8775b2-24d6-483b-80ff-209a63034e86"
            }
          }
        ]
      },
      {
        "id": "49ae7e93-5450-43c1-afd7-d2b09f18bbe8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "96d96fa9-4559-4899-8573-5305c9d8c3b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3835cda3-6f6e-4f50-becd-f7282a4b621e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8f1a431-1513-432b-92f6-ceb6d7f0b514",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30caa74-c4cb-46d2-a7bb-375579e06525",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33a85b4c-8b37-4a0c-8671-86a9c794d13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb67bdd5-90ae-46d6-b986-2f407817af54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e0ac8b2-fc4c-4ba1-a950-96b2b727b9f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40f0d304-ab55-4b1c-8e4a-9c4142e45208",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57917eb9-1a6b-46b6-beb4-444000db6af7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "316fde6b-ab15-4e58-8d44-716f69538b88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5371489-36ef-4a1e-b030-07370d4bdf96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04ba22b8-f942-47f0-8fcd-28cfcdae7760",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07c9e3c3-39d9-4b65-b4b9-67d6ceb335e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e94d0dec-240e-497d-8f3d-c56e096f33d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7f937c7-747c-4dc9-aba6-1c6b9b138c0b"
            }
          }
        ]
      },
      {
        "id": "8dd3a476-b8f1-42fb-bf2f-6deb5819520e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ece23a13-f707-4b92-a121-070c5901e31b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "141e1071-d2cd-4955-9ad1-48a4d53c7104",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5486e71e-0858-4b40-b5d3-393aaa777952",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f195874-c21d-4d4a-b395-16a49d984dc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3f087b2-add0-4005-b52f-815b2aa5bffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adcce61-b438-42ec-ad30-c2fbe890aeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dee3113-33c0-45be-a537-c6d11cbf810a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00f03d4c-8952-4ab3-b5fa-fce57f1a7f5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1aa850e9-06ba-4918-8f18-370ccb56ebcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4838f389-cd3b-490d-a78b-46fd10dab8ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95a48710-cac6-407e-9eac-07c2cc0e224d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "198e8884-7dbc-4b01-8866-e9858fa8dbbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b09ff40e-bfe9-4e9e-9646-08950a8fcda1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c97a7871-3ec2-4f1c-87b7-288be7238568",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c704c48-eb8f-4e0e-9a6d-2925156df90c"
            }
          }
        ]
      },
      {
        "id": "7425c28c-6a13-4ad7-abbc-fdd59d5e479f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33c8d98f-a3a3-437a-b375-0dbdc2f51850",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f15fb06-21a2-4106-baf7-ea97b6f967bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e9fc1465-0f89-4954-a513-a29dda48bfee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cb9a630-5a0f-420e-a467-6bb28d584d98",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05aba3bb-1976-463b-bec9-acd3c9413d3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 53.189473684210526,
      "responseMin": 19,
      "responseMax": 296,
      "responseSd": 23.482563028546487,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701736590046,
      "completed": 1701736614279
    },
    "executions": [
      {
        "id": "e2284b04-f931-4e70-9967-acfffbab4061",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fe45a99d-35a5-4360-be3a-5543add2d613",
          "httpRequestId": "fc17cb6c-04ca-41d7-83fb-2b4711dca470"
        },
        "item": {
          "id": "e2284b04-f931-4e70-9967-acfffbab4061",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2826cd76-b1a5-4e49-b648-0bb345ddfabc",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "e42d3ab4-df00-48c7-925e-5975fe13d99d",
        "cursor": {
          "ref": "08b7a82a-32ee-43f3-91f6-3ce7d7d95b37",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8a312e0b-177e-4c86-8b66-487c8ca6f581"
        },
        "item": {
          "id": "e42d3ab4-df00-48c7-925e-5975fe13d99d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ac241e1b-d647-4de1-9480-5d46adfeb9f4",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "27f8fecb-4325-4712-b9ad-f71fdeec2a32",
        "cursor": {
          "ref": "4fd354cc-61c2-42a9-979a-d9b9aa5fe966",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f3e0e186-7813-4304-be7b-e260c868927d"
        },
        "item": {
          "id": "27f8fecb-4325-4712-b9ad-f71fdeec2a32",
          "name": "did_json"
        },
        "response": {
          "id": "41df75a6-86d1-45b1-9aa0-e080f80e8617",
          "status": "OK",
          "code": 200,
          "responseTime": 296,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b570d992-2338-48be-9086-d2e149a5d9c3",
        "cursor": {
          "ref": "be1acc08-3ae5-4d95-89a5-f0a6c739bf33",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23f30e88-b863-4f52-8183-b2f022cc9a07"
        },
        "item": {
          "id": "b570d992-2338-48be-9086-d2e149a5d9c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "57788124-f9a3-4ba7-81b0-944cb0d7c924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b570d992-2338-48be-9086-d2e149a5d9c3",
        "cursor": {
          "ref": "be1acc08-3ae5-4d95-89a5-f0a6c739bf33",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23f30e88-b863-4f52-8183-b2f022cc9a07"
        },
        "item": {
          "id": "b570d992-2338-48be-9086-d2e149a5d9c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "57788124-f9a3-4ba7-81b0-944cb0d7c924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795e401c-e473-45dd-9538-9f7d2e42fc90",
        "cursor": {
          "ref": "fde270c5-bea8-4b18-a84b-ec1ddd979ba9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e9745a6-43a8-488e-983a-34b798262a8b"
        },
        "item": {
          "id": "795e401c-e473-45dd-9538-9f7d2e42fc90",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ac1c2950-2326-4af8-a0d3-e538ea4b8181",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aaecd2-5c5d-4e69-b863-7b46c514c00b",
        "cursor": {
          "ref": "62b11d51-7f87-4143-acb1-4604552d0e14",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "55361efe-ce33-4510-9cb0-9f78828bc826"
        },
        "item": {
          "id": "e3aaecd2-5c5d-4e69-b863-7b46c514c00b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c5330695-3848-44ab-9099-132f68dc4f42",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef3add8-d9ca-44af-ac54-41c1cb46fc8d",
        "cursor": {
          "ref": "d91cb0d2-c6ee-4157-9caf-0224bc358e05",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ea751fe5-0554-4108-9529-9726350c03b8"
        },
        "item": {
          "id": "cef3add8-d9ca-44af-ac54-41c1cb46fc8d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cf561edc-2a80-4c53-b695-0689e6d906fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69539320-4d3b-4b2e-bbbe-b434d70f50d2",
        "cursor": {
          "ref": "eedd88d0-2774-47db-8589-df3b3958d941",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1340e3d9-ce64-437d-8344-d45a9da1f120"
        },
        "item": {
          "id": "69539320-4d3b-4b2e-bbbe-b434d70f50d2",
          "name": "identifiers"
        },
        "response": {
          "id": "be8b290a-341e-40d3-9352-568e071142d2",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508f157d-3b3a-4dc0-9433-d2035f8d6ee6",
        "cursor": {
          "ref": "d53d4bc1-c7ae-44ff-ba90-6b0a96d6c7cf",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c92c624e-96c0-49c1-8af3-15a54d0a2371"
        },
        "item": {
          "id": "508f157d-3b3a-4dc0-9433-d2035f8d6ee6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2caba4b3-650b-409d-bb61-b4628aae08f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cf4ee8-e460-431c-bcca-e170d1776382",
        "cursor": {
          "ref": "7eb644e2-bd84-4777-8645-444739ee1b0d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bf545526-4a0f-4412-a78e-f3d78791dc1c"
        },
        "item": {
          "id": "a0cf4ee8-e460-431c-bcca-e170d1776382",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ff266f6b-abda-4762-be26-8e522e11f5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41218665-e532-4d21-88fb-3d265c950c71",
        "cursor": {
          "ref": "ae750eae-2307-4353-8d05-db8581f68160",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a7a04784-6411-4dc4-a935-3583cdcfa9bf"
        },
        "item": {
          "id": "41218665-e532-4d21-88fb-3d265c950c71",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0634d2fb-7bf7-4627-a5fe-5cf914e14140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a2bd82-3ba6-4da5-aa75-9968c1071b11",
        "cursor": {
          "ref": "ea7a758f-67b3-45f7-89db-36e6414b6cd9",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1dad51dd-4fe4-4e0c-8d23-3a10d0f70549"
        },
        "item": {
          "id": "91a2bd82-3ba6-4da5-aa75-9968c1071b11",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f082d383-c9d9-4d47-bc23-948b0738bb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f1f37f-8d32-450b-ba13-1ed5d65e783f",
        "cursor": {
          "ref": "b810dcfa-0359-403f-b0e9-83c47f9a2dfa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b1c0ca61-2d19-43be-bf07-4f1e6449dce1"
        },
        "item": {
          "id": "33f1f37f-8d32-450b-ba13-1ed5d65e783f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a8c2cf41-ef33-48b3-81f8-561ba93c86b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840cbbc9-d85c-4535-9697-b1be5fd9f62c",
        "cursor": {
          "ref": "23458230-9adb-4117-a0b4-8075844159d2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "099cf17f-5b9c-4847-8d75-77116d6867c9"
        },
        "item": {
          "id": "840cbbc9-d85c-4535-9697-b1be5fd9f62c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fc073bef-dc8e-4282-ad1d-598097c3f24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1058968-d01f-4a2e-959f-651ddb81da9c",
        "cursor": {
          "ref": "e2fe3c1c-6e9f-467a-9a55-19326e3e53fa",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "438cea4b-535e-4923-804e-f4b5b9f12d11"
        },
        "item": {
          "id": "c1058968-d01f-4a2e-959f-651ddb81da9c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "86168a37-903d-4bb5-ab88-cdb20a745e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2acb1c8-2b39-422f-81fb-a2838eccd7f7",
        "cursor": {
          "ref": "7d312f34-44cf-4029-9c75-247047e72630",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e573320-037e-43ed-9f3c-96fc66cd9c25"
        },
        "item": {
          "id": "c2acb1c8-2b39-422f-81fb-a2838eccd7f7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d615b71c-e89a-4515-bca8-7c87bc3c99f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df00b6b-61ab-4723-a14b-ff631874a20b",
        "cursor": {
          "ref": "640f02aa-708c-4a86-858d-6dfd74ef4206",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb06e3a3-c6e1-4b2b-b818-afb9aba0168c"
        },
        "item": {
          "id": "6df00b6b-61ab-4723-a14b-ff631874a20b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "76f83ab4-46ae-45b4-9116-3920d9eb026c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd00fc5f-df67-4330-8ab1-83ff495a7f33",
        "cursor": {
          "ref": "7d00d8e7-ad78-4ed4-a363-23ebb84a43c4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5e6e834f-5179-4935-8b23-f6e66b3718c2"
        },
        "item": {
          "id": "bd00fc5f-df67-4330-8ab1-83ff495a7f33",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "334390d7-ceff-49fd-9d40-46605ef5092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fea1fc-1441-4631-9639-e89e370d4256",
        "cursor": {
          "ref": "48b392c6-54d8-4e96-b92e-33425320471f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f5caaf12-a7f2-4052-aee2-9d8b4fc86e6c"
        },
        "item": {
          "id": "22fea1fc-1441-4631-9639-e89e370d4256",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5c0cb71f-8065-450b-ad37-7f7493e1cd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7247fb89-7d0c-4e59-becb-19503618ebda",
        "cursor": {
          "ref": "d400d50a-6f0d-42ac-865e-6fe16b4eb63c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0bfe697b-7a3a-4ab3-896f-e5e08c3d76db"
        },
        "item": {
          "id": "7247fb89-7d0c-4e59-becb-19503618ebda",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2089335c-0eba-4203-a28c-76f28522d511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8969fb4f-aa34-4b42-a7bb-a7a120c8ebac",
        "cursor": {
          "ref": "c83479ca-eadb-4d8b-be5d-6d5a2e5eb414",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "598621b4-d833-4785-9fa3-70390ef6cded"
        },
        "item": {
          "id": "8969fb4f-aa34-4b42-a7bb-a7a120c8ebac",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e02de42c-a155-406e-928d-f9658033bf12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f95251a-259a-490d-98f3-c5374185584d",
        "cursor": {
          "ref": "cf90dd05-3653-4149-a2b6-e7676c6611cc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0fde3ea7-227f-4aaf-b27f-87bb122a2221"
        },
        "item": {
          "id": "2f95251a-259a-490d-98f3-c5374185584d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ef27aa07-2223-426c-8875-d44b3a6aff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9606881-d882-4317-8407-16c6975243c7",
        "cursor": {
          "ref": "6b332f54-27b9-4a99-9167-c933859201e9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cff2a7d9-47ac-4459-9e23-38ba6564e32f"
        },
        "item": {
          "id": "a9606881-d882-4317-8407-16c6975243c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ff0b31d1-a39d-46c4-ae8a-51443c5683cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baca4ad7-0b31-484f-babf-9190cac0c825",
        "cursor": {
          "ref": "d1c7c8db-accd-4818-a2d0-5f6a9ac84b4e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d9e11c9a-8d1a-4720-bf7d-1d1f8ccfcf40"
        },
        "item": {
          "id": "baca4ad7-0b31-484f-babf-9190cac0c825",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "67ccd4f0-0212-4f58-b39e-2ccb7a30ab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b58ce89-2378-40f3-a3ee-8fc0ca21a648",
        "cursor": {
          "ref": "1df2c9ce-b20f-4f4f-997a-1a075da4b948",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bd629ca1-26af-4dfc-bdcb-f348c61ed145"
        },
        "item": {
          "id": "5b58ce89-2378-40f3-a3ee-8fc0ca21a648",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "997b2bcc-e0cf-4c11-89eb-28f14eebf4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1ae222-159a-4423-a24b-c9b28d089ed6",
        "cursor": {
          "ref": "93de6396-605d-4a31-8402-da42bcc3cac3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "be1fbf11-8e48-4456-856e-f29d285275f9"
        },
        "item": {
          "id": "fc1ae222-159a-4423-a24b-c9b28d089ed6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "79c41571-3e5f-45be-b9d2-2e7562a61a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c3f6c0-140a-4bf3-aeb0-96b6eae75e94",
        "cursor": {
          "ref": "29e311b6-2ba1-4cf5-a99b-348153772e08",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c744bc84-3e5c-4949-9d31-68957b1363b7"
        },
        "item": {
          "id": "88c3f6c0-140a-4bf3-aeb0-96b6eae75e94",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0df655a6-1e25-4da8-9b91-3a86310e9bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5fb19e-6e78-4c22-a0f4-66f1919e5668",
        "cursor": {
          "ref": "07aa78df-b514-4de8-b78e-b801e9e8310e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c2348bc1-d98b-4281-9989-769315e62ce3"
        },
        "item": {
          "id": "3b5fb19e-6e78-4c22-a0f4-66f1919e5668",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "88ee33e1-fc22-4c00-a04b-11e411733146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f74cd8e-a360-4d1d-9dd1-f62411cce6f3",
        "cursor": {
          "ref": "25dbc6db-fa19-47b1-bf79-cd2c35dc8b4a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82a6cd15-f19e-415d-9a1f-45adb0ccebf5"
        },
        "item": {
          "id": "7f74cd8e-a360-4d1d-9dd1-f62411cce6f3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d62eac6b-c08e-4ed4-9133-43493f8a61e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee55b4ce-061e-4906-99ee-761af8120614",
        "cursor": {
          "ref": "2b886d69-a919-4985-9a2f-84f9f61bc502",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "292dda0a-c768-4cb0-86b9-b314ff4ba964"
        },
        "item": {
          "id": "ee55b4ce-061e-4906-99ee-761af8120614",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "01e57bd6-2f01-42b4-932b-34acebd02485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06ad56d-b07c-4733-bd2e-bf2d0d219a2f",
        "cursor": {
          "ref": "8e428ac6-8f3b-4df6-8791-dc7e9bcbb6b0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "df345d6e-7948-46f4-bea3-6747c940c865"
        },
        "item": {
          "id": "c06ad56d-b07c-4733-bd2e-bf2d0d219a2f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "799a0421-c54d-4323-a0a4-7ab1a7915781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781aca04-fd3a-49f0-b04c-b580aa2bcda3",
        "cursor": {
          "ref": "f844f938-9ad4-4b99-b258-060f64e391cb",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8680fe0d-db03-4de8-987f-9405ee77a012"
        },
        "item": {
          "id": "781aca04-fd3a-49f0-b04c-b580aa2bcda3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1573db2c-16d3-4cc6-8c2e-213b79255277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574e156e-34d1-4cf9-9619-6043a625c09b",
        "cursor": {
          "ref": "11ad781e-ae2d-4fcf-a082-48fec6aa55cf",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "13f9f09c-7b29-4759-a9a1-76cefcb461e3"
        },
        "item": {
          "id": "574e156e-34d1-4cf9-9619-6043a625c09b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "888e2744-d8bf-429d-8fde-f113b4e0d11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a27b28a-d5a4-44b0-8a87-78f1c2fd0d3d",
        "cursor": {
          "ref": "f429629c-54c0-44f4-bbc6-31aecd870cb3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "daf6058b-46ca-40a6-8adc-0b712ee53e3f"
        },
        "item": {
          "id": "9a27b28a-d5a4-44b0-8a87-78f1c2fd0d3d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7fdb8b66-3848-46e5-8b8c-4fa8abb63a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530cf44e-b9e5-48ea-b162-38c890b1395a",
        "cursor": {
          "ref": "3d5c5581-8e0d-4932-9286-c83bee022ee2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b2402dad-d09c-4402-9d9f-cbc14911d3dc"
        },
        "item": {
          "id": "530cf44e-b9e5-48ea-b162-38c890b1395a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3a56c403-6dc9-4315-b651-bf5f84c5a53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fcd9ff-cb44-4f1f-8116-086f97a46b89",
        "cursor": {
          "ref": "ae6f2ff2-9cbd-4a3c-96bd-4d6845f84f20",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "64de8278-b61a-4058-8886-ab3e2feba480"
        },
        "item": {
          "id": "25fcd9ff-cb44-4f1f-8116-086f97a46b89",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0037805e-f1ff-47cb-9bb5-5b9bae06db8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7b36b1-41de-4484-a104-5d2ae752da27",
        "cursor": {
          "ref": "2ded3949-2ded-4f4c-ab8d-4054240e6e5e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "056d6520-fb1f-4224-b05d-ba1f99f00a04"
        },
        "item": {
          "id": "db7b36b1-41de-4484-a104-5d2ae752da27",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "72a8b803-2a12-4645-9357-4b809923819c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75d69db-caa6-46c9-be9c-8b7688498c03",
        "cursor": {
          "ref": "4c04ff62-a8ca-4920-9302-56b8b317570d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0e6c1091-6822-426d-9caf-81337ce9190e"
        },
        "item": {
          "id": "b75d69db-caa6-46c9-be9c-8b7688498c03",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "23ea243e-9262-46c8-8d09-774a57b11397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2183d23-48c4-480d-be92-8acffe1f9ad8",
        "cursor": {
          "ref": "250edd31-b903-48d8-882b-a3dd2e5401ba",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e91f155c-63e4-47b6-bbe3-4efc52ac32f4"
        },
        "item": {
          "id": "a2183d23-48c4-480d-be92-8acffe1f9ad8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e269b6d7-9839-4979-bbbf-35e7ffe74d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b392a7-20d5-4242-a514-a31513302ade",
        "cursor": {
          "ref": "81985e42-815b-48d4-a670-7b1e9bc5cea1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dd851e53-6fbf-4d63-829b-b41366d751e8"
        },
        "item": {
          "id": "88b392a7-20d5-4242-a514-a31513302ade",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "52a36b59-9999-4eb8-9337-d6fd27899b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ada144-fb1c-49df-bc20-691b94fc1c33",
        "cursor": {
          "ref": "915657e8-5d42-4373-8abb-ce7cc67a8485",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ff747411-9600-4a58-a0f0-3ab984f82498"
        },
        "item": {
          "id": "54ada144-fb1c-49df-bc20-691b94fc1c33",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "09df034f-fd09-410a-841d-55373d14975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdaa351-7991-4031-ae57-89f1c9439b0e",
        "cursor": {
          "ref": "f1f3458f-d9b2-43ee-9baf-4289091720b0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9499a7b1-47a2-4be4-897f-bdbcb7da4242"
        },
        "item": {
          "id": "ebdaa351-7991-4031-ae57-89f1c9439b0e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ce9c50e2-1fff-491f-8e04-d34436e66a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4421f770-1a62-4d95-b1c4-293c1bc2b198",
        "cursor": {
          "ref": "274acbe9-56a9-407c-921f-faf457129b66",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6c334196-0c03-4e12-8018-9fa13b57c2d3"
        },
        "item": {
          "id": "4421f770-1a62-4d95-b1c4-293c1bc2b198",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e0d021a4-321b-4947-b43e-d1d7044706c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29965fca-f67e-4a08-bdbd-8d23e91db9ac",
        "cursor": {
          "ref": "a7d88937-e4cc-4a06-8b81-98d91e6252a6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "94915271-8d4e-426c-b794-6bc29e13e036"
        },
        "item": {
          "id": "29965fca-f67e-4a08-bdbd-8d23e91db9ac",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "66fa5c7d-c187-4383-833a-890db70dd5db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aeb8d1-ea83-49b2-9fbb-48b31af0eabd",
        "cursor": {
          "ref": "4c570cef-293a-4de1-82c2-2f6b9407b366",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "76fdc139-b2f6-4d22-a854-85e947d3e908"
        },
        "item": {
          "id": "71aeb8d1-ea83-49b2-9fbb-48b31af0eabd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cc271958-4de5-4b51-9569-ac5f58a42aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c03de9-f505-45ae-ae6d-23f1282db8be",
        "cursor": {
          "ref": "0e5b74c4-5338-4931-a1cb-2dff5461d09a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0074a41e-d847-411f-9e63-67bdf8e9584c"
        },
        "item": {
          "id": "b3c03de9-f505-45ae-ae6d-23f1282db8be",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "45bc77a1-6697-40f6-a1aa-020549c8c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cba14f-e40a-4dad-862f-87d42234df73",
        "cursor": {
          "ref": "cb0d5e4a-d431-46dc-abe2-102de727682a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5cf06767-67e0-4fcf-8c41-5de7d7b0b889"
        },
        "item": {
          "id": "52cba14f-e40a-4dad-862f-87d42234df73",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bba69ecb-e876-4619-9ccc-3aaf050995dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6a138b-6fa9-4f0e-80d2-40099403ec98",
        "cursor": {
          "ref": "a92432eb-0c7d-4205-96dd-32765c092428",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6758a72e-68a8-48bc-86bb-c55ea008301f"
        },
        "item": {
          "id": "dc6a138b-6fa9-4f0e-80d2-40099403ec98",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e124df43-c9db-4c3c-8e07-069e885a45b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dad5046-efdd-40df-b1a2-b40fcd4767ab",
        "cursor": {
          "ref": "10cc56cb-0b2d-4a2c-a246-3f54e75e4a9f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9b26ebcf-f482-4162-a7d1-793afd5b83a7"
        },
        "item": {
          "id": "8dad5046-efdd-40df-b1a2-b40fcd4767ab",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cf6d75b0-7075-4155-b472-61db5ca6b045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de7463d-b179-4a3b-9281-f27c24a467d3",
        "cursor": {
          "ref": "e7600e61-560e-49ec-9539-ae25479c97ba",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3b9e28eb-05ee-49d7-b08b-7541c71488ba"
        },
        "item": {
          "id": "8de7463d-b179-4a3b-9281-f27c24a467d3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "06dd00cc-49cf-4635-aea5-004ab2c1635d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c9a627-f766-40eb-8b0f-e87568866bc1",
        "cursor": {
          "ref": "7ea33cfd-3bcc-4722-b980-c3456568df21",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d04b9c79-af58-455f-8cc7-bc7c3cb7d9ca"
        },
        "item": {
          "id": "67c9a627-f766-40eb-8b0f-e87568866bc1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f3b82b43-5b49-4429-b999-a575d0d8c14d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90de00b4-fb16-4e48-b34e-3a417f4de537",
        "cursor": {
          "ref": "de98e1e9-01b6-41cb-a526-630e44df83fe",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "04c385d3-3952-424d-bcd8-74f238799188"
        },
        "item": {
          "id": "90de00b4-fb16-4e48-b34e-3a417f4de537",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4dee2034-d71a-40f6-932d-404361c58aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56415897-a376-491b-aa01-0432d478fdfb",
        "cursor": {
          "ref": "063db5e0-55b5-44f1-b79b-69e35301f9c3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d49e9473-619f-4ea7-8973-192ede3b1dac"
        },
        "item": {
          "id": "56415897-a376-491b-aa01-0432d478fdfb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b3cf7d50-99c6-4749-9938-cbee58be2bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d069a5-67ee-4e77-96a9-90403b5f624b",
        "cursor": {
          "ref": "b2745011-1492-4cfc-ba10-8639d3efcf47",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c7f87ab3-3212-4e4d-9cb7-54698fe0f218"
        },
        "item": {
          "id": "09d069a5-67ee-4e77-96a9-90403b5f624b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c485ed91-b711-4219-bb9f-61f0d4e5bb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a459f960-5187-40be-940b-34410966e5d5",
        "cursor": {
          "ref": "7cae9d53-7676-4dc1-9000-1286a0409706",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3a5159ad-70ed-420b-9757-dae5c8250c98"
        },
        "item": {
          "id": "a459f960-5187-40be-940b-34410966e5d5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c7b86c29-1e8d-4ba8-8113-5b42361fc0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964e1f23-7614-480a-9564-9fd8a32360db",
        "cursor": {
          "ref": "99385f1d-d494-47af-9f93-31238d159bc2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "039450b4-7410-4d15-b3e6-5673de1102fc"
        },
        "item": {
          "id": "964e1f23-7614-480a-9564-9fd8a32360db",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "79540249-3ec2-45ef-85b5-1fad46bc6531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914f834a-b4bb-4c60-b65c-f8bbba5486c2",
        "cursor": {
          "ref": "512be836-4f8a-4476-a351-1e73edef684c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "45204f67-e68b-493c-bce1-b1ad9f248156"
        },
        "item": {
          "id": "914f834a-b4bb-4c60-b65c-f8bbba5486c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "00485b9a-b7db-45bc-ae6a-d2599d887de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0434054f-a57e-4e09-a47b-7e51f06b836b",
        "cursor": {
          "ref": "f858157a-38f8-4980-8cfd-c7eaf26ae651",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "84f395d2-6343-4f29-9602-f4a93404db1e"
        },
        "item": {
          "id": "0434054f-a57e-4e09-a47b-7e51f06b836b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "90ef9d42-7677-4ffb-8d63-7caa8aa764e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f921ee3-f37f-45dc-b90e-476422362047",
        "cursor": {
          "ref": "d7b3ad19-a56a-4045-be9a-938b84fbc8d2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5138d4c2-0876-4692-866b-ebf16c8b3417"
        },
        "item": {
          "id": "4f921ee3-f37f-45dc-b90e-476422362047",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "59cdbd1f-90a7-4662-91fc-441b2c5f8e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccb2773-f045-472e-94ae-67bed8689e97",
        "cursor": {
          "ref": "66be0896-167a-415a-b958-15e2b1e62165",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9a82d8df-793a-4ee3-b363-937a3d2bf299"
        },
        "item": {
          "id": "2ccb2773-f045-472e-94ae-67bed8689e97",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cdb89eed-dc15-4a0c-84b5-9d2dd1d23c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93625225-c657-4e9e-8f42-80f2f2664b1e",
        "cursor": {
          "ref": "21813307-c110-4356-bd74-895c4c132e27",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "10512582-5ad4-4956-bb1a-494233281a1f"
        },
        "item": {
          "id": "93625225-c657-4e9e-8f42-80f2f2664b1e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "75dc5674-bdf2-4284-99f4-4b7e82c3ca19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cfe732-a7b0-413e-ae54-25662070cb03",
        "cursor": {
          "ref": "15f6dc02-164f-47ee-a168-0cc828cf3e2d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bdddf37f-6a87-423e-9314-8bb32ae3a0ae"
        },
        "item": {
          "id": "45cfe732-a7b0-413e-ae54-25662070cb03",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b24ad9e5-a516-4c6d-8e65-29b02bb3428c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9b4aa9-c4ee-4a85-8d59-74cf0823f6d2",
        "cursor": {
          "ref": "4d10e6a6-d9ca-41c9-bc3e-f32352290bbb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "baf635ae-5ee4-4cc0-a517-ec27d896457e"
        },
        "item": {
          "id": "bd9b4aa9-c4ee-4a85-8d59-74cf0823f6d2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "386d3bea-a717-452e-8580-ae374b930e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3901c4f6-a575-46f8-90d7-7b4a8bcc6402",
        "cursor": {
          "ref": "29de43bf-a15c-48d6-92fd-1a399b8deaac",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "aa55dea6-d164-46e1-9e27-e79170d6bc7e"
        },
        "item": {
          "id": "3901c4f6-a575-46f8-90d7-7b4a8bcc6402",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "28408dd3-7b15-4fc9-bb88-ec136fc109a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c298dd-6761-4f8c-b791-9e4ca9f18687",
        "cursor": {
          "ref": "b3fd7636-cb6b-4cb8-af7f-1367132cddc4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8716ae22-ac87-420e-b6a9-daf1082b7771"
        },
        "item": {
          "id": "06c298dd-6761-4f8c-b791-9e4ca9f18687",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1a030fb7-543b-4e07-aacf-91a5751a2943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89704f3b-3460-4e35-9c9f-9787ae2e457a",
        "cursor": {
          "ref": "11507cfb-9879-40f4-85ef-7d1e940663b5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6185acae-d11c-4aef-adae-6ce0d232ff32"
        },
        "item": {
          "id": "89704f3b-3460-4e35-9c9f-9787ae2e457a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "08d3d11e-9c0a-45b0-90db-a4cd965129b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc58b608-98a3-4da9-8c5e-fce2a240eb8c",
        "cursor": {
          "ref": "2df7e816-c115-4a3a-a53e-e6cb4327911e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6dc0e957-a2bd-43d8-83ce-1dee3f724211"
        },
        "item": {
          "id": "bc58b608-98a3-4da9-8c5e-fce2a240eb8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dad5aedd-a7e0-461d-85fc-667918ea30c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a339ad-9331-406d-b13d-61787a304e27",
        "cursor": {
          "ref": "28a2f1af-c9f0-42fd-8d4e-3676192052d2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b89f92e3-4d03-456b-8780-208a257b6eb6"
        },
        "item": {
          "id": "89a339ad-9331-406d-b13d-61787a304e27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "018b8a82-2705-4191-a19d-64506c870eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987393c6-fda0-4597-8ada-72859afbe17c",
        "cursor": {
          "ref": "e257f35f-2654-47e8-8367-eb67d18e1fa2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f76a374-f73d-4654-bddc-751dc2e9ac86"
        },
        "item": {
          "id": "987393c6-fda0-4597-8ada-72859afbe17c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9ec80a40-13af-4fe8-be34-eb3a5ea3d43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c97976-e9fa-4fdd-b341-80882c455a1f",
        "cursor": {
          "ref": "bb050c53-a0f7-4728-8677-f1a1b350e14c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b4166ae7-ff21-44f8-8f5f-b044e1e2cb43"
        },
        "item": {
          "id": "50c97976-e9fa-4fdd-b341-80882c455a1f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "732e0c11-8d11-45af-be59-35b86527bc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bac0b1b-ea69-40ad-a159-a3da30714ba0",
        "cursor": {
          "ref": "ce9d4aa9-f142-4932-8b81-7942739d87c7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1a0e3be8-7602-488a-81df-89dae37933cc"
        },
        "item": {
          "id": "1bac0b1b-ea69-40ad-a159-a3da30714ba0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "da7c9964-e97e-42c7-a16d-c01a2a9b043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5043b4b-cc3c-467f-8b46-7eb4ac44b27d",
        "cursor": {
          "ref": "56a483be-b232-428d-891c-ddf46be7cd7b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "906621b9-a3f2-4a20-8ee4-86d54c1f2d7e"
        },
        "item": {
          "id": "e5043b4b-cc3c-467f-8b46-7eb4ac44b27d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "da355c61-a98c-46f9-b5f1-b53ac14a025f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fee2b34-0a1a-4cb7-98b8-8cd6f5cafec6",
        "cursor": {
          "ref": "275e94d5-fc72-4122-90a8-ac1fb9a0cee5",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3c0f119a-514c-458b-9c0b-27d02816dd5c"
        },
        "item": {
          "id": "3fee2b34-0a1a-4cb7-98b8-8cd6f5cafec6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "62f57a46-9a34-4aaa-859d-c13ade9dab78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650c1579-7661-4b46-aa15-8a020391d8f9",
        "cursor": {
          "ref": "4b0647a6-b252-445c-a9d8-5cf6d9037bed",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c342dbb3-9eff-4a5f-960a-e2343258ed0e"
        },
        "item": {
          "id": "650c1579-7661-4b46-aa15-8a020391d8f9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb5b3e4d-30bd-4554-9bf5-614eaee42daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c1fb1f-e815-44bd-ad39-67071948c075",
        "cursor": {
          "ref": "e2366bd8-662a-40cb-bfa5-b55a5c839bb1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0c21b96e-4ce4-407e-9b08-542357943f95"
        },
        "item": {
          "id": "e1c1fb1f-e815-44bd-ad39-67071948c075",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "61c0a154-da68-4c27-a3cb-4f869cba1a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f769f2f9-92ab-4283-bd6c-c5d97f122d45",
        "cursor": {
          "ref": "c075d82c-18aa-4dbc-94ae-93f9315c44da",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fb999624-29cd-4124-bb0f-55730c2cffa1"
        },
        "item": {
          "id": "f769f2f9-92ab-4283-bd6c-c5d97f122d45",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4a12c268-be96-4293-8ea2-af366e8e8bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efd99b1-1c78-48b7-8814-7202fefbfbe8",
        "cursor": {
          "ref": "6b8fc3dd-74d0-4efc-8a82-c2bcc22be6b0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b595c083-44b8-407c-920d-43cafbea4044"
        },
        "item": {
          "id": "4efd99b1-1c78-48b7-8814-7202fefbfbe8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5a98bd68-9891-4cb8-8898-20db2d62e090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a738936-1f2a-430f-bcf3-6ac6216dec39",
        "cursor": {
          "ref": "dff2d41c-11c4-47d8-9a5e-8b11a5afd9fe",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e60f6711-9b76-4409-8394-c2c4af4b0353"
        },
        "item": {
          "id": "3a738936-1f2a-430f-bcf3-6ac6216dec39",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f292474b-cf56-4934-bb78-e6bfc1451d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13d771a-7bb2-4d9a-ad90-548528ccdd34",
        "cursor": {
          "ref": "5463d24c-0048-4278-8bde-9bf0be2c8e20",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c7b449de-2118-4e84-917b-01eeaca09c20"
        },
        "item": {
          "id": "e13d771a-7bb2-4d9a-ad90-548528ccdd34",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a7909519-5ee0-4cc3-8f66-87e40b897ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccb40f6-68d5-47c1-921f-fc6229360d4b",
        "cursor": {
          "ref": "9cc46880-c435-4334-ae63-7823d3bc3162",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "09e8bb04-ee01-4f4f-978b-938b0f29c772"
        },
        "item": {
          "id": "2ccb40f6-68d5-47c1-921f-fc6229360d4b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "db8150f9-255a-4d6c-9235-0fa338d3d4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b5913f-1ded-4243-8691-4a58b713925c",
        "cursor": {
          "ref": "d37b289f-6dea-49a9-a514-d2c4f5207cf3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "771bdf3a-6778-4c4b-b59a-2ec10258959b"
        },
        "item": {
          "id": "95b5913f-1ded-4243-8691-4a58b713925c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0a7b839e-4ec1-4758-84e6-3b06c750252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e14f4ad-771c-43a8-bd2d-a2c76da33e77",
        "cursor": {
          "ref": "6e625915-3453-4cfc-9a23-9de359e8e387",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fcec9a21-1d20-465c-af03-564011a15a9a"
        },
        "item": {
          "id": "4e14f4ad-771c-43a8-bd2d-a2c76da33e77",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af17ebc0-2681-4ba1-b5be-f984ce8d9086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245d104e-d51e-4ec2-b3e6-c9a1415f0009",
        "cursor": {
          "ref": "ddb2e85b-cc4a-4e54-b4da-0fb58854453d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e703c7a4-29d3-4f11-a124-3fdaa9021dd3"
        },
        "item": {
          "id": "245d104e-d51e-4ec2-b3e6-c9a1415f0009",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fb1aec89-e933-4885-9b11-daf453d3d537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1abb613-7f55-4174-a0d4-028ce344c9d5",
        "cursor": {
          "ref": "6c15623e-64c9-4be1-8d4d-5e046a189d8e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0a530b73-5017-4d59-aa1f-64492f4960de"
        },
        "item": {
          "id": "f1abb613-7f55-4174-a0d4-028ce344c9d5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5e17dd54-3388-4560-aeaa-1d5a91306d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4adf336-5601-41d2-ae9b-1bc046d3cb14",
        "cursor": {
          "ref": "ba5e892f-8d8e-4296-9f49-1763b75c507e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7f0740ef-af12-4332-86d7-f162be055a23"
        },
        "item": {
          "id": "c4adf336-5601-41d2-ae9b-1bc046d3cb14",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1fd830c9-43cc-463e-9eec-2332c9deb510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234dbf70-e0bd-4b09-a117-ea9819a7d69b",
        "cursor": {
          "ref": "c87f8c58-62dd-447a-93bc-db84deb2b351",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "be89306c-652f-4135-a647-1795911ca0dd"
        },
        "item": {
          "id": "234dbf70-e0bd-4b09-a117-ea9819a7d69b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "75c2e5f6-6d32-4218-86cd-3108e5cb6ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396cef90-b327-41ef-8fa1-20b11d603e0e",
        "cursor": {
          "ref": "d1c3c69c-a5ff-4a07-acb6-3e8e02984b80",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6f7978ad-dda3-454f-998f-75c62b156f58"
        },
        "item": {
          "id": "396cef90-b327-41ef-8fa1-20b11d603e0e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6ca17ec7-fdc4-4578-a0cc-1b1d7b41c2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1aa927-6b7b-471a-956d-b2a30eacd92d",
        "cursor": {
          "ref": "041ad06e-b3f3-44e1-8b46-554bff8b8e31",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ce83bb20-40cc-4e0a-befd-7e076b4e151c"
        },
        "item": {
          "id": "df1aa927-6b7b-471a-956d-b2a30eacd92d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b6f61fc6-f161-49ad-ac74-85ef3c8e683d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736685af-6a7b-4336-bee0-a827d4b253ad",
        "cursor": {
          "ref": "5579aa8a-ae12-45ce-ac03-43e567eecc34",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b8d15d7f-9380-4b7a-90ef-094f33d63c1a"
        },
        "item": {
          "id": "736685af-6a7b-4336-bee0-a827d4b253ad",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dd453465-c5ed-4511-b639-c8a4eb1106b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a2e1a2-7163-45aa-806a-c00aad03274a",
        "cursor": {
          "ref": "7251fa35-688e-42f5-a38d-226055dcc07c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4c50149b-5f25-4416-bc98-bcbbe5f78bca"
        },
        "item": {
          "id": "04a2e1a2-7163-45aa-806a-c00aad03274a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "896b8ac1-5687-4e7b-83c9-e76ee3e28600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41ab3ca-a61f-4a6e-bf26-0bdea762df61",
        "cursor": {
          "ref": "c8655e43-e303-420e-8888-1c9e868edac0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f25852d8-1b3a-4857-be09-8423dc2cd90b"
        },
        "item": {
          "id": "a41ab3ca-a61f-4a6e-bf26-0bdea762df61",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e852a1c5-283b-4d68-9578-562f78b48307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b913dc-e61f-48fa-a7d8-404820e1b5b7",
        "cursor": {
          "ref": "0994cd9c-13f4-45ce-8f10-259972904127",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c1c83d6-6d95-4e18-b994-84e94ec1db0e"
        },
        "item": {
          "id": "c8b913dc-e61f-48fa-a7d8-404820e1b5b7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "349a6a5b-0da4-4028-9bf9-e702f5cbb82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b14832d-757f-4084-81ab-93f94c15b1a9",
        "cursor": {
          "ref": "f4d8866d-7246-47ed-b3e5-8f8fb6309d4b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "54557192-6de8-49cd-84ee-6029307c42d6"
        },
        "item": {
          "id": "6b14832d-757f-4084-81ab-93f94c15b1a9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5afcc222-66ab-437b-ad68-fb218e92c4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098b0a79-da48-478e-ad5e-712434591181",
        "cursor": {
          "ref": "e74c4308-7816-4b8d-8620-c06c44fbc5f6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8211a071-1032-4a40-845d-5bf2e3e5ea89"
        },
        "item": {
          "id": "098b0a79-da48-478e-ad5e-712434591181",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b89b061e-b6b5-4431-b156-f553a69be4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a749735c-e6f8-408e-80d5-43f342e7c029",
        "cursor": {
          "ref": "c6c259f7-baaf-42cb-8162-11755b78403e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6a3f0028-63e6-4513-b606-17ff186c6ec3"
        },
        "item": {
          "id": "a749735c-e6f8-408e-80d5-43f342e7c029",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b1981f6d-4daf-4507-9765-2c3238e96150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6a1cb9-14d3-4f7b-83a4-da45bb581ffa",
        "cursor": {
          "ref": "dd6663b1-cc8b-4dd0-b7fc-ddb56a07efca",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8710f8fa-2df6-477c-be1e-63b1a2f9a73b"
        },
        "item": {
          "id": "9f6a1cb9-14d3-4f7b-83a4-da45bb581ffa",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e2115f5c-6b35-439a-a643-b714696b816a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cbeec8-db93-4489-ab65-69744cc33891",
        "cursor": {
          "ref": "f0afe063-0d79-4b6a-9273-5f118c1ec42e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "968afa1a-c713-4e69-8d0d-2f104a56600e"
        },
        "item": {
          "id": "b7cbeec8-db93-4489-ab65-69744cc33891",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "87067237-3883-499b-aeda-1e6c19bad0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e34b8a-378d-4bfe-bf51-c9994d463299",
        "cursor": {
          "ref": "b6350e31-e0a0-4c07-bb5b-6a9cc4147033",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "002a966d-e022-4864-97cf-f0bcf34588d8"
        },
        "item": {
          "id": "f9e34b8a-378d-4bfe-bf51-c9994d463299",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b9da57c1-304a-4645-8884-fb12c64755ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ab82ce-b73b-469e-8d63-b7086988638b",
        "cursor": {
          "ref": "6d1a2c7c-92dc-40b6-aa17-04b89e1ebca0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c9717d36-48a1-434f-a39b-151b67865330"
        },
        "item": {
          "id": "06ab82ce-b73b-469e-8d63-b7086988638b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9bc09ee2-e82f-43c0-b511-1d853b11feb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be4138d-f6b9-4c01-bdf8-7241ef993967",
        "cursor": {
          "ref": "04ec7c28-9fd8-4737-b567-d8bf9c4709ff",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d4e02b1c-7085-469b-a250-0ea0abb5015f"
        },
        "item": {
          "id": "0be4138d-f6b9-4c01-bdf8-7241ef993967",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "48c9475d-9f5e-496c-a574-fd581a6f1f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cc8dda-8356-4812-ab84-64cf634eda03",
        "cursor": {
          "ref": "d3603019-1a28-4ccd-b6e1-5cac0a8172ce",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa65d549-2705-43a7-ba36-96fae3e4eaac"
        },
        "item": {
          "id": "e3cc8dda-8356-4812-ab84-64cf634eda03",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fd3ddc81-90c0-45e0-bcb9-14b74162ec66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d859d34-207d-435c-9111-bbecdeb693dc",
        "cursor": {
          "ref": "77efdb48-5a52-46dc-b66b-5805ef9f0c29",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "18a2c127-366b-4100-aafd-c7ce557088b4"
        },
        "item": {
          "id": "7d859d34-207d-435c-9111-bbecdeb693dc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a728470c-8c6e-40a7-b1ad-3cdaedf63845",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac63a1b-c4f8-4e49-8496-7629edc3fb51",
        "cursor": {
          "ref": "d13d0ab5-88bd-4206-bfd3-85a51db6afdd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "439b5251-058d-4f20-a155-2ac58212141a"
        },
        "item": {
          "id": "2ac63a1b-c4f8-4e49-8496-7629edc3fb51",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dc9e9933-2a05-4176-b066-98b64936c762",
          "status": "Created",
          "code": 201,
          "responseTime": 219,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1713e7a-1732-4034-818c-0ff84e46ac49",
        "cursor": {
          "ref": "6b7202c2-27f6-486f-82b8-bebb5a8b33f5",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "04340d0e-ccc0-405d-b52e-d2b1022a54d5"
        },
        "item": {
          "id": "d1713e7a-1732-4034-818c-0ff84e46ac49",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "90b2357d-f484-4d24-acaf-466e86e6ae0a",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af5b897-50af-46d0-be8c-bc214be51be0",
        "cursor": {
          "ref": "5d66a83a-7d85-41cc-8f0b-e292be1c111d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "058b2bd4-cbdd-4c8f-8c38-272d4162a59c"
        },
        "item": {
          "id": "1af5b897-50af-46d0-be8c-bc214be51be0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f5b709b8-13e1-4343-b0cf-1084edef847d",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38864644-a261-44d8-8c8b-32b4cc3500be",
        "cursor": {
          "ref": "9c107727-69b3-428e-b5dd-c9fd326650f5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a740374c-3691-41f2-9920-7c8a475f7e16"
        },
        "item": {
          "id": "38864644-a261-44d8-8c8b-32b4cc3500be",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c90b682c-bdcb-4d03-a689-09d0cbebcd5b",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24a6ad8-b97b-4de7-a20a-17feabcbb59c",
        "cursor": {
          "ref": "dc6d14f3-65b6-4c85-a0cb-7b9a5a9e0f3e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3331583c-7121-4870-a1f5-3beadda2da9b"
        },
        "item": {
          "id": "b24a6ad8-b97b-4de7-a20a-17feabcbb59c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2313d9b9-e5f0-4b96-958b-65f8792aec1d",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4331b0-4db6-44c6-ba1a-ea7948eb16fd",
        "cursor": {
          "ref": "cb96a225-6207-4979-b768-130a711aac67",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bf39da53-399e-4629-b9c8-e5885c44b974"
        },
        "item": {
          "id": "0a4331b0-4db6-44c6-ba1a-ea7948eb16fd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a114a6a1-fb78-44a0-b199-20f41da61744",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e907794-20b8-491c-8a78-2baecfd712d5",
        "cursor": {
          "ref": "bb4ab99d-5a7c-4494-a73e-fddbf4fd38e5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3737db3e-9bfb-4755-9dc6-df65548b40b1"
        },
        "item": {
          "id": "1e907794-20b8-491c-8a78-2baecfd712d5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "feefb6c2-acdd-4279-88c3-f5abdf52a90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc04639-f9dd-4ca7-9f70-2c6d81eadab9",
        "cursor": {
          "ref": "3bb4cf79-75af-4a20-9d94-3ba38dabd2a1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "73d92fb2-d89a-4754-a2c5-1c7f5dce2863"
        },
        "item": {
          "id": "bbc04639-f9dd-4ca7-9f70-2c6d81eadab9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ec31b9f9-78da-4e4d-8d43-61119e93a6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f42e16-cd54-4141-9dd4-8d0e9a4f6e40",
        "cursor": {
          "ref": "eaf00449-1d5e-4a3d-9898-5cec7a2a7e9b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a4bb317d-f034-4af7-b522-cfbe246c5420"
        },
        "item": {
          "id": "97f42e16-cd54-4141-9dd4-8d0e9a4f6e40",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be34559f-8bdf-4551-91e0-0ee0ec66cd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba4fe2b-b3b3-4c4e-8743-793a3ae61691",
        "cursor": {
          "ref": "5a2f2bb5-1a27-43a8-9b9c-78f3822d34dd",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a4e96d73-0eb7-4f35-9f3a-2ff73d6ed0b5"
        },
        "item": {
          "id": "cba4fe2b-b3b3-4c4e-8743-793a3ae61691",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c08c3ab3-f72c-43ea-9320-ca4dc7b5bc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5b4f84-655a-4cf3-993c-c02b3828d01f",
        "cursor": {
          "ref": "6399bef1-52cc-469d-9fca-4a9cdd1f10fb",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c427d0bc-93d6-4791-b3f3-4b9166b6725d"
        },
        "item": {
          "id": "1e5b4f84-655a-4cf3-993c-c02b3828d01f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3a44b78e-9af2-4ea8-b1ef-65450f4802ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a6c56e-ad43-45f0-a0ff-ab4480fbe44a",
        "cursor": {
          "ref": "58d492b0-ff31-4b0b-abed-863817b3af7b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cfa115ee-d3f7-4b9b-8277-f7ba6f05c7e3"
        },
        "item": {
          "id": "26a6c56e-ad43-45f0-a0ff-ab4480fbe44a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "39017a2a-5219-4fd0-9acc-30f25eb4d0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f5e24b-cbc0-4440-9b49-baf357b97136",
        "cursor": {
          "ref": "20ce402d-e16f-4d56-88a7-b09739dd8cfd",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d178e05d-2d82-4111-8622-8e4acd6975f5"
        },
        "item": {
          "id": "50f5e24b-cbc0-4440-9b49-baf357b97136",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2748ab3d-f7b1-42b1-8af5-4a0478d22621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ee25d-4092-4208-8324-2968684b9ee3",
        "cursor": {
          "ref": "f8e1abb7-cb96-48af-a199-78756f944bdf",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c91e1f60-ffcc-4d8a-9ef8-b09a81af49cc"
        },
        "item": {
          "id": "365ee25d-4092-4208-8324-2968684b9ee3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "60917ecb-1dc6-42b9-b23b-1797dd0ad653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f68561-ee29-4972-b2b6-4ed2afff262b",
        "cursor": {
          "ref": "76877c5c-137a-4058-a8f0-b535672578f8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5cbdb827-bd49-4f93-b932-f4e1e488eb8f"
        },
        "item": {
          "id": "b6f68561-ee29-4972-b2b6-4ed2afff262b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cff99233-3c89-4997-97c7-87dcb0ca582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d395e5f8-fc9a-45c5-9d69-0627ea1d2169",
        "cursor": {
          "ref": "ec1b7f20-2ce4-4fe0-bb46-de127a99a542",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fe1a2974-513a-484e-826b-6b5c14553845"
        },
        "item": {
          "id": "d395e5f8-fc9a-45c5-9d69-0627ea1d2169",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1733f1bf-4ae6-4f77-a58a-c85c9ec6f600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8d4519-a2ea-41ee-adc7-a97d61431984",
        "cursor": {
          "ref": "19c86339-c404-4e66-b062-ac5723dd7814",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "527c7537-bef1-47d4-82a4-a165ca408006"
        },
        "item": {
          "id": "7d8d4519-a2ea-41ee-adc7-a97d61431984",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "434fd631-813c-4498-873f-613142191bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b25cb92-3d4b-4af9-b6ee-5383f75696d1",
        "cursor": {
          "ref": "ab891cbc-7e28-48ca-9cc2-531297946883",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c5609077-07a6-4dd9-b96c-d0f736f1a1a7"
        },
        "item": {
          "id": "6b25cb92-3d4b-4af9-b6ee-5383f75696d1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "acb0cd8a-7fde-45fa-8d1b-da09edd76e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2d9d7f-706b-411c-bc72-aea3cfdf9825",
        "cursor": {
          "ref": "411709ab-2d61-4f6d-8893-f755ab5ef40e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "44b49083-2e27-48a8-a303-5b7f912a3a2d"
        },
        "item": {
          "id": "4e2d9d7f-706b-411c-bc72-aea3cfdf9825",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "29768c8e-14a9-4ba9-bf19-a8f23e17c756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434a124b-b410-4602-abd7-7590cc566b7b",
        "cursor": {
          "ref": "88da4fdb-14d1-4b2e-a2e0-c8db4a379a3c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ed74390b-4e62-4e1d-99d8-1e3028c40213"
        },
        "item": {
          "id": "434a124b-b410-4602-abd7-7590cc566b7b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a7a2f3d5-d4a0-411a-9ea7-7645fecb3da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf46951-76cc-48fa-a4f3-b4b1e5d9efb3",
        "cursor": {
          "ref": "4aa67931-3fca-4c64-8647-33dacbebb804",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "08bbda73-d68d-40fb-9e40-76cd1709d1fe"
        },
        "item": {
          "id": "caf46951-76cc-48fa-a4f3-b4b1e5d9efb3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c823378b-7850-40a6-87a1-2fe5812a1082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8c6344-241c-4452-af0e-75f4529b3b66",
        "cursor": {
          "ref": "fb63c62e-6ed3-4295-bf5c-5a4cbfa65ceb",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6f67b1df-0434-4b7d-a170-170a21f8c82e"
        },
        "item": {
          "id": "df8c6344-241c-4452-af0e-75f4529b3b66",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3cd8032f-0c22-4f94-940c-6da262db7bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24207c99-78ad-41b9-9fec-acf044d61eef",
        "cursor": {
          "ref": "85ae2e7e-3f79-4e39-9ae9-d481b5180723",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "070a03a8-4d0f-4e86-8f9d-047d40d0dd34"
        },
        "item": {
          "id": "24207c99-78ad-41b9-9fec-acf044d61eef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5dccf539-e6b1-48ee-a235-1d45249ea72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d448853c-95f8-4bb1-94aa-be9d4ce1c826",
        "cursor": {
          "ref": "3d0ffea8-531d-4248-b214-0fd083701754",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1ef0a91f-1548-46e7-99d9-8d5b222e9371"
        },
        "item": {
          "id": "d448853c-95f8-4bb1-94aa-be9d4ce1c826",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8e6119d4-0daf-46d8-a4d0-163e422f4e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79383958-5820-48e3-ae7a-b7a5846a1408",
        "cursor": {
          "ref": "45df9849-90a0-407a-8929-da09df280090",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "299253d7-f74e-4463-9e5c-e9f1eff89366"
        },
        "item": {
          "id": "79383958-5820-48e3-ae7a-b7a5846a1408",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b366cdc-f3fc-4d98-8160-6653b396c16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83619bea-382b-404f-b848-f1099ecd8d73",
        "cursor": {
          "ref": "220c297a-86de-4cab-9daf-15261f18415f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5665a962-f46a-4f27-bb69-885e74060d85"
        },
        "item": {
          "id": "83619bea-382b-404f-b848-f1099ecd8d73",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a03d26f4-519e-4e6c-823f-c5bb0db3a81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a54c24-a746-4e19-a25b-b7231cee61bb",
        "cursor": {
          "ref": "4e1b3673-7bf6-4dc2-a2c3-f89a11b2f575",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6698c7a1-acfe-4161-90c8-fb74c77be4f2"
        },
        "item": {
          "id": "b4a54c24-a746-4e19-a25b-b7231cee61bb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a6ccd77e-165a-4ffc-988a-ad3baadfa964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1154a7e-9b81-444a-8469-be6aab5f0047",
        "cursor": {
          "ref": "5722f6bb-14f3-4c3b-9d0c-de7d299d5e17",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "817fb59d-743b-43d0-af66-1483a4e5e8e9"
        },
        "item": {
          "id": "a1154a7e-9b81-444a-8469-be6aab5f0047",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f7098598-3d9f-4322-88c3-96732087175b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad531ca-fba0-48fb-934a-0c02920062d2",
        "cursor": {
          "ref": "d929591a-b80f-4c33-a0ab-f25e6918d4a6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bf083a7a-4466-44a2-a29b-aea453b8672a"
        },
        "item": {
          "id": "fad531ca-fba0-48fb-934a-0c02920062d2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c08d78eb-9d2e-4081-8ba6-97292c555dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b9577c-5bb5-45cb-b17f-db833af262dd",
        "cursor": {
          "ref": "c93e0750-b86d-4e15-aa3b-6b6598efdb28",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3efdd693-25d4-4936-b0c3-1bacb5c3a581"
        },
        "item": {
          "id": "41b9577c-5bb5-45cb-b17f-db833af262dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9bee50a2-4123-4f9d-bcf9-4f67d3c9545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea60fedc-a4e9-41d7-b727-f0f0e7e071fa",
        "cursor": {
          "ref": "a62f42db-da1f-463a-814d-865320c0ea9b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bbd7c3f3-7754-4f64-88c8-fa00d8de50b9"
        },
        "item": {
          "id": "ea60fedc-a4e9-41d7-b727-f0f0e7e071fa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "702489de-da40-433b-a818-cde1a49a67fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9453e39-b75b-4377-b08e-4072ca02e65d",
        "cursor": {
          "ref": "e8252ac4-f109-4b84-b176-0329856765a3",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd805fa5-6664-4df1-8913-5c5843f4f2c7"
        },
        "item": {
          "id": "f9453e39-b75b-4377-b08e-4072ca02e65d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b5bb3243-f331-486e-a324-2eb8d545b879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cec41b-2de8-49cc-8e62-85b587707513",
        "cursor": {
          "ref": "07fa0e10-0ea9-4b9a-91e7-538d7f821a67",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a8ba8ea-3a7d-4f89-9ca6-86b028654c84"
        },
        "item": {
          "id": "f2cec41b-2de8-49cc-8e62-85b587707513",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "176ae046-7112-4c40-b095-e7900aaad7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9453c36c-0180-4158-bee9-dd4465db00ed",
        "cursor": {
          "ref": "5e3dc0f3-2cf2-4ebc-b468-5477283f5d30",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "245041a3-091a-40f2-a939-2af85dbe8a21"
        },
        "item": {
          "id": "9453c36c-0180-4158-bee9-dd4465db00ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "096ec9cb-e9c0-47d4-a826-44027ea73973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8113314-7245-4f15-a096-f48d1a86d816",
        "cursor": {
          "ref": "341af079-91e6-4230-89f5-cbd2d501bd99",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a06a727c-4fc4-4845-a1b6-22685aae4d19"
        },
        "item": {
          "id": "b8113314-7245-4f15-a096-f48d1a86d816",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "90f6d97b-b0c2-45d1-bcb0-9446b751d88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c961fe-fbb8-417d-ad1f-d83cd264dde1",
        "cursor": {
          "ref": "392b920e-f5b1-4a5f-93e0-03483d954b06",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "334ea271-066f-4ad8-bd01-a62290ff8bce"
        },
        "item": {
          "id": "a7c961fe-fbb8-417d-ad1f-d83cd264dde1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "66f43840-0c3d-4fad-b30b-aa6a126fb226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8718014-76f1-45bc-8b4f-73a273702e74",
        "cursor": {
          "ref": "208ec329-be5f-4efd-816c-81666789ed15",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "81973f2e-65fe-4865-9bf9-50550be05e2c"
        },
        "item": {
          "id": "e8718014-76f1-45bc-8b4f-73a273702e74",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cace48dd-8d7d-400a-b054-9f3fd9c84314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84136d8-a621-498f-bf29-f45b69155328",
        "cursor": {
          "ref": "6962ed07-96bb-46a2-b361-96886345f5b3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6ee5d667-ada9-4b95-832f-e6857be78b6d"
        },
        "item": {
          "id": "d84136d8-a621-498f-bf29-f45b69155328",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "74c9f473-718e-4519-a536-bd7b82815107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e01de3f-0b5e-406c-b4d8-9e83d565b510",
        "cursor": {
          "ref": "6e3449c6-6991-463a-9346-3a1e091c58dc",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "de71a83e-1718-46a5-aea4-5f4edecf1d6c"
        },
        "item": {
          "id": "5e01de3f-0b5e-406c-b4d8-9e83d565b510",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9fad4004-7121-4184-9443-fd6f1dc24387",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c39be63-f3ca-4bc2-9a27-91bebf167149",
        "cursor": {
          "ref": "df7bf79a-3241-41cf-b278-21a7536d18cb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "10b4e45e-96ae-407d-a085-6eb3ad8f9b78"
        },
        "item": {
          "id": "1c39be63-f3ca-4bc2-9a27-91bebf167149",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6beac2c7-e0ed-4f45-8432-092fd44f2c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a3b440-44ce-4440-91a6-4c45e5d1380d",
        "cursor": {
          "ref": "4e208e5a-3493-4720-9943-bcd5aebda0f7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a73f9a6e-77ca-4ce5-b036-03e99b692937"
        },
        "item": {
          "id": "98a3b440-44ce-4440-91a6-4c45e5d1380d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e957de02-f7b7-4086-b6f9-2c02649bed32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18f62b8-77a9-4b1b-ab65-da862e2197c1",
        "cursor": {
          "ref": "c0b471d7-6ac5-4c41-94c3-0b05b3cb5cb9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "133fa1e8-e10d-4781-bd5b-e2a58ec3fe15"
        },
        "item": {
          "id": "f18f62b8-77a9-4b1b-ab65-da862e2197c1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b7461b36-8e7b-4992-9d1c-d01e90628dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ec661a-a0b0-4afe-821a-f55cf4a345d0",
        "cursor": {
          "ref": "13600480-239c-4408-a082-11a7e55a8013",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7d46e9a8-c586-4665-9f91-dd7aae3a82b7"
        },
        "item": {
          "id": "e0ec661a-a0b0-4afe-821a-f55cf4a345d0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "49f7c2c3-bf73-4dac-a6c9-58f05bee6814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637780fe-b4de-4530-8d1d-362f4d1be54f",
        "cursor": {
          "ref": "63c93b6e-a9b9-4841-8c5e-7ca17b95a313",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aedc15c1-3721-42eb-b3e6-f4b6bbf82a3d"
        },
        "item": {
          "id": "637780fe-b4de-4530-8d1d-362f4d1be54f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa936e3d-8132-4f4a-a310-0d5bd6c69ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8db809c-b4cc-4299-8b3f-86a38a423561",
        "cursor": {
          "ref": "3ea2251b-5ca1-4931-b116-8d3aa26673f0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49f1f085-db3f-4bc4-8c57-fbf9dd4a39ad"
        },
        "item": {
          "id": "e8db809c-b4cc-4299-8b3f-86a38a423561",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b77bf752-8a66-44ce-9947-750972fca0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0b2fc2-608b-4aea-bfff-9897fd1dea16",
        "cursor": {
          "ref": "93f1bf4e-cfb9-4be4-ae35-4a982dbab286",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "18b5e4be-a0fa-4f0c-ab0b-23affc2e378f"
        },
        "item": {
          "id": "ce0b2fc2-608b-4aea-bfff-9897fd1dea16",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "62497153-7d82-4f44-a3da-063fe9e77ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25ba88d-e760-4470-8680-6e0f1bc2655d",
        "cursor": {
          "ref": "663babe8-3659-4bbe-8906-4c7537673df9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1d672edc-ba28-43a0-8331-69799c1f71c1"
        },
        "item": {
          "id": "a25ba88d-e760-4470-8680-6e0f1bc2655d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "03b36c02-0752-451c-9547-0448e035c8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ceeb5c-41a2-4da7-8b95-5dbafd2d3a8a",
        "cursor": {
          "ref": "276aafcc-d4b5-4fa8-87f8-55485f37d84f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "682d05c5-fced-4540-88e8-325f1f346c0f"
        },
        "item": {
          "id": "63ceeb5c-41a2-4da7-8b95-5dbafd2d3a8a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dcdd116f-a5dc-45a6-b00d-bbbb57d3bfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea474bad-9630-4b9d-8d05-a01fb6d46dfa",
        "cursor": {
          "ref": "425febac-41c4-46cd-994e-f9916f581f8a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d8283d8a-1a87-4048-af0a-d36abab084d6"
        },
        "item": {
          "id": "ea474bad-9630-4b9d-8d05-a01fb6d46dfa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0f54cfaf-a911-4791-82de-f48242bb4e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d45940d-df0c-40d7-8111-1c873764bfc5",
        "cursor": {
          "ref": "8fccfb36-6a8d-41aa-9ebe-54385968070e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b0a85e88-3582-47fb-837e-cd39b3f5846e"
        },
        "item": {
          "id": "4d45940d-df0c-40d7-8111-1c873764bfc5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3ed4632c-c049-4123-8370-738f14ae8f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5c7cfa-7664-48da-acb0-5613843a2a25",
        "cursor": {
          "ref": "4fc5c888-ffd9-4ad2-a9f9-3a9638c23aad",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a93d8130-8f46-4c97-9710-11558c74f888"
        },
        "item": {
          "id": "7e5c7cfa-7664-48da-acb0-5613843a2a25",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3c13ee89-906b-4c23-80b3-2d61aa4840e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc9134-9000-414a-bc10-c9051cb9b988",
        "cursor": {
          "ref": "82871c78-690d-44dc-a116-433df20222ff",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "34cd4adc-d07a-46f8-aa45-9f2777646e78"
        },
        "item": {
          "id": "4dcc9134-9000-414a-bc10-c9051cb9b988",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "03a4b716-c14c-4514-a65c-d18b5d83d0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4dd88b-85bd-4c57-aff1-356f758fce25",
        "cursor": {
          "ref": "f948b70f-c2ad-4645-8910-1178c677fe9b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2c3307ce-2a35-4cda-9a5b-fc4b1c7da75d"
        },
        "item": {
          "id": "bd4dd88b-85bd-4c57-aff1-356f758fce25",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d7b93f62-a5f0-4383-9855-02dcbf55d427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606bab82-ccf6-4e29-84c0-3e3845c9aa70",
        "cursor": {
          "ref": "65db9483-b1ca-4822-be1f-54a4c262a92c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e2233e93-9aab-46bd-a363-fb409683b8ea"
        },
        "item": {
          "id": "606bab82-ccf6-4e29-84c0-3e3845c9aa70",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b13a6c26-1ec9-477e-bbab-620ce1b69778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c22a03c-0a8f-4a1d-9d40-fbb16a74c52c",
        "cursor": {
          "ref": "9ff79b51-09b4-45a9-a75c-7c7a54a99ad9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7c5b6266-714c-456f-b1ff-1a36220840c8"
        },
        "item": {
          "id": "1c22a03c-0a8f-4a1d-9d40-fbb16a74c52c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "63341d00-962b-4913-87f2-63d0d6d7bd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b981db-5266-4785-ad9e-f8571697c33e",
        "cursor": {
          "ref": "251bf054-ba9e-403a-95a8-a64329a0b524",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e6c3f74-2fcf-437b-8f78-0365aa3afddb"
        },
        "item": {
          "id": "58b981db-5266-4785-ad9e-f8571697c33e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d612fc07-029d-4a7f-8261-b10ea349cf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bbd33c-14d0-4e0d-962e-18de38f3191c",
        "cursor": {
          "ref": "4f606892-6561-4d96-9dc9-54fe8f88d342",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7068ec94-4dcb-48b3-a4cf-31a661a01125"
        },
        "item": {
          "id": "f6bbd33c-14d0-4e0d-962e-18de38f3191c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "84f7c511-8774-4ea0-928e-4108864f2e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00fa92b-aff8-4933-a16c-0a487d18dbd2",
        "cursor": {
          "ref": "b8934777-3190-4b82-b323-2d67e3d0c6e1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5d8d2040-8286-4f48-ad7f-10dc5a2c7e62"
        },
        "item": {
          "id": "e00fa92b-aff8-4933-a16c-0a487d18dbd2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1c4915f9-09ad-4eef-aa95-9d534df93a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3f4efc-ce90-4683-af07-8fb81c69c215",
        "cursor": {
          "ref": "22764a10-d76a-4c1f-9fb2-8d00539ef0a1",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "46ae692b-a572-4012-ab96-f63ba4d7ce2a"
        },
        "item": {
          "id": "9d3f4efc-ce90-4683-af07-8fb81c69c215",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6a2d839c-4b2b-4640-8edc-791217a932a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388c5160-fe8d-437d-b6fa-e153b96eba6b",
        "cursor": {
          "ref": "97a478c3-72da-4a53-bba3-990a2b01ea71",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8c79708-cc97-47cf-b02d-fd040f54c742"
        },
        "item": {
          "id": "388c5160-fe8d-437d-b6fa-e153b96eba6b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "afb1ad93-1f6d-44ae-b634-25404b710a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb3e190-868a-4432-9467-e699eda31674",
        "cursor": {
          "ref": "2a4db320-c84e-4326-aaf1-9ba673a3341e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cdf041e3-a513-4d34-8c43-00f8897ff5e6"
        },
        "item": {
          "id": "ceb3e190-868a-4432-9467-e699eda31674",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83dee197-724f-47e5-9342-328285d1df79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8089fa7-8075-41ae-b25c-e24a7562d39c",
        "cursor": {
          "ref": "2fa76ecc-dde6-4771-bb03-74b102f816be",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f684922e-9350-47e0-a260-9da5e48c9192"
        },
        "item": {
          "id": "a8089fa7-8075-41ae-b25c-e24a7562d39c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a5aa1f99-16be-452d-b55f-a0fa3a8a0655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f4dc3-e7f2-444c-b676-81ad8114ed7b",
        "cursor": {
          "ref": "6caa7e0b-b352-4bcb-88a2-393ce2cfb7ab",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f80b74b4-2c38-4943-a983-87a19f46ac12"
        },
        "item": {
          "id": "e07f4dc3-e7f2-444c-b676-81ad8114ed7b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a748490-9307-4db3-bc45-6a10a761a05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39254ea-db75-473b-9aa4-26c3f60e1031",
        "cursor": {
          "ref": "f3228171-c6c4-4c93-b64d-05ec7ca5f7d7",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e357e80e-66c5-4f6d-b21d-9b4effe355f8"
        },
        "item": {
          "id": "e39254ea-db75-473b-9aa4-26c3f60e1031",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "069efea7-b141-4aa8-a79d-87d7163c7e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad73d08-422c-47e0-918e-8d7fe6565692",
        "cursor": {
          "ref": "9fcb999f-226d-4485-ac7a-b05eb4f1136f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cee6c5c3-463c-48f5-b042-1dda1925bdc4"
        },
        "item": {
          "id": "6ad73d08-422c-47e0-918e-8d7fe6565692",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78f3a764-1331-4837-8988-ed2d0723aee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4d1d87-2a22-4595-b6ae-34bc379435b3",
        "cursor": {
          "ref": "6f11783e-a814-416b-8b33-97b5a89b5416",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0bcabdcb-b91c-4bd7-a659-e6edb547a83c"
        },
        "item": {
          "id": "0b4d1d87-2a22-4595-b6ae-34bc379435b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0701ec5c-bc36-4d8a-9e52-cacf0bbcdabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27844d22-a4fa-4581-a57a-b8a51ae2f994",
        "cursor": {
          "ref": "750a2702-1091-44df-9671-0ef7c2d845a0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c48dbbe4-85cf-466e-9d14-cee16b774286"
        },
        "item": {
          "id": "27844d22-a4fa-4581-a57a-b8a51ae2f994",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c90e4e70-5b8f-4e4c-bb90-1b11584e9a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b3f2d6-cf39-43e0-b586-7ccbec570a5b",
        "cursor": {
          "ref": "b64546cf-bacc-4581-9e57-bce021fa3d52",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8429a24b-b40e-4c63-9650-12432895bedb"
        },
        "item": {
          "id": "78b3f2d6-cf39-43e0-b586-7ccbec570a5b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e83ec02-7611-48ad-8f25-1b62ecb31800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397d1cbd-ceb3-4d9b-8eb1-e194876129d4",
        "cursor": {
          "ref": "a5e453cd-05fd-4c31-b4a5-01efef28638f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5722d995-f8d1-4a95-a8d2-b22040224e54"
        },
        "item": {
          "id": "397d1cbd-ceb3-4d9b-8eb1-e194876129d4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b40e2a0c-821b-4f1c-bfc7-dbb2b745af78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fbbc9e-3d1a-404e-91ee-ab771680f81a",
        "cursor": {
          "ref": "7167162a-11cf-4cc9-a4ea-92f886d06ab7",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "82602dea-7ed7-4fca-857d-8d047e9a16bb"
        },
        "item": {
          "id": "77fbbc9e-3d1a-404e-91ee-ab771680f81a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27af5fcf-2c20-43d8-a690-421159efd8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce43420-6a5c-4820-b028-e84a5a3d80b7",
        "cursor": {
          "ref": "967ef882-f223-4edd-869c-8b9dc53fdb51",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "607eb9a6-2a1b-4ea8-992e-c4cc619b9413"
        },
        "item": {
          "id": "cce43420-6a5c-4820-b028-e84a5a3d80b7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5894374d-e8db-426e-8416-d7294cd47ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daa7378-74df-41cc-91ca-f79d80bf1833",
        "cursor": {
          "ref": "30e80e3b-2c50-4f0f-9e0f-b0c6d18a0d36",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5c59884d-aa50-4dc8-9dff-eaeeac68659c"
        },
        "item": {
          "id": "1daa7378-74df-41cc-91ca-f79d80bf1833",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b3fcbf6d-32d0-42ae-a906-d6ced8d5bf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015c9d65-c859-4629-9660-1f4e083183d0",
        "cursor": {
          "ref": "d327684d-2cda-4b96-aea3-bda86b8066c0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1d849a99-4dd9-4918-a421-c128794c692a"
        },
        "item": {
          "id": "015c9d65-c859-4629-9660-1f4e083183d0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eb4b20bf-eb31-4dbf-aa19-259dd9977834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab0a60c-9a34-4824-8b67-c49af5da2095",
        "cursor": {
          "ref": "d69d22fe-9d3c-45eb-95f0-29858b42a61a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c2b0d1e0-a439-41ef-b4bd-85741c4131b9"
        },
        "item": {
          "id": "0ab0a60c-9a34-4824-8b67-c49af5da2095",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e2773b90-bef3-4445-8cb0-64e92af0f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1201f3-32c3-4662-bdeb-548aaaee221f",
        "cursor": {
          "ref": "9c96b5f8-2927-4840-9a30-71d737d21372",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6a70166f-4656-4e0f-8ca6-7c43ad066e99"
        },
        "item": {
          "id": "6a1201f3-32c3-4662-bdeb-548aaaee221f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "035ac27e-64d3-47e5-a888-1ec8046f7213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15985ae7-25dc-4ca7-804d-acac3c95f68c",
        "cursor": {
          "ref": "4173b604-26b9-4e45-86dd-2a02e19c4ec5",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e13a9b18-754c-46b0-9d56-27aac8679278"
        },
        "item": {
          "id": "15985ae7-25dc-4ca7-804d-acac3c95f68c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3a45888a-71a4-46ed-8458-030d7ef9c62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72db8c99-dcc8-44e3-b65e-385f8ad02149",
        "cursor": {
          "ref": "77705404-df17-49a5-8495-eab13980d08a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "13d49a31-81d9-44b5-a6f0-e722b07b084e"
        },
        "item": {
          "id": "72db8c99-dcc8-44e3-b65e-385f8ad02149",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f84aff3-9f96-46a7-91f4-4162d5abc313",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a7eb54-9868-47d1-a4b1-8812a9e706e6",
        "cursor": {
          "ref": "c4de9e38-f0af-43a2-a3a7-0e5d211f3b0e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d17d178c-086b-4c3a-9b23-9172d2be8d00"
        },
        "item": {
          "id": "b1a7eb54-9868-47d1-a4b1-8812a9e706e6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "75447737-c2ed-49a6-8ac8-de26afc19244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36d8b71-b24e-4370-ab85-9462112e63e4",
        "cursor": {
          "ref": "d986fa4d-be90-4a0b-b395-b5fc23556ffa",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "def9ffe7-b295-4962-a0ba-4958bd0f9abe"
        },
        "item": {
          "id": "c36d8b71-b24e-4370-ab85-9462112e63e4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c49fc8a7-fcfd-489b-94ca-91fd28cb3307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24de1372-b558-4ecf-8406-f8384046237d",
        "cursor": {
          "ref": "69e58c15-96aa-4a43-ab6d-1d0859ceba8e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "34055b7c-104a-40ff-bfc8-126d6f852204"
        },
        "item": {
          "id": "24de1372-b558-4ecf-8406-f8384046237d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bb923138-fed5-4ad7-b018-55f108b3ea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee62002f-b63e-4c93-9a41-0390180828aa",
        "cursor": {
          "ref": "c3f6e67b-937a-433d-be35-7f68a67671da",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f524f9fe-8593-4555-8bfd-c65352b56fdc"
        },
        "item": {
          "id": "ee62002f-b63e-4c93-9a41-0390180828aa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4cd0d613-1bca-4f94-b215-92c031dc1a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58a382e-8e3f-487a-9f6b-3ddae4fb29ed",
        "cursor": {
          "ref": "ad49881a-cec6-4403-9eda-52db3847b9b6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7b3db8cd-045c-415d-9a7b-ce7c20e5c30d"
        },
        "item": {
          "id": "a58a382e-8e3f-487a-9f6b-3ddae4fb29ed",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9cf61e30-7a24-4491-ba0a-344e8606c935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b279fbb6-bb31-4e6e-9449-28567f5c7a64",
        "cursor": {
          "ref": "9a3242c4-e572-4db0-afec-d24ff9840c8c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "35681f2f-f44f-4471-895e-8f265d75ebaf"
        },
        "item": {
          "id": "b279fbb6-bb31-4e6e-9449-28567f5c7a64",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ff350497-9e40-4b3f-b81c-522ae2352bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d68a7d6-3b95-4a23-bd92-68351325e8ae",
        "cursor": {
          "ref": "8342573b-3816-4eaa-bc23-b4d84c2598d5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3e4d2d49-903b-4435-99fa-4efb293f49ed"
        },
        "item": {
          "id": "6d68a7d6-3b95-4a23-bd92-68351325e8ae",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "275cbf5a-0549-4320-8294-4ee5c1b584af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b12769-04fe-46b0-b1d1-2bb5adae7672",
        "cursor": {
          "ref": "b0703d6b-1e7d-46a9-8528-e1d380b23bb8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "59f341e7-277b-4949-aefe-7f6d0d11074c"
        },
        "item": {
          "id": "d9b12769-04fe-46b0-b1d1-2bb5adae7672",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "070185f2-0d5c-4c9a-9bff-2e4e280259b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59766cee-f5a4-4884-a149-124dd7a8ce53",
        "cursor": {
          "ref": "df588031-fdb9-41cc-bace-9a59eaf0e278",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1deadf54-39d6-47a8-b064-9c739100828d"
        },
        "item": {
          "id": "59766cee-f5a4-4884-a149-124dd7a8ce53",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "baa847db-9ccb-4421-a95a-913a621c9025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cba1f93-07ac-4420-930e-e3afad17c6c3",
        "cursor": {
          "ref": "650bf5b5-b650-4807-b0ae-cbfc790bf11b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f29b563b-4aab-4548-a32c-ce4078ef87e8"
        },
        "item": {
          "id": "5cba1f93-07ac-4420-930e-e3afad17c6c3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2a903a00-5026-4952-a7ab-c715d51ba324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bdca97-1d22-4523-94b8-3c81532d0732",
        "cursor": {
          "ref": "0bd240d3-7d35-4405-82d9-1c9c5608cca2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2a9406b9-df24-4e9e-bfd4-dbc7ff98095b"
        },
        "item": {
          "id": "a5bdca97-1d22-4523-94b8-3c81532d0732",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "797e8154-c4ca-499c-a291-e5e3b93de7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0ddc15-a3ac-47f8-b088-789977f57cc2",
        "cursor": {
          "ref": "fc7e0d7c-caaa-4f02-ad6c-20898d1d6b06",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "48da4e36-b423-480b-8ce9-484f08e6c5fb"
        },
        "item": {
          "id": "4f0ddc15-a3ac-47f8-b088-789977f57cc2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "41333087-463b-4179-9833-7fbd53684fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ed1f9b-aff8-41fa-8a9c-58044bd30aa4",
        "cursor": {
          "ref": "fa2415ed-0b38-4c21-bf53-8eed7d0dacc7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8b95e16d-d4fd-4528-b8c1-a307095dd153"
        },
        "item": {
          "id": "e3ed1f9b-aff8-41fa-8a9c-58044bd30aa4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dc637c3a-37c5-4bfc-8f84-79e9b77094ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e1aef4-6554-4272-8a10-4c9fe95d9ed3",
        "cursor": {
          "ref": "d19216dc-76b3-4f15-a002-3b3869d8d576",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7d6f2e30-91d3-4751-9238-d9b30259cc5c"
        },
        "item": {
          "id": "82e1aef4-6554-4272-8a10-4c9fe95d9ed3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a6dfd7b0-be28-4cc8-bb0f-7335ab3408a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52583f32-3427-4731-a8b9-0e98270a34e7",
        "cursor": {
          "ref": "6ca21dfc-a0f5-4fc7-89dc-ec35ba4872a7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c8e78bcd-c7c6-4dfb-9d28-4c880b038443"
        },
        "item": {
          "id": "52583f32-3427-4731-a8b9-0e98270a34e7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fff0e947-373a-43fa-9727-9e02f5cf8303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62c3cd-f694-4049-881c-be2bdf34b3c5",
        "cursor": {
          "ref": "b6846ed1-579b-4cff-866a-299f81f97a17",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "450bec52-7f0e-42e4-b3d5-f90104965420"
        },
        "item": {
          "id": "ea62c3cd-f694-4049-881c-be2bdf34b3c5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3072f721-cdb5-4a65-944c-1df53f888890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f7ab6e-f4a7-4573-913a-206eefb862db",
        "cursor": {
          "ref": "c33ba4d4-4ed5-45bf-bc43-b0729b0f20ce",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f8b2e4e2-a4ab-4edf-a541-e7886cd3b7b9"
        },
        "item": {
          "id": "78f7ab6e-f4a7-4573-913a-206eefb862db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1fd8d21c-fd77-425e-8c5b-b50252cdfa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f00eb3-fe5e-41da-8fd0-f59812ca2877",
        "cursor": {
          "ref": "df03343a-1dbb-4fff-ba89-61124e882ecd",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "21ae6d07-21ca-45b7-87ce-f4323c867df8"
        },
        "item": {
          "id": "a9f00eb3-fe5e-41da-8fd0-f59812ca2877",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da3b0ea4-834d-44c6-b92b-100c6ff11ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aef45d-82f7-40d4-b30e-05ee60aa16f0",
        "cursor": {
          "ref": "2a33a84f-14c8-48bd-9b03-793d6a014162",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "140a3709-6661-4402-8929-5f97f89a0ae2"
        },
        "item": {
          "id": "a5aef45d-82f7-40d4-b30e-05ee60aa16f0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e2473ebb-358c-4383-b881-69005435c602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2d6d30-573e-485f-a851-33790075600a",
        "cursor": {
          "ref": "43236e69-35c4-4d17-bb89-484b1724a48d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4b533cb7-8a88-4a21-825e-0f5db030e96a"
        },
        "item": {
          "id": "5b2d6d30-573e-485f-a851-33790075600a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ca04c645-6e31-40a0-82b1-801407359d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084ba8b7-1b02-48fa-a21a-bcd41bd5e858",
        "cursor": {
          "ref": "ec5a955d-de00-4605-9832-56171d1ea930",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "120954db-6030-4e1d-af84-9429c2dc4018"
        },
        "item": {
          "id": "084ba8b7-1b02-48fa-a21a-bcd41bd5e858",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "726d9743-fa3b-43e9-83f7-ade7b606d825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f505717e-8ec6-4526-a2ad-2f7a91bbbf5d",
        "cursor": {
          "ref": "eb3a8ffe-f27e-478f-8125-d2a017f771ab",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7849eff9-bae1-43a9-a035-4c8701ef333c"
        },
        "item": {
          "id": "f505717e-8ec6-4526-a2ad-2f7a91bbbf5d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a740f23d-09cb-4e84-b65d-7dce5b24f2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8a052f-3b9e-4af9-82dc-95cc58797570",
        "cursor": {
          "ref": "5b859a43-b801-4a2e-9846-f5f2436cd238",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a47260d1-0c4e-4503-ac5a-b323d2967562"
        },
        "item": {
          "id": "ca8a052f-3b9e-4af9-82dc-95cc58797570",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cef8374d-cce0-4566-b34c-a83cbe1114da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99259ea-c77b-40ee-85bb-4022997b3c09",
        "cursor": {
          "ref": "61741679-c6a1-49c1-8413-6fbf62368684",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d4f49bc2-1211-4a2e-b38c-25818069baef"
        },
        "item": {
          "id": "a99259ea-c77b-40ee-85bb-4022997b3c09",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7cdc7818-bc41-4290-9a73-ea6e8e1ba7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b3c3d7-9cd0-4344-9c41-e79c30805b73",
        "cursor": {
          "ref": "9f65fe8b-3d87-4182-b9ef-20489a5ad116",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ec7ad9c5-913d-4afd-a675-bfaa5277bf7b"
        },
        "item": {
          "id": "83b3c3d7-9cd0-4344-9c41-e79c30805b73",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "98452df5-1607-4e53-8887-b54e22fa86af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdac730-7f41-41a4-93bf-db9e7d01d308",
        "cursor": {
          "ref": "e0d13fe5-b0ac-4fa1-9d75-30a376e2fba5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dd76fb0d-624b-41f3-bd3d-35b9532dc740"
        },
        "item": {
          "id": "9cdac730-7f41-41a4-93bf-db9e7d01d308",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "688912e1-ccc6-45ce-9c0d-5856c93efc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d99606-4543-4d9f-ae15-437d3581fad7",
        "cursor": {
          "ref": "717bbcca-7cc0-4254-8edf-345d0a46001c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58574cbe-6654-4835-a813-17319a5d63c9"
        },
        "item": {
          "id": "61d99606-4543-4d9f-ae15-437d3581fad7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "90f345f4-3a33-48d9-a0af-53df90f762a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4403ffbf-d825-46d0-837c-65385cc47d21",
        "cursor": {
          "ref": "6a091612-8028-4cef-a6a2-55461194373b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c1d672ab-12e2-4965-8d17-52bef8256873"
        },
        "item": {
          "id": "4403ffbf-d825-46d0-837c-65385cc47d21",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3de66935-ad79-4dd6-a2dc-a6e64032bd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee1ae48-b4cd-4dd4-879e-ea3762c5f135",
        "cursor": {
          "ref": "e6073672-7b5a-408a-bdcc-4120ea92dfef",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "19d3bbf5-4503-4fba-b073-8c520cade442"
        },
        "item": {
          "id": "8ee1ae48-b4cd-4dd4-879e-ea3762c5f135",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e8896d84-dac7-4367-8a69-16191d8057cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682970a2-cadc-4b23-9a11-824b6371c7b5",
        "cursor": {
          "ref": "3b574f72-f82d-433a-8b25-c12b5e5ce3ba",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "01dd7f38-41b4-4c25-8538-fd35ed724cd0"
        },
        "item": {
          "id": "682970a2-cadc-4b23-9a11-824b6371c7b5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "20d19fab-73b1-407b-8d79-e527425e974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28214fe9-2273-4f78-b7c7-a746dd45387d",
        "cursor": {
          "ref": "04770864-db12-49f8-926d-a90b11410b32",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2c377807-c21b-431f-9ee1-f91909777d53"
        },
        "item": {
          "id": "28214fe9-2273-4f78-b7c7-a746dd45387d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "47e07b4a-d4cb-4387-afbe-a3ee88a988cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14481dd-020a-47c6-809d-37abb422d53c",
        "cursor": {
          "ref": "a1571d63-85ce-4769-b35e-528d6bda3179",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8951370b-76d6-45b3-a816-c57793e690c7"
        },
        "item": {
          "id": "b14481dd-020a-47c6-809d-37abb422d53c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5ece6b5d-696a-4abf-a698-2e19035b5baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44dd63-47a9-4d58-9207-d4727b2a8b57",
        "cursor": {
          "ref": "5c1db64c-8074-43c3-b63b-f698bb95f44a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9efef6c0-4c97-40db-a467-49d78e037469"
        },
        "item": {
          "id": "2c44dd63-47a9-4d58-9207-d4727b2a8b57",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9584f7ee-1066-4ed4-a7fb-9fa6261486dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f70b480-2e17-470f-8d13-e8e0fe5a8e90",
        "cursor": {
          "ref": "32baefa8-6192-4347-857a-88001d0a1317",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7f36f600-f049-43f8-992e-1bebdc11ac70"
        },
        "item": {
          "id": "9f70b480-2e17-470f-8d13-e8e0fe5a8e90",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "96ca7c1c-516e-4d63-bfb5-f2709fd18d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d1e3b1-ae8c-43d3-89af-d37178ecc356",
        "cursor": {
          "ref": "2a0b0f4c-ac03-4921-8b47-c340b260fd00",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "89ce154a-bf3c-4387-8f53-9509c44e5120"
        },
        "item": {
          "id": "10d1e3b1-ae8c-43d3-89af-d37178ecc356",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2467a3b9-c3f0-4490-85d1-69aad240b053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac60b772-ac83-4e47-80cc-f60bf79e247a",
        "cursor": {
          "ref": "e2bd2611-c0ef-4349-b654-7de9020f3034",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "27bfbecb-7dbc-4d84-ae2c-4f2b62ab5f0d"
        },
        "item": {
          "id": "ac60b772-ac83-4e47-80cc-f60bf79e247a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c5a11f48-1945-42c9-9a84-a54e1f407e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a05cb09-4a04-4ab1-8a49-bc6372718afd",
        "cursor": {
          "ref": "03f767cf-3687-4204-8493-b4e731b1062e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d9e6d082-6f8f-4f5c-bf00-42b4070f82de"
        },
        "item": {
          "id": "0a05cb09-4a04-4ab1-8a49-bc6372718afd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b499d875-3879-4af4-8f25-41cb4d480975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3e770c-c876-41d2-a4bc-9ebeb4ea83a8",
        "cursor": {
          "ref": "5931bdaf-e0eb-4a1d-8311-015c55b35897",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "846edb10-2030-4d89-81ba-e1a9cefd01c5"
        },
        "item": {
          "id": "3c3e770c-c876-41d2-a4bc-9ebeb4ea83a8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0a91d222-8438-47f1-94d3-1ab0f1646d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a53ce6-ae3f-4096-bb73-28e22cadf5ec",
        "cursor": {
          "ref": "3426bc0a-ac92-47d6-956a-1f8e3ae36a4e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c2da6933-c772-4bf0-b84e-9842405fc514"
        },
        "item": {
          "id": "37a53ce6-ae3f-4096-bb73-28e22cadf5ec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "88a7b9a1-afad-4d1b-87aa-24f19a520156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb6e12-5ba6-48d5-ac51-bbe2896c2589",
        "cursor": {
          "ref": "80298570-4794-4af6-b8d5-78f5d534c162",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4aef5d72-02af-4e93-860b-79d57df78d3a"
        },
        "item": {
          "id": "81fb6e12-5ba6-48d5-ac51-bbe2896c2589",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13e74603-1c53-402c-b551-d79ab9845b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16c2705-f56a-4d33-ae51-fa067481d575",
        "cursor": {
          "ref": "40040dfd-fccf-4b53-bed1-0b52a24e5856",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f4b64954-9f77-482d-8b79-c24d078b2678"
        },
        "item": {
          "id": "c16c2705-f56a-4d33-ae51-fa067481d575",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f8e0f097-10b8-477c-957c-055b8e7de82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1414b54-fba7-42c0-9ff9-b65aaaddeb59",
        "cursor": {
          "ref": "37f46889-cd2b-497e-9e87-385ea4500ec2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c8a1dcad-39bb-4b4b-8662-0bdea0b71f6c"
        },
        "item": {
          "id": "f1414b54-fba7-42c0-9ff9-b65aaaddeb59",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cdda585e-e664-4014-8c7b-e3af38d7df50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc7c4d7-0d65-420c-a674-19c7af4095b9",
        "cursor": {
          "ref": "d6072c39-3117-4a24-8145-c2c5c3ead885",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f712a40f-2178-443f-9f1a-ccfdb6210fad"
        },
        "item": {
          "id": "acc7c4d7-0d65-420c-a674-19c7af4095b9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0fb70cbe-2f6c-4879-8502-023ca3e27c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd34ce36-b35e-4389-9f9e-dd087f97e2fa",
        "cursor": {
          "ref": "5456a230-2caa-4d9b-9eab-a95b798a13c2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "83049d58-1803-4416-bf0a-9ac1847dd912"
        },
        "item": {
          "id": "bd34ce36-b35e-4389-9f9e-dd087f97e2fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3eaaafe1-6904-49a5-a776-f47983ad619f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3734878-2c54-4686-947d-784192668eb1",
        "cursor": {
          "ref": "98e9b690-5ab7-4543-8fc4-2a8f083be283",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2a8fc993-a66b-442a-bac4-efcd6d1c4528"
        },
        "item": {
          "id": "c3734878-2c54-4686-947d-784192668eb1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "632babbe-2902-43ed-b40b-0421f67d6a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1f6a29-371f-4873-9fed-6d088f101202",
        "cursor": {
          "ref": "58a700f4-e827-4467-a79c-7bdf5b7e7153",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3d8dad25-1a75-44ef-9fb6-60d27633b2e6"
        },
        "item": {
          "id": "bb1f6a29-371f-4873-9fed-6d088f101202",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cbd2e8b1-f114-4d6a-8785-fb3f89aa56f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e140dbe-f3b1-45e8-955e-496943ee046d",
        "cursor": {
          "ref": "edb92bda-9edc-40e6-a2a7-e78f374cae37",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3ca6d95d-7b30-4e5a-aaa8-8ea7cbf20577"
        },
        "item": {
          "id": "4e140dbe-f3b1-45e8-955e-496943ee046d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d9353184-4ec7-4af3-84bb-9398e04916be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde06ccd-a0d1-4083-ba1d-1b08b149a7ee",
        "cursor": {
          "ref": "da110b10-529d-47af-b47d-51cf5dc173c7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6ef6b2ae-1cd9-44e1-bfc5-2d4f9150002e"
        },
        "item": {
          "id": "bde06ccd-a0d1-4083-ba1d-1b08b149a7ee",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "81d4093e-cd88-4ac5-982b-e42bbeb1cb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97947f9b-8645-461a-bd5f-00a7feabbafb",
        "cursor": {
          "ref": "5ef46471-a829-429c-b26b-b48c241d8ca0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4f0a5063-ad15-43f6-a70c-245ef46c16eb"
        },
        "item": {
          "id": "97947f9b-8645-461a-bd5f-00a7feabbafb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7b773252-ca37-43b8-9569-97e29f6c9c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cddbc12-95f9-4cc8-b335-4542fc2855f3",
        "cursor": {
          "ref": "16a89ea3-1c59-4a79-8d25-f1e47f1af672",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "384109e1-726c-46b7-af2b-88311bce9818"
        },
        "item": {
          "id": "0cddbc12-95f9-4cc8-b335-4542fc2855f3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f7c6f05d-f695-44a9-bc31-adf5a48c8dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d27b7a0-5c8d-4ce6-b803-8738f032b684",
        "cursor": {
          "ref": "04342ae0-9df2-40ef-be47-abf9a1ed3639",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d8395f0c-2713-4b9b-ba6d-19417c993276"
        },
        "item": {
          "id": "2d27b7a0-5c8d-4ce6-b803-8738f032b684",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ae0f5746-4c66-498f-8418-4b6aef969d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074b7613-7b26-491d-b410-1585998b9519",
        "cursor": {
          "ref": "2aa1c962-6afd-4b3e-a018-bbb35de080e8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c2f0abde-7307-4ca6-978f-13ebed92244a"
        },
        "item": {
          "id": "074b7613-7b26-491d-b410-1585998b9519",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "27b06dfa-ecc8-40e1-ac55-86356a93632a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a62a78-169c-4fe3-b5a4-0137e0b9f593",
        "cursor": {
          "ref": "86f0c844-068d-4684-9d0d-0edede1fdf9b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f4a403ff-5705-47df-a675-e4a6e6ca1604"
        },
        "item": {
          "id": "51a62a78-169c-4fe3-b5a4-0137e0b9f593",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f1bd8f92-498f-49df-93b6-b4c17a88400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd5201f-397d-48ff-8a00-58571edf8949",
        "cursor": {
          "ref": "babfd771-4fc7-4901-a4b8-a9cf24c31766",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f116bf4a-9660-4c31-a809-1e2aa9789c6d"
        },
        "item": {
          "id": "ddd5201f-397d-48ff-8a00-58571edf8949",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "de129006-7fd7-4d8a-8e23-940f2580cdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb50fd9-19d5-437c-95df-14023d7b28e7",
        "cursor": {
          "ref": "0ee0101b-924c-49d5-a728-fc790508687a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "89ea30e2-4a4c-4e8f-876a-d9ba8830a472"
        },
        "item": {
          "id": "dcb50fd9-19d5-437c-95df-14023d7b28e7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "62dcb462-d2c3-4822-a8ff-e2128f09de7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbc1d3b-ebf0-4af9-b75f-a63e0494a489",
        "cursor": {
          "ref": "285a52e9-3c17-4d2f-9828-6a7f525fe499",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6fb39daa-70ac-45a0-a771-b975ffb6ec41"
        },
        "item": {
          "id": "8fbc1d3b-ebf0-4af9-b75f-a63e0494a489",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5ba8b647-9538-4389-ae69-c2cf3bb7fde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53205f7d-a392-4a9f-a4bd-a0e66fe48776",
        "cursor": {
          "ref": "03aa1225-9e9c-477e-91c4-e383e913e174",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "307424b0-a465-45dc-8cc0-ca9eb1412566"
        },
        "item": {
          "id": "53205f7d-a392-4a9f-a4bd-a0e66fe48776",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9fd442e7-e2e5-4743-af76-1accae7679a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48adc45f-5a44-4740-a029-c7eaff8b76fd",
        "cursor": {
          "ref": "696e8d24-5c33-422e-a99a-67069e2a17f4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "34d9f53e-3665-4baf-888f-a388b127bcf5"
        },
        "item": {
          "id": "48adc45f-5a44-4740-a029-c7eaff8b76fd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1c0cd265-05e8-4034-8406-b1fdf8dc1abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e873033-b915-4c0c-b84a-f825dd3a7bb0",
        "cursor": {
          "ref": "b1d6d76b-7ac8-43f3-bb9d-3a47e7839250",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "321b8cb9-972c-43e2-9175-ed7f568872ca"
        },
        "item": {
          "id": "6e873033-b915-4c0c-b84a-f825dd3a7bb0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3c900f7e-9a01-41d7-ad37-c41d833d08ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d627b06e-4d79-4ced-b7ff-f7ffa217455f",
        "cursor": {
          "ref": "9afc3fb9-031f-4093-9a36-734d77c978e4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "99d37aa8-b0a2-4775-868c-94fb3c5bf6da"
        },
        "item": {
          "id": "d627b06e-4d79-4ced-b7ff-f7ffa217455f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "73ddb609-0397-4a5b-a1fb-1326f3424695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ed99da-5f30-4b0f-82cf-25526ba09422",
        "cursor": {
          "ref": "f92c9099-cf20-4dee-a507-056d3511f72f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7994e280-7ce8-466e-9982-d454a0db5f38"
        },
        "item": {
          "id": "81ed99da-5f30-4b0f-82cf-25526ba09422",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "58d41c6e-70fe-422b-887d-437525033fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217fd1a3-4d4a-4bbe-a14b-f2b6c9d28f05",
        "cursor": {
          "ref": "71e74e86-c054-403f-a97a-213e988e7bc8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "efa94ca8-34a0-4666-bc91-d44f49195808"
        },
        "item": {
          "id": "217fd1a3-4d4a-4bbe-a14b-f2b6c9d28f05",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fbb90133-c142-434c-84bd-4d591971a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8563d946-1999-4d82-9b1f-0de9f6b31934",
        "cursor": {
          "ref": "8f511e5b-d918-4b94-b351-291869f3dcf0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9272b94b-aee4-464d-aca5-30fb26b0efe2"
        },
        "item": {
          "id": "8563d946-1999-4d82-9b1f-0de9f6b31934",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1208db99-834f-4b7c-b21b-e3de67e47ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574e48dc-3900-43df-8fb0-10c48588db4f",
        "cursor": {
          "ref": "f8b02a5c-1806-48d5-93d5-0945e8725303",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0dd05ef0-c172-421e-a5b1-ec8d868124be"
        },
        "item": {
          "id": "574e48dc-3900-43df-8fb0-10c48588db4f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "177ebf87-7fca-41e8-b8f3-020a1de7e110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f4e756-9108-4b8d-923a-8306e9da2aa2",
        "cursor": {
          "ref": "e93c52c0-55fd-4679-bbe1-cf14d6aa03ab",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e54b3a90-6fa6-42ab-80ad-06c40d3d399e"
        },
        "item": {
          "id": "56f4e756-9108-4b8d-923a-8306e9da2aa2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af54301e-8d22-413d-8cd2-a6d8c582f1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0b0abf-2cbb-4f48-af98-54779825494c",
        "cursor": {
          "ref": "385aba53-40da-4967-9673-76271fc6a014",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46e90cb1-827e-48dd-b5bb-b693163fa32a"
        },
        "item": {
          "id": "3f0b0abf-2cbb-4f48-af98-54779825494c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9bfe34f8-8958-41b4-adce-585857a8a4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c57b977-0995-46de-a2a1-b366e8b161a4",
        "cursor": {
          "ref": "19e3a592-b44b-4109-87f4-3c839948e89d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3599f989-9981-434e-a4d7-cfb45e435e1e"
        },
        "item": {
          "id": "2c57b977-0995-46de-a2a1-b366e8b161a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ee06ecd6-d181-4277-a220-0adc7a3fa533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e009581e-3a67-4908-858a-b5de128924cc",
        "cursor": {
          "ref": "1d416454-bc34-42f6-a806-fe9ca3af7f20",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e80cd36a-87fc-4f48-a476-37f1e2f09952"
        },
        "item": {
          "id": "e009581e-3a67-4908-858a-b5de128924cc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "823097b4-7cb3-4ff3-ac11-f2c307ede41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f972320-7252-406d-9039-2ecb009f9a64",
        "cursor": {
          "ref": "c17300bf-7d8e-44a7-a650-9014cf354a93",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "53a7d57b-4cd9-4c17-b861-561e363c0347"
        },
        "item": {
          "id": "5f972320-7252-406d-9039-2ecb009f9a64",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "69e81754-bf37-4939-8cb0-85617cbcaf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d6ce17-ff24-4833-b7a0-7611277329d4",
        "cursor": {
          "ref": "34ba5771-b450-4ce9-8862-2f2bf566bae6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6e779322-8273-4bca-86d4-dcea34d20d34"
        },
        "item": {
          "id": "f4d6ce17-ff24-4833-b7a0-7611277329d4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5a2e7482-6887-4fae-8ca4-43fa2561ecf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b091ac2-e1d9-48ff-9c3f-20536a6d3b0b",
        "cursor": {
          "ref": "f9b6fa23-8589-4a85-a43c-c109f66a640a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "486bc275-e65f-4338-a539-ba8ea7094aa8"
        },
        "item": {
          "id": "8b091ac2-e1d9-48ff-9c3f-20536a6d3b0b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9ff1bf76-c809-4641-9aa2-cabef50e6897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c2b95-db87-47e7-9e65-e86610ebcb8e",
        "cursor": {
          "ref": "adc5d41d-a318-4bbd-a07b-afa0b2b1401b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "95d4aec5-841e-4f3c-ace5-03900c0b618f"
        },
        "item": {
          "id": "359c2b95-db87-47e7-9e65-e86610ebcb8e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7847348f-fa18-48a0-8585-4c06e8584eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0443a136-9912-48ed-9806-638bd28300b7",
        "cursor": {
          "ref": "30058c10-ba9b-4a07-8b07-211f772d4708",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f0e119d1-fddd-4b0c-9174-db10f48eaf56"
        },
        "item": {
          "id": "0443a136-9912-48ed-9806-638bd28300b7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "69054bac-882b-4913-bd14-ce0916e0cae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69299f94-7390-4f0e-af4c-e29524a7e5d4",
        "cursor": {
          "ref": "c3f366ab-a618-4c1e-b915-20677992dc64",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98774ab9-c094-41a0-9c42-eda3c514f3d5"
        },
        "item": {
          "id": "69299f94-7390-4f0e-af4c-e29524a7e5d4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b51a9ef7-6197-4010-9f7a-97150fe608e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2421a062-8aae-47a2-8e9e-b29f3b2eff8f",
        "cursor": {
          "ref": "9e26e7bb-eb9d-4778-8030-8665977926c0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8e420693-2df0-4947-ba6d-b2f47cde7769"
        },
        "item": {
          "id": "2421a062-8aae-47a2-8e9e-b29f3b2eff8f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d75db098-6955-4dff-8412-be7e691bba9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919eb85c-51d6-47a8-be47-24ac288f1d02",
        "cursor": {
          "ref": "77ca5730-012d-46e1-9bd0-c71f1a7945bc",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d12971a7-3dce-4040-815e-b641c967678f"
        },
        "item": {
          "id": "919eb85c-51d6-47a8-be47-24ac288f1d02",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "70d08d8a-734f-43ff-837d-940ad1d98221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aae62e-b5a1-4a58-84fd-9537b6aca702",
        "cursor": {
          "ref": "1efbd68e-202f-48b4-b6d6-07c0be236328",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1bd092b6-793a-4cd1-8958-037a71a2b7ea"
        },
        "item": {
          "id": "39aae62e-b5a1-4a58-84fd-9537b6aca702",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5e55b133-2a5a-4e6c-809a-373fe241e27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1411a4ac-064c-48df-97e9-19792a55473b",
        "cursor": {
          "ref": "aa2bbb32-67ab-4dba-b972-6c50fbb8e0fc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "11631992-2e12-48b2-acc0-450f204432c3"
        },
        "item": {
          "id": "1411a4ac-064c-48df-97e9-19792a55473b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cb602327-f553-4b08-a64b-10b882f6d4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b722dcd-f33b-436e-9e20-967ecd3ebf3f",
        "cursor": {
          "ref": "3dd7eeb3-adce-493b-9545-c6ab539253a3",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4b0a10b2-4445-41a0-8820-7dd57445f369"
        },
        "item": {
          "id": "1b722dcd-f33b-436e-9e20-967ecd3ebf3f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cf6fe83e-9f27-4631-8ff5-e27b036de3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce990376-dfbd-4b4f-a9b3-6d9ea88dc45f",
        "cursor": {
          "ref": "098313e4-625f-4fec-84db-82b5278711d8",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "60e2676d-12ff-4c10-8d1c-0b0cf2aebc3e"
        },
        "item": {
          "id": "ce990376-dfbd-4b4f-a9b3-6d9ea88dc45f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "46dadb3d-9f26-4cc4-966d-11546993d819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849d4493-6d4c-49e4-8204-6b0238ee06e5",
        "cursor": {
          "ref": "89357593-b1f8-4d4e-9eec-00baa5bb251c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "35fbdc0a-1782-4284-be3b-99d69a549f07"
        },
        "item": {
          "id": "849d4493-6d4c-49e4-8204-6b0238ee06e5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b8b88229-3f40-4376-b6d8-371e5d78e1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e407ff9-cf9c-41bb-9b76-54ede1546ba8",
        "cursor": {
          "ref": "7d1221e7-45cb-4779-899b-de62c0a48401",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "46edcab9-7933-4fd4-96b6-4fbf43e2597d"
        },
        "item": {
          "id": "5e407ff9-cf9c-41bb-9b76-54ede1546ba8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "abaeac38-d009-42fe-9099-203887a28ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec8f637-bf79-4f25-a6ca-586de4a60a66",
        "cursor": {
          "ref": "8a0a2a7d-0b08-4397-86ca-95ff2ab0f7a2",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3e098ed3-b0d9-41a8-acdb-a968af59f860"
        },
        "item": {
          "id": "dec8f637-bf79-4f25-a6ca-586de4a60a66",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "078f4658-609e-4835-b551-0f94df3059ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e772b7d-723d-4efb-ae2b-d3f2c824614b",
        "cursor": {
          "ref": "6b4207d2-5462-4507-a6b0-9505ab491554",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "24f1a4fb-7799-4c01-8614-4d4445da087d"
        },
        "item": {
          "id": "7e772b7d-723d-4efb-ae2b-d3f2c824614b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "593926c2-92a9-4e75-9fc4-273d1d6282a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb5ba94-6e94-4b82-bcaf-9bb16bc3cd41",
        "cursor": {
          "ref": "0df31f7c-97e1-4ecc-88e8-90479de20ba2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "61a99d5c-e3b5-407e-9be7-f5acb0302b00"
        },
        "item": {
          "id": "3eb5ba94-6e94-4b82-bcaf-9bb16bc3cd41",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fe2f0cb8-402a-4eb1-acec-0d48dfc43252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f780d867-ad99-4ced-b10e-4d70289e2133",
        "cursor": {
          "ref": "7b21187d-319b-4607-a7ba-75999ef5451b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b2838bb6-a4d0-451d-9959-f2cf79d62ce7"
        },
        "item": {
          "id": "f780d867-ad99-4ced-b10e-4d70289e2133",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8de30de4-7573-45a8-93b8-168d4e034f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4ce4c9-a4ec-4237-9ca6-05444114c836",
        "cursor": {
          "ref": "22c83400-7ba0-4c83-8758-23af70805e53",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "28104fd4-fde9-47a8-86da-1eff10ca0186"
        },
        "item": {
          "id": "1f4ce4c9-a4ec-4237-9ca6-05444114c836",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6a9dbb95-cddb-4781-98af-4a31b3f6b1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f43b7b1-8256-4c72-878a-92d739e8d0f6",
        "cursor": {
          "ref": "f07d9301-9fd2-4ac8-9504-08bc6c4d18af",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ce8227a4-6591-487c-98e5-aa3976b18a95"
        },
        "item": {
          "id": "3f43b7b1-8256-4c72-878a-92d739e8d0f6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "63f2cae0-e5c3-4fad-910a-689cd0c45b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec39884-22cc-442d-950d-7189dc8d5ef7",
        "cursor": {
          "ref": "0f836831-7588-414a-be90-9277bb5c116d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "85b0a7df-e8bf-4b0e-be64-08d884876987"
        },
        "item": {
          "id": "6ec39884-22cc-442d-950d-7189dc8d5ef7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4a76a7fb-2be2-4eb2-80d4-0f4ca41a0c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5a86fe-dbaf-4eb6-b810-010f7c69b0bd",
        "cursor": {
          "ref": "cb44af64-a61a-41c4-bed8-86bd8dcbee87",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "429f9790-a3ad-4102-857d-18d2cc6d9db7"
        },
        "item": {
          "id": "ef5a86fe-dbaf-4eb6-b810-010f7c69b0bd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0c749b76-a9c7-4518-bc33-b641bcc61fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cb830e-f344-40a4-81c8-88d17fd3c680",
        "cursor": {
          "ref": "337a7a0e-64e6-42d9-bed1-d3f1ff06d42f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "de926f75-3ce7-4862-8847-f9b82be8d269"
        },
        "item": {
          "id": "84cb830e-f344-40a4-81c8-88d17fd3c680",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f5e82ae-7191-4860-9cd6-276e7ae6dab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42308438-0ea6-4020-915d-6628242936c2",
        "cursor": {
          "ref": "75ff1cda-a344-48d5-ba42-91c3d2b29e09",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "09892755-2655-4106-998e-0001bc0288d1"
        },
        "item": {
          "id": "42308438-0ea6-4020-915d-6628242936c2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ece94f5d-adee-4502-b183-e0393c78273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249c6ae6-f218-45e9-9b93-315a6fdd788b",
        "cursor": {
          "ref": "853d4f41-62a7-4472-9920-7d517e643aee",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "af85aa75-85e4-48d7-a43d-a6ef7ee2fc50"
        },
        "item": {
          "id": "249c6ae6-f218-45e9-9b93-315a6fdd788b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a2a70d78-57f5-45e2-8927-55f9667a8333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad552cf-e288-4596-be47-c31101cc0f58",
        "cursor": {
          "ref": "44d94457-bc18-4f10-bb16-b7b39ec70388",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8abc1be1-ae71-4252-97c2-5913e54c42fe"
        },
        "item": {
          "id": "8ad552cf-e288-4596-be47-c31101cc0f58",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0f2bd53a-1cf3-4f31-8def-ac54ed0a5015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f30cf1-c64e-43f4-a097-1a53b032fa3b",
        "cursor": {
          "ref": "f3902687-408f-4570-b933-416a5da19348",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3a970ab8-da45-4f0a-a544-5da71a7a4650"
        },
        "item": {
          "id": "d0f30cf1-c64e-43f4-a097-1a53b032fa3b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "68852b60-0cab-475b-93b2-796c8ccf5264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbc21f1-eb63-4646-8e43-7cb933abceab",
        "cursor": {
          "ref": "c50bcc40-e731-4da2-8483-04c9526ac99a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b4cc1c7b-d057-491b-b889-b65dc5c87f7e"
        },
        "item": {
          "id": "1cbc21f1-eb63-4646-8e43-7cb933abceab",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "586b0cec-3940-4d0d-bfec-c62705c1bbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169ae6f3-4676-41d2-90e4-864d7b1447a0",
        "cursor": {
          "ref": "eae538cb-707e-4e44-bae5-464e6276d738",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cd70c318-5cc1-4575-8d66-16817629a98c"
        },
        "item": {
          "id": "169ae6f3-4676-41d2-90e4-864d7b1447a0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "86f928f7-f36b-4797-bfa4-dfe4bb59139c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11fa1b6-f5e8-44f4-a74f-2a96b68c57bf",
        "cursor": {
          "ref": "e475f9ab-6a1f-466e-9fc5-2be48810e67d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0fe81133-36de-4d10-833d-eb89ca85465b"
        },
        "item": {
          "id": "c11fa1b6-f5e8-44f4-a74f-2a96b68c57bf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "842aa0de-0aac-4d0b-8711-49ff29e47ce3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9bb22f-2b6c-4fde-9dc8-792aea310ff5",
        "cursor": {
          "ref": "09bf4290-1811-46e5-adee-8ab4598dd05e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f23c0178-709c-4525-b717-da2e07e5dc71"
        },
        "item": {
          "id": "7f9bb22f-2b6c-4fde-9dc8-792aea310ff5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c648a192-a199-49e7-878a-850c6fbebc4c",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "07620f37-bc32-4933-84f2-2fd2b1cd4926",
        "cursor": {
          "ref": "ba3f650a-77df-4b9b-a01c-10b7d6567228",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1bc35780-44b5-4bb1-abef-9735ab823d53"
        },
        "item": {
          "id": "07620f37-bc32-4933-84f2-2fd2b1cd4926",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0bbca7c4-f15d-411c-8ad9-8706b93ecf94",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac96692-92c5-4c93-b705-869e6842ef69",
        "cursor": {
          "ref": "3c6e7887-14dd-40c9-85ab-0070f1fe90b6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b7e208ec-6bdf-45c5-a293-24dce45d18c1"
        },
        "item": {
          "id": "dac96692-92c5-4c93-b705-869e6842ef69",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eef62fc3-2d18-4b57-8b04-a83223980484",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5269fdb4-7463-49e3-967a-fc8da65736bd",
        "cursor": {
          "ref": "8d28e996-5b53-4fed-a661-8bfd86b3fa71",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2214c7eb-fce0-4b0a-a46e-cc323a4639e3"
        },
        "item": {
          "id": "5269fdb4-7463-49e3-967a-fc8da65736bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "46240c2f-36db-4ea2-80f9-73b45dd8dd1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5269fdb4-7463-49e3-967a-fc8da65736bd",
        "cursor": {
          "ref": "8d28e996-5b53-4fed-a661-8bfd86b3fa71",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2214c7eb-fce0-4b0a-a46e-cc323a4639e3"
        },
        "item": {
          "id": "5269fdb4-7463-49e3-967a-fc8da65736bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "46240c2f-36db-4ea2-80f9-73b45dd8dd1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f1a431-1513-432b-92f6-ceb6d7f0b514",
        "cursor": {
          "ref": "cdb7bf45-8430-45c1-b124-4d7be318d3e8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bc7e46b8-a154-42b8-a537-9fc0aebf8aa6"
        },
        "item": {
          "id": "f8f1a431-1513-432b-92f6-ceb6d7f0b514",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cff8889f-48fd-42a1-bc2b-5d88ddcea408",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5486e71e-0858-4b40-b5d3-393aaa777952",
        "cursor": {
          "ref": "790fb137-85fe-4210-a470-966e8c68e020",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "35ab0112-91e7-4fc1-b108-876a771e847c"
        },
        "item": {
          "id": "5486e71e-0858-4b40-b5d3-393aaa777952",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c4e339d4-ecf5-4a15-874b-ddf65bbc8e22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}