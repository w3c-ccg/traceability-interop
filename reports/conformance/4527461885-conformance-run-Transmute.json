{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "82fed3fc-2cfb-4588-9615-e569211ab9b0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f756d75c-f459-4b7c-8149-bfe66689ddc4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "424bb753-a6dc-49f3-9803-ccd655c0f04c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd6bfd28-56a2-46a5-83bf-4b7c4a5c1811"
                }
              }
            ]
          },
          {
            "id": "7c5506a5-0638-4f72-8988-cb15979d9fe9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5ea894c-0bfd-49d4-b0ad-2fddc28e4499",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8c89c322-9e32-4a2a-8ba4-d5d24652d81f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1670dc52-9cad-4183-9fa9-4bf459f4a8d1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "38d332ee-5878-4d9a-adcb-3b841d1e4ae5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04c3e686-018e-404d-a35e-e050f4e7e8e2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b27c926c-e75b-474c-96c5-7febbebd67c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66e6fc99-5ebf-4807-b48f-739cce07baff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "085ee7ca-1db6-4997-bdd2-bcf7219bae02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d51e3f60-9a48-416e-be11-58b63e0a9208"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07a5203d-c473-4751-8c8a-084d285683eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19803056-6611-41a2-8652-20ba83f6c572"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6d7d9b5-915e-450a-b410-25a472596337",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "491a913e-08b4-4c34-b3cd-125d749721b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "687c3a93-288e-46c2-8768-d3a8e262607c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d681e53c-a339-4adf-b1c2-93ff2e5b12c7"
            }
          }
        ]
      },
      {
        "id": "90c78cac-50dc-4f05-9a0e-a9a50b90d662",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1401c4ef-fe8c-41eb-8b35-1bae37eed975",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77cded84-28d0-4cfe-bcb7-0148f63e788b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e4ce0b4-2958-41cc-9312-f2651a63528e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a351da-50d6-48dc-8783-644d1c616c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d2475da-3704-4e24-9955-597a4292dcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc32a766-b25e-481a-beb4-22620eb6c71c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b806b1-a9df-428e-96bf-fcf8d459b6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b928d3e-99bb-4c1b-bcaf-1f98636c665f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3aabb61-2cfa-4883-9e21-40cadf1fcb16",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c8be2e-c8d9-467d-bcd1-6144ea8bdd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4698dcff-8cc8-4b5c-a94a-dca273ad6041"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b5840a9-95ea-46f1-8983-2f0c7b61f169",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58442ce4-f816-427f-bb39-12ae6f9ed3a2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca96ef6-9b64-4965-ac63-41e6fed203ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "733c4071-c5af-4b68-ba34-26f16bfb7061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db81cce0-f6f8-4602-827a-5975f112ef62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abebb6b-a753-4d9d-b093-9cde91860f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850d757b-0c43-47ab-ac27-4618387467f5",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c412a78-f71e-43bd-bcda-6090026db199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d25935af-c620-40b3-8ed2-ab1894efecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a05fd4-74ef-4ab4-81f8-502f667efa23",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "990688ce-573f-44e3-804e-04749a7e20a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0cd8e6ac-2354-4859-a7bb-eacc46b8b51c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "402548c3-2e7f-40aa-b82d-4c03615f2a78",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69c401ce-43d2-4fdd-ab5c-c258551808de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "917a29a7-0d1c-4bd1-b0e8-15a301c6f5fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c4254b9-5f1c-4fc0-966f-e0842662fdbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ef9c15e6-4345-4620-a930-e96cc46eb6c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e09be227-625b-4d82-bbed-17c7d8ce633f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "508ebf7a-b8d4-4b86-8acd-e6231e300d8b"
            }
          }
        ]
      },
      {
        "id": "ea3ec071-375f-4642-a18d-b1eb6a88b831",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "58315acb-1cd5-4e6c-8b5e-733726aecc15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e29a8d4d-2a86-4126-82b8-513963b3fc4c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "72599979-b7da-40fa-af63-fb50d99ebb5c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362a0f2f-6635-4972-81a5-da35394c143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08974722-66db-4dbb-b2b3-9b13fdeb5208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df715e28-5217-474d-8b91-e753862700f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86ada1dc-8daf-4d9e-8cc5-886fb55b24a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7933fb-32f1-470e-9b4d-18b8f328f421",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc7cf5d-dfff-4a52-8710-095b92177fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a408f632-5f7e-46a8-9a34-44589710d14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeea307b-d61b-41df-8078-bdfaf6b3b923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "807814dc-8007-4307-9c18-7b5e893560c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b75df8b-8c50-4377-800e-04f61f411044",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df47ab3-c451-4ffd-a805-c6cf40d39203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7762755e-0b29-4b2a-9d62-ca3408cdfef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb9fd60-ba6f-4519-a67c-12ef7aeb378f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8e3b4eb-72b3-46e4-977e-3b998b78405e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3ebfb6-84e6-44d8-b509-9e0be3dab7c9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d0ecfb-eb97-4236-8364-0a6c9d1f99bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3c8a4f-c58d-4a0c-ab29-231418ad3156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289c6ce1-bdc1-4b88-a32b-e5879d6af449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c85e2cfc-b47f-4806-ae92-1619ff5109b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329f6bdf-8649-43c1-a6f5-cb2835434504",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cde693-cf5c-491a-9082-3dc7689f21a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c30b0c-1dbc-4210-8534-7b8daaabddee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13229f16-d0a9-46f7-b852-34623d1a0fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7a166b1-7118-42ad-be70-133b92abca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ad7656-3483-42ce-a9a2-6b93d73b7416",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea0f4a2-e3b4-4836-98a9-3cad538739cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafc2822-356b-48fe-a278-6d91ccef14f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9896835-cc1b-48a2-99f9-4b5987b90d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72ec770b-c6a4-47c8-a744-25188ee1c9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de941612-c048-4c94-b842-a2c72aa72fa9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfd4446-25f0-4202-8ac8-a863ce7fa2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd13b435-9c8c-4165-ae15-9d7802810cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc9f47c-4d72-4980-b723-7476affacfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5988a74-eca8-4f72-bb07-376d2b9a5810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57281f1d-c17d-4685-8953-44c085d444e7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad13c6c6-6ca4-4494-8d05-81a3058330f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c0f092-1161-4079-9ee5-bd1315b2039a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53bcdc9-cd5c-4db3-a62f-a3ed919326b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48b37c42-de2f-4a2f-aeba-c598c10f7921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85884fda-f1e0-4363-89e0-3f3bc765f691",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b21e819-c658-4e36-8f25-f99a365be8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6574f6d7-d80c-4bd1-89fc-14652df93c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416faf8d-fc01-400c-ac54-244d5a23ed47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33258214-bc6a-4aa6-a5a1-b1985a11b225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fcc3e0-64cd-42b6-b84a-ebad4b1ab6dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a098a9-ab04-40e8-bf73-71f918f39789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f363086-71f8-4d46-b39c-640387f3f430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac09fda5-000e-4955-8627-726de3ecf239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d94c620-e065-4eaf-8001-320ee687ff9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4029242f-0d13-42d5-b7d4-429e44bfdeb9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafaf111-e15c-4513-9e36-c33a4b9ea7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625f0de5-1192-4532-8d15-26dca332516b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9f6664-2acb-4f75-923e-35bafb6bf4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d1237fe-7185-4e64-80b7-aec79ec9167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03273b33-0dcd-49b8-b652-df7c7aa88cca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb90912-8769-4d58-93c4-0d54f0829572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2230535d-8af8-4f32-a97a-814ca1e96945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62fda02-7745-4c7a-aed5-24577de4b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed98782f-d8b6-4965-9bcb-9e069f9f337b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb545612-0ab2-40b4-9527-c059497e8f5e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88d65a2-a6ba-41a9-b8ad-0ec8d850184e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3158ea00-cc2d-4a5a-8117-ad4b9a731594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73408c81-d626-4b41-ab43-b2e8c030bdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30d97642-7d5d-4a15-9dd8-fed0eb6ca2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7fe274-faeb-4ee0-9951-8247500dbaa5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1d16bf-f546-468b-9195-235ffeb96880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e62aac-1a01-4456-8b4e-5efbb9b0e6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c4e9c2-3a01-4e8e-a16e-f72f65a358b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a40c5cf-800b-4417-b394-ad90e2ea2941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e80ca-a3a9-491e-9c61-bc7bd96099b6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b82b45-538e-492c-a36f-549d8edf8415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40063ab1-8e7e-49e8-ab3f-4635e7f66b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9275a3c0-8d62-4405-ab88-f6de66197942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a65327dc-0278-417a-b541-6f593350ae17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6d5cb7-7997-48e1-9135-943a0b48e0ca",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f245868c-83d0-49c1-8d9b-2f1b3c87be61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08e604d-b40f-4752-80c5-217636b53bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247ec88-9185-4a90-8a62-b95c4dfa4817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1dc4f29-8b34-4fb1-b1a4-e79f2a114d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d993da-8e27-4c26-be8b-152661fefbac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f155fe-a46b-468b-9bd1-fd25c5c4fbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f18dbf1-d236-463f-ba47-7e54d6299dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a419afad-a393-496d-9718-6e7fb9016a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3578191a-7c3c-442b-af55-9d6286150d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0466cb-f7ca-44dc-b2ff-098895c8aef7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b99f43b-5243-41b7-8cf8-4ddbd63b70da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5703d1-bd44-444d-a2ab-2fd5d919c5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95a42ae-f343-49dc-b17d-a92233832e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2973ceb5-31fe-497b-8cbd-d91aa65da35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c81ac9-45c7-4df4-ac41-13c1c2bd416b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd421908-96b4-4f34-a905-c950448af2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dc47a1-e072-4a2c-9601-5e18626017a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498aa8ca-3efd-4149-87a0-3c0352611097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96573a6f-506b-4af0-9a97-7ecb2a4e402c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9543f3-53bc-48e5-806f-cba11e32f210",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a36b4a8-7a8d-4a72-bfca-54ee52ae3c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728b33a4-0df6-461e-8806-d25f4ecb7c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05bf094-aea2-402f-8c68-2c1e131633b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0e9e6e-c3b8-48ed-8265-68afe9a5e22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ae779-caef-42ce-915d-5b89a7a68958",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff26d62-58eb-4cf9-94e2-f8afb85a8304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162fe70a-2f59-49da-837a-1dab826bde93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6972868-37c3-4022-92ff-7bdcb176c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fb2de0-439f-44d6-844d-2d6edeb97a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6863bed9-94ed-4fea-a25b-574aa0d8c186",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c627c1-0680-4ba5-8e4a-f0f0f4cfcc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977799ba-5931-4feb-8fa0-cf473e37b41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4669a4e0-5edc-4168-be08-81481a83754e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26971a0f-495f-4251-b080-706c2453bf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cc880b-0575-4619-8182-f07890fe4521",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e055fca2-0016-4abf-981d-0149bb11f8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d2cf38-ecfd-4d56-b489-af919a30264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff595030-5dfd-4cdd-814b-167aebaa4abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3191aff2-0057-4e16-869d-dd8fdbace77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be89fe2-e203-4be0-aa55-58c0fe42dfa7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667d306c-42b6-4dc9-bc33-5dbcffe8f95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6242033a-ff37-4b2d-9c99-6df729bc7a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a937284-d730-4270-b4c7-3a11b4299df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18da20e-cdc5-4869-bcf9-3c7d41063226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ea5efb-fb8b-4979-a313-d6175c613c4c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c325d5c-be6a-423a-a5f0-bce6a914933b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526f68f6-fa93-4738-8b00-a7e2fcaf9c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917866f8-5e0e-4896-8a68-ecbbf09b9a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3f2356-f8cf-4270-af41-27fac296d8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca3af3c-6168-459e-8d92-d9ef88345b3c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0cff26-48d8-43c0-9d24-016188819181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a11be02-8bf3-4bcf-800b-9cad1bf3d4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ff150d-aeb5-4c7b-acdd-aa5be0d79b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52a6da33-6ad9-4945-81ff-d01170827ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870067c5-3465-4264-9708-c5c1794df171",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d13bd94-94e5-40fe-9c88-cc889654862d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ccf373-1fd6-4845-aca8-adb535299532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b37db07-5bc1-4319-a12c-e15fabcbc844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19383bdd-c2cd-47bb-90d1-4cf04d51ab8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eca896-302e-402f-a809-f66636f31ed0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2442ae49-3761-4b9a-86cb-ec9a6a806bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadeb322-14ad-4569-8bc9-41950b700110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0bde26-4927-479f-8844-0daae83739f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eced935-772b-4bdf-b061-96ee9d54758d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda3f45b-99c3-43dc-a4f4-5b360902776e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a0fdbd-8873-4c43-9826-f5d29e1c250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8adeacd-0165-49dc-b97c-4ba31ef4cdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298f3f06-45b8-43b6-a424-84545146875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a53a58a-ed78-4f94-ab09-d78864e2e4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f3bb3f-d05b-401e-83cb-efe5ee28a32e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173cefaa-afaf-4b39-be10-84eb9ee10da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea60c1af-5b94-4eee-92be-0aaad8b778bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e930e567-7488-4650-a0e8-e05958be06ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c93a95f-304f-48f6-af40-745e6ac587bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ec1075-f5fa-4110-9d82-10ecc1236a43",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa155983-07c9-46bd-9294-f31ce43d21a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad568618-1fc6-4676-8660-2d603af10743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832022e8-a290-48ae-887d-59eddda6a852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0228d2-adf8-4b61-9450-b4035e34e727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b530fd4a-e77e-455f-bb27-f38337263232",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318812f9-e2b1-4611-99ef-21dc84c0b41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae344c97-136b-4e80-961e-513f002c8fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4babdc-60c3-49de-91f4-07cc6202d355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0f29b2-aca3-45be-b82d-0f193a3e8826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa5fb84-aa65-4dec-a30a-a219cd4fee0e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1619cb-e8d9-45dd-99d2-a4abd62f0edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480da191-71d4-4b5d-b760-080883078fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32417a0-2743-4bb2-8574-1ff759d37607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b005484-5908-47d9-afa7-f9437a44e7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be24709-6296-4dcb-833c-b0e0e242961f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87017eda-37a6-4909-96b8-7337ef9a7df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6c6ae5-6777-4953-a3b6-fde492bc057c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb54027-4914-426b-8134-a6b71f88756a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad02d715-ce2d-4e6d-adf6-7f50d7314adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21361fe-97af-4c3f-8c27-48fcd2122762",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e461d71-440c-4e4c-b3b4-acbbc3e1dd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff8a719-37ec-435f-be94-cd12d978ac7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a03a93-c092-41d6-b21a-ef978c296b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8baf9f7f-7392-4051-b674-0d6f44358d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bf913b-6271-4f0b-bfab-6e15ddca8c5d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c98148-1712-4d45-9682-ed810dd7eed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e3df238-6ca7-4d3b-9550-d96dedf5dc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97104661-4ecf-4e6b-a6f7-351264ec6947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db6748da-732c-40f5-81d4-a837a23fdbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef702c4-af3e-434d-bdaf-e78e6164eb4d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb719c4-b5f3-4a04-88c7-54774838aa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145e9302-fe7d-4059-aa90-a6abfb260781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562c93ed-2d10-4d3c-8adb-c6ef63e4a482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4407281b-590d-442d-bc4f-6fe07fa94769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4160d0-19c7-4f3f-a746-d1649d1d6ce9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aae66ed-6e4f-479a-9f1c-ccbe1c789b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4051fc77-444f-4588-91b0-7a560cee2a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea0d12d-6c80-4be4-81b3-45373e5c8d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6c9a11-12ac-456d-80bc-81fcb79627c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121576bf-05f5-4812-aff8-6555b381c9f3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82774052-948d-415e-b874-9c2c372ee394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0550a8fc-6849-4fda-9f71-457dadd1181d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffce713-404e-4253-9fd7-abda5ab6fe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f550ec2f-d082-4538-bbac-3e52528c801e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0485b72-3a30-43dd-91b2-08c1b1ff8d19",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aced67f-a696-4722-8ade-7b0732cb4a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2ba8a4-4c32-4b7f-bb3d-4b250b1c9600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159c225e-385a-4478-860a-d0311d76828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45759f8-9272-4284-bf8c-cd5215185915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa94153-5cb9-4cd6-a8dc-2c8d0a777ba5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a8c7d5-d6f7-4966-894f-79397ee1a843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fecd91-cf7a-4b72-9e05-df9aef7813ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314acce-10b4-4576-9a0f-a5977bd856bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f13db20a-d992-4207-9d23-64d12b28a2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39d72c9-5691-45aa-8427-f6f30aa2bb4c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869210a8-2f1f-4d8a-8513-7c59837fcf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca077fe3-f059-41c3-a601-e40713207ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2900952-a19c-4689-ab8d-6cb737fcdfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ee2202-2f28-4b19-b47b-3a498aaba89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1478fafc-dea8-48bd-a2f3-ab3d9a7f0737",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ad42e7-3f55-4ddb-ab88-4a6305b459bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb88284-8e12-4615-b9b3-50e8ffefb085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ed829c-bd29-47be-bfcb-75571b0ac3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf6d6fe-c71a-46af-9b7a-f64cbedf536a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd46d9a5-ce64-4716-93d9-6c85f924c820",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dcb575-0d4c-46fa-b8fa-0e3eac0d21dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12903f8-f139-4093-a532-ed4af80bd955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8efe56-c3c0-4acf-adeb-abce5f0c50cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "963f1317-bb43-43e1-bf04-4726ed9dd04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e4fbd9-eb22-4f6e-92bc-a52c2e4a4d67",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e79281f-46f9-4156-9ad4-7876a547e208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92810442-12af-4216-b7ed-3a3487c4f1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4fc951-d5fd-4f3f-9441-f8f8b906f691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9526fc-ec97-4241-8709-fb5d2e76c3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4504c82-7451-4805-88aa-66f16c1f6788",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820545ae-da65-4d3f-89ce-b5da1ef8ecbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b94a08c-9ee5-495f-8174-790a369a2f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175fa8d4-24bb-4ac0-a984-e73cc1033c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1608ae-1bc1-48ad-8b0b-daf2cc6fe543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c32af89-3dc8-458e-a2d2-026952bb5e5a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5754c055-d41c-4d7a-b9c1-e5887d3d2c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491bf1dc-452c-4207-b54d-ed8533bdf83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768c2fa9-8643-434a-9059-8fdd079d44e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f037cf-b9d9-4370-86b2-7a76ea89ef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51453ad-0359-49d2-ac2d-3686bd98b08b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff42fa8-2e99-4261-ae26-286dd571ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c2f4f6-f7bd-4460-b724-a751676f9e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3608996-4857-469c-9883-1846cc8853d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7dfa01b-d074-4ea3-ad1d-f5e5410224b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f237a2-4a9a-4cd6-a977-67fc8df3a98b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7790a20c-4120-4719-ad9c-f6d4c14423a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a871844f-7e5f-4ac0-9bee-0e5ea80ddc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19b65a2-f978-4c02-8e7e-59abe6d074f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "880b85ff-02ed-43ea-ab67-50180aeacc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddb107e-86e7-4bb6-bb02-4ad71ee4c38d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22e6230-bb46-4fd8-83b7-620eb94da3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eba2319-9f69-45b8-894f-6e4d8a84d683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26798e3d-fda1-4507-988e-475c70f43709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c56ec4c-613a-4dae-88fc-7471d68cc6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dbe795-d2d8-4f15-928e-5f6d39d3e5ae",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9c320b-1481-49d6-a723-50ebe35c3c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3076ded-f433-4007-a07a-75685ac64a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bb694c-c3e1-49fa-9cbb-79d6195f0793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3657fcd-dc19-4142-922b-155c442f4798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d4bc88-a638-4e2b-bf3f-6beb9c6029dc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff35b99-f2da-4000-a8d0-a963f5009c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb9b70f-dcf4-4fbf-8c8b-7aacf53ed69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eeb012-6921-46cd-a60e-28c6abbdd91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18a69b7-47b0-4780-8f36-06610acbb1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394f83d7-3896-49f0-9068-02fc43ac2547",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e1303e-25b7-4b70-987c-b5f8941fc729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0073130d-cffc-4e41-892e-8384fa5774b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d25d48-7e3f-4f12-834d-0948268e4743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45cb602-1729-40da-9cc6-f2e7adf525e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab77da5-454e-4a42-908f-0852489a4d3d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd0bc70-71f4-4b5c-baaa-dfd8a19ad9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280bba23-0d4a-4623-bbed-48b45a55af61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa82666-37b7-4fec-9111-4e94c1f82b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de620b6b-3d88-49d2-8e35-846fe676df8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b8e70c-febe-46da-89d0-6a30955d611f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfdc6a9-a0c4-47ec-a96d-91b12a1ce7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5ccdea-6ad5-496f-a073-5da6d5984599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0a792c-5d18-42f6-8de8-1186259f170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05fbe889-1c27-4f99-9130-9dc46c4466fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a14fc0-2311-4bf3-ab0d-bba07f5edb43",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f8422b-8e82-45cd-9933-b824a7d5632f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e26512-1be0-4d3f-91bd-601662f0db33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e595a9-5996-4852-9316-8dfbf2ceeca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "38142562-f6f7-4481-8339-9b59e56cf487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2c32e0-62df-40e0-a983-b6497626e6da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e060f5-d3a8-442d-839c-7a49d16d5d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5e5c4f-0fa8-4d44-b7ca-3835b5fe2d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eb5fd4-9ef1-4951-9e40-d98b0681c0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fad8d4a2-12c1-4b64-a524-9ea4fdf7ec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e14202a-6e3f-4762-8420-0c878d706717",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95adec88-18d0-44a1-baee-deabb646fd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f359df85-1f52-4fdd-afca-8d738b5542a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdd4d4f-4c11-480e-974a-819d1b2d0204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0882c3-097f-49a2-8460-eee6548b84d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38dc7b4-c182-4d2a-b84d-4160fda19e64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7b2ef-5ddb-48c9-a359-6f93a07a37a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f29cd3-644a-43ce-8fbd-e30abb4f0f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe77db2-fb0c-4d69-9fce-49ada0096df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c76eca26-3879-451a-a954-49885fff533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee62a84-4070-4715-9ee6-d299fc13e8f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08026fa2-b7ec-44e9-b68c-4683a6095046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84436be-0a72-448f-bb9f-ab3d0b89618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a895f7-2561-4298-b70c-d1ed5e692d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91522c85-57b7-42de-8f2d-4097be64fcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b716c014-f381-49de-8427-6df899ad84f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493adac5-6c38-4273-b112-21acb45a15ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945b7e6e-f286-454d-a76b-14070f6da442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2ca6a5-3c17-4a71-8de4-af94f57dd520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed32be56-29f2-48aa-9626-eb6f883bcfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32f0f66-479e-42a5-b503-368239d0d1d9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb368bde-ef1c-4e40-8822-7e32687e9701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5af3b32-80ec-4264-b619-e2fb88483f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7650fb-05a6-4910-89fc-66a376a6aaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "82583866-e280-4cae-a3f1-f033077a38e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04549c11-64e8-4084-94dd-b99a955604f0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6db20e7-d0d3-48ac-a01a-34db79d8c494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6485435-3bae-4c64-8e55-7cdad7bb0219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d61eed0-8c2a-4da7-a9b5-40aafbcfb7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b93fb0-a3c8-4ed6-8ab3-6c5a8e26402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f561f68-8b1a-42de-a7e3-59cfe37c73b7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f390c446-a98d-46cf-8321-363327e4dbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7cff6e-7884-4586-beda-c64e13b7c42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3269f2c7-c5a4-4d9a-8885-2d50e5022f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a889f34c-3fe2-47a8-89eb-15fd9b9ea335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9384026-7b92-4ab7-8030-a1dc96c63643",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb7cc23-0a41-4fea-9072-303d4065f26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ebe757-6b6d-40f3-9851-7f8cb9d25ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7cee39-c5af-4f8f-bf67-e393c42fbd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8fa5e3-c607-48ef-adc6-514169db4147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb9646d-0463-4ef7-94a5-1cc0d29f403b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f6ed07-3d8c-4f76-9897-a9de4144890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a988db0-4ca1-47ca-8943-0c3bc8302952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5a3dec-adc5-4c79-8184-684bea8fbb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80eba9e-804a-4b6f-903b-1cafd955a2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12191bd-f027-4a25-802a-fdec31388fee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf2e1c9-b4c2-477c-942d-1704b94b0b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb13335-2206-4939-b344-f807791f257c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab45ee06-9669-4686-b561-ee9555f8381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e99f6be6-f928-4521-966f-d3d961b5bb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8d325c-0ef4-44ed-83f7-1aabad751803",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659e30b4-c635-45c3-8f1a-dca3c9ad8831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f34f192-cba5-4de3-9271-bc54a71e5d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290202f5-dd37-4b40-81cf-84ac7c6a1fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9463b3-53e0-4346-8275-a1f8413c9f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11b197c-5077-49c4-b3d9-d7fe8e05f78a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9312f5-be8e-4a81-8243-850cb0522a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf72e1c-b173-4a06-b42f-eff33d4de3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e234ff-91d0-4b20-ae27-6c702f9b6f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "867e4eb3-68da-4c37-9e33-c3536ced8827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2620c35f-263a-444f-a084-6f9bb4e99ac7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce4abc5-9ff5-48a8-aedc-6081f5bda534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70f2969-fd01-46c2-ad2c-d2f5d5020b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3382c404-2268-4d54-96b8-fd6f155c3e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76bd488-ab88-4d66-b276-2cb02c3c6797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9fcb49-6d65-43a0-9f63-5cde44f6c3e0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2caa530-e80c-4c3a-bbf9-e1785391856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a495201e-6919-493f-a23d-c9c65c4116fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f313e0-59e4-4063-b782-bf97ac76fa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fb569d-299c-4848-ae78-9049b30f5458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f631ac3c-655c-4d98-8f4b-15c78a2492d8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2681557f-25c1-4a63-93be-ad4b55a31c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10921e68-2b96-4c68-88fc-c41ad1859b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2f0e4f-72d3-4002-a036-5e6435aedf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "997998ba-6fcf-42bd-bd84-d0fda1770053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0739453f-fdb9-402b-a8a3-d510ad4252cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439972ee-2db5-48e9-950f-9b47a885362d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9c5f35-fff9-44e1-95d0-fb96543d26ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeccbee-ba55-404e-aab6-72c72418a247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57c9aa28-f4c4-4c3a-8e15-b5ac8440217d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12305fbd-ccb6-4ee6-b0b5-d2860dd43781",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861156bf-feb0-4f2a-91dc-eef8bb8517f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f266af-3528-47cc-830c-bfedb22889ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0db7955-5a51-496d-a2d7-ca7a319d8396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1723bcd3-52d5-447f-9fc0-00400d72e4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88388e2d-773f-49e4-bfa5-d3da7136deb2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c60d654-4501-4fa0-a457-9e6bcb0ba9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed02bfcf-7651-4aba-a1f4-13ebd33ef8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b642d84a-b27e-4fb0-8ea1-fae81d87b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2e297c-6f2a-4b48-8ad0-c827b056f710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432c915f-bd94-4b70-a770-4542da40b667",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea7b891-3337-45a1-89d1-0739c15f27b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b1b368-2c89-4425-b936-3056cbc27cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2772f9ee-68dc-4c22-9d43-587e1b5b7c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea242a46-feb0-44bb-b753-3d0b5b8e1586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ea2ef7-1253-425d-ae30-3894e291b98a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5abb1-4701-416f-b724-7541275a03de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b37dc1a-2fcb-40d6-87b5-dc1a2294374b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa99e3c-f623-47bb-bd62-f3439eb33f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c44dab2a-3597-4c6a-b7f6-ef13d64f4741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8de505-5f40-412a-99ac-9f85fbbfd015",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e0f69b-b98b-47e2-9f00-f631218c38ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47f30b4-694f-4a79-bb44-de6f09d68c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e80cb-4cdc-40d2-94fa-27e618eefda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f849dfe-897b-46cd-ab1d-35f38b9ba01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17371623-d65c-4404-8166-57d1481c6962",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61bbbf6-98dd-401f-813d-ba2567e194de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1094ff4-b537-41f9-bcc0-abfbc8d0e5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761e9ef2-2010-4c73-b43d-01caaa6bab25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3352159f-4455-40f1-b10f-28127c3ca6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe85184-4fcd-4bf1-8755-f1c332ee84ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668457fe-c754-4a7a-8255-968fdf2beeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822d9be9-6c48-4365-bf43-b5b199c8b2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304f329e-46c4-43eb-9ec7-e41092338f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9df9df3-0302-4b83-b0bf-413a84ce2af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38aae945-58cd-4b12-ba49-335f502ba100",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af335f4-21d3-4bbe-a3da-ca6a1cf78d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349f4a1e-e6ff-45fc-a1d8-0b22000d9716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e176c7-48f2-412d-bdca-5c932209578e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c19ff03e-73e1-4537-b71d-6fca351f552d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b5943b-c442-46d1-be07-b64997ed5d73",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8eaf89-844a-4e9b-8e45-cc95e16532b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fa9a98-21df-42a8-80af-406ad63cbb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ee1878-0ac5-493f-8a43-0369b2deaf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccfbf8a-fa05-4c60-85b9-1e57cbbd7616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65842714-6d63-4ae3-8a03-dd8334d0b654",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecebd14-b7b7-4d55-8fd2-735db6295d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2918ab89-e5cf-4c54-821b-777190e3de58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dd6bcf-814d-4aad-a487-50c61207e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab8e888-7de9-48c4-82b4-c84e124f4c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4b1dbc-4972-4fc0-9821-5cef08ebd336",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfde6d73-a2ea-4de1-a5f4-74cb5a86b693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ab827e-e76d-425d-bbe2-12a0c58a8634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1501ae42-ed57-4895-acbe-93f604f4df1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b35e31-0222-43ac-899c-fa8930dbe54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8339d4b2-a62c-4c17-b098-5f9e630cf062",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca95f20c-f458-4dbb-b422-f58a026051e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7483e70-62ca-464b-ae07-7d784d81cfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e855d3-a03d-4a4d-8321-c615f895f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cba3f4f-b8a9-46cd-9cf5-f88898f50560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa4be5b-7e16-4ee7-88ec-4aa565aa70f5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc884048-f49c-4b43-bf61-2e5941091e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7b73c8-af7d-4545-879c-0db40388956a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c68b55-72d3-439f-9b50-a2359c37df5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "539b1533-65c6-44ae-ad1f-73e7d87579c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a6c4b6-ed79-4dd7-b002-908c763eec07",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7af3da4-2137-4a72-91c2-a4f3081488c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfddefbf-8d3a-48c2-9e6e-a297c7e04fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1937983e-1116-4aa1-a0af-3a2ba7bd1ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b93018bd-ccc7-4abe-beb5-a590343a9b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa7dc76-ef4b-453d-a4be-8a2f49efd3ba",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f980d4c-d55b-45c3-b9e4-666facad60b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7770c63-6932-48c4-898b-4fcf5351008e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f875e117-af8d-4109-aa3f-13f365644638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40846d5f-7889-41d1-aee6-1bfa3485b15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be826c1-5a49-47be-ad48-b07d679b9693",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412d3db3-0be3-4e86-a0a5-218d8d96de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36a53d8-61ed-46cc-993d-5229974abd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9f12da-f32e-4977-8fe0-69f39d8c185e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b795bb1-5b41-4305-9fa1-b7cbe532d2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe1d80b-f84c-411c-9c26-69449b601eb5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8d711a-c52b-4829-98c3-cf0157763869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be65f26-7c8b-46b2-9f33-10a2141eed46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da2d3cf-d6d2-4ab0-b227-3705003df341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac78134-5050-4cc6-9c47-84704383e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ef4c28-487a-4463-9cf6-52e0048b43ac",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072528b8-06ff-44e6-aabc-d3ccd8b5c8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864f498b-1c2d-4d79-89bd-c4061339d934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc39fd1-5db2-423e-913a-19cefeb3b49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b73532-d692-4880-8836-0896050025a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb435ce-2903-4f56-9967-0cd0af40bd50",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171dea71-2893-4083-a795-fd0268c5b836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dcd3910b-1a14-4f07-8282-3cfcfee41220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc702f5-406e-4ea0-8c2a-348335069af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfed475-da11-4e4a-bc7c-4d9d85c63aad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbac5bcf-7109-4c39-bac9-855fe5d5590a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ff7fd2a-388b-4716-9574-2d998423c2cc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9df3a84-afeb-4b6a-a2c0-e934315873c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac4a8d7b-a80d-48d0-9e61-e87f412f0425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a78e8c-7af1-47fe-80d1-5230c7886834",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecc4ae30-883e-4745-ad89-8e6ff0da2b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd0e31e-1328-4215-8722-62a5786eaef5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7d42b0-7ca1-4383-b5af-7c37fc881202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02bbf472-b0c5-4dc3-beb7-836c8d01b311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2444b331-3728-4eda-8d52-13c2c24e4a7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9f5345d-3a2f-415b-ada1-b7548893e20b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcee4a84-e059-4804-8596-8c69041cff39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16309d3e-21a3-4a37-a76d-17843bb4b1ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36dfed6d-663c-4bdb-9f47-df1ec85888da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddc55906-10f3-4678-adc8-65aa4feb050e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c771ed3-65c3-430b-9f0f-db8b30ab66ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89864be4-94d9-4a64-9a4f-e9b63fbcfba9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0daaadff-fa2b-49b7-a872-e8e5bf180151",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8ce1e7e-5dd5-4141-81e2-b1b2a351a981"
                }
              }
            ]
          },
          {
            "id": "e6146471-5469-42f8-b24c-a1dad4e44d7b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7b3fd98-99b1-469c-a1a6-4985288b2aed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61fa7221-0b81-41ae-9dba-f669f92e1a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd25d4dd-8084-4730-ba61-bf3e9b84193c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a377699e-004b-46e7-8b06-657d775bd0be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0d3bbf2-c926-4e9a-8ba5-5476f19c6917"
                    }
                  }
                ]
              },
              {
                "id": "294c086f-9ccf-460e-a2b1-5747b0ed2d38",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9583ce2f-6c58-47e3-92b6-fdb8a001bc73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06f457d2-bf6f-4052-ad5f-9f5cab6b9e7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c65643b-2e7e-429f-858e-98aae351f511",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e7015cc-87ef-496f-86a9-48474459fe6e"
                    }
                  }
                ]
              },
              {
                "id": "a78727b0-aed0-47f2-b487-b02218b40f41",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33c5ade8-2435-45a8-a1bd-c9a6bd72e4da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48c84380-57b7-40b0-9304-afbf42e3f162"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e58f684-6720-4c4a-a298-b32a9f089bf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5a77b2d-2a69-4536-9572-3ad3d93c3ce7"
                    }
                  }
                ]
              },
              {
                "id": "65fc230a-633f-4c60-a4ac-38c0648bc531",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "935413a7-64f9-4401-bd25-e652a8336849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79baf2b8-1315-4c63-95da-9177c80d9449"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87a87b47-0d92-4910-91a4-471f18fdda0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6aeee39a-6a6c-4a84-bfed-c5fad6e0bc60"
                    }
                  }
                ]
              },
              {
                "id": "eca6765f-47bd-47e5-9c1d-7ff5fcbb5684",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "625ef26c-3ed2-404a-bfc1-ed9c6bc88fba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "003cb1fc-d7f3-4e74-9ecd-8faffa054ac3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fe2f28e-bda8-4bcb-b377-76bd3f6e8847",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "395b0bc2-772e-47a8-9fb0-a9a25d288787"
                    }
                  }
                ]
              },
              {
                "id": "aed3f9ee-cdad-4459-92e1-f2346c92028c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ce7e8a7-ffbd-4e9d-82ae-32c820724cce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9424528e-c05b-49a8-899c-e7dfca3f720f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06be31bb-08ac-4626-ac6b-521079d56ef1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1a86cdb-f7e0-4c57-b501-f42698a3267b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "746d2308-245b-4115-a298-9f5d854b627d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d18e73c-9d83-489c-98f1-bc8e9e04ad78"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07a269f4-bebc-48b6-b376-ef9261618e4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2cb4d29-e95f-4078-b715-8ab9aa4b2bbc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98a377d3-bdb9-45cd-b874-8cbd55398dd1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "591ec90b-bb04-4325-89c2-2109a86f57dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b209156e-00ad-48c9-a519-814d1bfc8db9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7780a1b6-d92c-4f4a-8e66-d75547e532e8"
            }
          }
        ]
      },
      {
        "id": "8806cd4f-a92a-4576-a783-604278ada6b1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dcf88fa7-b68a-4dcb-a476-4814e7a750aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80bd4b0f-9bae-4b06-87b0-8088b0e599d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "244cfb43-0cd3-46c1-8a4f-ea8a85c3b04d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595ac06a-ec91-483d-b73a-0d6e283469b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0af7950-4d3d-4ad4-8e80-b1321851f912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab4f14e-6232-42b5-943b-0e67dafe1115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d472ca-03be-4d4e-ae32-6f61beed43d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffe2cfd-6dc0-4925-9629-a8e502d9bf87",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce481b15-650c-4f06-a53e-75f21be1d4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c8d90f-89ca-4a88-a168-0fff283bf63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292d850c-4b07-4120-abcb-5248ee90899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b57ff188-8628-465c-836b-45086f9a060e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6533d410-8177-424e-8032-a69245a68853",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6c487e-3943-4b6c-beae-3b91b5b729bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d849e768-b9a9-479e-b969-476829efb8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a39a09-5658-4de1-8b71-50d40f3f0e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8240f62-278c-4568-8210-c0741886999e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b238ec7-1733-4531-87a4-eb52796f87b1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5f47c3-f2ab-494c-9b2f-d57ddb7c2054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4cb3c7-512b-401a-8405-5c1543f64aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b552344-de85-4875-a921-0b2291349616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bd7f23-6bfe-46a3-916a-1a5b029319a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b608ff15-dcd9-4b71-b30c-7dacf1a0aaeb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27520f20-4586-492c-97b6-db70866f29d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d232a3a-f262-4085-847c-5b3c45c5ebca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c4b3d-4665-450f-a56b-23612a1ac84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3111904c-1591-4b06-abaf-39330ee70fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fad2eeb-ec7a-4e22-9ac6-35ddcddda1e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9432f2b7-6205-4660-8fe4-64f83ad580e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338ed300-2b91-41c2-866e-6999f085f6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7335691d-ebed-48a7-8994-6b0df18f7861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1796cf-ef15-4a8e-a03b-31dd0c2beb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dbf0d9-5b7d-4d50-902b-741c37facf22",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5632425d-e097-4f44-896f-86d144382d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb65b0e-f069-4f2e-8a4d-406980f6a8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd18bdb-ae3b-491b-a84c-2ea58a6edab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a8c05e-ece7-401d-8446-9081cf72a863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3118d07-3ced-4a4f-ba6c-656a8d61387e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c149ca22-9a9f-4bcf-bc1c-357d16f5fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb587f8-a70e-4b8c-8a4f-d3a6426da15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef2297-75d2-408d-9fcc-11d0d239d153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3806f67-fa63-4889-a53a-2abee817be86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9115635-c449-4523-850c-1cd11b2489b9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777644b6-c49b-40ec-ac63-41af1d12c3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd891ef-d98b-4a76-a410-404679b24b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40629712-6abb-4d87-a72b-1d015ef0fc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66620992-6ffa-4091-b8d4-79ac4f42a4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba25f20-28b2-4f78-8452-f23d14ff09e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6811f1-bca3-4264-940d-4304cc4ffd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a563b292-6ae9-4ded-8397-14b6e8b4c587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc784aa-d006-4d35-81ed-5d4c20642bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "517fee80-6c21-4ec0-95be-242a2844c69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26099a33-3404-4ba4-8132-67dc0c248ee7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cf6ae2-6992-4c3c-b40b-5f6eb47a84cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bdb3de-0cfe-4fd3-a8ef-d7b66758a883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e938106f-85c1-47ef-92cf-cd46a974d836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b71007-5fe9-47c1-b31a-015792719b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50701fa7-26a2-498a-bf04-515026ccda37",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e77e05-e8f7-47bb-a5c1-9ce608aed0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013e69e5-d1ee-4f07-b847-cc29f7abdcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09d38d4-5bfe-46da-851a-5a909d4afdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4cd72a-5876-41fe-937c-1b35b583e17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6c1851-c782-4758-afbe-41b02a92b33e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae2b2c9-37f6-4455-8240-2afd20367f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9418bf7d-e18f-4bc4-ac3a-62d48ea82ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b508e4e-7eeb-4723-ae8e-e262bc99a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d67994-502a-4d86-9a89-2027db2ead47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5708eb0-9e34-407e-86bd-ef68af44a589",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66efd829-c6b8-46eb-82ab-ec1bcb7f47f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6724570f-53af-4e9d-853e-8ee7114ea2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01fec7d-0871-44b5-bc56-1136597d0aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6032453e-2e6c-4d92-afc6-a7c17f5b4fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4516ea3-fe98-48eb-84b2-832f1c0fc6bf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96d0cf8-750c-49aa-914b-4330fd9c976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f5b6d8-73fc-4373-9e72-7de2b6fce410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbebc7dc-5af1-4dc1-b4e0-a555d6187297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "237d8f3e-c9d3-44ca-9d60-1e6435fde0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f0aa35-55bf-4106-885e-6260a3f3fd2e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8faa0a-6bb9-4c25-b327-f5f791204abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52152c60-ed86-47a1-96ac-0874b240596c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d107ef8b-3ae0-4586-962c-f2f84502311e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "487d320f-1cb5-4a79-b42e-808154ee031c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58230981-04fc-4269-9d23-edb721de12f1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6909ddcb-e3ae-4ee7-80f7-c27b168e1dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149e9859-fa0f-4cee-a691-acabfabb9e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbd792f-8d25-4e4a-b0ec-7442c6bba26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d992342-a1e2-4613-b657-82d1039e0e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cca3c2-08ee-4b22-b898-f978c80106fc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88efa7dc-7094-423c-a95e-6298a0fccd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d16563a-6660-4f76-b628-1aefb196a92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bc5fbd-4528-4706-b648-367bfdf1b0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0340fde6-cb7b-46ea-bfea-2658ef684c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5512bdbf-e18c-4ad5-815e-f39c8eed512d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a0f431-3f86-4be9-a102-23e40cb730d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56b351c-5752-4738-a822-1b6511149071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc8ddd4-f9a5-462b-9f9b-2394f8ce68a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f4a09a-b1ad-4d4e-a7fb-77a3ca707414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b71cd62-59e2-483b-9eaf-68f73ecfb504",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994bd76b-a2c8-468c-9a85-f2de61d85c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398e7ad7-cd44-49b0-8b8d-b96eb5ddaec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68372c1e-a1b7-4646-adfb-953bfbe5aaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609a1935-9221-435f-abcc-de16d14652f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eba1e54-7e65-48db-802f-69d1828cdedf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6109fff6-17a1-41c1-b1aa-b6438d24ca50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043e0548-f8e1-4d82-930f-fafad0ec5b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a25bd83-1189-4d40-9d84-bf6e3c0e6f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0fe0bd-cc6c-4bac-9e49-443bb28d62d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5930d89c-41e6-431f-8a89-24610d4443f2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01306a80-f4fd-462c-916e-e50b8cd1d966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369c9ec0-ffdb-49ae-8ef5-ac50fd011c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d8ee6d-c317-4a31-b079-bd6d24158d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7f9ac3-fd38-4707-823e-01ccbe251384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf5f91d-d455-4967-8a61-68263f2d00fd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22be5b52-996d-402a-9b1f-dd467f9ec57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e29a76-c986-4c43-9a23-6557265bce0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3add14a5-f005-4bc5-97d5-6fb8f96d70da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7ffb77-7451-4f3b-9681-79993996b291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddc516c-7491-40b3-b0a2-88423c2f7b27",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f14ae4-ca7a-47a1-b2c0-c30dcf25affa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a33832-46e2-44d9-a9e2-7c2811efcaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5f181f-bb59-4210-be06-23165eecabdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46ef3e2-8d2f-40fb-a044-7e6b8f106d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed03cf08-ff31-4b1a-adbb-60d32e841ac3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ea22c7-4a88-43ae-ab1c-c6c70e8d269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beee3575-f4c2-4305-8ea7-5abf148dee76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01200be0-d597-4e07-83fa-16efd3608140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9256b7-6dd0-46a8-8810-3a89bfe70dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dae4f7-07e9-439c-a61f-464635934ada",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3a8ea7-cf85-4329-a03b-9648e780ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db030f94-3a63-4663-8741-e4574909063b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56955bc4-4e29-4f13-b0fc-50199a23db8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a35565-0e69-479f-aafd-0df151927b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076da42a-dad1-4fd7-ac3c-b7243e638863",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caad93f-b4d7-4767-8dfa-16dd69a73f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9492a1f7-6de9-44f7-8382-0b7fc4c8cbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8294ef-a6c7-47a0-8748-b48e9fbf21c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f081da5-001e-451f-8b5c-6bc306049fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ceef81-2662-4553-bb3e-063b099c13d1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac79e6b1-bce5-4090-b540-4a7d145aa9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ee45f9-8a0b-423f-9c48-367e6a4a0037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60c382f-e352-459e-9d9f-56b7539da854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a14bec-9fc7-4abf-b1cf-976f33d04e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abb03ee-d101-43b7-898f-20b764afc834",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f5a4ee-a988-40db-8ab3-17ef8cb99178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccd7a0d-2405-459b-bfa3-7e0fde2289ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc1b2b0-b449-45d8-b3f1-2ccf3d288365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71485a28-966f-4715-952d-8bc1a197be8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435e69cd-21ac-45bb-84c0-f675fe012546",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3651a520-c80d-45e8-b461-d51445aa015f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55491b8-0a46-4e44-bbf9-73c50436705a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df36d0e8-4a45-4d11-9ea0-911571dbb13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6087ad-1504-4925-ab8c-91ca9c775781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d6799e-a5a2-44b9-8da9-a8d8dcc2754f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7b1966-43ca-4876-a652-1b4a2e3d6eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06389922-e646-4c92-b900-3bb8ae6961d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cb1971-c0d9-477b-bcfd-9943943b4b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "606e6bb8-abe5-47b8-92b3-f1f014566b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93febaeb-a4ba-47d3-bc1a-891371f9867a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822dc628-780d-4be6-ae95-c2064f7b4381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c01faf8-dced-4d41-b006-fa428db40e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc58111-823c-407e-858f-9bec2ce10bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e3bdc2-ce4b-4610-96c1-f99d7aa6c4c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d50f6f60-8a38-43e7-a54e-d5130d85385a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be9c2c17-0309-4629-936f-04bfca926421",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d968018-64c3-4b91-8660-a3e9ca384120",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e763d0e0-af15-4b0c-9ced-3689f48d7d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bb08ba-a022-46ff-bb99-0f5009df927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53127b51-3261-4a68-ab75-8cbf05da25c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b020e42-35b4-4079-8c0c-1f327f795128",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a0b8d2-08ee-45dd-91a7-58deb130b92f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3194370e-1360-4f5f-b055-41115656bb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19363228-01da-48a0-85c7-c2e96d4dbf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "872871c4-d6f7-4d41-9e7e-7d9c6643f109"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c68dedc0-a37a-4de6-bea0-302383f10f57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02640d07-2a49-4500-b591-4c6247d31065"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71c5b601-4bc5-45fc-894c-368c92994a90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0863f19d-a46a-4ae5-92c8-b0144b3d813c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43a9f9c0-e337-43d6-8dd9-96993f670fd4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9434b7a0-55a5-4f81-854c-359c369ae637"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f5565a1-0c78-46b1-845f-c275f9af1107",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9e1fe26-3805-4921-a09c-52aec41b0d13"
            }
          }
        ]
      },
      {
        "id": "58aea731-a029-4ea8-84b8-f3b282a0107d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "091ba194-5481-40f3-bef7-943d0499410b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24a923d4-2c1b-45f4-b7f4-93233ee3f99e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "180d6d64-d638-47f8-b78a-ce950391ab74",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2042c031-be40-4c45-ac96-5ac673999c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b111a20-f1e3-4a38-a9d5-d15c8b5d25e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0517c02c-d9ef-454b-a4da-d8267ffc83f5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8b2d65-364d-4cb4-979b-0634c2a89f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c421c6a-c7c4-4684-a5ec-9a7640f3e86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c62f71-5799-410f-a871-51b7476b5c4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4d6b24-a64c-441d-b323-c286b0974282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c635eeb-91fd-4592-bf71-7b2155479cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b06e09-1c71-4d51-a9a8-3025fb4d9df8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66912adf-84ca-474d-bbe1-e9cc36f87af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c49e6c2-d985-4cb8-941f-f7ba35571158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ce5e08-74cb-4155-bf46-e6f121ac4f22",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c114937-9344-4eea-ade8-3f204ef44bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01d5ce4-67a5-4614-9d1a-2fca9c7d03d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fdcc6f-4101-4cad-a713-84b9f1d95906",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2220d13e-fb81-4000-b14a-f5e03145cb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037337ce-8de2-4509-98c1-ae3bb00702eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bd359d-9a08-4bf6-a967-e6b034ab98ce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1388a836-c929-4891-9849-54e3ef437a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f31d713-c078-4d0b-a46a-acee8c97fa82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e920e80-3de3-47dc-97d1-69390a2cf1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54273421-e737-444c-918f-3d935b5f55f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90278798-e791-4a96-8664-11935265a247",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07c3806-1593-49d9-b323-d3100d4c0260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c30562-2e88-46f1-bd67-b26e9777ce0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8279c0-8f64-4d9a-bddd-48d97eee2868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7f592b-f9e3-41e5-b57c-a5f15d4337e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365658b4-58e8-42e4-9f52-2ddf257db4ff",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbb02da-75fa-472b-a488-058481d0f203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "749e2b1d-7e0b-446f-9fdd-80387563ed04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f89e168-939a-40f5-8734-38ccd6dd90a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942c0874-f23c-4108-8b06-3572c6afa0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fbfa56-6393-4798-94c5-c84373526ce3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddffebd0-f7cd-4e58-9309-167480373b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2c8e56-1f64-4d31-95ac-10eb5e14d232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321beb92-51e8-4ca6-9184-a05b7ad8192c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ca8888-288e-48c7-9a68-6e70c07597e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a90b40-c775-448d-98d6-d1074a718734",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa7b82f-d171-49b6-b0dd-da8a9bb8821e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07122761-20a2-4e5d-b757-bd4dd5cbc253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1742f74-e982-48d1-918f-489a3427c07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a831f8-f835-409e-adec-52d685402ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b31f91-48d8-4fed-bfcb-01debb73f833",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe10b6e2-b22c-4d29-9e65-5c406f57857a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8a3b1a-ce9c-43e3-a86d-08d6ed7c579c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cce154-4661-4b4d-b7a4-6d865cfad3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b80473-c30c-4a13-8db8-f3d7d84138a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb93553-1b28-4563-8596-18358595d9a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bf84b0-dcc3-4445-9296-17501cc029b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b31c101-9c09-4862-84bd-9757a1c88092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18b40c1-4289-41a5-a37f-a3f90bd63709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384afc06-3926-427a-b952-6397cb50e101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4580a5-a0c7-4e9a-a969-9743f484f030",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b90030-0be6-4283-bd1c-7fa0a5548432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde37ccc-9186-46d9-aaa1-4fa2a35fce50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52a3e8d-4ac8-438a-baba-69f6a40a283d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b25b10-521b-44e6-a347-d3167ef8119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08bae63-3246-4c21-bc2b-1bca96761d8c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd0c9f3-aa9f-4ca9-bd21-88ef883cebe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507773ca-5e24-4e95-9e31-db5df8629ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02992d48-7ca3-412a-8f30-0de05d6f4a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a0a6f2-19cd-408f-98b1-3d4b56482002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bba586-43c6-40bf-9cfa-dc8f98d558ea",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e80cf21-c7fc-499e-9d7f-2425d413b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eeaccc7-2516-4675-8ccb-955a24ed7ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca64a5e-4274-40ad-b441-5db512d25e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e479df73-c7e3-4ada-9914-1697c90ce9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc5c05c-35b8-4f07-9eb7-ee4d8d32b84e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad305ce-97ba-446c-9c6e-6c96dd2ea17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd971356-c54a-4cee-ab11-6548041d440c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9312052e-b825-453f-b70f-6dc258ba00c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce2eb58-4366-4fc5-9f86-e5b50c624fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c5f7d8-411b-4298-b905-7347dbf44cd3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d269f4a1-0766-42d8-871e-6d9ea549c2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4fe09a-e54c-46d9-9787-9bc7cdba21c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85846d60-1f55-4f7f-a164-0504ac1116db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1ae533-d744-42a7-85f1-6fcc5cb40c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee836b5-1885-4aa8-941b-afebe054deba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58e4e8d-2e65-4075-82e0-49c07eef50d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6046a8ea-6d50-4280-8614-35cd2e246f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547e7b80-d5e6-4c72-b62d-cd21c36b95db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fef76b7-47f5-4bc5-b843-695dbcc65caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a900b3-70e2-4f1f-ae0e-b6d7432d60aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a399e1a6-c079-49f9-a273-0075eb4b4ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2f90fb-445a-41b7-b615-9a03830b316e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab957635-e532-47c2-b16e-c18f0a27c6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a9b1af-971b-415b-a832-21b1ac744a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f2e208-4011-48e9-b639-e517951f9a58",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efa615c-e8f1-4423-a87a-958c651ad1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0ada10-8535-4ae1-97cd-339c63671be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a3b1c4-d078-462e-8599-d277da0e4090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f10bb6d-d157-40ff-a892-a7f02d9f1357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9005e3-ca32-41e3-adbc-7f05a844e895",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621eede2-f23a-4dfb-b89b-6aad8e35b56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7c9b78-2a4b-4be2-9dbd-461e55d068a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb52c33-dc6e-422d-8349-e17b386685c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc085953-fdae-4ec6-a62f-196e115baa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeac0d91-e3d9-451b-8767-73161d49186a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d098ecbb-b303-4702-bdae-6134df052bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bbe02c-a86b-4568-9d41-a274bea693d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f79920-d33d-4621-b998-cf12734d4b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71b0859-55c0-4dd5-86d4-76ec65c265e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d626b6fa-97b1-4f88-aef2-f3d1c7088ce0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad49aad-e72e-40c7-b566-99c31aa07c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ca2984-4d02-4ef7-9b2a-8ab9a4f79b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776d1dda-32d0-4aa7-a0ef-b7dc3878463e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b78bc4-8a56-4704-a3ff-b502a32277e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182dd8d9-f324-457e-b73c-889b6e623900",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e221bccd-6187-44ee-ac2e-2ce63526898e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50a04f0-dc85-41e7-b48d-f9610f63ef55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cfb2e3-d334-41b0-bfa6-afd443bd1ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e59111-c86c-4c6a-bc3b-dc6668ad787a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d527bf-54b4-4c17-89ed-65382a9b9d30",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8471fe-e00b-4343-ab26-4f492dee9c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe247d1d-07ef-4489-9509-1e097f03b2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade6daa2-17d6-4797-8437-d1b7572cce39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f8df23-a7c1-4a3d-a8b1-2d0f2067e109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633e1879-c9ac-40b3-823e-73d609bc1964",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4aff33-776c-4997-acd4-33c3a2605a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06269174-88ba-4e40-b4a6-2f6519964ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00fc2a4-4fee-4886-8d46-a276f075a060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92e50d9-013d-43ef-a938-bbbdc5177459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afcb1f2-e6c2-4e4f-b57b-2c72dc295a99",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42160e64-4ee7-4ccd-a5cf-cd055b89b2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c374d9-4f3d-429f-aecc-d25400ad14c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd5b99e-52b7-4dd3-904c-18a98094360e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f82e1d9-7f6e-473c-b7dd-ff85e14d1357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee468660-aa61-43b4-a66c-46a15022f8eb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f089309f-faca-4167-a0ea-bbc043b2a530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4105cae2-ba9d-4bea-8cd4-3ed39c6fb65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af80c5bc-a8b6-42ff-acb4-6881d2466bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7fd18a-d464-4e2e-bce1-e5562affbf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e61270b-c10e-4b39-be4d-d0e27c09afe3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e19c89-242d-4c05-b863-3a8629b6eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ab369d-a6bc-4133-93ba-568dbd773a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0707f1c8-2803-4361-bd6a-45d9d18db698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2eab0f-c61a-4638-98b6-047c30290c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd87c04-5da1-4949-9954-ad815b758878",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1abbd3-a01f-4a1d-a7f9-ecbe40a80e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0319d83-4b1b-4e77-8323-618e24708099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8572089c-5ebf-4f3c-b525-6e929e404711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72a0f82-22c7-465c-9c00-b9c7346be29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8b994f-1045-4a84-afc3-01a877fbd2c0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9885c354-b818-48ac-a807-0ce0252ce01c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07eb4fa7-64a2-4b4a-85ae-3f029f67afd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e08f0e3-3834-4102-a93d-302d2465db1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac8f7ce-615f-4d09-a4a6-aedcafbb7bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3367a09c-c9dd-432b-b655-0e4fd6b8b868",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c921e3-af8a-4a15-a846-1746f3f9dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b1c287-f1e6-4ef1-b73d-c0bc6fa3794e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2c5967-1331-408b-a4a8-31cee6427132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b760db-1ef7-4ef1-9811-1cc84389c972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b51381-df53-400d-98eb-832ced43e18d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aad019c-5e68-48a7-a904-8aab7998136c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c18fd051-aa20-44ff-8de8-5d94bcd9de2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd299b44-3a75-49be-a821-26c101c16efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f925a7-23f2-49a3-a900-2e380cebc9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fd481a-3935-472d-88d8-d936c35d82db",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4731d6d-e0bd-43f4-ab5d-84d11d65b2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4587d6a1-df8c-4e47-9d3a-4b6ac207fbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c354a54-16ed-4f37-92b5-fc6334545a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f403c4-05b5-41b9-bde9-35771e05b3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59db554-468b-4fc7-b9ad-17873cf3b824",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc3b0b6-8a95-4028-a46f-2c07b9786d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c2d24d-8ac4-43ae-818d-0abbdc9bd775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7539eaa-379b-4083-bb7c-cb2781228c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c370cc-0da3-4859-949d-b6ce7da6a35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a5f793-5638-46ea-92a0-ee6a8cbd37f0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49846663-9e2e-472c-8388-f221f8455070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c799b47b-b3db-405b-a442-86ec91f359fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252c341c-297a-4d77-817c-9557d303786d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f42624-02eb-4a06-bb25-d5c168eadc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5a287b-3654-4596-8d2f-9ee053ae6a9c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8139042-c2dd-4642-8c23-574e9060b92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6e4f9a-7c31-4a0b-aa46-73806e7c97b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f6d00-946c-4fdd-a25a-49b08fd3a8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b09a947-41b9-46ff-b914-aa47e0a85b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e1c72f-6ef2-4bd9-8c41-5318abe6fb7a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304ac5f9-c74b-4af3-94ba-dafb144f4c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a03d4ff-3f51-4cd8-8dda-5949bd701083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fe9960-030a-4bfb-971c-ed0fe3f6f013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24134465-a07f-4509-8870-6203f2383ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2c2ca6-631d-44b4-aa52-65b2bd311e54",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f667f9-ce87-4430-a80d-ccd59c521000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1c3f9f-e70a-4478-9e46-5a15f6c15f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd61f90c-bbe2-4646-aacb-8e0d0913e815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7deddb-8974-44eb-8bc1-a89a26a5242d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e82f5a3-645d-4455-a67b-0d8ac8a306e4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c4a283-5caf-4256-aae4-8e24cb170888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79c40dd-0fbd-4222-9809-b072b08226f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8450e64-82ca-457a-8a83-1f97180e4f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b18fae8-b599-4a7a-bbbe-0209fdd54f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6218154d-9b14-4764-b517-f60beb58698c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d63598-4bad-4520-a280-e4dec71ec491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830abdb5-2c70-47f1-9d51-bff9f2b4bca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c812ce94-4650-4691-bfb4-9de51fd318db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f66d05-b4ab-4d82-9fc9-6ffaeb9ac62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178747c3-16e3-4295-ac17-f23da6f7d019",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d38fb8-5c19-43e6-8bbb-a915abd874b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845e9e5b-567d-46bd-b35a-70d32df51959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b91743b-f9a9-41ed-ac95-2b40691b36e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbd5a91-4f23-4032-82bb-b8388a40fbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066c2aea-e265-48cb-9ed7-2ade173ab0c1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ed86ea-12d7-4c68-af21-f9442d194087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206ee690-0211-480e-89d4-15139b85f976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ee719b-a196-4823-9032-bd635a733e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e51fcd7-f315-45db-902e-68fb5902612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88143d0e-7540-4ec7-9f1b-22b96cccdeaf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4fd885-7de7-4bd3-b43c-570ee49c489a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0456944-c242-4f36-9934-da2703117384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7610106-92ac-4e40-9866-d824729d5f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ac5652-7f65-47d8-86bb-564dd623a3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52194372-8520-4d10-aaa2-5e3867322ed1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55fe3ad-5195-4615-9661-301f70cc501f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccac144f-7b8a-4132-b0f5-d0c2976e5165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e11287-f963-41d4-bd25-e99cdfc86e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ee2a38-d6c7-47dd-8a02-e1e045e467a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad26ab-60f5-4185-a21b-129f70491764",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5779a4-ef17-40f9-b445-a7622ae7fcfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2524400-b935-4abb-a4ce-f5cf8fe25471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d11b76-c82a-4946-8e1c-f4d472cb9b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427b2d14-e11d-437f-a005-4c591fd99309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734c5484-21f6-4926-bfb7-4681bb62f6f7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8be93b6-1153-4057-bc74-a134744c4f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0674fa14-8a0a-45ce-b772-c252493faaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c4055f-f601-4de3-bb92-1856f8f1a5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dd0fc3-ab18-4dcc-b0e7-5a0ce7715848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dee6039-a6ed-4fd6-8168-0ca258c89a0b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3849a70-46c8-48aa-a2e9-669365332c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021f981e-f011-4b57-99e7-8c2b18365bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef19712-61b0-4d8a-8a47-6a7839784079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab120d88-0e55-4481-bdd2-c0cf48ec388b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcebb73b-505d-410c-902d-83c673c9c575",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684be337-002f-4998-9515-a6a882d452f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21ddfac-cb6f-4cb2-b4a6-94ae66d1af0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45598a3e-f38b-4264-978e-5f60a96e45c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2402eed7-a2b6-4e9d-b770-0de4de90eb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e374cea-4ffb-4644-940c-606a6b65dd21",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114fb0e4-e930-4dd0-999e-dd6e39c92fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c537550c-a185-4914-8c2e-9a2798bef7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209eb2fb-37b2-4f55-bcef-38a4bc7314d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c0b900-3ea5-4a95-a07f-ea018218b771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56befdf8-3e93-4823-a0c9-f071bceafdda",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155777f4-0080-4ff3-9d9d-67e4d9d96ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be409c60-c555-4eeb-9316-596b41970d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61906048-71db-46da-9393-62b0880381dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77036fc4-77cb-439e-b627-b988530058af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c97c8ea-6da9-4869-b4d6-745298229884",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ca8300-50d2-4a80-9a54-189e00d37480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503e4cd2-e0b0-446f-910d-45c4bed52d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a23fb72-a04d-4d7f-b507-1e97f4c2bb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e0e7dd-d9c3-48f2-9d21-9eb9ee57267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383b9c97-97ae-4849-8f9f-bd2ca12c3372",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eab8b25-3b03-43cd-9075-95e7a5f384df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a32e7c5-fdf4-4786-9daf-611e8f7ad816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e75693-560f-430c-bec4-c0c0222f1e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31202346-9205-43be-af98-91e2de832220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e6904-9ec1-48de-af54-d7a1b9aa06bb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0433cc07-fc75-454f-80ee-e57ee44c0e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6d9c39-ba31-4958-9ad1-fcbe32d1aed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27547020-f586-46db-962f-18972459dbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6286254-d57f-4c50-a3b8-585e56d826cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88f9ed4-9c41-499f-a0ae-c22424a21804",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14955f0f-1e65-4c63-8bcc-1d941d771277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05776be0-0c03-4afc-a073-941ccf6cb24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1ff43b-e071-44a8-9933-27239cf8bfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264804aa-0ae6-444e-ad90-56a4f89962eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b782925c-90d8-4d0f-bf6d-e76f1c448e09",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f27ce3d-2aff-4735-814d-0e1ae39d238c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d4cc04-52a7-4f81-84ce-0d6316948e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb182efd-a178-47d1-9bdc-6652be1e9b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dad9ad6-bb63-42a6-a688-4834cb7cc14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7750a4cd-7af9-4602-a4ea-e1411e5ad53c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768abb63-37da-4ba3-8a06-7801260a92bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09777cae-4960-439a-a3c2-84e2b4e45e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b5432c-d538-4c5e-bec2-63c320f0bf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f44070-077f-46c6-958d-e6771c732aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d3171a-6c3c-41b5-86e1-0f0c4924ae2d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba96a54e-5166-42a6-bf16-bc4adbc2f4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6f32c4-7c31-425c-8855-9aa5356d93da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c40d6b-3747-4e4c-bfea-18259bc58a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0095dbd8-2d0b-4f56-b46b-e60de4ab7881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928717fb-3cc0-46e2-8cef-05dd8166a314",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a677d10-e784-4c93-9abf-1831d47ade47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ae0c03-781d-4b6c-9905-6208a8324615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ffc5ef-c51d-4478-9721-1ecdc2d5a26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a77cc6f-36c6-4492-b225-83f73df413ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfd0445-e078-4aff-9112-e257a0a83041",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45030691-b05c-4929-b2a4-b03929aae8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c98da1-0aca-4ed2-8e97-dc49d9a7f434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1e49d3-ec6a-4dfd-b352-125fd978a3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc819f3-f04d-4558-a6bd-68e14b178fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ffb1ed-1d63-4013-a15c-fdc1c32e7baf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295228a9-a815-4a28-a6e5-7157effe59be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c3e241-7d77-46a2-8e56-e33a534e77f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84a4b1e-ffc0-4fb7-a451-6d85410df330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ad50e6-c881-4ec2-902f-565d7d3e756a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1183146a-dacb-473b-9809-ffbae08257b6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3f3de8-3c08-4ab0-962c-cb5cbf742568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49340964-9f45-4c1e-9564-4c28e423a026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a937e6-a5ef-45e7-ab68-3ff0b29dc5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7eb8fd-57bd-413e-854e-09a9ccccb8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35790f08-7f2f-439f-9c15-285c7f6ac791",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3a2b1c-1824-4c59-9131-b3d8471953da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b780946-df71-49f8-b6ec-a9a879332573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f66a4c-cbf2-4ca0-b303-8de5e903d7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9892201b-9b0d-4dff-8279-0050db0d8479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e6a58d-9da0-4d9c-ba9e-84965b609b3c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64368f6-3ca8-4e0c-8da6-322b26d6f6cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c080223-8ee8-4669-a118-62058ebc06c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52af6fc-d431-4e5b-a5bd-bc3ab516a0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c807f9d1-c7be-4219-850f-cce9851da55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7456f3f8-db57-4030-a2ce-1c23e7891136",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b421c67-40b5-46a8-8911-61f39c68d95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ab16db-1086-41dd-ad6c-72f1e1e04e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69c0318-a581-4971-9e0a-6351f8ee9ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f070179-134f-43c4-b2ae-460d6a6f5142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bb6592-bdce-45ed-9dc9-a523e9bd86c9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675d3766-5bb9-4608-87e7-d68155887871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82731f91-d32a-4852-9db3-2d2bd768e3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf96758c-88fe-4684-ac9c-f54a2ed3fe1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46effd73-1d04-4b62-b467-81394a5dee5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84a4404-98ff-47bd-8cc7-25b15c055f1b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872b52fb-7bfa-4ec0-a727-9be267cdddee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa2607e-6c7d-42f1-8337-c840ddda66cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de246345-02df-4125-9ec2-e50709c42be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e410587-064f-489b-a86c-f42c79a8a924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3243cf20-99f3-4c67-ac0c-c98881c78c24",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66fd375-e5c6-4fdd-8550-2f760f822f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63252a9-78c0-424c-aa41-bb6017e74aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb9e284-66bf-4196-832c-a39e425477e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ebcc7f-b99b-44b8-8d3a-be131f832aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9daf12-444c-48d6-a922-e06aea2e50e6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc6bb0c-31a6-44b1-aa52-3c6108ebbbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bbecd90-74cf-4f59-a9ae-f7219ad0694e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0819b7fc-9baf-4870-bd9d-9e680bfa2365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb149d86-0785-4eb6-9c2e-fc6584943d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ece9b7-7edf-484a-9739-4b4578abdd3a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6cf775-8d66-477d-8f1c-3657e5308bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247aed7f-8cff-43cc-87d8-99589b6fe802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82be298-cbc1-472f-a5df-2e778f9b2059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353a6c8c-53b4-45bf-aac0-ed5e610ecac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68c3ebb-7c6d-420d-b437-025d7fbb85f7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61163b15-74f8-417e-9b18-aa93201e00d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05458143-76bb-4aaf-9452-dcc89f860599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8226aac6-32bc-43c3-8ac3-70463ad600b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6870304e-ed88-4890-9563-bd687b463f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e664ad-bc1e-4364-9779-56feab9d6ee6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c97a79-7c53-47bd-83a1-c7b439734b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819cd1cf-7ff9-4d9d-ace7-bf093d9e5b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4300010-3ebf-437e-a1e7-b70539667e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59975bad-df54-4643-8060-b4bddc364068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16398067-a103-41b8-b326-1b49e667899c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8114a41-beb9-4b4f-94f8-873463563cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d765a9-b4f0-4557-b5e5-1ea304925da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d03eb45-7551-44d0-b277-5b5f1636ed5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2aa58b3-d7a1-4e32-b869-c39ce33e9d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89b07a6-8853-42e2-9aac-5310837dad8c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52b832a-7fc7-4855-a7ac-bba5ff566c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a1ec2c4-9115-4409-9f87-d27a4ea8cc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac92bbeb-d976-49ef-9121-58a57928ce1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7ec657-c510-4bfd-a13a-43dc1334dfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94dce3a-01b6-497b-8e85-845daf04f664",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f30a20-6047-40fe-9a56-6e5de6cf8a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fcad224-ee3d-426a-942c-ba0a800c1c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fa9700-ee08-4661-8281-4ddd15a05690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb6c94c-ee06-4697-81a2-fad5e84d1169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06925a-1fe1-4a93-8c71-8e7e94393c9a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17a7f65-6ceb-44cb-8353-ce014c9771fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c05a25e-7814-4c63-ba57-83043eac3ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a580b8-0cde-4a28-8b5a-16f2bab8ac54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9410439c-9661-4900-b67a-5ab4f14a4a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0547f41-6409-4817-bcf8-ba3904167e4a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0c2636-0686-4034-b5a4-563154c6a56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1cf5a0-0f80-4ffa-9053-21ac2df4dfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16209d3-6220-4950-a6de-465477bb242a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e0ff3f-f397-4850-9514-debfb1e51c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca70d515-6e63-4ff3-b7b7-9f9ec5e9e1e1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee68d682-6bfd-463e-9644-51def7a0b78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83215090-a417-4fd0-a3de-ccef565dbc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c24acd4-a8d9-48b4-bc4b-47f0e5096b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99848e5-f144-4b1e-baae-56066f1b3671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc560cb4-8448-4044-abd9-daccc75812d6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65cd2df-ba8c-41d3-a0b2-54abd2638179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9316192-5251-4813-a68c-0639d83f3134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a2d6f5-cfa9-41ff-ae00-9e3d78fcb97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2e10cd-a403-42fb-a108-1947dbf53128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f528c846-edf8-429d-8f65-e30b1801d75b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe5b43-47d4-4c8d-becd-a8a41eec7b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0635128-5f49-4b66-9a81-db6342981a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156354c8-b742-44ff-8dc3-c3eecbc22fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cca43fc-796e-4c3e-8c0f-5f2f93c249c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b097937e-5cec-4d91-9f5c-b3dea47ace66",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdb5b33-4d2b-4626-8914-b38457fa730d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ceb7e4-42c8-4bc0-8e04-acdf86ad0167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae367846-ed98-488c-819a-d8c0eac18e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1987e5-fbf6-4aa0-b2ed-120dfab25b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f49e23c-68ad-4b9d-9abb-e54b661cf904",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999a7688-1855-4ec0-8094-f9dbc3b7545d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab036a2b-bd8d-4f81-8a02-d71d720e9fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ed591-98d9-4729-a118-d4688101d9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4563a228-dfb1-43c3-969c-59e1954c560a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c13b4fe-487a-4b80-a1d5-a35349de5a8f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb554d06-9adc-425b-87b1-6b3b05140309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b329cc-ad3c-414f-ac8f-81eba87a3ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091bbf01-7ef0-4e78-adf0-29c62f189dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5aa7586-f3f3-4b67-a916-51dce5e51360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c745bdef-7ee2-4623-8a5e-e6ce668c48d3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f163692-6fc8-4b4f-99a2-74ac0680cec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696c7fa2-85b1-486f-9df2-ed63c599b67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6153dc87-f318-4300-9511-143e96caddd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187dc184-32e2-4e54-b847-0811ce0b40d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d8a8c-8455-4c4e-b00c-ceecb4921966",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399d1bc-aebf-46b3-a7ba-9aaab5131f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19644226-e6b2-45dc-bb7b-955be83b6fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d481c9-c7cd-41ab-b156-fc08f7e9ce67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8fe2921-04d2-4a7f-b691-12f7a2799c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2e92c6-0d66-436b-b0fc-4ef7c89936e0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaafc62-0dc2-425b-b8ef-ef8e28bfda93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c6350f7-8569-4b39-8f7b-23ccf57f44b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2729b11-1d3b-453a-a0b6-fb039d824ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c12c4c-83f9-437c-a09a-811a8bcec4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cfaa00-e175-47ea-92f0-aa0f76d2020d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73eef65-3b70-41c9-bc81-1ef944a4e2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "119993dd-1d99-41de-b3ff-9938d8d63ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40b1a30-d30f-47d5-87d4-97b89ab76d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766aef9c-1ff3-41cc-a44c-b2a88db54ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6250d253-cc07-4a83-82a6-65fb04522a1a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4759a85-1c5f-4791-b17b-954ee763db77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38901b32-68e2-4a64-a0ce-a7a7c7d5d4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0ea2b9-3b46-4b9f-8903-9e1715971d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d75c5c8-bd0f-4aa1-baa3-35314e428bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9fb92c-0808-4e1d-ba50-2cd754d9aacf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99e615b-25a1-42a5-a35d-afad9df7937c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd080a2c-d6d1-4975-adc3-684a35c940a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c2ec66-2470-4d79-b1a7-6fbbb990ee0b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133a9c8f-500f-4fa1-8e8d-e13d93fd07a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32deb977-0e3d-4abd-98a9-2ede7bd56955",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26439d7-8219-4fb1-95c7-2eb9834bb911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213843ee-1432-43d8-93e4-c22910107e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f28a9b-7fbc-44b0-9c1a-3577c6596e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be19154e-3869-4839-9f46-d3535e6bf18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438468d6-5905-43d4-a3bf-5ad66c4aba41",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f434de74-ac33-4dd6-89e8-e8f0f2e2afa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9017e0-1a6e-46ed-aceb-59bddba1cc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acee71dd-b439-4d8e-bfb9-f4b23ea96f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d25f79-1b66-436d-93c0-2de70799750e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69657a27-21c8-4037-a3aa-517d2ff33efc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f1ed1a-1725-4428-a9d9-c1e17a5400e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b4a74c-bf12-4b31-80cd-ab4508ce777c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00b8552-a752-48cf-868b-8be613641da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d6fc02-5583-4250-bc2d-21bab9cda5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d03f13-9e1e-46b7-aec8-7236434224b0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125493fd-dd07-47d2-abbc-c99bca16eb4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28709785-2b12-4216-a355-01df5020570b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ee160f-e068-4e6a-b649-c207ab9680e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa59a82e-3a81-4bb4-863b-42e0940fe98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d949d8ee-50c4-4676-835b-049a0ff603b8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bae095b-eb97-47aa-80e3-de2bbb146162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58fbdaeb-03a3-4f84-8c87-6fa81d28b168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353c3cab-a5ea-4c18-810d-6cecba2df763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac7ced7-8c90-4fc0-bb12-166e11f858db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee08e575-415a-4e9f-a109-9398f5f02192",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619911ae-5192-4343-9e96-be147b4ba5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30676d91-1295-42eb-be82-4326b532beb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd93319f-650c-4c96-8b2b-5a24d5426d58",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318abff2-62ba-4457-b4a3-da8d4067fcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906eaf1c-a6f0-4f21-8ded-6c56945f1f01",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b948f19b-306f-4735-9711-17e9ec5a8ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0084f4d-3572-4fd3-8dc5-026612d83938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29eac4d-552d-46a6-beba-240f12ec4232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ecc4e9-5cf2-4920-852a-152440918382"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c90912af-3188-4ba3-beab-80252bf0bd23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cbdfa47-08cf-4546-8e4f-45e62a5e0006"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "482b00cd-8315-4d39-b39b-9066512a51e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2915da88-8504-4ee5-8be0-998cc50e6c0d"
                    }
                  }
                ]
              },
              {
                "id": "d59c164b-320d-4060-8f7f-e755a2a13a37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aaf97c3f-9440-4c31-9761-8d509c3a48ed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d626cc73-f443-4dcd-b6f5-15af7fe0a48d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "67210279-a223-4079-97f5-bf4ac03a3dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27d247b-cfac-44a5-a486-572d2eb7a74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcb4ffd9-ffb7-4e60-af30-8c5cfda620cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7773e1-9459-4fc9-becc-983025834f76",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762f49de-e532-4072-be05-715779f8ece8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fd748679-7f3c-48cc-88ce-32b57dcf0dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf0d960-dc84-4608-a5c4-218ed35be399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c827a273-c289-4487-b5e5-fcb73fbf28b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39b1522-24ba-4e6f-b440-6641be27ca60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "289eb5a5-1a28-413e-b8f9-d846b9f48ac4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3213f94c-1cfb-4eec-b1a1-dedcb497752f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e73a892-52a8-4ac3-9e12-83baff84cff4"
                    }
                  }
                ]
              },
              {
                "id": "5ef0e645-f630-4b87-ad62-6de7a329ba8b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a5eda28a-4a97-4d06-b3e5-4d91dd5cbd40",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827e8ad0-87f1-4af8-a90a-610ef4145655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2feeba2c-ea2b-40fd-9bf8-12e36c39cbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63598528-415f-4bf2-a23f-a9a2399cfc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5e369c-5c28-4358-a011-264b0f2057bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b40b284c-b884-4241-af7b-a5db3cd10179",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9744f83-ba05-4f0d-9776-71ccf82c0f68",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "929055d4-3474-4b6c-9a67-ff901736d67d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f6a4a45-8ff7-4fb3-b357-09f08e7740de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a58ad35e-c2d0-4a4a-b78e-95b204800bb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8de02c45-82da-4209-8561-45cd8af3ff34"
                    }
                  }
                ]
              },
              {
                "id": "b45f7590-7abe-468a-8d73-e780c81fb638",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f407121b-087c-4815-8eb6-9ba13c4e645d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1e9bbada-f7c0-4639-bce4-9bad7bc7a256"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8dafa9a-4f4e-4b99-9788-e89e1b267010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b6cf37a-121d-41be-b2fc-d65d332e0509"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fe50fca-d625-4ef1-849a-fa53942d147b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d53e0641-2ab1-48c1-8b31-c48331f920a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f50b7f6d-4409-4cd8-8085-baf573b6ca02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bb7fc36-bac5-4205-861d-dd574b5fe926"
            }
          }
        ]
      },
      {
        "id": "7590d604-ebfc-4f51-acd8-fb396a0a11cc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4fc7641f-6aa2-47de-a99e-df03a76dcdcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12687321-cf3b-491d-ba37-558896c7c8ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5434fa23-21f6-46f2-a02e-827051f4e18b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1c1fae-3175-4708-a62d-ca38f9035efd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02f72b20-248c-40f7-8a31-22ab62ae665e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b1cbac-c34e-44f2-b240-cc1388a07ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88aab9c6-ab76-494c-a799-80e4e02daead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8deadb-20d7-4bc2-8c82-eec9080bb272",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec77b355-2dd3-4f4f-9a6e-181ce4172484",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "661212e9-66fb-42db-8f4f-2ca2efcc7190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c54459-222c-4fe3-a226-5179fcd31788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d0c4847-0b46-4c37-8804-d832eb643137"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbe33b1e-fed5-4f7f-90c9-a7a1b8219880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bb207cd-5e2e-486b-85ab-b047a17e161d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57f756bb-09ec-41e0-b3ae-ae244fa1e3f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d738d5d4-b5c6-4734-b466-aca8c3e3d277"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10a9f42d-34bb-499e-8e7f-cd570ce16e60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "05a2b3f9-f7f3-423e-8aa7-f309c612cd98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fafd4c97-02d6-423a-9955-c39bda06dd8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "404cf7c8-cdeb-44a0-98e4-17fa30ef01f3"
            }
          }
        ]
      },
      {
        "id": "9f2ea338-72c7-474e-b5c6-35fd8ccd8126",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7014cf55-cd2d-4e2e-85ca-9615e66b2f6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32247a1b-7bd4-486b-9aaa-7172dad1ed05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6af6d395-6a1b-4d16-924f-1c8a205e9a1b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deae0147-0ab8-40d6-a490-90cac5b910c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c96865-367b-4ead-ab51-a18cce62239d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bf01dd-62cc-4b81-8c54-befceb1c32f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c1f6a8d-1981-4ff0-89c0-c59f9b11b114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bea9a3e-e17b-4ab6-a48e-0a089736ebd1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a3d979-19a2-4bf7-8545-c00f2c50b719",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "403be4db-0a73-4766-a763-929b2928d441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e779c6-2810-4b16-a986-6e73afe34a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "947bb20b-989d-4a52-a2b6-22bd195adc83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64e42a98-b919-41e5-a049-92a91ec77184",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa4290cf-3a53-4712-8906-d635a8dcd9c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2051f45a-9bbb-4ebe-9a6e-09504bf5cc23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9d52d1e-cc29-4c1e-9146-1f5741b68385"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d6d6262-4b45-43b2-8089-d54c3d72aabb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a351288-1c84-4d19-8c4e-b0f361f359be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e15ed71d-5e48-42d6-9123-4247e637acea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cb9c09f-326b-4b66-bac0-e30e0aa4386b"
            }
          }
        ]
      },
      {
        "id": "06c42976-5b86-4af3-b65b-eb3e31e1bc73",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "307cb58a-2de3-434f-a938-bca1718cc604",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65e10382-3b40-42c0-962a-228f6da935c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b73d8fd8-9b03-4190-99dc-41afbd2ba5b4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5592c9-bce8-49af-90d0-61caf930dba1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9115346a-3bb7-4127-b4ab-841503342537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d4f69b-9890-4b8d-a08f-04fd7d969a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00b23e71-ea35-4e7c-917f-e2399a6167d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4219b7ce-ead7-4821-91a2-168550e20f43",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f007a8e1-8d0d-4865-9db9-e67e9f844728",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d0df74bb-94da-4d11-acc2-19d20d51057f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c2f3bc-9582-42da-9894-d2f349a75cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d89230b-0d79-4d73-81ff-8f3982a6a009"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23b23eb4-ca6c-4c7b-90a8-535a47334313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a02363a-bd32-4afa-b0e9-ddfd412a64ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0c0422f-bb65-4b08-9377-327e6f09b7c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b48738d-9cdb-4b97-ba4c-18676ce33e93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75421400-cd1a-4700-abb3-08f0a7aef739",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f569fb26-7520-4907-846e-4a91bcf2360f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "725c5c6b-1b4a-4671-89da-6d5b04db9f14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1af5697-3b6a-4657-acf6-8f359e5f1802"
            }
          }
        ]
      },
      {
        "id": "6638a607-af2d-4811-a2a6-8271504eccf1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d2455eb-92ab-45d7-86e4-caf343cc5c65",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fb74cf0-ca51-4a84-a866-6ab57a80c687",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "87936ff1-04e5-435d-b13c-6f2db4a64095",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb0a1284-8d01-4c40-8adf-98719b83ed20",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9a84ab1-2808-41a3-a5c4-bdbbc1296fe4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 743.3615384615384,
      "responseMin": 19,
      "responseMax": 7583,
      "responseSd": 900.9733028047306,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679877445503,
      "completed": 1679877650097
    },
    "executions": [
      {
        "id": "f756d75c-f459-4b7c-8149-bfe66689ddc4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4390a55b-4a1a-446d-afe1-710a38c2ac01",
          "httpRequestId": "42b24950-6189-4f36-9d18-73725dffe9ff"
        },
        "item": {
          "id": "f756d75c-f459-4b7c-8149-bfe66689ddc4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a1c1967-adc2-4c32-acc1-08e40d262f85",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 0
        }
      },
      {
        "id": "7c5506a5-0638-4f72-8988-cb15979d9fe9",
        "cursor": {
          "ref": "88415172-dc31-4db7-b8a8-e6fce42d800d",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e4a6421-2f5b-4960-afa2-99b9513ebf2b"
        },
        "item": {
          "id": "7c5506a5-0638-4f72-8988-cb15979d9fe9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8ecdc14c-f2ca-4431-b3be-d36e63fe1565",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "04c3e686-018e-404d-a35e-e050f4e7e8e2",
        "cursor": {
          "ref": "0d3092db-9ab1-405e-a2a1-96765dd8099a",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf28dcd9-8b64-4970-9680-a155625be98c"
        },
        "item": {
          "id": "04c3e686-018e-404d-a35e-e050f4e7e8e2",
          "name": "did_json"
        },
        "response": {
          "id": "78f68138-ab63-49d1-8885-ef0dbdaafff1",
          "status": "OK",
          "code": 200,
          "responseTime": 5015,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4ce0b4-2958-41cc-9312-f2651a63528e",
        "cursor": {
          "ref": "f74add5d-13c5-49ad-95b4-bf6095adba48",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "93656204-44ff-41ab-8176-03fbfedbcfe2"
        },
        "item": {
          "id": "6e4ce0b4-2958-41cc-9312-f2651a63528e",
          "name": "did:invalid"
        },
        "response": {
          "id": "1792bd7e-e318-4bca-a32d-a633fea1b73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4ce0b4-2958-41cc-9312-f2651a63528e",
        "cursor": {
          "ref": "f74add5d-13c5-49ad-95b4-bf6095adba48",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "93656204-44ff-41ab-8176-03fbfedbcfe2"
        },
        "item": {
          "id": "6e4ce0b4-2958-41cc-9312-f2651a63528e",
          "name": "did:invalid"
        },
        "response": {
          "id": "1792bd7e-e318-4bca-a32d-a633fea1b73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc32a766-b25e-481a-beb4-22620eb6c71c",
        "cursor": {
          "ref": "3008370b-3f05-4c8d-91fd-8cda277c5561",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "08150ab9-242a-4bfa-8e1f-e213a1cdeda6"
        },
        "item": {
          "id": "fc32a766-b25e-481a-beb4-22620eb6c71c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "76350e6e-2654-4c5d-9571-646d17e32cf1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 643,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3aabb61-2cfa-4883-9e21-40cadf1fcb16",
        "cursor": {
          "ref": "a48e53da-9375-4434-ae93-5554104dc771",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "943b1e79-a86c-48d5-aedc-56e913e35997"
        },
        "item": {
          "id": "b3aabb61-2cfa-4883-9e21-40cadf1fcb16",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8a542052-76eb-4202-be09-cb4ed11f793e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 604,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58442ce4-f816-427f-bb39-12ae6f9ed3a2",
        "cursor": {
          "ref": "e818fb45-61bb-4b75-b980-8baa29c02f64",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dfe16312-1a55-4ccd-bfc8-6a446cb4e328"
        },
        "item": {
          "id": "58442ce4-f816-427f-bb39-12ae6f9ed3a2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c5b42dba-9b09-4d2a-8233-02b6375d7fda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850d757b-0c43-47ab-ac27-4618387467f5",
        "cursor": {
          "ref": "357b4379-365c-4e83-bab3-436d7ff3f706",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "570f8dcc-008c-4b1b-b3cb-56a212efb5a0"
        },
        "item": {
          "id": "850d757b-0c43-47ab-ac27-4618387467f5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2b3e03cb-b640-4ecd-981e-e25351935c31",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 593,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850d757b-0c43-47ab-ac27-4618387467f5",
        "cursor": {
          "ref": "357b4379-365c-4e83-bab3-436d7ff3f706",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "570f8dcc-008c-4b1b-b3cb-56a212efb5a0"
        },
        "item": {
          "id": "850d757b-0c43-47ab-ac27-4618387467f5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2b3e03cb-b640-4ecd-981e-e25351935c31",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 593,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402548c3-2e7f-40aa-b82d-4c03615f2a78",
        "cursor": {
          "ref": "f3a2c103-703b-4ebd-bced-e754aea3938c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "01f5b9fe-0421-4c48-b17f-7bfc186c42bc"
        },
        "item": {
          "id": "402548c3-2e7f-40aa-b82d-4c03615f2a78",
          "name": "identifiers"
        },
        "response": {
          "id": "391773b0-6466-4d78-b46c-740ebf03a621",
          "status": "OK",
          "code": 200,
          "responseTime": 1156,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72599979-b7da-40fa-af63-fb50d99ebb5c",
        "cursor": {
          "ref": "15c27fa0-87d9-4208-aaab-4c1b313e6a8d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "502bb3a7-66a5-4667-9e43-795144cff967"
        },
        "item": {
          "id": "72599979-b7da-40fa-af63-fb50d99ebb5c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f9302560-ab81-4dc8-ba5b-885d51a402fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72599979-b7da-40fa-af63-fb50d99ebb5c",
        "cursor": {
          "ref": "15c27fa0-87d9-4208-aaab-4c1b313e6a8d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "502bb3a7-66a5-4667-9e43-795144cff967"
        },
        "item": {
          "id": "72599979-b7da-40fa-af63-fb50d99ebb5c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f9302560-ab81-4dc8-ba5b-885d51a402fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7933fb-32f1-470e-9b4d-18b8f328f421",
        "cursor": {
          "ref": "2e6c66f3-2eb7-4967-98d9-8ae11512145e",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "348f9cd0-8845-4e92-9b84-78651b68028d"
        },
        "item": {
          "id": "af7933fb-32f1-470e-9b4d-18b8f328f421",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8372c701-dbfe-4c6f-8fc9-e8ecbdf9f548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b75df8b-8c50-4377-800e-04f61f411044",
        "cursor": {
          "ref": "e1150b5f-2513-46c0-ac82-d7b01c74cf10",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9d2b69a8-dbdf-4e8c-b4a7-a88da2d73072"
        },
        "item": {
          "id": "7b75df8b-8c50-4377-800e-04f61f411044",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4ff6591f-e6fc-4aba-bc14-61d81dda68e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3ebfb6-84e6-44d8-b509-9e0be3dab7c9",
        "cursor": {
          "ref": "47e2181a-5d69-495b-a9a9-34535ce58a61",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c67c6a0e-4817-418e-abf6-4a7d17fc499c"
        },
        "item": {
          "id": "ce3ebfb6-84e6-44d8-b509-9e0be3dab7c9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f8420576-2158-40d2-ac58-22bb656ce29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329f6bdf-8649-43c1-a6f5-cb2835434504",
        "cursor": {
          "ref": "100ea8f1-f7fc-44c5-b880-d4090d667d02",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb93afb7-423d-4323-8b92-cc64385e1266"
        },
        "item": {
          "id": "329f6bdf-8649-43c1-a6f5-cb2835434504",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "17768785-c21c-4416-a2d1-daf7aff363b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ad7656-3483-42ce-a9a2-6b93d73b7416",
        "cursor": {
          "ref": "82af06ec-3abb-4646-be31-c06a58635cea",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "42f7a9e7-e027-4662-be2f-d9a6fdee76ef"
        },
        "item": {
          "id": "92ad7656-3483-42ce-a9a2-6b93d73b7416",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "93b4d437-fbf0-42fb-9f03-843ee67c48f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de941612-c048-4c94-b842-a2c72aa72fa9",
        "cursor": {
          "ref": "87b98911-55fe-4231-a3fd-2a39f126ade8",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3d3b1f58-56f6-436d-9032-18bb46f84941"
        },
        "item": {
          "id": "de941612-c048-4c94-b842-a2c72aa72fa9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "edc5330f-7e3f-47bb-8a9e-88898756ece4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57281f1d-c17d-4685-8953-44c085d444e7",
        "cursor": {
          "ref": "1a9335b6-885a-4438-934e-06790d4d5948",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "05bcf11a-d152-4685-a01c-3037fb4e838f"
        },
        "item": {
          "id": "57281f1d-c17d-4685-8953-44c085d444e7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "30c4e436-d639-424d-accc-fc40eff29e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85884fda-f1e0-4363-89e0-3f3bc765f691",
        "cursor": {
          "ref": "79a2b09f-cc86-4c8f-9c7e-11fd0f5fc6f7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "16677263-2b8f-4ead-9657-03cdd77eabed"
        },
        "item": {
          "id": "85884fda-f1e0-4363-89e0-3f3bc765f691",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f65fa340-4745-4321-9909-ab24d97caa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2284,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fcc3e0-64cd-42b6-b84a-ebad4b1ab6dc",
        "cursor": {
          "ref": "b4c291f2-3952-47eb-bdea-6be2776e9a9e",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "35b92f9f-be70-4926-ae74-83005b7cbef0"
        },
        "item": {
          "id": "96fcc3e0-64cd-42b6-b84a-ebad4b1ab6dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "718ccc6d-80ef-4749-a668-706834a3cd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2209,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4029242f-0d13-42d5-b7d4-429e44bfdeb9",
        "cursor": {
          "ref": "37b8a7e4-c1bc-4726-b7dc-1d7927962464",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c177ca1f-4584-4700-abf6-2e4eb4b3e0ce"
        },
        "item": {
          "id": "4029242f-0d13-42d5-b7d4-429e44bfdeb9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "29a77f85-9db4-45ed-bd88-c1d4deb529e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1546,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03273b33-0dcd-49b8-b652-df7c7aa88cca",
        "cursor": {
          "ref": "106b2362-614b-4aeb-874d-19423ed8f0e4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4f8fb97a-aa2d-46d7-9fdf-f0862f33c872"
        },
        "item": {
          "id": "03273b33-0dcd-49b8-b652-df7c7aa88cca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "65305bb9-5ef9-4924-b777-a06f68d91937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb545612-0ab2-40b4-9527-c059497e8f5e",
        "cursor": {
          "ref": "7cfdcd94-48ce-42ed-865e-b31cffa9b41e",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1c075923-c8a5-4ba1-8241-bf5fcfb7883c"
        },
        "item": {
          "id": "cb545612-0ab2-40b4-9527-c059497e8f5e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fe0e3f05-acde-4d52-9c68-3e765115bc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7fe274-faeb-4ee0-9951-8247500dbaa5",
        "cursor": {
          "ref": "09e0272e-91b6-4a74-b563-78405a68d697",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b967baba-f127-4f91-9cb6-7c9f74f56f6a"
        },
        "item": {
          "id": "6b7fe274-faeb-4ee0-9951-8247500dbaa5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5bfc7bb3-67c6-46c8-96f7-a37a8dac4352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e80ca-a3a9-491e-9c61-bc7bd96099b6",
        "cursor": {
          "ref": "48b0a00a-66e0-4d8d-add8-571735389b19",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e795b746-9dd7-417a-bcce-9efcd42e9f70"
        },
        "item": {
          "id": "0c8e80ca-a3a9-491e-9c61-bc7bd96099b6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "01288545-2cf7-43a8-bc3a-1d85d2c53db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6d5cb7-7997-48e1-9135-943a0b48e0ca",
        "cursor": {
          "ref": "f0da492d-cea3-49be-bb1e-b96c65eb0039",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7d5c353f-ea00-409b-b6ad-5f7ca4eb35f0"
        },
        "item": {
          "id": "ed6d5cb7-7997-48e1-9135-943a0b48e0ca",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ad57a19f-2eed-43b3-ba09-6a9ac8353e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d993da-8e27-4c26-be8b-152661fefbac",
        "cursor": {
          "ref": "85d98b73-6b3c-48f6-8232-cf518827241d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "03304040-1e9f-41dc-9a0d-6303135b70e1"
        },
        "item": {
          "id": "f7d993da-8e27-4c26-be8b-152661fefbac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e8c46bac-03d4-42d5-8c7e-cea8b1634141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0466cb-f7ca-44dc-b2ff-098895c8aef7",
        "cursor": {
          "ref": "eccc7576-527f-4d4b-acba-041cc1783546",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "218b9047-58d2-41ae-b881-cc41bbb3387c"
        },
        "item": {
          "id": "ed0466cb-f7ca-44dc-b2ff-098895c8aef7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dc70cecf-b0cb-421f-b99d-e7042efb238d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c81ac9-45c7-4df4-ac41-13c1c2bd416b",
        "cursor": {
          "ref": "849143d0-774f-4f9c-8d71-3b3e7d0c1bcf",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a0d53347-dc21-410d-85dc-a6d2c2189f3f"
        },
        "item": {
          "id": "d6c81ac9-45c7-4df4-ac41-13c1c2bd416b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8418eb33-b28f-40c0-917d-204d2fef2dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9543f3-53bc-48e5-806f-cba11e32f210",
        "cursor": {
          "ref": "4eb766e3-c463-47c1-80bd-9ac8db0ca74c",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "466fbff1-7f4d-4fed-8a9e-bd212f59e0eb"
        },
        "item": {
          "id": "2c9543f3-53bc-48e5-806f-cba11e32f210",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d81b4732-5021-4cad-ba47-7454fa41dc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ae779-caef-42ce-915d-5b89a7a68958",
        "cursor": {
          "ref": "6ed486a9-1c51-4f4f-ac55-af111b370e37",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8600406a-5ca7-4d65-93ec-59805492a8d9"
        },
        "item": {
          "id": "411ae779-caef-42ce-915d-5b89a7a68958",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9c60c2ac-2501-4a27-9510-5e33f037a929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6863bed9-94ed-4fea-a25b-574aa0d8c186",
        "cursor": {
          "ref": "3c44a69e-0f7f-4c9b-b068-4e5788196d55",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "45f50076-8f57-49d3-b117-4d46744e7369"
        },
        "item": {
          "id": "6863bed9-94ed-4fea-a25b-574aa0d8c186",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "47f3c937-1414-461a-8bf5-e92ed6cd0df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cc880b-0575-4619-8182-f07890fe4521",
        "cursor": {
          "ref": "95110fd9-6f59-4c79-a5d8-d17c0175c071",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3ad5def3-c048-49a9-860d-065e952f65d9"
        },
        "item": {
          "id": "35cc880b-0575-4619-8182-f07890fe4521",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "67854e33-b87c-4a24-b901-443d64aca74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be89fe2-e203-4be0-aa55-58c0fe42dfa7",
        "cursor": {
          "ref": "17eca43d-b667-450f-a2f9-7190c03d4839",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "879d255d-ad00-426e-b543-8e8240bc89ce"
        },
        "item": {
          "id": "6be89fe2-e203-4be0-aa55-58c0fe42dfa7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3dcd02a8-2679-4752-b7ea-dda76900db2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ea5efb-fb8b-4979-a313-d6175c613c4c",
        "cursor": {
          "ref": "5ae12e13-5d16-47de-979d-00a642922d2d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "aa0ce2a6-3a19-49df-b26c-15a0c2690a4c"
        },
        "item": {
          "id": "a0ea5efb-fb8b-4979-a313-d6175c613c4c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "be2f388c-e853-46c1-943f-7155fcc94ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca3af3c-6168-459e-8d92-d9ef88345b3c",
        "cursor": {
          "ref": "053c7426-1ec2-400b-a4d1-793e826aca09",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "45102df9-2530-4a10-9836-2a848cf8328e"
        },
        "item": {
          "id": "aca3af3c-6168-459e-8d92-d9ef88345b3c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2acbd823-61ae-4b89-be37-51750d98ab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870067c5-3465-4264-9708-c5c1794df171",
        "cursor": {
          "ref": "14f1341e-42f3-4d83-8224-49fd06f29516",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6149d298-e356-4fa0-8494-ac5b24a3fa61"
        },
        "item": {
          "id": "870067c5-3465-4264-9708-c5c1794df171",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "19673cd1-dd67-469a-933e-56cf0b5dbf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eca896-302e-402f-a809-f66636f31ed0",
        "cursor": {
          "ref": "ecd4abfb-3993-4293-bc14-0b24a2783b5c",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "48527d7d-ff88-4fa5-bd90-d7b4ddc994d3"
        },
        "item": {
          "id": "d2eca896-302e-402f-a809-f66636f31ed0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c02985e4-5d8b-44b7-90dd-8d3be39c47f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda3f45b-99c3-43dc-a4f4-5b360902776e",
        "cursor": {
          "ref": "c15b01b1-7c13-4c28-b4d7-dabfc05a6e35",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3e2aab03-3ff6-4487-81e4-432da45059c1"
        },
        "item": {
          "id": "dda3f45b-99c3-43dc-a4f4-5b360902776e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ed4749c2-f021-4a43-b93e-654f6b47a69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f3bb3f-d05b-401e-83cb-efe5ee28a32e",
        "cursor": {
          "ref": "809d59a3-05c1-49a6-8328-9b5cc1a37925",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "37a28926-6142-4b5b-a65b-f222d0cb07e8"
        },
        "item": {
          "id": "95f3bb3f-d05b-401e-83cb-efe5ee28a32e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b565e28a-1b64-40c1-802d-3046b17851fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ec1075-f5fa-4110-9d82-10ecc1236a43",
        "cursor": {
          "ref": "1017566b-c3fe-42bb-a394-c4d61a2d1146",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dbfb12e9-03db-4032-a16a-a071227a268e"
        },
        "item": {
          "id": "f3ec1075-f5fa-4110-9d82-10ecc1236a43",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "51e3200e-24fb-474f-b4e2-ff223f6ec5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1206,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b530fd4a-e77e-455f-bb27-f38337263232",
        "cursor": {
          "ref": "b7b8d039-0442-4735-878a-d1386b00aa42",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8bb28786-da2f-4f91-816d-01a6debb6638"
        },
        "item": {
          "id": "b530fd4a-e77e-455f-bb27-f38337263232",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "98b73c28-d166-4c35-9ef3-ad0256457982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa5fb84-aa65-4dec-a30a-a219cd4fee0e",
        "cursor": {
          "ref": "558e953a-e083-4b37-97f7-6b0c3b3e8ca4",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cec7a348-a439-43a4-ade7-bc5e37f5d04a"
        },
        "item": {
          "id": "2fa5fb84-aa65-4dec-a30a-a219cd4fee0e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a236e58d-c49e-4a57-b535-955ca89efea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be24709-6296-4dcb-833c-b0e0e242961f",
        "cursor": {
          "ref": "eaf5f2c9-e23a-468a-b083-b2b458647c53",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3cdb2cfe-bec6-4e4d-826f-c0f1a014b527"
        },
        "item": {
          "id": "7be24709-6296-4dcb-833c-b0e0e242961f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6af62516-37a8-43ad-be58-f74c515f7a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21361fe-97af-4c3f-8c27-48fcd2122762",
        "cursor": {
          "ref": "4b3e0070-3e97-49ee-9b0c-2e733eeff4c7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bd878e32-3797-489b-ba3d-ff05a504e51c"
        },
        "item": {
          "id": "f21361fe-97af-4c3f-8c27-48fcd2122762",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9c14bd0b-d0e3-4c45-9557-75c4b2c86afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bf913b-6271-4f0b-bfab-6e15ddca8c5d",
        "cursor": {
          "ref": "19742a51-2354-4622-b25c-7602b9d57740",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4ca50bc1-dbc6-4ca0-89a4-989496102e24"
        },
        "item": {
          "id": "18bf913b-6271-4f0b-bfab-6e15ddca8c5d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9acebf70-b623-497f-83fd-12e656e35aa1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1128,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef702c4-af3e-434d-bdaf-e78e6164eb4d",
        "cursor": {
          "ref": "cbddbcd8-8b0f-46a8-bfc7-704ebb32eab0",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e397ac47-740b-40d9-9893-0ac047ee23c8"
        },
        "item": {
          "id": "3ef702c4-af3e-434d-bdaf-e78e6164eb4d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2696f967-e6d4-453c-ba10-baf4d76aeccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4160d0-19c7-4f3f-a746-d1649d1d6ce9",
        "cursor": {
          "ref": "cdcd827f-065f-42b7-8fb8-d72d6a70d459",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9dcfa73a-7ee8-4827-ac86-2e0ec751b9d4"
        },
        "item": {
          "id": "5c4160d0-19c7-4f3f-a746-d1649d1d6ce9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ff485c20-8df2-4ac4-a819-7c94a2646db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121576bf-05f5-4812-aff8-6555b381c9f3",
        "cursor": {
          "ref": "c11d7a75-f2e8-41e3-bddb-905b65dbcfbc",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eed08c4f-50e5-495a-81fd-e00b44eeb674"
        },
        "item": {
          "id": "121576bf-05f5-4812-aff8-6555b381c9f3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6b7776f8-10fa-4fd9-8d2a-5acf0394fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0485b72-3a30-43dd-91b2-08c1b1ff8d19",
        "cursor": {
          "ref": "2b36584d-306c-43d5-8fbe-077af063cc69",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4bf04982-df28-4417-aa82-5c53827fd4ee"
        },
        "item": {
          "id": "a0485b72-3a30-43dd-91b2-08c1b1ff8d19",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "021c39a4-7222-485d-a511-0e5b2226ba51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa94153-5cb9-4cd6-a8dc-2c8d0a777ba5",
        "cursor": {
          "ref": "ea281ad3-06b6-41c5-88a0-de2ebaea6c18",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "25d62fba-ce93-4632-9dc8-1941039df786"
        },
        "item": {
          "id": "bfa94153-5cb9-4cd6-a8dc-2c8d0a777ba5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "46c6cc8a-260b-4c7f-9849-d995aa724653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39d72c9-5691-45aa-8427-f6f30aa2bb4c",
        "cursor": {
          "ref": "24477b52-c729-4c51-af04-d702322f8928",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "696b03af-17a0-4983-8f01-cc236b7ec177"
        },
        "item": {
          "id": "d39d72c9-5691-45aa-8427-f6f30aa2bb4c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "882a95f8-a8ff-4f67-b4e0-6ddfe9f3b204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1478fafc-dea8-48bd-a2f3-ab3d9a7f0737",
        "cursor": {
          "ref": "51a7b867-5ca9-45ba-be0c-572768ffbdc5",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c5371181-9fc5-4312-86ac-2fbf5fe19f65"
        },
        "item": {
          "id": "1478fafc-dea8-48bd-a2f3-ab3d9a7f0737",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a7d3e7b6-01c8-40e7-aebf-e9d15a505463",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 697,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd46d9a5-ce64-4716-93d9-6c85f924c820",
        "cursor": {
          "ref": "bdbff302-23a1-4db9-8904-b369ffe2e233",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ec00dd32-7027-48a3-9f33-04bf685fa074"
        },
        "item": {
          "id": "dd46d9a5-ce64-4716-93d9-6c85f924c820",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "85073e07-ea84-4f05-95d0-db6f5cfa4222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e4fbd9-eb22-4f6e-92bc-a52c2e4a4d67",
        "cursor": {
          "ref": "630b48fc-e9a3-48ad-8a79-6e9b33665cc0",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d66c9707-253e-410d-8fc8-20437475d7ff"
        },
        "item": {
          "id": "54e4fbd9-eb22-4f6e-92bc-a52c2e4a4d67",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "90ffe30a-9737-46af-b914-0e6fdc1ffbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4504c82-7451-4805-88aa-66f16c1f6788",
        "cursor": {
          "ref": "b7383601-cd54-4c85-8a75-2b237275ba4a",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "de447f84-081e-4057-8051-9505b50a2ced"
        },
        "item": {
          "id": "c4504c82-7451-4805-88aa-66f16c1f6788",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "10816706-5539-489c-89d0-1eb3b26d065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c32af89-3dc8-458e-a2d2-026952bb5e5a",
        "cursor": {
          "ref": "acd63fa9-166a-4591-a2c4-debec62ea44c",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "65f9aa86-0943-45f2-ae55-1c3a346db56d"
        },
        "item": {
          "id": "9c32af89-3dc8-458e-a2d2-026952bb5e5a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6940c5dd-0d3a-428b-918e-11190b2e0ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51453ad-0359-49d2-ac2d-3686bd98b08b",
        "cursor": {
          "ref": "9c9bdf79-4c4f-4af2-8a5f-deb33fbdf505",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a29d413f-76cf-4765-a9e7-c6ab069cd34f"
        },
        "item": {
          "id": "f51453ad-0359-49d2-ac2d-3686bd98b08b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "06deaf1e-91dd-4736-9783-3cc8aee101da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f237a2-4a9a-4cd6-a977-67fc8df3a98b",
        "cursor": {
          "ref": "aad621aa-03f6-4a19-9c6d-b553429f41c6",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "290992b7-0253-4c0c-9d9f-2d18f22a1301"
        },
        "item": {
          "id": "e7f237a2-4a9a-4cd6-a977-67fc8df3a98b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fbfc0653-5ed2-4545-ac2b-3760695301a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddb107e-86e7-4bb6-bb02-4ad71ee4c38d",
        "cursor": {
          "ref": "bca204b0-adaf-4515-b3bf-4766de0fed5a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a7001d01-bc7c-4335-9f7a-2e471531a359"
        },
        "item": {
          "id": "7ddb107e-86e7-4bb6-bb02-4ad71ee4c38d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d7576909-0c65-43ef-9777-8dac66ee1333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dbe795-d2d8-4f15-928e-5f6d39d3e5ae",
        "cursor": {
          "ref": "d72404bf-1e7d-4b21-8b84-5e8ea0b26235",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2776f12c-e259-40e9-a6cf-e8b0fda28025"
        },
        "item": {
          "id": "94dbe795-d2d8-4f15-928e-5f6d39d3e5ae",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "12401757-296f-4b7a-a389-b2804312c7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d4bc88-a638-4e2b-bf3f-6beb9c6029dc",
        "cursor": {
          "ref": "bdbff29b-d770-4247-8d5a-ad342f7f9ed0",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "23b98196-ba88-4b5a-a1f3-a15435e952b4"
        },
        "item": {
          "id": "24d4bc88-a638-4e2b-bf3f-6beb9c6029dc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "62ec8929-9749-429c-b1df-8d06e4ca847a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394f83d7-3896-49f0-9068-02fc43ac2547",
        "cursor": {
          "ref": "52077759-91b5-45e0-8713-c0db48847a57",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5931aa52-ebeb-484f-8d13-1dca0a2c57c2"
        },
        "item": {
          "id": "394f83d7-3896-49f0-9068-02fc43ac2547",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "906ec2c5-5b48-41ec-ad67-071270d4546a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab77da5-454e-4a42-908f-0852489a4d3d",
        "cursor": {
          "ref": "cb9ff53f-d3ba-452c-8f62-6ae11a96f35f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7abf5154-d2de-4218-9c73-146181713906"
        },
        "item": {
          "id": "2ab77da5-454e-4a42-908f-0852489a4d3d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2900baf5-00cc-4b20-a38a-7e818d815364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b8e70c-febe-46da-89d0-6a30955d611f",
        "cursor": {
          "ref": "a369df76-002e-4da1-b0d2-9c47e079911b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74534e12-b9d8-438f-a39a-8e32009e7306"
        },
        "item": {
          "id": "38b8e70c-febe-46da-89d0-6a30955d611f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eaca977f-201d-4353-8081-ab85b37bf151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a14fc0-2311-4bf3-ab0d-bba07f5edb43",
        "cursor": {
          "ref": "776a1ddf-25aa-4117-9335-5aac15b14190",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "46395f89-ee17-409f-825a-f795518222d5"
        },
        "item": {
          "id": "d4a14fc0-2311-4bf3-ab0d-bba07f5edb43",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ae503587-612d-448f-a89f-9c53586950ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2c32e0-62df-40e0-a983-b6497626e6da",
        "cursor": {
          "ref": "ef940fb3-5c8f-467c-8117-4d5a408b87b9",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "69dda90f-eb35-4be2-8b05-43298fef6ad5"
        },
        "item": {
          "id": "9d2c32e0-62df-40e0-a983-b6497626e6da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6446ec4d-2985-4d2d-987a-494c3595e73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e14202a-6e3f-4762-8420-0c878d706717",
        "cursor": {
          "ref": "bfa6f840-cd8f-48b0-a7cc-96aafd6f8e97",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aae054fe-21ba-4c10-b653-13e97a54a92c"
        },
        "item": {
          "id": "0e14202a-6e3f-4762-8420-0c878d706717",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe76783c-ce5f-4161-92f4-c14f83653b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38dc7b4-c182-4d2a-b84d-4160fda19e64",
        "cursor": {
          "ref": "30fa3f11-44ce-4ad0-9f3e-fefc1c9d2ad1",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "35f27510-d7f2-4705-a0e5-b873daced1af"
        },
        "item": {
          "id": "e38dc7b4-c182-4d2a-b84d-4160fda19e64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6fe92259-3b7e-46c5-815f-e359060ad299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee62a84-4070-4715-9ee6-d299fc13e8f8",
        "cursor": {
          "ref": "4ff95787-7fb6-4ad9-96ff-1ea760a5e0f2",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3e9539ce-9f7b-45bc-a2a0-87dac6fcb61d"
        },
        "item": {
          "id": "7ee62a84-4070-4715-9ee6-d299fc13e8f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a1973eaa-0318-4b01-897a-b433017d4002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b716c014-f381-49de-8427-6df899ad84f2",
        "cursor": {
          "ref": "7fca0efb-f4a6-4db9-9a02-c206b98a090b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "671a0f07-7998-4817-a476-a435fdee2322"
        },
        "item": {
          "id": "b716c014-f381-49de-8427-6df899ad84f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dfb2c7af-cca0-4aa1-a202-e90c8ca80b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32f0f66-479e-42a5-b503-368239d0d1d9",
        "cursor": {
          "ref": "46173b23-e0cb-4e5b-adf3-3fa2c007a6c1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a2bdec09-3591-49f5-8b07-1f632bc1acb0"
        },
        "item": {
          "id": "c32f0f66-479e-42a5-b503-368239d0d1d9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "49a978bc-9173-47da-b181-a5e3d432c526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04549c11-64e8-4084-94dd-b99a955604f0",
        "cursor": {
          "ref": "ce93788b-1973-4c4a-bfbb-d0f6485349a4",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "50f7b82c-030b-4660-a4f6-c911656cef4c"
        },
        "item": {
          "id": "04549c11-64e8-4084-94dd-b99a955604f0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "09115f88-eff1-47ef-9993-34e2dce2f48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f561f68-8b1a-42de-a7e3-59cfe37c73b7",
        "cursor": {
          "ref": "8521a3d6-d07e-40ec-861a-1efea8e4462b",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a2ca893d-b288-4176-8d08-3e6a367b1c18"
        },
        "item": {
          "id": "7f561f68-8b1a-42de-a7e3-59cfe37c73b7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "29f3e313-e005-416c-bcb7-4e0a465df978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9384026-7b92-4ab7-8030-a1dc96c63643",
        "cursor": {
          "ref": "f5d6e82a-597c-481f-bd75-daa830de162b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "92de856f-c65d-4a95-b82e-bcf604555d73"
        },
        "item": {
          "id": "a9384026-7b92-4ab7-8030-a1dc96c63643",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "43d177fc-30b1-444b-b7da-30a6be2b3ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb9646d-0463-4ef7-94a5-1cc0d29f403b",
        "cursor": {
          "ref": "92e8db2d-bbbb-40e0-bfd1-11b254fcaae9",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e52716ef-6342-4f8d-947c-cf36272ce12a"
        },
        "item": {
          "id": "fdb9646d-0463-4ef7-94a5-1cc0d29f403b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5eda6f2e-49ae-4118-89f8-98066ac55400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12191bd-f027-4a25-802a-fdec31388fee",
        "cursor": {
          "ref": "c11f0389-434e-4c94-9cc0-462c581c8af3",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1fc35876-9424-4627-91fb-e4c36088fd13"
        },
        "item": {
          "id": "a12191bd-f027-4a25-802a-fdec31388fee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "027172c7-94a0-41e9-aad7-2c41bb827eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8d325c-0ef4-44ed-83f7-1aabad751803",
        "cursor": {
          "ref": "8249ce14-c17f-4210-a34a-919f259c5330",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ced17aa8-b4fa-4abe-ae13-c9f33fd0beb3"
        },
        "item": {
          "id": "ab8d325c-0ef4-44ed-83f7-1aabad751803",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8b77eefc-4324-419b-8237-81ca7e01c547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11b197c-5077-49c4-b3d9-d7fe8e05f78a",
        "cursor": {
          "ref": "3a067124-db81-4fa1-92d3-bded2ccf05f7",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ba59743f-6cf6-4ce1-8f54-1c5c5df22e6a"
        },
        "item": {
          "id": "d11b197c-5077-49c4-b3d9-d7fe8e05f78a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7b8292bb-84e6-40ba-a677-63604c7bb993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2620c35f-263a-444f-a084-6f9bb4e99ac7",
        "cursor": {
          "ref": "c385633e-3b50-40d0-b064-c56b93cd88dd",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5f1fc3fd-ec3a-430b-8964-0fc4bc4c5163"
        },
        "item": {
          "id": "2620c35f-263a-444f-a084-6f9bb4e99ac7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f994db58-ec01-47ad-97a9-b0b6e52697e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9fcb49-6d65-43a0-9f63-5cde44f6c3e0",
        "cursor": {
          "ref": "48c9767d-a849-41c6-a79d-3306f59587e1",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "65661d41-e431-429a-be54-5d51b88684dc"
        },
        "item": {
          "id": "bb9fcb49-6d65-43a0-9f63-5cde44f6c3e0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "803d4779-1600-410f-9fa3-ad5f6f5873ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f631ac3c-655c-4d98-8f4b-15c78a2492d8",
        "cursor": {
          "ref": "f8c1d690-3256-4e7b-a20a-1c6aca275b00",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0a7b4a4d-154d-4dde-8a7a-e416cafec6cb"
        },
        "item": {
          "id": "f631ac3c-655c-4d98-8f4b-15c78a2492d8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c85aac12-6a1c-4b8d-964e-5ccc1197fd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0739453f-fdb9-402b-a8a3-d510ad4252cb",
        "cursor": {
          "ref": "2c1c3ac5-1655-40ca-ac37-85adfc5dcd51",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c7d695df-9ff6-4ce2-8756-c5acdf827a82"
        },
        "item": {
          "id": "0739453f-fdb9-402b-a8a3-d510ad4252cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "68f43ac0-789d-4da1-a6bb-a0c28f81b050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12305fbd-ccb6-4ee6-b0b5-d2860dd43781",
        "cursor": {
          "ref": "49089c5f-89dc-4b2c-a5fe-fd5bbe83bca1",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9a332212-7eae-47aa-8c93-bddfbd7d941e"
        },
        "item": {
          "id": "12305fbd-ccb6-4ee6-b0b5-d2860dd43781",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "02f0e234-1e4a-4755-840e-2d9e52942d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88388e2d-773f-49e4-bfa5-d3da7136deb2",
        "cursor": {
          "ref": "180de0bf-4c58-4fe1-a0cf-f21c577a6ed6",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "91280bda-4f99-45b2-8fbc-5a5d4461c4e8"
        },
        "item": {
          "id": "88388e2d-773f-49e4-bfa5-d3da7136deb2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "550c1979-d909-48a7-973f-911ce7bc29b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432c915f-bd94-4b70-a770-4542da40b667",
        "cursor": {
          "ref": "ee9df914-17f8-4876-9579-2f11ca07577d",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "037e0082-bddc-4ca5-b6f2-7c2492147553"
        },
        "item": {
          "id": "432c915f-bd94-4b70-a770-4542da40b667",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "abf87439-cfd3-4c40-83a8-a56289853330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ea2ef7-1253-425d-ae30-3894e291b98a",
        "cursor": {
          "ref": "e67fe322-c88d-42a8-b5d7-d73fd0e531c2",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "71359d87-2f4f-4491-bc1d-682d93ce0bf8"
        },
        "item": {
          "id": "59ea2ef7-1253-425d-ae30-3894e291b98a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3878c41b-276e-4bbb-8bd3-7f0245a1092b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8de505-5f40-412a-99ac-9f85fbbfd015",
        "cursor": {
          "ref": "0570e9f5-4e05-40a1-845a-970df7eb397c",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eed56071-e87e-4dda-9975-67d0201450db"
        },
        "item": {
          "id": "5b8de505-5f40-412a-99ac-9f85fbbfd015",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "850ebfff-ddbc-467e-ab9d-cf8728dc2482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17371623-d65c-4404-8166-57d1481c6962",
        "cursor": {
          "ref": "c0d1c1b5-e242-447c-af1f-f19a56affd9c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3c39354-5f7b-4f31-be94-3feb54da0c1b"
        },
        "item": {
          "id": "17371623-d65c-4404-8166-57d1481c6962",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1bfce8f7-117a-41de-8bed-eba5cf6dbaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe85184-4fcd-4bf1-8755-f1c332ee84ad",
        "cursor": {
          "ref": "596794e4-1fd0-4fb8-8efd-2f988a3537c5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "85aef642-07cc-4fe6-9815-8166da633403"
        },
        "item": {
          "id": "2fe85184-4fcd-4bf1-8755-f1c332ee84ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5b5354f7-ca25-4d1c-9c19-94145209f838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38aae945-58cd-4b12-ba49-335f502ba100",
        "cursor": {
          "ref": "78cc383c-1279-4efb-a72b-14097154b9b7",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3c9da196-834a-4f78-b1d4-ab9093672236"
        },
        "item": {
          "id": "38aae945-58cd-4b12-ba49-335f502ba100",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "009cde94-bbb6-4c07-8459-7b779eb481d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b5943b-c442-46d1-be07-b64997ed5d73",
        "cursor": {
          "ref": "639b92ac-efad-4cec-8f9a-899aadf52309",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6434384f-9e0c-431b-a328-f4e9e7861251"
        },
        "item": {
          "id": "19b5943b-c442-46d1-be07-b64997ed5d73",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c0e09818-f3ad-428c-aa6e-8056f8cb56ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65842714-6d63-4ae3-8a03-dd8334d0b654",
        "cursor": {
          "ref": "be16333f-7f71-4b9b-8bf2-fcb56d3ccf38",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5449375c-32fd-4627-9618-68f0ccfd5d04"
        },
        "item": {
          "id": "65842714-6d63-4ae3-8a03-dd8334d0b654",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1d3e8da6-4d04-456d-b97b-e80bc1e1fdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4b1dbc-4972-4fc0-9821-5cef08ebd336",
        "cursor": {
          "ref": "1ef8d3cd-42f6-4094-a28f-f6b681d981ea",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1eb31c15-e240-4eb8-ae57-8e252ebb1232"
        },
        "item": {
          "id": "5a4b1dbc-4972-4fc0-9821-5cef08ebd336",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "94fd10fe-2d94-47b3-81dc-68b4f1906229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8339d4b2-a62c-4c17-b098-5f9e630cf062",
        "cursor": {
          "ref": "5507fe51-5c0b-4f14-964e-e6cd0c3551e0",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f061e98d-02d7-464e-a869-7c8b66e5e57a"
        },
        "item": {
          "id": "8339d4b2-a62c-4c17-b098-5f9e630cf062",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ff8542f1-3caf-4df9-a5a8-964f82080aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa4be5b-7e16-4ee7-88ec-4aa565aa70f5",
        "cursor": {
          "ref": "43094ac4-6467-4de1-b5a1-3deb08f5ad17",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b423279-7e21-4096-8794-de5f1772963a"
        },
        "item": {
          "id": "0fa4be5b-7e16-4ee7-88ec-4aa565aa70f5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7a6c9736-fa32-457a-9b6e-9638bc94785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a6c4b6-ed79-4dd7-b002-908c763eec07",
        "cursor": {
          "ref": "f1cbb220-b9f6-48bd-9c0d-b1817fc069bc",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fb838b98-6076-43a7-8e9a-1669e5a21ab7"
        },
        "item": {
          "id": "d2a6c4b6-ed79-4dd7-b002-908c763eec07",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "688e0a1b-dc3f-4f9f-9122-9e90c0256fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa7dc76-ef4b-453d-a4be-8a2f49efd3ba",
        "cursor": {
          "ref": "b0fd9e44-7f6a-4030-96d5-cd888b35ab20",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aa8416f3-2e48-41b0-94c9-e6e729e501cb"
        },
        "item": {
          "id": "5fa7dc76-ef4b-453d-a4be-8a2f49efd3ba",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9dd36685-441c-4073-b6c3-ebad61dac07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be826c1-5a49-47be-ad48-b07d679b9693",
        "cursor": {
          "ref": "28ef1e72-d19c-4323-bc5e-b372b3c7a7b7",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3b98a2bf-3cda-49a2-aa9e-6a6c8e186456"
        },
        "item": {
          "id": "4be826c1-5a49-47be-ad48-b07d679b9693",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "08bf27bd-4068-4f7e-a459-3762ef3263e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe1d80b-f84c-411c-9c26-69449b601eb5",
        "cursor": {
          "ref": "ad46291e-b43b-407b-b0bd-2d203aa623fa",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4e9f0602-558b-4fbb-91b9-15db11d9f7f3"
        },
        "item": {
          "id": "ebe1d80b-f84c-411c-9c26-69449b601eb5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6c5f0db1-11aa-46dd-8407-f53f7e437e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ef4c28-487a-4463-9cf6-52e0048b43ac",
        "cursor": {
          "ref": "1d6ae9e3-8bc9-4b2a-aed9-6476c910d404",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "360ea604-0050-4e33-a2cc-65db3e224bb0"
        },
        "item": {
          "id": "73ef4c28-487a-4463-9cf6-52e0048b43ac",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2e8ae065-60fc-437e-ace7-84460e650c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb435ce-2903-4f56-9967-0cd0af40bd50",
        "cursor": {
          "ref": "80dbf5a2-cf7a-4ece-ac8c-094c7d415b8f",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "df6a1dc9-7575-4bbd-8958-a017d94cc32a"
        },
        "item": {
          "id": "ddb435ce-2903-4f56-9967-0cd0af40bd50",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7950cb63-3b67-43c8-b979-80b5560bd53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff7fd2a-388b-4716-9574-2d998423c2cc",
        "cursor": {
          "ref": "27ccf930-5b9c-41b1-abd9-78a21f9c13cf",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ea7d5439-3cd8-41eb-9567-2e363aabc055"
        },
        "item": {
          "id": "5ff7fd2a-388b-4716-9574-2d998423c2cc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2bfa8ffd-6603-48d6-8620-78e8c76d4fc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd0e31e-1328-4215-8722-62a5786eaef5",
        "cursor": {
          "ref": "d5fb482e-91ac-4d4e-a269-31b218487f82",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "68c4bf8a-2185-4575-9e55-f15033c76d10"
        },
        "item": {
          "id": "5dd0e31e-1328-4215-8722-62a5786eaef5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "718404f6-8510-4863-bd61-53a18c82c387",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b3fd98-99b1-469c-a1a6-4985288b2aed",
        "cursor": {
          "ref": "ab7bee88-83c7-4560-9843-65569b5e7318",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aa9dab83-216f-4724-847d-197f2c1735d9"
        },
        "item": {
          "id": "f7b3fd98-99b1-469c-a1a6-4985288b2aed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aa3440bb-ab0d-4098-95e8-e1afb16ea113",
          "status": "Created",
          "code": 201,
          "responseTime": 5005,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "294c086f-9ccf-460e-a2b1-5747b0ed2d38",
        "cursor": {
          "ref": "d7d06bef-1d20-4bca-82b8-3be5e09b341b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "334a179f-9e1d-4556-87fd-b60f365bbff1"
        },
        "item": {
          "id": "294c086f-9ccf-460e-a2b1-5747b0ed2d38",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c103a1b5-7390-4469-9b8f-c971997746a8",
          "status": "Created",
          "code": 201,
          "responseTime": 7583,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78727b0-aed0-47f2-b487-b02218b40f41",
        "cursor": {
          "ref": "ef8ec1a7-a15b-439f-b24f-788b4745791d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2976540e-fc30-40b2-babb-724d58559cd6"
        },
        "item": {
          "id": "a78727b0-aed0-47f2-b487-b02218b40f41",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "35189b0b-181d-44f3-90ed-43b89b3b58ea",
          "status": "Created",
          "code": 201,
          "responseTime": 6120,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fc230a-633f-4c60-a4ac-38c0648bc531",
        "cursor": {
          "ref": "c05ebf20-4f03-4059-8997-a9cee9f8298f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "200978b6-23b7-4cbc-9145-759691c35355"
        },
        "item": {
          "id": "65fc230a-633f-4c60-a4ac-38c0648bc531",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "79b3bf9e-88fc-4684-b47b-508283d356dd",
          "status": "Created",
          "code": 201,
          "responseTime": 5851,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca6765f-47bd-47e5-9c1d-7ff5fcbb5684",
        "cursor": {
          "ref": "48ef7a54-bc20-41e9-a687-bb9b4768803f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9514d6cd-c82b-4c35-b9d2-851c29560e64"
        },
        "item": {
          "id": "eca6765f-47bd-47e5-9c1d-7ff5fcbb5684",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6d827cad-14f3-4382-9632-8da8cca98778",
          "status": "Created",
          "code": 201,
          "responseTime": 4179,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed3f9ee-cdad-4459-92e1-f2346c92028c",
        "cursor": {
          "ref": "090e3f53-4197-42ce-a2ae-66ddf1e549fa",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b7581a00-ec95-44f1-9e58-ae5da1ce89eb"
        },
        "item": {
          "id": "aed3f9ee-cdad-4459-92e1-f2346c92028c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b94bf933-8334-451c-992a-ec428822c848",
          "status": "Created",
          "code": 201,
          "responseTime": 6299,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244cfb43-0cd3-46c1-8a4f-ea8a85c3b04d",
        "cursor": {
          "ref": "df567fdf-cd99-4f18-85fa-73166bed6fa8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "36174e39-3e35-46dc-81ec-ce0085714d62"
        },
        "item": {
          "id": "244cfb43-0cd3-46c1-8a4f-ea8a85c3b04d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04c8b87b-17eb-4640-9795-a677db1c56c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244cfb43-0cd3-46c1-8a4f-ea8a85c3b04d",
        "cursor": {
          "ref": "df567fdf-cd99-4f18-85fa-73166bed6fa8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "36174e39-3e35-46dc-81ec-ce0085714d62"
        },
        "item": {
          "id": "244cfb43-0cd3-46c1-8a4f-ea8a85c3b04d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04c8b87b-17eb-4640-9795-a677db1c56c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffe2cfd-6dc0-4925-9629-a8e502d9bf87",
        "cursor": {
          "ref": "7ccec5b5-68e3-43e3-a434-b9a65519b29b",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "70e15cbe-0ee8-417c-9765-551cc40a6e71"
        },
        "item": {
          "id": "3ffe2cfd-6dc0-4925-9629-a8e502d9bf87",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cedcdf8f-7177-4b22-978f-fade29eaab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6533d410-8177-424e-8032-a69245a68853",
        "cursor": {
          "ref": "dd8c6a2e-103d-4ec4-bab4-c26b43a97e5e",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cf221640-a074-4f74-bbfe-e4018f79bafc"
        },
        "item": {
          "id": "6533d410-8177-424e-8032-a69245a68853",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f8f8421d-0598-481c-becd-6fbb437d017b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b238ec7-1733-4531-87a4-eb52796f87b1",
        "cursor": {
          "ref": "4af1e974-7d93-4012-b306-021d9a186bd1",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c85c39d8-27df-464c-bcb7-0f31fbfb04fa"
        },
        "item": {
          "id": "4b238ec7-1733-4531-87a4-eb52796f87b1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2fffa448-9641-4549-a39e-611f6aa34afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b608ff15-dcd9-4b71-b30c-7dacf1a0aaeb",
        "cursor": {
          "ref": "767769c7-50e7-437a-9f34-50fade15e1f8",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f2919be3-3f0d-46a5-a93a-118ec5cabb80"
        },
        "item": {
          "id": "b608ff15-dcd9-4b71-b30c-7dacf1a0aaeb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dfaff75d-c995-4203-b6d4-83fdfc82e70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fad2eeb-ec7a-4e22-9ac6-35ddcddda1e8",
        "cursor": {
          "ref": "09b964ed-7fd8-43dc-85a8-bbd16e800337",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8c4b20e2-a231-47fb-b1df-15f3ec3b59f2"
        },
        "item": {
          "id": "6fad2eeb-ec7a-4e22-9ac6-35ddcddda1e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5fff7e70-0bdd-4e1f-9958-8634f9aa21ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dbf0d9-5b7d-4d50-902b-741c37facf22",
        "cursor": {
          "ref": "200ea954-5f85-4928-acf0-6663970e312d",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c81377b7-c1ba-415b-ad9e-cf455a3eaa63"
        },
        "item": {
          "id": "10dbf0d9-5b7d-4d50-902b-741c37facf22",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "79c284b3-1c26-479c-a6d4-d8893d46ed68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3118d07-3ced-4a4f-ba6c-656a8d61387e",
        "cursor": {
          "ref": "bf2c2843-a3b3-499b-9876-b42b510d6f91",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3792a67d-e6ef-4754-995d-f51f89379e78"
        },
        "item": {
          "id": "f3118d07-3ced-4a4f-ba6c-656a8d61387e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "08074304-9351-4a23-b276-92fd708c0c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9115635-c449-4523-850c-1cd11b2489b9",
        "cursor": {
          "ref": "37b00f9b-edcd-4158-9418-b5d7fb87e969",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7d1b8fde-e94c-48ef-a8f4-abd4738c1f5f"
        },
        "item": {
          "id": "a9115635-c449-4523-850c-1cd11b2489b9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "34c833c7-9244-4cd9-bf6a-3b7b2e82ab41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba25f20-28b2-4f78-8452-f23d14ff09e4",
        "cursor": {
          "ref": "e97ab830-6229-42c7-9db9-4562ab5311c3",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f4a65274-dcc3-4893-8320-c5463bf785ab"
        },
        "item": {
          "id": "8ba25f20-28b2-4f78-8452-f23d14ff09e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85e36852-e6bb-4b0b-a8be-6f1f7762585b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26099a33-3404-4ba4-8132-67dc0c248ee7",
        "cursor": {
          "ref": "3121e5a6-d04d-4cd7-9372-c77b593c20c1",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "044387d5-55af-4b92-b6e0-ba6b6b964d9d"
        },
        "item": {
          "id": "26099a33-3404-4ba4-8132-67dc0c248ee7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5f6c9405-3471-4aee-9fb1-811d6684528d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50701fa7-26a2-498a-bf04-515026ccda37",
        "cursor": {
          "ref": "5afab798-9646-45dd-8ee7-c2bf5fd6e381",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6b1c946c-f942-4fc8-a10f-87ae076634bd"
        },
        "item": {
          "id": "50701fa7-26a2-498a-bf04-515026ccda37",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e98ebb7-b9e2-4735-9466-f03f928d087f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6c1851-c782-4758-afbe-41b02a92b33e",
        "cursor": {
          "ref": "07c85504-c452-4e4d-8b37-cbe4891f0ef3",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e1a3bc77-de17-4166-8bf6-3e557f40e87d"
        },
        "item": {
          "id": "6b6c1851-c782-4758-afbe-41b02a92b33e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "87cdf09b-0283-4ccc-b7ee-021ff41f38f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5708eb0-9e34-407e-86bd-ef68af44a589",
        "cursor": {
          "ref": "fe672718-9c50-4dd7-a086-932bd1b885c6",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5fb0c225-6d53-44c4-a615-f5e0c4bce8e4"
        },
        "item": {
          "id": "f5708eb0-9e34-407e-86bd-ef68af44a589",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "068991d7-cd10-4457-8fdf-00a21c7efdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4516ea3-fe98-48eb-84b2-832f1c0fc6bf",
        "cursor": {
          "ref": "4e57e248-10e1-4bda-a896-ec7db061a097",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b9897e73-0ec7-43b2-a201-35d93f64e6b4"
        },
        "item": {
          "id": "d4516ea3-fe98-48eb-84b2-832f1c0fc6bf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7e207ca0-8538-45ac-8735-e4b14ed1a980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f0aa35-55bf-4106-885e-6260a3f3fd2e",
        "cursor": {
          "ref": "5642cd79-5dc0-4d22-a7f8-79fd962cbb88",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "25f21823-e5b9-472b-ac4f-a8e995aabf56"
        },
        "item": {
          "id": "c0f0aa35-55bf-4106-885e-6260a3f3fd2e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "637065d0-6ab7-48ce-9950-21fd60b0ba30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58230981-04fc-4269-9d23-edb721de12f1",
        "cursor": {
          "ref": "db89722d-f177-45c8-b4e5-4d6a244b12ec",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "16b3cd49-1797-48c0-ae2b-6f1fc049fd7b"
        },
        "item": {
          "id": "58230981-04fc-4269-9d23-edb721de12f1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e917dcfd-9e84-44ed-85e9-4ec47c990c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cca3c2-08ee-4b22-b898-f978c80106fc",
        "cursor": {
          "ref": "7a45747d-23d7-4db1-bd99-5b14decb3850",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8f3f37a1-9324-40fc-af3a-a22f042d1a93"
        },
        "item": {
          "id": "42cca3c2-08ee-4b22-b898-f978c80106fc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6c59abff-5fc2-4d7e-873a-2f78dc06e42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5512bdbf-e18c-4ad5-815e-f39c8eed512d",
        "cursor": {
          "ref": "44fa1c10-434f-49ca-a97b-8f17f4774d85",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "873ce4cc-186b-41cf-994c-380559b9a5d3"
        },
        "item": {
          "id": "5512bdbf-e18c-4ad5-815e-f39c8eed512d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b8637da1-58bf-4d34-8dc1-358f6dfaa9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b71cd62-59e2-483b-9eaf-68f73ecfb504",
        "cursor": {
          "ref": "7a53a054-4bd1-4b4c-8665-35a84b94373d",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b2f445be-26fe-4cdb-8e7c-85ee8abf0294"
        },
        "item": {
          "id": "2b71cd62-59e2-483b-9eaf-68f73ecfb504",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "faf598c7-1f57-4723-bbda-50448478ab9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eba1e54-7e65-48db-802f-69d1828cdedf",
        "cursor": {
          "ref": "24dbc198-9d68-4f59-a269-317e44ab3ecc",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8f0bcd6b-ac3c-48c6-8dad-da5f5b0a6a32"
        },
        "item": {
          "id": "1eba1e54-7e65-48db-802f-69d1828cdedf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c97702a-6ca1-424f-898c-0059ece25140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5930d89c-41e6-431f-8a89-24610d4443f2",
        "cursor": {
          "ref": "0822a544-7a8e-435c-9be4-9d874cd5e694",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f5b42431-2433-422b-bf02-2e3c428096a4"
        },
        "item": {
          "id": "5930d89c-41e6-431f-8a89-24610d4443f2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef439cb8-eb3d-4175-89ac-98c009e1c5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf5f91d-d455-4967-8a61-68263f2d00fd",
        "cursor": {
          "ref": "d6e785ea-ece6-4b8c-a041-e76e73d754e3",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "46dc5f1e-1406-4019-b2fa-10084c980a4c"
        },
        "item": {
          "id": "faf5f91d-d455-4967-8a61-68263f2d00fd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b40aba1f-61e6-437d-9b26-7fc6205090f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddc516c-7491-40b3-b0a2-88423c2f7b27",
        "cursor": {
          "ref": "ca1a678e-6ca1-423a-8e40-d959a4d28fae",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f8129bc1-5ded-43af-aee4-0435fffe2b70"
        },
        "item": {
          "id": "cddc516c-7491-40b3-b0a2-88423c2f7b27",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "565b9762-b0bb-4750-b80c-72a45989173e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed03cf08-ff31-4b1a-adbb-60d32e841ac3",
        "cursor": {
          "ref": "ee361e1c-ca8c-4d08-821e-82a44d8b8b3a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "67a3e384-cb7b-48b9-84b4-49b39b6455e8"
        },
        "item": {
          "id": "ed03cf08-ff31-4b1a-adbb-60d32e841ac3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fbb137ed-89b5-4a3c-8e46-649126b98259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dae4f7-07e9-439c-a61f-464635934ada",
        "cursor": {
          "ref": "d3c70361-42d8-4c54-abf2-537a6edce0cc",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "00e5aba1-b743-4ce9-b5a8-a44463e2a11d"
        },
        "item": {
          "id": "33dae4f7-07e9-439c-a61f-464635934ada",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "66a1a048-8b0a-42e9-95ed-b6eaf44443a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076da42a-dad1-4fd7-ac3c-b7243e638863",
        "cursor": {
          "ref": "ca3c4bfb-2624-445a-95d9-d2e819a4eb3e",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f545b99a-43c3-4eb5-a064-cdb714ab2b16"
        },
        "item": {
          "id": "076da42a-dad1-4fd7-ac3c-b7243e638863",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96e941fb-fb30-416d-9c57-38ba23c90fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ceef81-2662-4553-bb3e-063b099c13d1",
        "cursor": {
          "ref": "e609bdbe-e439-4f02-a253-33598f35d48b",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ae472f45-74e3-4511-8371-925b7253cf0c"
        },
        "item": {
          "id": "83ceef81-2662-4553-bb3e-063b099c13d1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9e575f3a-1130-49aa-adf8-0f9f000c0368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abb03ee-d101-43b7-898f-20b764afc834",
        "cursor": {
          "ref": "a30ef076-1f36-4d72-bfee-3c66d14a1344",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9c15a620-d409-4560-b8ca-572d8f85e8ec"
        },
        "item": {
          "id": "1abb03ee-d101-43b7-898f-20b764afc834",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "822cbc2e-012c-4077-93c9-c457a45b44fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435e69cd-21ac-45bb-84c0-f675fe012546",
        "cursor": {
          "ref": "af4b6858-2930-475a-a24e-11185ba391f2",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2ca9286b-9589-4761-bb7d-6aea045ade28"
        },
        "item": {
          "id": "435e69cd-21ac-45bb-84c0-f675fe012546",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f489a8c4-e7ac-4b58-9a63-b497bb037679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d6799e-a5a2-44b9-8da9-a8d8dcc2754f",
        "cursor": {
          "ref": "07e818e8-73cd-4b72-a962-db9a13fd987d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "70f8cfcf-30d3-4daf-9731-ba1e1663be44"
        },
        "item": {
          "id": "22d6799e-a5a2-44b9-8da9-a8d8dcc2754f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d752df5-3d28-4038-ac0a-300a8c733a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93febaeb-a4ba-47d3-bc1a-891371f9867a",
        "cursor": {
          "ref": "0065f18d-ebd6-45a6-8892-101e111dac2f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "79b93950-6c90-41b7-afb8-d4ca7e8c1196"
        },
        "item": {
          "id": "93febaeb-a4ba-47d3-bc1a-891371f9867a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "171cc6fa-1454-45f7-a61a-f0c0952d06e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9c2c17-0309-4629-936f-04bfca926421",
        "cursor": {
          "ref": "2264aed4-882b-4369-8cae-e09696cb9af4",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9e190a3c-6249-45fa-b054-5181e4118292"
        },
        "item": {
          "id": "be9c2c17-0309-4629-936f-04bfca926421",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c06b1cf8-5e63-4199-a62d-b3fa7bae120e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b020e42-35b4-4079-8c0c-1f327f795128",
        "cursor": {
          "ref": "83f349ef-5c98-49dc-9bb5-fb84a80a91c5",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "988e38a9-445b-4919-8653-f8b4d57027a0"
        },
        "item": {
          "id": "8b020e42-35b4-4079-8c0c-1f327f795128",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d1d2330c-6e19-4707-ae4e-f24aab5627d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 810,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180d6d64-d638-47f8-b78a-ce950391ab74",
        "cursor": {
          "ref": "1dd4b913-a553-46d6-ac53-b6fe799bf1e0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d477ec14-1153-47db-abcd-aa3abc211cdf"
        },
        "item": {
          "id": "180d6d64-d638-47f8-b78a-ce950391ab74",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7df2d22b-71ce-40ae-a519-5458bbba67fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180d6d64-d638-47f8-b78a-ce950391ab74",
        "cursor": {
          "ref": "1dd4b913-a553-46d6-ac53-b6fe799bf1e0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d477ec14-1153-47db-abcd-aa3abc211cdf"
        },
        "item": {
          "id": "180d6d64-d638-47f8-b78a-ce950391ab74",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7df2d22b-71ce-40ae-a519-5458bbba67fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0517c02c-d9ef-454b-a4da-d8267ffc83f5",
        "cursor": {
          "ref": "b0da3857-d56e-4859-baa8-1089e72f34e0",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c7b7ba5-6516-4373-9f98-c39172c93935"
        },
        "item": {
          "id": "0517c02c-d9ef-454b-a4da-d8267ffc83f5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8f2d887e-5968-4138-a964-da52b25e6db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c62f71-5799-410f-a871-51b7476b5c4b",
        "cursor": {
          "ref": "a6aee71c-2b52-40bd-b771-2c79c3b0a476",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a5e91079-fb39-431c-9817-59e52233b8ca"
        },
        "item": {
          "id": "88c62f71-5799-410f-a871-51b7476b5c4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c685be30-9190-46d8-a76f-4770ecf8ba9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b06e09-1c71-4d51-a9a8-3025fb4d9df8",
        "cursor": {
          "ref": "dd2b0243-3ac7-4011-b6fd-664fbeac7c7f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c01f9762-a8c2-4e29-baea-13a60ee41bef"
        },
        "item": {
          "id": "d6b06e09-1c71-4d51-a9a8-3025fb4d9df8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f99d94f9-4b33-4cb8-bc02-4d65b5ddfae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ce5e08-74cb-4155-bf46-e6f121ac4f22",
        "cursor": {
          "ref": "645a5f0f-8e76-44d4-a634-228d10bbef79",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ea0e88d8-db02-4497-bb8a-06518b766298"
        },
        "item": {
          "id": "85ce5e08-74cb-4155-bf46-e6f121ac4f22",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "289fc9e6-54f6-41a9-b435-75d491759f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fdcc6f-4101-4cad-a713-84b9f1d95906",
        "cursor": {
          "ref": "a2abe366-f1d7-41b3-8ca4-d0ece25652b8",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ab59e646-0e77-4936-99cc-8812defb21bd"
        },
        "item": {
          "id": "f3fdcc6f-4101-4cad-a713-84b9f1d95906",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c836a056-3b27-4a6b-a597-2d4e3752556d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bd359d-9a08-4bf6-a967-e6b034ab98ce",
        "cursor": {
          "ref": "78371186-874c-49b9-a974-a2a067916aa8",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "619b8794-4229-4cd3-86cc-722e10f2d9e7"
        },
        "item": {
          "id": "74bd359d-9a08-4bf6-a967-e6b034ab98ce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f5551449-8d02-47d1-a8ca-81f34bc91b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90278798-e791-4a96-8664-11935265a247",
        "cursor": {
          "ref": "5b50a12b-4f12-4d81-8d18-674e59b1bdda",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5fb5fbce-e98f-48fd-898d-820b8c21140a"
        },
        "item": {
          "id": "90278798-e791-4a96-8664-11935265a247",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b30d7fd4-1ce5-43dc-8a10-9144e45bb745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365658b4-58e8-42e4-9f52-2ddf257db4ff",
        "cursor": {
          "ref": "0d994b93-820b-4a6d-bd32-f923c04787f5",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fc23e976-9d0d-45fa-9f4f-6053257ea696"
        },
        "item": {
          "id": "365658b4-58e8-42e4-9f52-2ddf257db4ff",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d20bca0b-02fe-4b25-957c-73de066736a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fbfa56-6393-4798-94c5-c84373526ce3",
        "cursor": {
          "ref": "1f69273e-079e-4890-a14b-9fc23c04ffb8",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "62baecfc-cd4a-4097-a3d3-98d6fe775264"
        },
        "item": {
          "id": "81fbfa56-6393-4798-94c5-c84373526ce3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "66c1fb09-6080-43b9-8c25-4fc245b25a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a90b40-c775-448d-98d6-d1074a718734",
        "cursor": {
          "ref": "0f832447-88e4-4005-89cb-b38f42dcf313",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9de4778e-609b-4c78-b059-8f01ce3c5cec"
        },
        "item": {
          "id": "97a90b40-c775-448d-98d6-d1074a718734",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b3bf4210-3e30-484a-b586-00ab2774b6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b31f91-48d8-4fed-bfcb-01debb73f833",
        "cursor": {
          "ref": "ff0922d5-a5e9-45a5-ad28-5bd5f976d813",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b19261a6-d7ce-42e0-ba2e-b931751aed64"
        },
        "item": {
          "id": "b0b31f91-48d8-4fed-bfcb-01debb73f833",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "262e962a-a377-4c72-b0f5-85184eac8a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb93553-1b28-4563-8596-18358595d9a5",
        "cursor": {
          "ref": "c32561dd-2167-4e66-ae61-e64fc984a5e4",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9a044139-0697-4ef2-9e6c-7799d17aceb3"
        },
        "item": {
          "id": "bcb93553-1b28-4563-8596-18358595d9a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a76ded82-0aa9-44a9-93fa-041b05fefb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4580a5-a0c7-4e9a-a969-9743f484f030",
        "cursor": {
          "ref": "a25581dc-9ab7-4c7d-b2fe-41b856d78fdf",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "839e084a-b7ec-425c-869a-7265a70a2225"
        },
        "item": {
          "id": "2d4580a5-a0c7-4e9a-a969-9743f484f030",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "590e7c1f-1d20-4a85-8909-fadf9c68ddb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08bae63-3246-4c21-bc2b-1bca96761d8c",
        "cursor": {
          "ref": "2f17e6b7-1082-4c29-8733-e83d13765bbc",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ef3d8c87-1371-46f5-a737-c60bdcda3704"
        },
        "item": {
          "id": "f08bae63-3246-4c21-bc2b-1bca96761d8c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6beeb339-62d9-4d17-83bd-1ab10381b6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bba586-43c6-40bf-9cfa-dc8f98d558ea",
        "cursor": {
          "ref": "760aadac-56f4-4206-8122-7bf9f1ed7c2c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f69a284c-eb22-4107-8fac-0a39014fcf95"
        },
        "item": {
          "id": "68bba586-43c6-40bf-9cfa-dc8f98d558ea",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e87566a9-56f3-40a1-b0bd-dee23cc2a45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc5c05c-35b8-4f07-9eb7-ee4d8d32b84e",
        "cursor": {
          "ref": "fadf8c2d-4dab-43da-9e1b-ff619825c1f5",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0a473cc1-7e41-489e-b438-0c8d125f5f18"
        },
        "item": {
          "id": "1bc5c05c-35b8-4f07-9eb7-ee4d8d32b84e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1bb54db0-d372-4127-abc2-46bd769c27fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c5f7d8-411b-4298-b905-7347dbf44cd3",
        "cursor": {
          "ref": "7cfe79d7-66cb-48a8-a74d-4944e77bdefa",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5ccd6401-e5f6-4cad-a5ae-b3666520f7ed"
        },
        "item": {
          "id": "42c5f7d8-411b-4298-b905-7347dbf44cd3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b7eef11d-5f02-4fda-9b19-679a1c854b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee836b5-1885-4aa8-941b-afebe054deba",
        "cursor": {
          "ref": "07ab7927-cfe7-4d1a-8cc0-def0cf0e50dc",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "88a54b89-5933-43f6-beb4-858710723ad2"
        },
        "item": {
          "id": "dee836b5-1885-4aa8-941b-afebe054deba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "41c30b69-e3a9-4d36-8c10-20916d69b868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a900b3-70e2-4f1f-ae0e-b6d7432d60aa",
        "cursor": {
          "ref": "34ef92c4-fd63-4abb-a164-2bedc66d6e6a",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7ed4e745-0f55-4882-a9d8-b5596ebed08e"
        },
        "item": {
          "id": "01a900b3-70e2-4f1f-ae0e-b6d7432d60aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c38698d7-4f92-45b5-a7a8-419cd84b2a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f2e208-4011-48e9-b639-e517951f9a58",
        "cursor": {
          "ref": "192a4421-f762-4a09-b60a-e913c765a29d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c7082c3c-addd-4199-8b9e-0aa4003f5f73"
        },
        "item": {
          "id": "e1f2e208-4011-48e9-b639-e517951f9a58",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "145957e5-e27a-4860-8bb1-743a21fe0cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9005e3-ca32-41e3-adbc-7f05a844e895",
        "cursor": {
          "ref": "c2982ec2-923e-448b-bdb4-2211be55a7fa",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "24521b4a-ba54-4912-8781-1fd2905230fa"
        },
        "item": {
          "id": "bc9005e3-ca32-41e3-adbc-7f05a844e895",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5031a3f1-b1ba-40e0-8173-6f22897ff6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeac0d91-e3d9-451b-8767-73161d49186a",
        "cursor": {
          "ref": "d3b6f08d-f13d-487d-b4c1-3d97ac450b67",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dcf4955b-e097-492d-9473-90e11c3099cd"
        },
        "item": {
          "id": "aeac0d91-e3d9-451b-8767-73161d49186a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "83262b23-2f8b-4a4d-b433-04a6af8f3fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d626b6fa-97b1-4f88-aef2-f3d1c7088ce0",
        "cursor": {
          "ref": "454baf2c-8c5a-4333-8bef-f7650af9572f",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fe83d8f3-e08b-4f96-8375-804b01be1f9e"
        },
        "item": {
          "id": "d626b6fa-97b1-4f88-aef2-f3d1c7088ce0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d94fa446-3dcf-4751-b796-f1fe084e5797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182dd8d9-f324-457e-b73c-889b6e623900",
        "cursor": {
          "ref": "3ece81a1-23b7-4611-a68b-7cad0c47c12e",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "89a3f32a-43e1-485a-819c-aa64669c0a9a"
        },
        "item": {
          "id": "182dd8d9-f324-457e-b73c-889b6e623900",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ad4240a7-ecc1-4c3c-af82-ee0e0ed44d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d527bf-54b4-4c17-89ed-65382a9b9d30",
        "cursor": {
          "ref": "9968fa7e-b445-4e65-9375-77cadc42b611",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fee1b42c-1bc6-460c-8916-1ab17099101a"
        },
        "item": {
          "id": "e0d527bf-54b4-4c17-89ed-65382a9b9d30",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a9d0b59d-b81d-4f0f-b194-dc668813d856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633e1879-c9ac-40b3-823e-73d609bc1964",
        "cursor": {
          "ref": "b1a2c47e-9f64-40cc-93b1-c5e14674f0c1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "58e852b4-d261-44a1-b99e-de8b738d4a24"
        },
        "item": {
          "id": "633e1879-c9ac-40b3-823e-73d609bc1964",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7dbf2333-0d26-411c-9339-3dc21859556a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afcb1f2-e6c2-4e4f-b57b-2c72dc295a99",
        "cursor": {
          "ref": "750dc4b2-13c1-47cc-aa5a-25b719cac5c5",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c4f4e4f5-e78c-4669-b2b3-70a4511d520e"
        },
        "item": {
          "id": "9afcb1f2-e6c2-4e4f-b57b-2c72dc295a99",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "58743fb7-29f9-4ae3-adf4-e802cdfef4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee468660-aa61-43b4-a66c-46a15022f8eb",
        "cursor": {
          "ref": "2650312e-8384-48cb-a44f-8041eabb5792",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c24b0a23-a0ab-4c33-9e71-34675819d0f5"
        },
        "item": {
          "id": "ee468660-aa61-43b4-a66c-46a15022f8eb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "68492ac7-cf80-4351-ae7a-e229f67c9297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e61270b-c10e-4b39-be4d-d0e27c09afe3",
        "cursor": {
          "ref": "f334bf28-7889-405e-a2b6-35679083691e",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cbfca11b-7cc5-49ca-a0f6-a83264ead3d5"
        },
        "item": {
          "id": "3e61270b-c10e-4b39-be4d-d0e27c09afe3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0fd0566d-0646-4a16-8972-395d61265e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd87c04-5da1-4949-9954-ad815b758878",
        "cursor": {
          "ref": "09f5490f-17b0-4971-b913-5da2220ec8d9",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d0142404-65c0-400f-af5b-fb716a14a9bb"
        },
        "item": {
          "id": "1cd87c04-5da1-4949-9954-ad815b758878",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8c5ffc37-c82c-4534-b14d-79eef59e10f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8b994f-1045-4a84-afc3-01a877fbd2c0",
        "cursor": {
          "ref": "a0e75077-75bb-48e2-84c2-168f44a227ea",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3c5095c5-6776-47ec-b81b-82bc29a9186d"
        },
        "item": {
          "id": "8a8b994f-1045-4a84-afc3-01a877fbd2c0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f35345bd-a64f-4f10-93ee-c07d2d24ea15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3367a09c-c9dd-432b-b655-0e4fd6b8b868",
        "cursor": {
          "ref": "4a109918-3d8e-484d-a801-a7507b4ca1ed",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9f4d4dc2-1338-4448-9bda-772614f82ff6"
        },
        "item": {
          "id": "3367a09c-c9dd-432b-b655-0e4fd6b8b868",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9184e6e3-037c-4794-980f-5d7100d1e9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b51381-df53-400d-98eb-832ced43e18d",
        "cursor": {
          "ref": "8a1106e6-b158-4e61-8ca9-f4967693dcfd",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2aed2e82-b177-4705-8628-ae7bbdba11fd"
        },
        "item": {
          "id": "96b51381-df53-400d-98eb-832ced43e18d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f445e888-8b3e-4846-bc8e-df0fc3e39643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fd481a-3935-472d-88d8-d936c35d82db",
        "cursor": {
          "ref": "4d02a1af-1901-42a3-8343-072ee6279e82",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ed766d90-ba70-4855-9278-ed2127c31980"
        },
        "item": {
          "id": "a3fd481a-3935-472d-88d8-d936c35d82db",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a7ae9a75-d9e4-4eba-9d51-dafb631b0a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1265,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59db554-468b-4fc7-b9ad-17873cf3b824",
        "cursor": {
          "ref": "2d242ca2-01ee-46d5-a268-37a447950908",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9e452f66-6422-4e64-9f4e-081a6adfed4a"
        },
        "item": {
          "id": "c59db554-468b-4fc7-b9ad-17873cf3b824",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9e916c6a-2634-4e61-9b36-f444823b8430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1163,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a5f793-5638-46ea-92a0-ee6a8cbd37f0",
        "cursor": {
          "ref": "6c780e9b-40eb-4ddb-b91d-d52b97f45c4a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4fba039c-e550-4d95-87c5-c6af7b54b178"
        },
        "item": {
          "id": "a6a5f793-5638-46ea-92a0-ee6a8cbd37f0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "513b1efe-828d-48d4-b95c-fe20cae46dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1670,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5a287b-3654-4596-8d2f-9ee053ae6a9c",
        "cursor": {
          "ref": "121b2200-10a2-4dc3-8287-bf1763a16778",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a2fa44b3-912f-4767-82da-fdbba30b8a60"
        },
        "item": {
          "id": "ae5a287b-3654-4596-8d2f-9ee053ae6a9c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "99e9a422-146d-461d-9662-87e28b220f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1135,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e1c72f-6ef2-4bd9-8c41-5318abe6fb7a",
        "cursor": {
          "ref": "aebfaac0-6dd0-4026-89da-092147a81601",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1376fb98-5c75-4611-91f7-0e437f1fdc32"
        },
        "item": {
          "id": "91e1c72f-6ef2-4bd9-8c41-5318abe6fb7a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "73e4c6ab-5397-4f0c-bd1f-c9de57833ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1978,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2c2ca6-631d-44b4-aa52-65b2bd311e54",
        "cursor": {
          "ref": "1f5f6aa9-1b2d-44c9-85ef-a165571b274d",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b7b36f31-81ef-4f8a-a99e-0362bbc11f87"
        },
        "item": {
          "id": "5d2c2ca6-631d-44b4-aa52-65b2bd311e54",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "59a650eb-b8bf-4106-8eb3-8fd0fe761242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1527,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e82f5a3-645d-4455-a67b-0d8ac8a306e4",
        "cursor": {
          "ref": "9b0088d9-58ec-4395-bea7-8c6a2a4dab53",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "306ae698-7dde-410b-886e-ed81dc04f600"
        },
        "item": {
          "id": "5e82f5a3-645d-4455-a67b-0d8ac8a306e4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e1d04683-844a-4440-9d5e-8067a4d7749e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6218154d-9b14-4764-b517-f60beb58698c",
        "cursor": {
          "ref": "fabebc94-6ce7-444d-92da-774e06996943",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "380d6384-b336-47e5-a005-620e2640db1f"
        },
        "item": {
          "id": "6218154d-9b14-4764-b517-f60beb58698c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bc10b4f9-2241-4c52-b9c4-b2d69387427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178747c3-16e3-4295-ac17-f23da6f7d019",
        "cursor": {
          "ref": "2c5459f6-65be-4185-882c-29a9a990a7a4",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "755a13b8-4c3f-44db-b73c-85fa70636f04"
        },
        "item": {
          "id": "178747c3-16e3-4295-ac17-f23da6f7d019",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2fd64cb5-7bd7-4f00-bfa0-2742b3fdc925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066c2aea-e265-48cb-9ed7-2ade173ab0c1",
        "cursor": {
          "ref": "5c33756a-baa1-4700-80f5-c8d9d1fb2211",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "20b75685-d992-448d-baf5-2f2a7a1fe5f1"
        },
        "item": {
          "id": "066c2aea-e265-48cb-9ed7-2ade173ab0c1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cfc663ab-541b-4703-ab84-336a9b1f0a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88143d0e-7540-4ec7-9f1b-22b96cccdeaf",
        "cursor": {
          "ref": "843641f3-5552-4085-aa79-567b8939531a",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "17746e0d-126c-4606-83c9-d2b24a594725"
        },
        "item": {
          "id": "88143d0e-7540-4ec7-9f1b-22b96cccdeaf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "78b44b3a-592e-44fa-bc1e-9ba71c01a427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52194372-8520-4d10-aaa2-5e3867322ed1",
        "cursor": {
          "ref": "b1324958-6235-4024-9887-f2761c3d64f2",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "645b5d55-d5ba-4269-864a-aa796e554372"
        },
        "item": {
          "id": "52194372-8520-4d10-aaa2-5e3867322ed1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bb084e8c-4f85-4835-a348-9509dc852388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad26ab-60f5-4185-a21b-129f70491764",
        "cursor": {
          "ref": "48036229-8198-4676-a307-bdbeaa85472c",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9671942f-5636-49b9-bdf9-6e9a79e4288d"
        },
        "item": {
          "id": "4fad26ab-60f5-4185-a21b-129f70491764",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "02832800-88b8-495b-bcd5-9efda3222117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734c5484-21f6-4926-bfb7-4681bb62f6f7",
        "cursor": {
          "ref": "694c1ec8-f2e3-4bec-b999-1658673ced10",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7c4a0bde-de3a-4dcf-8b45-071631e57c43"
        },
        "item": {
          "id": "734c5484-21f6-4926-bfb7-4681bb62f6f7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dbbe5c8a-8800-4c0b-80ad-1548c1d7e725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dee6039-a6ed-4fd6-8168-0ca258c89a0b",
        "cursor": {
          "ref": "6b4b2c14-5d55-4ec7-bf7b-14790dfc1093",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a24abd4f-e76d-4696-8721-de6ba8d54f44"
        },
        "item": {
          "id": "1dee6039-a6ed-4fd6-8168-0ca258c89a0b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "49ed705d-2a7a-44ff-984a-69c318fb6382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcebb73b-505d-410c-902d-83c673c9c575",
        "cursor": {
          "ref": "f86b4014-c443-4c4f-9802-122f8e24e904",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d9ea2317-1974-4ac0-b942-54ef5c938b5c"
        },
        "item": {
          "id": "fcebb73b-505d-410c-902d-83c673c9c575",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ba2efc25-860b-4765-abdb-9db9a3c24a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e374cea-4ffb-4644-940c-606a6b65dd21",
        "cursor": {
          "ref": "fe8a8568-a3a2-4659-b005-72ed63e80806",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a2d8ba06-0b23-431b-a517-bb7302f100d8"
        },
        "item": {
          "id": "2e374cea-4ffb-4644-940c-606a6b65dd21",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bc239f46-c10d-4bf5-ae22-449bc48e1cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56befdf8-3e93-4823-a0c9-f071bceafdda",
        "cursor": {
          "ref": "91dc37ff-a3b6-41c3-8a44-77e66202d232",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "539709e1-f079-4cf6-9358-c076ac9a0604"
        },
        "item": {
          "id": "56befdf8-3e93-4823-a0c9-f071bceafdda",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "16e2bd24-f193-486e-9f0b-3a6d6021d412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c97c8ea-6da9-4869-b4d6-745298229884",
        "cursor": {
          "ref": "e7637828-8dbd-462e-a7d5-2c68f1b5bf92",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ddf982d2-6e21-498a-b052-df18117e8b16"
        },
        "item": {
          "id": "4c97c8ea-6da9-4869-b4d6-745298229884",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3a1bb389-6c24-46ab-9f2d-76cc89c3f40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b9c97-97ae-4849-8f9f-bd2ca12c3372",
        "cursor": {
          "ref": "647fab3c-4f76-42e3-b662-ea30d2a261f6",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "97683aeb-51dc-4c39-a31f-dfba197e9b51"
        },
        "item": {
          "id": "383b9c97-97ae-4849-8f9f-bd2ca12c3372",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "81fb2154-065e-4c59-9eb2-c4ce4995ef4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e6904-9ec1-48de-af54-d7a1b9aa06bb",
        "cursor": {
          "ref": "6cc3f333-337f-4640-9adc-122c519d7b0a",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "20dcf1d1-0e10-4805-a6f8-58a4651b9265"
        },
        "item": {
          "id": "204e6904-9ec1-48de-af54-d7a1b9aa06bb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ff3b6d54-46ee-49b5-b530-ae622322fe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88f9ed4-9c41-499f-a0ae-c22424a21804",
        "cursor": {
          "ref": "b0e7e072-3b59-41c4-b5ea-e327b78f6048",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "48bdfc40-9ffc-471c-9264-992de98e3acd"
        },
        "item": {
          "id": "f88f9ed4-9c41-499f-a0ae-c22424a21804",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "610cdba5-3a11-4d95-9027-3d5bde3b2149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b782925c-90d8-4d0f-bf6d-e76f1c448e09",
        "cursor": {
          "ref": "136750c8-b80d-4bfb-b748-8619cd6d0ab6",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a53e89bf-9c19-4e03-a44c-b32d506c4008"
        },
        "item": {
          "id": "b782925c-90d8-4d0f-bf6d-e76f1c448e09",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2be5fbb2-8b0b-4ae2-860e-fe166e57f529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7750a4cd-7af9-4602-a4ea-e1411e5ad53c",
        "cursor": {
          "ref": "cd380e3e-2d14-43f4-b94b-b38771e23eb5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1313ec74-518c-4dab-af97-793ec7b58e12"
        },
        "item": {
          "id": "7750a4cd-7af9-4602-a4ea-e1411e5ad53c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4c8f0961-fdca-46b3-a505-17870efe5db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d3171a-6c3c-41b5-86e1-0f0c4924ae2d",
        "cursor": {
          "ref": "25627780-a52d-4089-b41f-a5fcd8da1f61",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f71c3f1d-7ed2-4c01-97a5-250899d65498"
        },
        "item": {
          "id": "30d3171a-6c3c-41b5-86e1-0f0c4924ae2d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4bbf8722-c400-45f3-bc1e-0669f5460dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928717fb-3cc0-46e2-8cef-05dd8166a314",
        "cursor": {
          "ref": "ac47027b-99bc-4bba-bcd1-bf1db3aeac4b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cc593f01-4323-47fc-bcc8-63e6cf10d31b"
        },
        "item": {
          "id": "928717fb-3cc0-46e2-8cef-05dd8166a314",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8a7f0e20-81b9-4f06-a70c-424eb0041783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfd0445-e078-4aff-9112-e257a0a83041",
        "cursor": {
          "ref": "ae1d1447-51d2-4a19-a05d-7151f436a748",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9e65afe9-866e-4436-9c15-30f8e5352047"
        },
        "item": {
          "id": "8dfd0445-e078-4aff-9112-e257a0a83041",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5c2a66b5-b2ee-4c88-b9e5-2b3638f1349a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ffb1ed-1d63-4013-a15c-fdc1c32e7baf",
        "cursor": {
          "ref": "3420ce7a-6364-4795-8af6-7f630d6fc18d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8506d572-e1e4-4dba-bd73-0d0dbdbf5b66"
        },
        "item": {
          "id": "81ffb1ed-1d63-4013-a15c-fdc1c32e7baf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "db10fd23-0e6a-4256-84a8-190a539918fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1183146a-dacb-473b-9809-ffbae08257b6",
        "cursor": {
          "ref": "0e71e9d4-e7ae-4177-8b1e-47f3a6ea90f4",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "91cadb09-9e71-4916-82db-e254d1dc53c6"
        },
        "item": {
          "id": "1183146a-dacb-473b-9809-ffbae08257b6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "24aabc85-a9ee-4d38-bfde-e0de1d68b5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35790f08-7f2f-439f-9c15-285c7f6ac791",
        "cursor": {
          "ref": "b5fe275d-d599-4b92-b4fd-1c0df17a5d7d",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8b33cfc8-6c38-4b65-8f76-f29726716edb"
        },
        "item": {
          "id": "35790f08-7f2f-439f-9c15-285c7f6ac791",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3c07defd-ae4c-4c40-9e71-6b1ece1a30e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e6a58d-9da0-4d9c-ba9e-84965b609b3c",
        "cursor": {
          "ref": "b8bc0c61-43a1-475d-a6c0-14a7326c9f87",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "29aefcd3-dd83-468b-be09-70e74a2d0893"
        },
        "item": {
          "id": "09e6a58d-9da0-4d9c-ba9e-84965b609b3c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "45d89277-2abc-4e01-b73d-d431546a719b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7456f3f8-db57-4030-a2ce-1c23e7891136",
        "cursor": {
          "ref": "49f32db3-2cca-41e3-a4ca-3e66df09ba09",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e2e67b04-f57c-43dc-b86f-ef2343ab086d"
        },
        "item": {
          "id": "7456f3f8-db57-4030-a2ce-1c23e7891136",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e04080ff-1897-4e2c-8f44-40fbf8ef989e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bb6592-bdce-45ed-9dc9-a523e9bd86c9",
        "cursor": {
          "ref": "5c24a798-9b31-41ab-9c19-439fe4f0da71",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6c92a06c-9e72-4504-9e3d-43f88e744cad"
        },
        "item": {
          "id": "d4bb6592-bdce-45ed-9dc9-a523e9bd86c9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1d4846a7-e786-493a-9d51-7c99720bdee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84a4404-98ff-47bd-8cc7-25b15c055f1b",
        "cursor": {
          "ref": "b7139542-5b37-402e-85d9-5352cc65eb2c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3c7bb2ce-4d89-4ebd-98bf-0198193017d8"
        },
        "item": {
          "id": "c84a4404-98ff-47bd-8cc7-25b15c055f1b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c5b29a6d-10ac-4be0-a9b0-14923065d9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3243cf20-99f3-4c67-ac0c-c98881c78c24",
        "cursor": {
          "ref": "1fce4580-d512-4ba8-984e-b7a1911a4b67",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4ecba9a3-54c7-4522-a95a-9735842402ed"
        },
        "item": {
          "id": "3243cf20-99f3-4c67-ac0c-c98881c78c24",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cff1f595-c1d2-4501-b282-7733a9e2a00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9daf12-444c-48d6-a922-e06aea2e50e6",
        "cursor": {
          "ref": "745a5121-8081-4fca-bbd3-b405da228041",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "80d368bd-3690-4ebb-b7b7-9251aa16cdd5"
        },
        "item": {
          "id": "3f9daf12-444c-48d6-a922-e06aea2e50e6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6dcb6b9b-60bf-406f-9633-4fa21e1d19aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ece9b7-7edf-484a-9739-4b4578abdd3a",
        "cursor": {
          "ref": "5bbbc6f9-ebaf-46e8-9f33-38b77972e1d5",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "962c2185-e3bf-43c9-85a1-bf62f34f5a16"
        },
        "item": {
          "id": "98ece9b7-7edf-484a-9739-4b4578abdd3a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1e882241-74d7-4103-aab8-594586ac8a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68c3ebb-7c6d-420d-b437-025d7fbb85f7",
        "cursor": {
          "ref": "c55775c4-be62-43cd-8c80-aabb8d9054f4",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d267b263-1e64-4769-8bd2-90f06658c1ae"
        },
        "item": {
          "id": "a68c3ebb-7c6d-420d-b437-025d7fbb85f7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ff48cd67-fff9-43f1-b250-3012a1e0b707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e664ad-bc1e-4364-9779-56feab9d6ee6",
        "cursor": {
          "ref": "8e70b69c-38c3-4d83-886a-57d00dfa2626",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b2658bcb-2ae0-4659-a57f-119291fa9850"
        },
        "item": {
          "id": "f8e664ad-bc1e-4364-9779-56feab9d6ee6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "89c2e626-fdb4-4d3c-9742-24d840f65e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16398067-a103-41b8-b326-1b49e667899c",
        "cursor": {
          "ref": "7d9969b6-a60d-44d7-bc65-0e75c9b4e277",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "39052ccc-a839-44c5-b97b-51719c4e24f7"
        },
        "item": {
          "id": "16398067-a103-41b8-b326-1b49e667899c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "264eb3cb-c0fe-4286-ba72-947230a366ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89b07a6-8853-42e2-9aac-5310837dad8c",
        "cursor": {
          "ref": "993255fc-f1d5-4beb-bf1c-00664caebddf",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1092b4a2-499c-49d7-968d-aa973e29bd01"
        },
        "item": {
          "id": "d89b07a6-8853-42e2-9aac-5310837dad8c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f331c670-84d1-44e6-9c53-10dc9723f98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94dce3a-01b6-497b-8e85-845daf04f664",
        "cursor": {
          "ref": "1fda8f2f-8b5b-428a-a997-545611d86759",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e909c6b3-93aa-44eb-acd5-119d5e949026"
        },
        "item": {
          "id": "b94dce3a-01b6-497b-8e85-845daf04f664",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5b5ae2f2-9015-404d-93d8-2e59e92380e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06925a-1fe1-4a93-8c71-8e7e94393c9a",
        "cursor": {
          "ref": "2656b55a-546e-468c-80d0-5453f31ab26e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "320ded91-f59a-4be4-b39c-12c17c499e65"
        },
        "item": {
          "id": "fb06925a-1fe1-4a93-8c71-8e7e94393c9a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "60e31d4e-1d12-42f6-9ac9-8406cf930611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0547f41-6409-4817-bcf8-ba3904167e4a",
        "cursor": {
          "ref": "ee90c345-b887-4651-a0b3-a074ba1b1a08",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c61de488-fcd4-4a25-8d10-6c94e39d69fe"
        },
        "item": {
          "id": "a0547f41-6409-4817-bcf8-ba3904167e4a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e6df5d34-7835-4988-be2f-1ccc24b6666c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca70d515-6e63-4ff3-b7b7-9f9ec5e9e1e1",
        "cursor": {
          "ref": "5f18df4e-f709-48aa-a917-aaf50dc8a61a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a90c25fa-9cb4-47eb-a756-be9f37e53192"
        },
        "item": {
          "id": "ca70d515-6e63-4ff3-b7b7-9f9ec5e9e1e1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "801ea801-947c-40af-b2db-419fb9176926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc560cb4-8448-4044-abd9-daccc75812d6",
        "cursor": {
          "ref": "1cef449d-34a8-443b-9f37-aa782ba8af5f",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "eb9d7c12-0bef-4b27-9ac2-6a1ce8391ed6"
        },
        "item": {
          "id": "bc560cb4-8448-4044-abd9-daccc75812d6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c1beab00-5307-41ee-a5a3-7244700f0e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f528c846-edf8-429d-8f65-e30b1801d75b",
        "cursor": {
          "ref": "20fd7499-daad-489a-9af9-0e4543c9d042",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fb6195d9-a9ee-4498-9f8b-11d001300976"
        },
        "item": {
          "id": "f528c846-edf8-429d-8f65-e30b1801d75b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "68881839-91c8-43ce-980e-8663a2285003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b097937e-5cec-4d91-9f5c-b3dea47ace66",
        "cursor": {
          "ref": "f65b6bf8-7208-4aff-b8e2-041acdd983e3",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5a3f838c-6922-4811-a011-99e05af0b768"
        },
        "item": {
          "id": "b097937e-5cec-4d91-9f5c-b3dea47ace66",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "278c52fd-0609-4d79-b68e-bf79120a78ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f49e23c-68ad-4b9d-9abb-e54b661cf904",
        "cursor": {
          "ref": "545b509b-eb3b-4a1e-a144-83e9d868f509",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4d625393-4244-418f-8964-e60222f03315"
        },
        "item": {
          "id": "9f49e23c-68ad-4b9d-9abb-e54b661cf904",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3bc2138b-89f3-4294-9b2d-fd13f941237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c13b4fe-487a-4b80-a1d5-a35349de5a8f",
        "cursor": {
          "ref": "9c6b9aeb-3aa5-482c-b910-2012bba9266d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ce55e93a-b7ae-4349-924a-9d94bdb3e741"
        },
        "item": {
          "id": "1c13b4fe-487a-4b80-a1d5-a35349de5a8f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c34c7022-c007-42f6-bc33-e3ca4ca1bff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c745bdef-7ee2-4623-8a5e-e6ce668c48d3",
        "cursor": {
          "ref": "860d0af5-74dc-4e6a-a97b-114ad6ebac41",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e991f7cc-3ee6-4b90-968c-29df967c7e21"
        },
        "item": {
          "id": "c745bdef-7ee2-4623-8a5e-e6ce668c48d3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cf190ba7-0822-4def-a1dd-5cbb2e1c171b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d8a8c-8455-4c4e-b00c-ceecb4921966",
        "cursor": {
          "ref": "0e4ea3ea-caee-4c3b-a807-6b694f7b7a05",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "df0cbe2f-cccb-4405-86b0-5b7ea999a6fd"
        },
        "item": {
          "id": "903d8a8c-8455-4c4e-b00c-ceecb4921966",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "64a85006-6eac-4439-ac3e-9a933014095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2e92c6-0d66-436b-b0fc-4ef7c89936e0",
        "cursor": {
          "ref": "a753fbbc-231d-451a-908b-85be58be3584",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a20c0175-388d-48b0-a2f9-459e13362aea"
        },
        "item": {
          "id": "0f2e92c6-0d66-436b-b0fc-4ef7c89936e0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b48b7751-1847-4063-92fc-0e40d20b0f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cfaa00-e175-47ea-92f0-aa0f76d2020d",
        "cursor": {
          "ref": "87376401-caf4-438c-9f34-dddbd85a2728",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dd6c763c-7c87-4e3b-81bd-ca3a1ea48c26"
        },
        "item": {
          "id": "29cfaa00-e175-47ea-92f0-aa0f76d2020d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "da33ad39-2c53-4d6e-a3aa-329585d823de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6250d253-cc07-4a83-82a6-65fb04522a1a",
        "cursor": {
          "ref": "c926163f-6d0a-4a05-b323-adbdf7dea49c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a207e0e8-06f0-4d77-9159-eb9277705bfd"
        },
        "item": {
          "id": "6250d253-cc07-4a83-82a6-65fb04522a1a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "07716e0a-5e68-49d1-8a08-3c48b2b0006e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9fb92c-0808-4e1d-ba50-2cd754d9aacf",
        "cursor": {
          "ref": "522f7acf-0777-4e62-82d6-d474cf3c7b6e",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9fab747d-e4d3-4221-947c-cf231369dd40"
        },
        "item": {
          "id": "5e9fb92c-0808-4e1d-ba50-2cd754d9aacf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0a8248b9-0615-425e-8ff7-66e09722d20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32deb977-0e3d-4abd-98a9-2ede7bd56955",
        "cursor": {
          "ref": "94ef5289-86e5-44f8-aef7-0feab13490a9",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "787f9a8c-fa73-4434-9f33-240d7857ab90"
        },
        "item": {
          "id": "32deb977-0e3d-4abd-98a9-2ede7bd56955",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "638a22f7-20e6-45d8-a2b7-1a80cb5d1204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438468d6-5905-43d4-a3bf-5ad66c4aba41",
        "cursor": {
          "ref": "9fcbffd0-ea73-4d8a-9ead-47434842d5f1",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0d630918-e8db-49d0-9922-da278d3b3979"
        },
        "item": {
          "id": "438468d6-5905-43d4-a3bf-5ad66c4aba41",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7067faf5-99a0-4d00-9349-8f4cc49a2dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69657a27-21c8-4037-a3aa-517d2ff33efc",
        "cursor": {
          "ref": "727ff06c-5ac4-444d-b71d-a021aa58c443",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f91f65dd-7434-4add-8c29-5a66af3dcf4e"
        },
        "item": {
          "id": "69657a27-21c8-4037-a3aa-517d2ff33efc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "af987344-2c06-47ac-8c90-50276e9f21d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d03f13-9e1e-46b7-aec8-7236434224b0",
        "cursor": {
          "ref": "e21208f9-eea7-4740-9100-dbec6c789e48",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f497cd74-1551-4c19-8cb5-4e43767c5c8e"
        },
        "item": {
          "id": "c8d03f13-9e1e-46b7-aec8-7236434224b0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "462c9f8b-19a8-4a56-bed2-df9238525727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d949d8ee-50c4-4676-835b-049a0ff603b8",
        "cursor": {
          "ref": "358bef69-bb38-46b7-b9fc-f6810ba094a3",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a3758630-767d-4b5a-b781-efa03f369075"
        },
        "item": {
          "id": "d949d8ee-50c4-4676-835b-049a0ff603b8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bfd33a11-c1e8-434f-b7b2-5ef53e650cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee08e575-415a-4e9f-a109-9398f5f02192",
        "cursor": {
          "ref": "84383c82-aa2f-4cfd-940e-e733212d9239",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1ff0e085-e0df-483c-8ac5-db835fb8139c"
        },
        "item": {
          "id": "ee08e575-415a-4e9f-a109-9398f5f02192",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4878788f-6aa8-45c4-b6f4-292a7428d65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906eaf1c-a6f0-4f21-8ded-6c56945f1f01",
        "cursor": {
          "ref": "993643f0-4cbe-4bee-9969-e34ae7609d8d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c9e14839-634b-42d3-bdeb-c282ade0cd20"
        },
        "item": {
          "id": "906eaf1c-a6f0-4f21-8ded-6c56945f1f01",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b02abc3c-92e1-486b-88e0-d7f37a6b6de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf97c3f-9440-4c31-9761-8d509c3a48ed",
        "cursor": {
          "ref": "8f328c64-17d6-4cd7-948d-12086c91c536",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "784696c4-8fe8-4edd-a0f8-17a577e4b740"
        },
        "item": {
          "id": "aaf97c3f-9440-4c31-9761-8d509c3a48ed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0cb07ed8-d1b7-460a-af36-cf8de9050eaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7773e1-9459-4fc9-becc-983025834f76",
        "cursor": {
          "ref": "83696d74-e651-45b8-9bc6-f141743c0713",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eae907c6-c335-49c2-b978-09fc884a888a"
        },
        "item": {
          "id": "fd7773e1-9459-4fc9-becc-983025834f76",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "63b5e421-8721-4ded-a6ef-227d4fe23799",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 393,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eda28a-4a97-4d06-b3e5-4d91dd5cbd40",
        "cursor": {
          "ref": "6c11ad6d-f44f-44a3-ae44-89469efb1b50",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ed76751d-18a6-48a6-beab-1162627f86b3"
        },
        "item": {
          "id": "a5eda28a-4a97-4d06-b3e5-4d91dd5cbd40",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d6d1b7df-153a-47f2-ba3e-c86035ce789e",
          "status": "OK",
          "code": 200,
          "responseTime": 435,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9744f83-ba05-4f0d-9776-71ccf82c0f68",
        "cursor": {
          "ref": "3f9c3810-13e1-4205-a472-82768d32cebc",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "48e248a7-4491-41c6-923a-7909940a798c"
        },
        "item": {
          "id": "e9744f83-ba05-4f0d-9776-71ccf82c0f68",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4d3b118c-398b-4f29-a4e7-b531f1668f52",
          "status": "OK",
          "code": 200,
          "responseTime": 2002,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45f7590-7abe-468a-8d73-e780c81fb638",
        "cursor": {
          "ref": "106cf3e3-7e02-4348-a3e8-338b2ff7dc46",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "722769f2-6f95-47ef-97ac-3817c2fc1322"
        },
        "item": {
          "id": "b45f7590-7abe-468a-8d73-e780c81fb638",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "946c33a5-6bb3-4191-821a-b51b1671bc76",
          "status": "OK",
          "code": 200,
          "responseTime": 1905,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5434fa23-21f6-46f2-a02e-827051f4e18b",
        "cursor": {
          "ref": "ac13e18f-9168-4356-b452-d39ae4aff12f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5e278263-be89-47f5-9881-7c10cc59cf08"
        },
        "item": {
          "id": "5434fa23-21f6-46f2-a02e-827051f4e18b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93a4c1a4-6da7-4bc8-9afd-f71bfc717781",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5434fa23-21f6-46f2-a02e-827051f4e18b",
        "cursor": {
          "ref": "ac13e18f-9168-4356-b452-d39ae4aff12f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5e278263-be89-47f5-9881-7c10cc59cf08"
        },
        "item": {
          "id": "5434fa23-21f6-46f2-a02e-827051f4e18b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93a4c1a4-6da7-4bc8-9afd-f71bfc717781",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5434fa23-21f6-46f2-a02e-827051f4e18b",
        "cursor": {
          "ref": "ac13e18f-9168-4356-b452-d39ae4aff12f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5e278263-be89-47f5-9881-7c10cc59cf08"
        },
        "item": {
          "id": "5434fa23-21f6-46f2-a02e-827051f4e18b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93a4c1a4-6da7-4bc8-9afd-f71bfc717781",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8deadb-20d7-4bc2-8c82-eec9080bb272",
        "cursor": {
          "ref": "25710d0f-8a71-4634-9e35-f37421e9f6e6",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "df451db6-afc3-4715-956b-314575cfa15a"
        },
        "item": {
          "id": "6b8deadb-20d7-4bc2-8c82-eec9080bb272",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2742019d-f20c-4570-9267-0405a433f343",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 415,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af6d395-6a1b-4d16-924f-1c8a205e9a1b",
        "cursor": {
          "ref": "4cb5afa6-de17-42ec-89b3-7d689d71ab2d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3a5c123-9828-47fa-8e02-09ff2da7e9f6"
        },
        "item": {
          "id": "6af6d395-6a1b-4d16-924f-1c8a205e9a1b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0fc7e6db-6776-468c-8a91-11e7a0b06290",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af6d395-6a1b-4d16-924f-1c8a205e9a1b",
        "cursor": {
          "ref": "4cb5afa6-de17-42ec-89b3-7d689d71ab2d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3a5c123-9828-47fa-8e02-09ff2da7e9f6"
        },
        "item": {
          "id": "6af6d395-6a1b-4d16-924f-1c8a205e9a1b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0fc7e6db-6776-468c-8a91-11e7a0b06290",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bea9a3e-e17b-4ab6-a48e-0a089736ebd1",
        "cursor": {
          "ref": "919a3f52-109c-4d04-9a5e-b62be354a4c9",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aca1b94d-0676-4325-ac8c-5eeae23493b9"
        },
        "item": {
          "id": "2bea9a3e-e17b-4ab6-a48e-0a089736ebd1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ca9a52df-8a18-44f7-8975-169cee0da550",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 601,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73d8fd8-9b03-4190-99dc-41afbd2ba5b4",
        "cursor": {
          "ref": "4dd78674-09f9-41dc-b7fa-6f40deef9df3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "22b4cc99-51b6-443f-a357-5ef2f5c14b07"
        },
        "item": {
          "id": "b73d8fd8-9b03-4190-99dc-41afbd2ba5b4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06f3c204-c352-4d3a-8482-5729c80c7f8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73d8fd8-9b03-4190-99dc-41afbd2ba5b4",
        "cursor": {
          "ref": "4dd78674-09f9-41dc-b7fa-6f40deef9df3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "22b4cc99-51b6-443f-a357-5ef2f5c14b07"
        },
        "item": {
          "id": "b73d8fd8-9b03-4190-99dc-41afbd2ba5b4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06f3c204-c352-4d3a-8482-5729c80c7f8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4219b7ce-ead7-4821-91a2-168550e20f43",
        "cursor": {
          "ref": "3dd150da-a31d-439c-bf44-a3ceb9d51f4d",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "71b7d985-3bb4-4128-a3e7-1bd9b6046c38"
        },
        "item": {
          "id": "4219b7ce-ead7-4821-91a2-168550e20f43",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "72844355-18f3-476c-aaf7-6d80b5dd0dc8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}