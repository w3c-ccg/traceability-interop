{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "efd103b7-3ea9-43cf-ba6e-825a10a37c1d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "512b711f-03fb-4700-bfd4-b60a3f5987e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7110af7a-bf8e-4d00-98c3-bcabb965c376",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5013c888-5962-4751-b2a7-74409bfb148f"
                }
              }
            ]
          },
          {
            "id": "f82e25fb-496e-4edf-ba6d-033baf6fc514",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c77ff62c-9018-4cb1-9252-7e7a9bd60d3a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "56a08958-174f-436e-8895-d5ba4a8de713"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f2430d83-c126-4420-b7e7-5361887aed36",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b2e7423a-6851-49f2-a24e-e7e25251501f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12a97925-77f1-4c9f-8b4a-7ce362625b90",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01dee268-665d-461e-90b9-73fb7a3e2b43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8170cf0-bc96-4159-9090-459b5faed353"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa31f163-663d-4b67-a5ab-7ad19d7a3e05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd0e7c5d-77c6-42e7-b210-4c6776a51092"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f16ac92f-43ef-40d4-81a4-bb398ab30b4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23f41a32-d93e-4555-8dbe-87ede6d66ef2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80d797fa-744e-462f-b47e-9dcc72067c53",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7463f652-2a18-46b3-993a-24b57296426d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5df1f3f-c246-4253-8148-dd6241ea724f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcccc259-7472-4c2b-8ae0-7e6b9d1acab5"
            }
          }
        ]
      },
      {
        "id": "d1a53d59-fc85-4e5b-8cf2-9439283b349c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6a3887ce-442d-47a2-9620-dc11ea8b6305",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2900eb9-0868-4128-9591-b921cb11ba7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f8b6e5b-4898-4627-9060-2420bb764566",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0cf7bd-30c5-4dff-b505-8ad59c156b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57659adb-0cff-486a-8e35-19434f8c4b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cc1907-081c-417d-a0ba-f2d7bb318f24",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d4e43e-baea-46fe-b946-becc3cd02371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e634179d-1ce4-4fba-a9c5-c9c877fcd61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbd9ca0-49be-4a58-8cfc-2335a3ad3690",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baba7dc4-514a-4706-801a-43be072eee96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b415e5f7-4a8d-45d2-af11-e469e0faa81f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d374ca6-94d3-4c6c-93fc-3280aa9b0b8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "313b925c-e500-455e-af12-c2a0cba23f7d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e97a7d9-952a-481d-87a6-5ca049be2424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d69565c-f729-47cf-8863-e94666eb3647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae027fc-3829-442a-8fc0-c490489df9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2cca2d-8579-44d4-aff2-fce1f9ebd8d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "60dc2597-139a-44c2-b620-47980fddab35",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55840ea1-53b3-4ccd-b32e-bfcb51472d09",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81698192-67bc-4c76-a948-909acb859eca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "039c982f-492b-42ab-85fc-90e1f114f5fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "686eb191-78cd-4db8-a8ca-0ead1058f29e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "14bb3872-b9de-4ccc-ad1e-e791d14e33c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74ebe5de-fce6-42ba-9c1c-799805f2122b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3fb8861-3ac7-462f-a84b-ff6daf765fc8"
            }
          }
        ]
      },
      {
        "id": "eab6b7eb-4db7-46a2-9d60-46d87af35b57",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2b7e4af1-ecb9-4d93-a8a9-a98604fb8f67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbc3992c-b405-4bd4-84d2-239c1364ae29",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "971fbfe5-7c48-4796-8400-fa7ccfcffaa2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f7ca7c-1b65-4a56-8ffc-c9e23b211e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268677ff-bf46-4088-a0d0-c5092f4f7b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669a554d-20d1-43ad-81a0-01d872d4a365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "809ab516-b826-4fb6-b97b-d91cfa26855e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1874db31-5019-4a44-a891-7fd5f9abd958",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9cc5f9-32a6-4457-9410-2264f9db6977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271d1718-4152-4f76-b642-32253f267d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb877df5-b85c-4a81-98bc-fee89dac9142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "081e2b2e-581c-4824-a664-bf2e0eb0d157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd23d751-2033-43db-9aa6-37c3282228de",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefae9bd-0e40-4cee-a1e2-01d4313e0d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf991593-4465-4e87-92ae-294948c7b5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebe731d-eaff-45fe-9d5a-983f3c5c8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "676799e1-1954-4e2d-bd62-043ecf5eb58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e32c53a-a65c-47a4-b170-1c8f6de06d8a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0346c8f-9def-48d7-94fc-f8a7ada6f63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca6f3d2-a033-45b3-b029-35428ab55f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3543eff1-72a8-4b1a-8bc0-d4cf086211fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "878f7154-8f08-4ea1-8ccf-630c5775c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27450674-3403-47ba-833e-b4d7eea85a7c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bcc977-8000-44a5-be6b-bda25cf934ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fc34fc-0044-4800-83b3-4bd99f0dfd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d4e6a3-571b-4602-a6b2-58a03d824f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51de9a19-e802-4051-9514-fb727a5e3ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74d470-0ead-43e9-b6b2-e7fc769aeeea",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50eb974e-84d2-4a24-9e88-02481b6bbbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68601827-a61b-4a24-a0e4-9627d6fafeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7561eb-7c96-4331-9fe9-d2c44bd7899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e82442-2792-4d0c-a9b3-5c79cd6d856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f85fae-ccbc-42fd-ba4d-b6d699b3e45c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66afa329-541c-4f51-8dd2-50a1cf931931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f415ce-d715-4c6b-a069-bcdea1d002b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82689fd9-aa45-4fdb-87ab-3c513205e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1db92942-bddc-4987-a392-358a2cbec110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba86912-6d40-4b76-9d10-fb6131f677ca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d70bb7f-062b-48ce-986a-9ce954b1c7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9063ce-386d-439a-b050-53e7db0338af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934ccc40-b3ba-4901-9ae1-a6865b5f9533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "227b5687-8329-4237-ba90-3127b1480042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f24c68-8201-476a-ae0a-2f4d45f462d1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9c5be0-380c-4262-80f1-88abe6e99b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1eb139a-733a-4329-b413-727cdeb44090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18abca1-f21e-448b-9cf9-3a98760bbe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b022964-f948-438d-81cb-6bde5f667dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84acb9df-cdee-40a1-8042-6467cb74ac35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d425ce-588a-4729-943c-041d89fcc243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef05ef86-16bd-4a53-b993-ed6dc63838bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2854080c-ede2-4c1f-a94f-62773855da3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ad8cc00-60f0-46b4-8def-06e8cfa25ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f78e783-654b-4c1d-99c4-4f7ebebe1f0a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad55314d-c66f-45c5-8692-73857fa6dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0946c757-da7c-4d73-810f-1d5328f83bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fa9cf3-c095-49fe-8b8f-2a61443d271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8fbe10c-3161-4e54-b776-c672e37a1fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83db330d-00c1-4850-a386-d132095d233d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7ee3e3-7227-4013-856e-d818526043b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbfbe1c-1049-459f-9240-bd05ee86e9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7d87c0-ff8a-4705-8c18-3a49717dc8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ca2c771-fe46-4f14-a9c9-a27e879a2b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e99da7-159e-4c4d-9ec6-f53299f71092",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d626280e-4f34-4009-9f5a-2b08d5be7a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8510f8e5-f97b-4fd7-ac5e-3474823b2b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6578f10a-e283-47b7-81e9-5e3600b09167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d39983d5-a880-42d5-9854-b16225692149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a45641-0b05-4fa7-afe2-d69b9a956f26",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f12ce1-9fc0-486f-b9ed-44f969adf26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b539274f-6124-4b0c-9c4d-bb290792f012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea0af11-1417-4ecf-9460-c03fcb1ed5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8324cbe-a051-4952-8a32-5793fba5cff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f1b731-283c-4305-a15c-48c8b443f594",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f74973f-e7d1-4ce6-a579-0404bfbfb42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea68730-8e69-4c55-928d-228f365c7b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18ac292-37be-4e13-8111-1ae1af464d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "865f9968-2eee-4b40-a745-09b4c59efba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f782902-c117-4264-be3d-39bf0ea7cefc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c5afaa-355f-4a81-ae48-258e8fea7795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f6c91b-fc63-4cf5-be5c-c4bd9222f0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f22055-dbc7-4726-812b-0873ce4af5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17a4c16c-87e5-4f3f-a868-97c141d2b67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746358c7-f40e-4d1a-b414-d8e29fb0f32c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5dfe52-69b6-4bdb-9639-09b6d7da812a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba054d52-29b6-4b55-986e-bb348230e10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26390403-c6bc-45ed-ab59-2aac94538251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "723c6068-78f2-4846-8f8b-8940624e6d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643259a2-35f6-4b65-9fac-da3c8e84e463",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9215dec6-17c2-42d7-a5da-c871adac737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abbb597-9e51-492f-87c7-9fb369a3d905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e30acf0-2265-4345-916c-edcf1f0f26bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "735958be-7df3-4bc7-9942-cd75eb354d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9d435e-285a-4fb6-b30d-219d5880c0f4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300bedb3-f38e-4bfb-8031-2eb2f8c5a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022567cb-bcbc-4a18-b3da-ba19f05f54fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919e4438-6563-4f7f-936f-556307c21ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4c75e4-0501-46f9-b645-2a137a346809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed762e4-31a4-4cdd-bede-8ff69f2d77f6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc7e44-506a-4dd1-a172-65b9c130c14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095c3e66-1dbc-4711-b9b7-7e52ef4a5e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae1e671-a6ea-47c2-a159-87e412f8ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90cb951-86c3-494a-a0ab-503bf92bd73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc0d40d-c87d-45ac-bd4b-f8d4e51ce820",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d259ef-e433-45dd-b1f1-61b6402a5cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5037ae88-b714-4f05-b309-d5278ac6903c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d558bfdc-eb47-43b2-8bdb-64689058c825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37be84c6-3df7-4b18-830b-5b297b8e8adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42871f5b-b803-4ab8-8a33-ca33428d1552",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a8a7cc-9ce7-453a-88be-cb71f636e015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7504df-72cf-4217-afa3-804dbbb9fb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece5f9d1-6274-4714-8ee4-65c22174ef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6711f113-32e1-4f28-8b03-6ce67ea7e44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299e55c6-e8a4-4a4e-93f4-b68b89593286",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2e47aa-76ad-4251-83ea-b158bac202d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04903d02-c473-4b30-bc69-5b4dcb8634d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb72945-e1ed-4d0d-a89b-83ef449d37b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff34e6de-a31a-48f6-9137-3b2f316ed5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d71b83-0264-4113-aca4-6f4992b37301",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1526409-ae37-4beb-92b9-1c98a5884ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6528d935-f37c-4e55-9893-992ef25944e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f766e0fd-d306-43cc-a5fc-d3fdf0fb8c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b90392-8fed-40f5-b7ce-d1471047d3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dce3a22-ffd6-4e4a-8068-4f235ee3db6e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dcca85-ee8b-4c97-9cd4-0ac39466fd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fedbd68-c3fa-41ea-a093-1d88771b8a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97d552d-1f64-4dad-9050-86bc4dbd12cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb65bc2c-a4c3-44fb-9d7b-52b7a6adc512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35154b2-d626-4edb-a6e0-119465926e17",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d63e62-a879-4fbc-bf5f-cfcf7b5b5044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d664df-bf7b-4126-a50d-1bdeba1cbc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2aaaf2-a0bb-4802-8cdb-60976725bff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3f24b2-84df-4aa4-8c57-8b92ca0c646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d3593c-1cd0-4fd9-97d3-c7c9882d18d6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92122780-c4a0-4817-b7a7-24c1cde45614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5566c90e-bbbb-493e-8bff-6e4efca241fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6831a9-01fe-4d36-8293-7296a6a66ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef30b29f-145a-44fe-aa2a-fb44449dc94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04621bc-593a-4dd5-85e8-8e57eee00b13",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57936a5-3b54-4ed7-bcda-048acb12ec54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0bf6fb-f325-43bd-a038-417079daf060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10d423e-b1ed-4816-9307-f21111b9ec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d720a6e-e560-4928-bfbb-877029ae7539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aac9a25-325d-40d7-8203-0186ebdaee7d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9440104-566c-425f-b9ff-2d5458d1db71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4229bb1-30bf-472d-8c2f-079d3837ba48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02ac022-0937-4275-ac46-3d52710c16b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1493e8c2-0e5e-432e-93ee-2c7b01f03713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4ff3f6-f8f2-4d1c-b484-6df170e42333",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7199a1f8-19dc-413a-97b4-3fe77e68f743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c86153c-371a-49e1-8f8b-6bb3eec5aac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eec8d44-1fbd-44ab-b5e4-3d7110719b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9cc520-d4e7-4ea8-9b66-c065d79a0afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451654de-7c97-4259-9eec-accf95481a99",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7da49d-ddee-413d-abbf-902603cfdc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b455f99-7e18-484e-acd1-cba9faf3789b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c187aa-925a-47d7-8fb6-9e709e809c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4303fbcb-7a41-4c9a-9d23-28d3d8d3a8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b91ff8-79ac-406f-8dbc-5d7bb23e32b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd62324-3704-49a3-b88f-2697955d47da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832538a9-0ca8-4617-be75-61bf25b6e730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fd060f-ba1e-4771-8726-6142228a24b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e992dea-f986-41ce-8b40-2ecd711ba385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a788f3cd-56ca-4d47-b2ae-4ff9b05ceecd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffec30a0-93c6-4815-aae3-aa26b8a2ce09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2ba6a9-7bb4-4c8c-8fe6-be9661038a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eda9763-b8c7-47d1-8ef3-ba41248f1018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7b58c3-fe2c-4cf6-a6c0-d5a91fcc7752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d0ad4f-0eb5-4834-9ba5-5624e162b1ec",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7b4148-790c-426d-ba56-0ad9348150b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3be72ee-9f21-4cc8-9830-f530cd08cbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122d385e-da61-4169-8670-38da96a2af8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3de4cb-281c-44a8-beb8-633838bc2ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1425f8ab-4fae-4401-923a-f09ede64be01",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fdc0d9-7a93-48c2-9141-ac765719c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132a7eef-00ca-4085-84ee-ae339fa3f84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2749ffc6-8f1f-43b2-9e84-2bf98adab755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "722bf559-f97f-400d-be8b-2f94f9b43457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1970f146-e756-4856-9926-51c1fdfdb1f5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf04c877-5139-498d-9b8b-933add53801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ac36a28-a712-4df1-8af6-9f7616208b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bf3ed4-0e78-4b99-b115-cbf91ca6ca5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7aee4e6-29c2-4833-b9f2-5c6d38deffa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683e3c39-c87e-47ad-b881-27f3c63b6103",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5378cbb8-a726-4a98-91df-d65330f7cb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617dd9d1-c7d2-4e22-a493-b01b8a29e73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd792060-4b39-4285-bef2-b025a0b06e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "193eae98-a164-44af-9f12-0e581c22bc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f096719-eb45-40e2-a63b-1a52225034e2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5809e4-d24a-4871-884d-a10cbe99cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0affb8f8-d50d-48b3-a74c-2ecc07d0e8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4726669-f893-47be-9465-237e8b0d9a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffa116d-1022-4a93-9c6a-43b3504ba809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c4969-5f45-4cdb-8a64-91e1f03b5888",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a4637a-6e4c-48fe-8ed4-e31fc1a0a190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965e81cd-b0fc-4cec-b6c9-476beabd8a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da01ace-068c-4b83-8af7-716c695a8332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b9e80f-ee7e-4a21-814d-97912630e027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0c1a17-d1b3-4362-97d8-6face408a19d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e027d5f2-2878-4214-bb08-339e7f516ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cb4487-ebe0-4899-93ce-d8f40bf6c5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12437820-e9b0-4d7a-a399-df5492653207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e13ca093-ee0b-4cbd-a6d3-f01913b02ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c517887d-8a02-4175-a6fa-05e459de0bb6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b472d8a9-d90d-4c38-840f-ba87423563c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cceb9a-c085-4b75-bdaf-8c91332d122d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ae2283-7849-4c3d-97a6-5d73b742a961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe87b6b3-f346-4bf5-bccb-a91a46836584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dae9621-e9f8-408b-8ed5-71c43d35503e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5474650-9984-4af2-a4be-e0ecd438fb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeb3bc9-ba48-4b74-a126-853ecab09865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adef925-3cdc-4eb0-8ae1-b1b4b5317a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "af50c4b1-222a-4f48-889f-fce3cf6c72bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9595a9d-936c-4058-b7aa-bf7866cc4bd9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fe9915-9c7d-412f-889f-85c64f641d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082ebdc3-58cb-486d-b918-4cd7aa4695db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fce1746-2601-46de-8242-5cada728106c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "577a5b42-da26-45da-a371-c624e0209a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769e6c55-253f-433d-93bf-2996567b8dfb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f690b0f-3d2f-47b5-976e-de23a515df16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdc6ce8-99c5-4a5a-b18c-30bc7d9871a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38f9d8f-b3e6-43cc-8bbb-45259bad5874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48fc2d94-74b9-4cfb-9f2e-d67ae76705d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d138c132-8edc-4c61-9244-95f46ef52929",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c200c18-7925-4694-a0db-ada949f04baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b14ced-d446-4357-9398-5721b3febc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6434c-0b32-47a6-9239-7cbde409d19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9251d9e6-62e1-439a-8c32-1dc69d27d5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944071f7-f5ad-4dbd-91ae-d0262a03996f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312fa1a0-0488-4b70-b1fa-ea6aa651fc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835baaf7-92eb-46db-ae01-76ff9c5a3e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3e7c43-eb2b-4b77-8525-86512d335f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9560b0ac-ce0d-4986-93fd-9b2b0c750b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f457246d-b372-4c81-b937-807a451351f5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f091ff7b-64b2-4480-9d91-33c3326abd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f88d05-2ac7-4a2a-8e6e-bac29c5d26e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a28a110-e40e-43aa-a017-3734f10eeccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cab2143-a321-474c-8cd4-4d6a754b8cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e53b44-69a3-4976-b2d4-562514ded4dd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4658f730-0aee-447a-9983-ca2da6076cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9cec9e-dc90-440a-97e8-a66c957e01df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9655175b-ba8d-4e7d-b57e-3d291c08e8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3493522b-bbad-4d6f-840e-3e309cff0a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b781f6-449e-40b6-a8d4-a4a5f36f8ef6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1a2144-a6d8-451a-8a16-d9f6123972d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f3a86d-04c8-4e62-a05f-8a1bb5e8d231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf47e45-0e6f-4beb-b5ba-e1dee133adfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e875217-52af-476f-9bf3-9bf8a533ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f8a45f-52c0-4b96-8c4a-96171f60d3c5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0799d0e-89f3-4086-ac13-41024472150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb864ef5-302d-4ae7-97e0-4c43b9799d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd928ccb-b630-4ba9-986e-2a7159cab47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a684eaf7-20ae-427c-b5bc-9804cdff4d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd13f7b8-566e-4c1c-ada3-36db5e5f71f0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f2788e-2844-47e4-9296-875156829107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7bee90-053c-44a6-9038-72ebe27d8c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84d27b8-131c-4ab0-bba8-2a751a22903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "15787a17-8ab3-4b6d-a0a7-252b85646b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cd1050-d72d-4cf4-858e-e42030db272f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6758beb-d888-4aaf-aff0-e08dc9866130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d50504-25df-4644-8946-0b92584e41dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d331ef69-52b1-41e1-9bff-29b8fe5948d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bab905-3a4e-4b23-8cf4-3c9f29b267e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e88c7-6ef2-4b7d-a2a7-75339a36ee07",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc0af21-c8fe-4a28-a16c-b387d3cc5f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33effe8-f023-4b6c-b273-b5ce07e7c989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e55c1eb-1e28-432c-9a3a-fa8dabd15444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60fac450-1663-4796-8c16-7c1537339c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3acd52-843e-4b1a-9b3e-594f4dcea2ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffce3f63-8058-4044-8ce1-7730b24bf211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665236ce-34f3-46ef-9384-eb23bd4c2668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f49450-1f5e-48b0-aae3-674b7824f1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "067821f9-a21e-494b-af4e-c9274d8e9cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df0566c-3ba6-4007-baac-559e3a7c0a9b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0998c516-5ca0-4970-8d6c-37d78a1ac42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea985bd-4019-4367-8c80-f57d60504607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974e3de9-a166-4601-82aa-ee5e3195ec9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27b0a30-158b-4dda-b4b4-6eb9a75a2ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31683245-d868-4292-82ed-55f99b048016",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97721c31-80a9-435b-9583-cdfc61f419c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc67ff5-f2f1-4a03-96d1-eb2a4e4ff078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189a7571-9e8e-4cda-81a1-3efba14725dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c6847943-e377-49a6-bb7a-76d5e900c566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cdeb4b-ec5a-4e97-886b-bab10690e56d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e00083-f969-450a-a22a-cb7605b09511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c181084f-1566-4867-9622-fbd27da6a695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bd43d8-d5bd-49a7-a827-e3bb22f06cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9c17e2-1b40-4242-b630-2d129a7e7920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9075e1ee-3e8b-415c-a740-5076016d2cb6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329eec6b-0a61-4102-bafc-41ca77b10789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6401ce89-8dee-4a79-a4a9-46f14ce58d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea63632c-c67e-4b47-abcf-f031b392187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b66ea794-d410-4e82-af10-29aed87a5e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e047106-3ac3-45e9-963f-4dc2d332c2eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31691a3-8cd8-4296-859d-5fdbcd53038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f6e3f5-78a5-4bba-8bf0-bd15d1ddd38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0461f424-4765-45f9-95a9-f39a335f7910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37832507-9568-4655-9bcf-4068c38b25a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b90124-d886-4dcf-b9f9-89e07c9d49c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15958290-6a94-441c-a1ff-81d848f247a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef385b69-009a-4042-a89e-2eb3e8a1bc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5409e7-f416-494f-8078-feec58706ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5a226c-9806-4175-b66b-1d01ec968416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b590dbef-d9f2-47bc-89e4-ea472a74aba1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98caa3c3-c63e-4072-aa36-d72b51054392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90b9069-29b8-4500-849a-387da4e494ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af792bd5-a31b-4c53-b138-9313f3a09da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e00b333-133b-48fc-b27d-0ac98c1165e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856c32b5-a4d7-4e95-b63a-db682daf4a46",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25a6e38-e6cc-457b-9aca-e4ef1eb51a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba53b81f-a3d5-44a5-81f9-783787b5ae7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9d5c4b-d579-4a45-9a37-def056d32627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dde00ab-2f51-4629-8a41-e98eea61a375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2283082c-f058-452f-bb19-c5bcd110bfd3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17d1137-c8ff-439b-8609-df347d5ffd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e3d640-3289-42bf-9cd0-23cedcfa2911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4be09e-7e16-46ad-982b-cf427b612ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3680e10-abe6-4186-babf-f207dc1e946f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3899ddf3-a371-45ad-94f8-d2c45b1acabd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2096c34e-6fc5-4f7f-a302-679cc223ac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059a4df4-7bcc-4982-824a-c2b93f8cc8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25382485-d38b-4a78-a6a4-d6f7711656d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d533c17-190b-4b90-a102-a344bddd0b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2ff712-0944-4e8b-ba05-9298dccb8199",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8deee2-ff32-4898-af9f-69cc1f8fdc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff744fa8-c3cc-4a30-bd54-456a9f33309c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c67c14a-7c60-477b-a3b0-ba81ca9da672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37912cc-66ee-45c2-8566-626d06064252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0847d6-9431-47ad-a88b-d667335d7161",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a707fcac-5221-437b-b8ac-43ad3c17aee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f16202-9191-4b90-b3ff-c76ee3280305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd68f6d-cf28-492a-933f-2f4f021e3b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab25258-cd92-4fc7-bfe5-faea185fcefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c8aae2-0d69-4cc2-b431-14e143decfa9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc8064f-12ec-4918-9d52-8a3189de3ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4c3dea-a549-4792-a564-5da2dcf8468e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a156edf-2ca1-40cd-b6c7-4113eeee7478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80a77051-d897-4947-8789-d1806b00cfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf029f77-4f44-40a4-9414-84357fc2db7b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb819df-35e8-4900-97a2-b2ebafaf00d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2685f95-0de1-40c5-9b82-bd633fc83901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c1c66f-435b-4e14-a52e-d9fb736990fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dafd08d4-3b6b-418e-ae4b-7f0cb0f3e16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b62c32f-855e-4cd4-a6c5-5ae59864439c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8debd0-30a6-4f9b-a0cf-7c157ce68b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f583038-b4c9-4ade-869d-db321be4c296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078955b7-6d56-41b4-9ab7-ef72c0d69ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "764c443d-22af-4a6a-9f2c-eade08775175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2ff727-6307-4ca3-b2c2-1d3c493262b5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a735e6dd-780a-478b-b277-513bf6d11109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7245289d-47db-4231-be20-4c16c6fb2f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d961f2-8e35-470c-a554-08a5198dbc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8bed51-12e0-44fe-bdf5-2de489fea3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467f7445-130c-4839-af2c-82be413724ed",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5d39e2-9da6-4c65-9d5c-bee153ccf4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed6bedf-3286-43d2-9784-94340a328e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d7b6ba-ec8a-4508-a391-136934de3cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86211ec9-9136-4fed-87b9-16b4f54f3253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5db7d85-2c64-495e-b908-4893a656b50c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c528d2cd-3fc1-4650-87e1-7953adb54463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f956604-cb16-4178-8ffc-5d7c5356b395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aea47ce-8d37-4a22-be7d-c1f846443cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a931692e-84e8-4adf-bb0a-3ac5b88f4ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267b2ee7-8e99-497d-92bf-4f76e9b5527c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d5348f-8adb-4c81-9086-5baf7ab3db66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1b8375-4048-4ecd-b0ee-96c74e54e7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a109b9-3ed8-48b8-b77b-012a41a6d234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56113a1-f52f-45e2-a34f-bad728b9be36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034afcdd-e613-4c17-9765-8deb2aa51585",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd299384-3401-4da1-821b-33263f79b17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c800669-1376-49d8-b5e4-0213f5686ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9010e621-7aee-49cd-ae7b-6ee3c1531e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24bf0d06-8713-4b4d-b763-bb62575f2d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f5e668-bf28-4b73-8ec6-1eb4d09e9e23",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776407f3-f888-4ee8-ba0a-48db434ad91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd90864-1744-432e-b32a-b420a72f2768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14b534e-e356-4629-9118-127165993f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbe2e9c-5f92-44b7-81cc-f679cbf6d966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8794e5be-9fbb-4367-afb5-d41396692c18",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf6bc8b-8655-40c4-bfdd-1c1e912b68d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392cd684-75a5-43d5-9747-033ad2efee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1154704a-7c07-409f-820a-5245a7695fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2609511d-dd88-4433-9e8e-764c79879cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208d4ce9-b3ee-4649-8a2b-048b1862cea3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c475337c-02cc-4042-8159-10516aeb710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed656796-b60b-4349-bfa4-9cc2808cfa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98737ab5-2382-43c1-9c10-31614b00f873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b707ebf3-1bd1-4610-865a-1eed6f64bec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9499d2-0fae-483b-a414-2ea04060bc04",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead24ed8-81c2-4a1c-a651-5ff995f7b846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82152e9f-9f24-449b-bd67-46110c11a425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c2132-15b1-44fa-99b4-38f45037b94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8621b3d6-6b93-4fea-a30c-cc5ecec26e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731189de-c2c5-4544-8ccf-177c57bb32bb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae2b81-1b39-492b-b343-cfd8a162ddae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fd9795-9f56-41f6-b6e4-ab4ada003dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120fa9db-440f-4bdc-a66f-9dbfb6ae2ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35528912-fbf2-4a27-8fcf-5f776d68d12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23210b69-2050-46c1-809b-20b6ade17214",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db354c9e-e7f8-4bd2-8475-d0d3de4f1ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4e6252-813b-404d-b323-f1cdf61b49ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cca40eb-8d8e-4449-bc52-be1939a059d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab49478-b9d4-4185-a1b2-80db2ea4d52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f108f9-3b39-44fa-83a8-789ab4c01265",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02dabaf-3ed5-4464-b0b2-c451f9707626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ad2bce-ebd6-4655-a6d7-7f185330fa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182459f2-50c8-4d55-8ea0-f9d2052efcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf50e7c-403c-4fcd-b4db-606511b25aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae958cab-a835-4355-be8b-67cfa147a9de",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab2cc6a-9431-49b9-a80c-c6bd6af1bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5b7762-b78e-43eb-b634-95bcb5f576bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0738c6be-a1a5-4a55-9690-fb0a293c713c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18427350-a4a9-41c7-a6f8-a65afddc4508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac14b69-5cfe-4346-8fa5-c9da4f9b565c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73ac39c-f5c8-4202-898f-4af8f580982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aed3501-5f21-452d-9148-98e944486cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5d0aa5-fbab-492e-9fd1-60cd2b3d0f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "220358c1-0df1-4a98-bb4e-3dd9397fe119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25f2fb8-cbf5-4476-9186-17ad32cc5cd5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283d5aff-7e62-439a-b751-fc5bf76abf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3adf49-b608-4d8d-99cc-55dac9831df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db0ab57-ea8f-42a0-b4b8-973e19c3a366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "431b91f2-4dc5-4668-ab82-45256efd8de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9f4528-3a09-467b-bd27-cf078811f62a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97985ef4-9c3d-41fb-a497-fbde26a2b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0197a031-eed1-4c45-8d23-c67f69cb07b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745cb9f7-e44a-4d3a-8f94-b10ba923b47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d228303-0eca-4f8f-b801-ba593794035e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393fc99e-116b-406c-9116-5365124cdb82",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc90808-46f7-43f6-938c-d1199d9db9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabe41b7-1b6d-4483-8036-92d81a026b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b404bd-bfac-42a4-bd7e-65d8b9a8318a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fccd83a4-2fb8-4396-b727-ef7acfe6c167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b02da4b-3873-4b9d-98cd-c6eda68dcbc3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640756a0-bf1b-4568-a143-952b39335603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96847e4-9e0a-4c10-b045-671a427a70e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b59d9a-3cb9-45a3-98a1-b9338b672762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09fabd49-0928-4ad0-a050-38ba59487dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eba233c-4ac1-498f-9e03-80a248864589",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94776225-3c5e-495b-a554-0176a7f62be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450d209f-053b-435d-af5c-c79264c218a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b0413a-5ac5-4db9-bce2-3e49c0e841f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "65c9ae7e-cead-4e60-9fc5-658abf4ec476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aa2423-4ad0-43da-a6c1-17cfe3cc4a54",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88964d3-f976-4a7b-959b-fd5025b002d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c2bb06-b8b9-45e1-8e5d-bdf2dfdf7b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e6066f-efdb-4366-83e5-e173b240fe11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb79c5b8-4372-4558-8e79-cfdce92ca943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caaf227-eae6-4ffa-81f5-fb4248dd710e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8e5c25-d0a9-44fd-a114-7650a1b57678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d814bd93-2fd7-4d58-bae0-64c2aee1ec82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10444243-07a4-4350-9d23-aa7434ffa2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c18ec58a-92e2-4913-abad-634dfae2d946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054bb809-31b7-4172-bd75-07f7d87b7349",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbadc8e8-5c33-4354-bf10-df95434d5b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8cd81e-ee11-49bc-a6e7-ab62923d39c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd5fb7f-2748-4c81-a95e-196a0c308674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e03606-753b-4072-b67a-6f9b2911ddfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ee0372-40c1-434c-a70c-590ebbaefe8d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b5dbe6-9c96-47a9-a6bb-d9928795d74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b493e5d7-b79a-4d3d-a1e1-4a4a391890ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc981db6-5aab-49e1-a9bd-4f5ad20179c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60f3e7fa-2733-4782-9a8f-1f2c43a6c669"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cdb6ce36-ec87-40a5-ac0e-c89d015214a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "760ea871-fb78-413c-b9d8-a89a16a3f844",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b8353-d367-4229-8574-d5396f8422ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cf9d6e0-0f7f-4ea0-b265-94944d5c786a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a490c1-6d5c-4242-92f4-7d75b74cb43e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f922d04-8ea0-4dd5-bcbf-c67498ff57f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "437237a1-aec1-4e62-abe7-d2f59a67fe8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a12dce20-4ee9-4dbd-b950-e9eb0ead6047"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f4532d8-b1e8-41f2-87fa-1bb4062372ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faccef2e-a536-466d-89b0-eb01d77af1fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3e3cd63-7d15-4d2a-8cb7-96cee3a69050",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d98f44d1-9b19-4119-a84b-84924bd6cffb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c271dd6e-d9d5-400a-9947-f764969fef25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "112213ac-6982-410f-aa72-874948289ec9"
                }
              }
            ]
          },
          {
            "id": "cbf68fcd-ba0b-4fc7-9f1a-1ff851bd9de0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5464618-c45c-4f0f-af6f-227ce416370a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "79f18877-de24-4f06-bed4-4c16659c81a4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb06a3-5b03-4205-9e37-bcf1ac569284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fb421687-5146-4125-9c0c-65fc928b03b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1766c36d-1c8f-406a-9f87-42c8de079f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3697d690-b429-4aca-b1e3-09121a320ab5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ec58335-1ed0-40d5-9fb5-afe8a7d3baca",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3969a4ae-e185-48b8-94a6-ef6f5f95663a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6113c6a7-0899-4bf2-83e7-5dce27576ad1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5e84f4c-1fbd-47ae-a353-df66b3cbe65e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35848660-8a82-4c73-b718-4701343b0c56"
                    }
                  }
                ]
              },
              {
                "id": "6ccb120d-ada3-4a44-951c-4f2aa6f8bc16",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a50ab2b8-75ad-4256-94b5-42b2218ee4e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8457f83e-7ed7-46f5-82c7-c1da689e7ee5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d6cb60d-67cb-4122-ad8e-c385cd1917b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83d618b9-323c-4103-a0b2-b3131571e35d"
                    }
                  }
                ]
              },
              {
                "id": "0b1873f9-6e93-43e8-826a-1c1217772dc2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50c02609-09ca-4d23-bc4e-b14d6287f669",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51b9b6fb-c7fd-48c4-a577-da32c29917b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43b08e5a-ab9f-424d-9662-cd87d9e45abf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d71c3061-e1d5-4e73-a2d3-26c84308b0ab"
                    }
                  }
                ]
              },
              {
                "id": "7b25407a-19f7-4628-b6f5-9ccc69bc6da4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b55ad426-4bd4-41fe-ab54-34fcc0617998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c5750e8-81f6-4202-92b1-da88d97c1300"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "039cfaad-c661-4a49-98ad-db7380e9f818",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "98cd277b-85ed-4cd2-bce4-5c449afeab85"
                    }
                  }
                ]
              },
              {
                "id": "47a424a1-c79b-4fb1-9ed0-5f8168be7993",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d8944d5-b4de-4ae9-b3c5-beb82d224a44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d19ef5df-d869-42c6-9a90-068a28263731"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a117ca3d-4259-468b-91bc-2ce6107b0433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1fe301ae-0160-482d-b3e5-5ecb8cb65fee"
                    }
                  }
                ]
              },
              {
                "id": "9f161538-f555-446a-92bd-9a7fa799d226",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e343205-fc6b-45b6-8259-f5066ea2a3ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c51d0ec5-10c3-44e0-8385-53bf695e7910"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9cc2ce4-b2a3-418a-a9f2-566bcb66e938",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5f2e6c5-8fdd-4457-b5ab-16259c3b1e75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e97d86ee-8a0b-454e-9ac9-882cf1b829f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "551f8aa8-308f-4917-ba7c-63df9b619c07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a09efa05-e2ba-4fa2-8b56-6ea2c71a56c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b48e975d-5fb4-43c0-8a12-f89b639d344d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02cd59c0-f9d8-444c-8cd2-1757a2c9190d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "000b5080-921b-4a01-a506-4e48db84d3fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7152d262-1615-495a-9f25-a16da069878b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d0ce96f-15f2-4cb5-a2d4-d9b02ed97d1b"
            }
          }
        ]
      },
      {
        "id": "4b540b10-a821-454e-9539-87654a8f95d4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "048396bd-b047-44f7-b6ab-2a94b0dcde3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "251b2042-277a-43f0-92c2-9fe5575f3c35",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab737b4f-9e15-4b69-9478-6af556c183b2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c07c655-f950-4c79-95e4-2aeda2666834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c75b970-306a-4210-b0c8-a7d4de98610d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e1f130-6b60-48ff-b6ef-471bf1d21342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "55db5294-9385-4f81-b92b-37be356320b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a300238-f404-486f-9235-028ff5aa3604",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd3023e-d367-4d16-8427-aae08be89210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48f62ca-c117-48d0-a114-7345939a1efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293d7471-18ad-4971-9bae-472406a69b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f163ae-a321-4c13-99eb-2cef921e3052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef90cd5-b0e6-41de-8e5c-942bc62116b5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdc99ea-d3a0-44d7-98f5-4455b6e56d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550ae87d-83f4-45df-9752-a5b07db7f14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54471191-1d7e-4fe8-9ae7-6cf859cbffa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9967350f-a6c3-4623-9788-64cd0fe0d116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ec32b4-29a3-4b53-b7b3-cb83802a7e02",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68b6e30-dd72-4af3-bc9d-cfd90178ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652c56ea-3416-4580-914f-bc68278e82f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b043e81-b6b4-4cb0-9fe3-3c98e1d5625d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf10c784-0374-4090-a194-b4f7b89ddf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadb678c-d3d2-4775-8e3b-a125c60d5fa4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ce9f31-4277-4726-a7c7-60117aa47982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc60fff-7f8a-4b65-b1bc-05bfeba809b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b964692-4e38-4fcb-8b05-ad521de5e82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ff3f07-1f48-4d1e-87c5-e10211e547ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3b293d-985a-4820-8c68-ad3f4e6090f8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9191f0c4-d0fa-4548-82a1-010925d64f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec19859-28b8-452e-ae26-cec86eecba52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8e1931-c644-4ef9-bb76-f7e5e9448583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f31edd41-ad6a-4215-aa99-c82fa4a2d6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c863805-8e91-4fcf-aa20-0e930e866dbb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0146a726-6153-4480-afc9-b943397b1c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d0998e-1d0a-4d17-8a4b-b4e8870ca794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3a2a3d-4949-46c3-ae5f-82df2c09d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "522ffa6d-3647-44a9-ac94-92abb683d1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e96e38e-f866-4f0d-b6fc-2de315ae50e2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f30219-99e3-4c5e-b399-b9f4802c33cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf723a86-746f-44fd-a4c6-041d38d72de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c847cc8b-83b7-4c0e-bd05-496998486ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1725d782-e6ae-4cde-ac9c-2de02ac589a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17267a04-d726-4e38-bb4b-334b80d5cadb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee91d63-63c5-4207-9a34-eb7cb123f36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb4b793-ad4e-4118-b2c6-af88bf5253ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429f1683-3d1f-455f-b04e-c884cb0cf9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f54149-02cc-452d-acbc-809625792280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be41cc3e-7cf8-419f-8c29-bd6db86fb830",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de4a162-180b-4b88-aba0-26fa8b4208d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e1823a-ecdf-49d9-a5db-b92a6f47a895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3649a216-d540-44dd-bbbb-2e89a5aaa193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d12bdb4-79b0-45f5-8f65-903c7f08759a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4045572e-104f-4dd3-b49d-08cc10872953",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8ae735-00fb-409e-bb25-759fcb0a2748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8667ad1-e509-489c-9ab7-e99e1c99dc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3f367f-0fc4-4e2d-bc03-e1dc6ee001a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c87c9e-7bf7-4251-85a5-62c5dd33b449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae257b9-1dd6-473e-9b7c-0aed65007bdf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b872f85-7596-4c37-872c-7a60d9f2e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8669ed-c4a7-442d-884e-a4999a0b5eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cc7026-c08d-49b1-90f0-0d9102f5e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e21984-eeb5-47e9-bc5a-f496241098bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b32bdd-9ba0-4dbe-aeab-88c98dc5143f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6e0897-8867-4481-bf86-e85379686dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e748a9c-1bea-4c73-94b6-4e94bee06eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6a4b9c-3b24-4013-a471-367c62fd1aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "120329f2-1a94-47d0-97a4-b3e970905c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfcef89-8ab1-41fa-ab0e-1e64ff838906",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f9dc8a-4dc5-4376-93bd-5416d45093c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30e4727-8f69-4860-a475-70286fdd5779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eab419-e623-4e87-a76c-7390a02a8ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2befda5b-a583-4ac7-b517-4a729ed192c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed107b1-0501-424b-bdee-85c2ca635f9c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d243f623-cf52-485e-8fe6-186d9c3495df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5c8287-2ff2-4cb4-ac4c-6ac8c2e84fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa1bada-5635-43b5-985d-8f995f334d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1eac522-ffc5-4a07-bc24-122e26453c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea44d31-8499-4a00-a3af-013c396615e1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb47d6db-7640-4674-a734-997e22bf245a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23aa8cd-810d-4076-a9b3-217868c27bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5fe38e-84d7-428b-8a49-2a757c0e47fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5dec94-bd33-48ff-b7d5-6fea17bc3915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a75bbc-df9f-43f1-a9c5-4c941ad6d2ed",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ae5107-6494-4aa1-8d40-b8be52a9bdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb1bbf2-e9a4-45a1-a297-ee54ae69c88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2441e1f-863d-4116-aaa7-a87e96860361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a961fb3-1ebb-4bc1-9749-ab18e002a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b160c1c0-a5c6-48c2-80c3-34a1ddaecf40",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b16d6d7-766f-4b7b-a772-73f48c6ae361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea42438f-d949-43b2-b096-9e308b175844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193c8d90-d813-4230-81fa-22de1a04e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e748f44a-851e-44f7-a089-5acba2114c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e107dd-8793-4f30-b227-b6596dac907f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a272bd-d27c-43a0-bb51-b36f8cd8cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704a5683-9187-4216-ad66-6b03785f160b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4377af6-efa7-4d7f-a5ab-2dc6cb9b0a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4693c2cd-20b6-400c-a1ca-20cdfae3926d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92b3919-3910-41a7-a648-71c3326e3611",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267de87e-149f-4cff-a2df-5ec65aae654e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf5a7fb-915f-44a6-a061-837626bf9761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a28be5-80bb-4638-90d9-2ad890d9098a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "739db43d-3143-4ecf-a3f9-c0e55457a8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39f98f5-0629-4343-a16c-c7b468df80ff",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9b3abb-d599-4a1f-bde0-d04f330c9299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06456d5-e3e0-48d0-a52a-53b78b70fd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7321ba77-b8d6-409a-9b7a-51269379a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc81be7a-a660-4614-99f1-0ced9d2ec30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6746115-42e1-4bcc-9648-d4bfc896d2d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73205fa6-d797-4e92-85a2-5c38108475f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efa5dac-5366-4081-a1f7-8e68f3ce7b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3107028-cdb3-4d28-882f-c4e2dd88e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "321cf7f7-9d88-463a-847a-b1d413c3bdfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69bca8f-6821-4942-bdfe-29ef1721d4bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0e9a79-1a7d-4cf0-820c-81ae82cc79c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90978bb4-b8f4-42f2-9490-ba89a50285e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf477a3-a5ee-469b-b7b5-fdad448ab2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "979b1943-33e6-4c47-831e-66869f42684a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49eb8b6-a943-49ea-ab88-0a9ae895fed0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e482905-0933-4f20-a03c-8369a04e17b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216f7872-9685-40de-9ad0-386ffe0ddf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15009225-a3ea-425b-ba1b-5fc6d2c2a539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "151710aa-57d6-40d4-979d-a9bf95ea1119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9990ff0-9660-4cdc-b6c9-f52a764bf94a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bd8b7e-e9dd-4a71-9aed-6ee76f1adc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922a7e76-d4b3-4b80-93e8-53b6e96eea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c07916f-4812-4c86-b1b9-c4ddf60ad3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfc4521-a790-4a05-b887-fe8afaa34886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e85aa7e-6ff6-4e44-9fe1-bcbe9eb2430d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f99e06-376d-4f62-a83c-8600be8bbc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9af041-ef79-4674-ac4d-5b0ab3fcb07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3122fe4c-dd2d-4ed4-b50b-6e16bc36652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af950dfd-e782-40bb-883e-1c876c9ec90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbc99a2-7589-4ea0-aea0-96c46e378935",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198c04c4-f944-4bbe-bd77-33cf607f10e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a6f1de-9d63-4974-b6d7-cc50d71cc5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44267b0-8564-463c-8766-788e17404feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "053701fa-cb7d-4985-8f55-77ffe983fffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be94b63-bd7d-4f3b-b1fb-447e8d8bb37a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1e90a2-d065-41c3-98b0-ac7484ffcb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e0791c-5554-49bc-8738-ddfe84b314e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a98a9d-507d-40c9-8309-3d7f544c35e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57937e7b-d55a-4cc2-8ed0-c3813389d19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aeba07-b4b0-4aec-a86c-9f3905056bf9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842b331e-576c-420b-b61d-19582f676488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf74d47-66bc-4635-88a8-64a570a96876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bf75cd-6266-404c-bda5-24305e355ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d33604d-1b11-459f-a2e1-a9fda29ee905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090cdc9d-c1ff-449b-98f1-150ca0e2096c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea8237e-c877-4738-b1d9-ea1eb75b60e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6305308-a64c-46ac-b764-ac262497ef8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58fd6db-872d-4d92-b741-377dc06041a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e915f415-5239-4b65-ac76-a1863b2a7b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c1b189-d600-4d9c-82f1-2cada34e4903",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c802f4-7381-471f-9c1e-f99aa753b718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24aa19a-59c9-4ed5-a480-1bbc3643166f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbd9c6b-4969-4a6c-9614-4f3b66d891dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4ed196-fd1d-4a55-993c-60b4a730588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e85e3f3-af0d-43cc-8fbb-6dbd11984e35",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd61343-064f-44d9-adaa-90fe016265ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752007c2-e4e2-4be3-a3b8-72412d5a34a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510019a9-793c-470d-98e7-8802116e8a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e008f097-1a58-46d3-b6e5-6f74c5ec857b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e515ec87-eeee-4046-9d48-41d5cbd92558",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3034c74e-1296-4b47-a058-64d8de64fb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6c771a-14d7-4bbe-8432-2e68f53d85ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c11674-d898-488b-8efe-e94e2343ee4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b891215-882d-44a0-89ba-defc5cc4e110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdd28ce-52e9-427f-afa4-3d91be57c1a9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d66a566-d0fe-43fe-aeca-f1350f637110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af81b0a-ad6f-42cb-8f81-b6da6d42e733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6749442-bb32-4ee2-a9e8-973ba758ef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69cab7c6-4842-4a9a-a9f5-5f4774e5be63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f82456-9a56-4f86-b4a8-7119b4379f2a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a40c4e-001b-4f61-a11c-025e62ea7c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2363671-50fc-4503-ad03-f1c45db7bc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573e95fd-0239-404c-b10c-4d8f82f6c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6371924b-4df0-498b-a0e6-58469bf6b0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95b9e3e-0511-4672-9239-0e9b947e96b0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6368d90c-1151-44bd-9aa0-83fba5ba5473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69abe961-1f37-4ae3-b109-e4da5f33d0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1797e87d-1fb5-4656-b0b8-798eafcc8aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd3b64e-acfe-41c7-9376-342c3044e6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7c472e-ef85-409a-a8de-5a6f156a692b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46f5253-0573-4eaf-b9a4-249d5d5bea42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da6b1d3-4c27-430e-ab51-3a94cb23825f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84756c36-8bad-4218-8eef-c7ae2769ff86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "622a6abf-767a-4ebf-a2f0-01ac7f46ac21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2819ee2f-a466-4989-84ca-758ac610d366",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4521594a-6f10-49ca-957a-798b8759a217",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94946df-2c8f-4801-8900-9c4f7c33b73b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "31a109bb-1f5a-45f9-a350-743c47420595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9342d6fb-2e34-425d-8a46-fa7e7672aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d02872-4343-4ec5-9848-21aa04b48d08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56018e7a-e867-4e04-a442-44887af22ad5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "417e1018-021c-4cf7-a2ac-6981c863bebd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a0932a4-9b03-4a85-89ac-68e1e634bac5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc383fce-75fd-4751-9ea3-2836d57d54f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "941b4af6-0dc7-4d6c-be61-45527d4118c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2cec452-fa7b-4f84-afc0-6e0b1b45fa85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be638aef-bbf9-44f3-8682-c6a6cbb93c98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61f55be0-39aa-4741-bb39-e3fa5be4e545"
            }
          }
        ]
      },
      {
        "id": "103a7fae-5b27-434f-80a7-113aeacc4a7a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "86243359-97cf-416e-8d05-04e0722b2162",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f18aa9c-f728-4698-853a-d9471293f3d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53e4cc17-0283-4039-bd16-857de9e2e091",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c065268-a3ac-42b9-b5aa-63784efe49b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fff0f5-6f21-4d65-bd9b-dd14e191be15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd122d1-fc8a-4a11-ac2a-f9a4a8dc7803",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c9c74c-f1ee-45fc-8562-ea56d0d95cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4999a57-4a7d-4b9c-9f21-a902301a1eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74712b1c-553a-4b04-84a9-0237184cfc03",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7d309a-e426-489b-996d-5314bdd2fe18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de770dae-4b17-49d4-a681-a02ddf0e63b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f56afc-73ff-42f6-8fd4-bb50b5d90e04",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef24da7-2051-4c2c-a286-23d4dfd6e0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e931b5-8a07-4bc0-b7d8-2f36e0baceac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d13fa0-366c-485c-80e1-327a773c3aa0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e6a218-d097-42d4-87de-e480bc5d7731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8eeb71-0e0d-4f3a-a32d-d5bf155f82b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23c2274-d2b0-43d9-b7f3-a119ea07494e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8ea886-4f59-4ee3-a15f-9e9a5bdd419d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9070f3-1d2b-461b-a492-562a0a44203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e87f23-44a5-495a-a699-d6ac31fffcbc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68342b67-0c04-417a-a262-963ee2afe76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97016e69-7213-4e9d-be5c-0ea640a05ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4229ce-0ef4-443f-9b00-67abf04c08fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d28bb16-ea60-4cb3-9990-768ef617e5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eeae8a-3b8c-464b-b1d2-a27d9f7ccb36",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4788f0-18b1-4413-ad3c-fa520d02e079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4af3ef7-0677-4092-9b1a-c24df31f4768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c254ac-8856-4bbc-8016-9af40c9620d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569fc6aa-4802-4e96-ba91-040aa72b7968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff23ade4-862c-45af-8078-82bd2a7e4b63",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953742c4-a1ca-4d74-a0cc-1969bbfecfeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9886a21-1018-4f79-a51c-9e74e683d566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7514ce94-745b-4448-8605-85ce492fe4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db3956a-896e-4dd5-a565-1af93ff31780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0a2a4a-1bd8-4483-8dcb-111fc8acd0e7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0980dc00-8c1f-4176-adc4-501c903ef80c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "517a5064-d47d-4ef6-b3c0-ea1c3ccc055e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810eec34-3f87-466d-8d7f-404f60855380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd044bf6-7ddd-44c0-b41b-4fe627084e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388f237e-8f5b-4a74-926d-8e430646399d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e66df4-b93b-44a3-b068-5335f1425311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f82ce00-23f3-4eff-8388-36b8f0caccee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d1bd64-38c2-4870-be2a-5d4df482f27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edc8237-44e8-4a29-ba04-b8ffbc3722c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68940833-9b0c-489c-af9f-074ec89a2ac0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f7e175-daf1-4965-81c2-a13cb3dfcfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd494244-204e-4ffe-b937-90e0d1c1a1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325c0a09-1ee9-4836-a706-b1744949b2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a35c2b2-e5fb-4f96-a510-dde302e617f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a7643b-be5d-40bc-897e-a23c3c2d693b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5ef2d3-56b6-4ab4-bffe-d24982703f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a660ca7-bdd8-4b02-a21a-6dde8e0f3329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadbfb52-c7ff-4f95-a430-312f4c6c5e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff6debe-36d5-4050-9130-97b50de2b117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935cd518-c1c8-4e6a-84ef-8b5823489021",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f91f79-80a7-4aaa-bec6-3001c8cb817e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b90ecdd-ea15-4f10-8316-e94cbb6b41c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0baf76-8251-47fe-b128-1009f89f2c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4bcd65-4751-4a6e-ac47-822b39288478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9187ddb2-2942-4713-a152-8ea987359c9d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633b6d82-d9b7-46fc-955a-016236ac9838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd46e13-62c5-4069-b5c4-68e655e9fad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb818438-338c-42f7-a758-d6cce375f9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e3f58d-87f3-4de1-aa82-0a2274b842ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beebbfc-87ad-4735-826b-3137b4e0c484",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fec6844-adec-47b8-8b7d-89faa80cdb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d6e37f-6ad5-43f2-a0fd-63e262ac20ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d0ca9-57ae-4183-8862-7fd3483ff301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f30900-fc86-4451-99d1-3285ae6e7143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2505ba3a-60d6-4067-ae9e-2ff1cbee99a6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4846f6-e21e-4988-bbf7-35dd6cb3d2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d81c6f7-2037-4fb4-a2be-f33f64b14b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c758e50-fa02-4bcd-b202-9c9ca9222296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aeeb91-5672-4b0b-b6fa-a08cd64cda41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274e7871-336d-4e1a-8c26-5e3be1b13e1d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44c46c7-88e0-421d-aff3-58bfe0e90692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5513ad7-678b-4953-8ef3-b3c380b51731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93bc62f-c39b-449b-a486-8e8c195c087a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9ffd64-96a6-4628-a7bd-2833a9a02649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53513b52-15c6-4f4b-8a21-5a6be00ee2ba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f88d27-7988-4d76-bc1b-a2237023c9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bde37d5-6e2d-404b-9b56-6e8c36c9890c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdc7810-bc9a-4ade-95ab-b37ee83eac0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8085fd-af10-4de4-9000-3215da96f9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d144453-e564-4570-a202-0995997cf0b2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c0d07d-c3bc-4999-b8b4-21edc3f7e55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e58240b-e1ae-4d6e-9f94-174f272ba892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06223067-9fc3-41b8-bab8-06da0e2246a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ae3489-ffc4-4f97-a8b7-9ec2627ba2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1180f0-fa88-41f4-8dc3-6cbfaef83baa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb76e145-c965-4601-8b3a-25002ae3798a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d70528e-b316-4a92-bb9c-48382abe67db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a9f459-6e69-48a6-ba04-9c7669841574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10e1b84-3822-4241-8793-02e1b393e301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb7a5e1-4571-42e4-878c-22c124e75780",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5ac04d-5c56-4f93-bc3d-00004b0837d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5a2a04-7ad4-4470-ba76-241bb8700a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe5b43b-21a9-49b1-9c6a-f6eff6cb734b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c47154f-db84-4683-964f-cb84a28fd72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01078e9-17c9-4550-aa07-d508fc3aa7f9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcb96d3-1b5a-41f4-8bda-cd56fa8cf283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f6a9cd-63ac-42ce-b990-c8fcdcfaa9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b057a2-2c8a-4b03-93c3-58589ade13e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476c0037-ff81-467d-a99b-484725f7a498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b136247c-a8cd-4b62-b1fd-3492b9260b66",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27d343f-423b-4023-9aac-93bb92eaf545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2aad014-16f8-449b-9d9e-18bdf2450165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825cbb0f-8f10-4eeb-b7d7-41018f626c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61345c00-b4aa-4bbd-b185-da5b4198b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae149530-19b2-4d42-9dda-2ca80e227616",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7be5fe-a285-4b0c-90b6-54e67cb18d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8181989f-5950-4738-838e-b3ae467d38ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6d5481-a9a5-49d0-8e8f-8a73a7dcfb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87778d3d-d8c3-4a31-ab3c-8da42772ebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc777393-3987-4983-81f8-b7c528299e3c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1ef495-d3f8-4e39-b6ce-efcd73ac34d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411dd3c6-a47c-47d9-8a11-27f1244baf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e2fbad-74b4-4fdf-96de-1cfcd4376491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e903c3-78f6-40e4-9b93-74bf63662d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde6cfc9-d901-423d-abd5-8c30230438c9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3a13a0-fb87-4a5b-a0c1-878abd6552ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfc6a2a-0869-46b3-8b0f-76b1a161ef3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1198cc-a65b-4823-8711-bbdb9d95f6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e62b8f1-e462-4ffd-8006-d0f8c23519d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91192f30-023d-489f-973d-0312cdb8f0b9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dc06d6-c4b0-472d-9dbb-d60817d3f9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e70cc11-defe-416c-8168-3a16b24576d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd763bbe-7a34-4996-be8c-dca622df9612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185a8266-673e-43b7-a683-933c6d037a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08dc34c-aab2-4fb8-b2c9-af80be579cfa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ad1d05-e8f3-47fa-b7c0-ee13913ecd67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0b627b-0d84-4f11-85a9-fdc0a6052b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5647ec68-2ed9-47b7-89c2-38325079d062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3bded4-0775-4a60-9506-322aee9deb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0bd480-bbf4-44bf-8d1b-dd80b4be6ef8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422e0078-c585-4ff8-820c-701644034124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293f3e1c-dbf2-40c7-856e-b9401b65e210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359420e1-a1a8-4de8-a485-6bc0345b79bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd819a8-b31f-428c-9463-2e06871193eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14223b31-cac6-41a6-87e5-a553ee077758",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad099eab-5c82-4c77-b80f-108e86787053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d4c37fc-ddba-4888-9301-45570e74b321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124a2d36-a889-451d-b1ea-caf77fa22b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd13f65a-c4de-4aac-b1c9-2d496f869335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e8e408-6e66-461c-a1fd-a18e4101bbbb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cac6c9-0c1f-43b2-99fd-5dc28e85ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940f8540-5f5e-422e-aba7-0ca7dca5b1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc562d0e-b4b5-4577-9574-fae947e9301b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e2519c-5898-4da1-88a7-8535c9a3f127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7de6a36-94f0-4944-9805-25593754dd70",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638343b1-8478-4c12-84d5-bd2d115c4617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d020cd-c68e-4df3-8071-8dc652f45b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35523d55-0b72-4259-9681-242a4717e01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eccb0d48-75be-4959-aa0e-486909db67c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faf507e-be8c-4ffc-9b37-37bcf6f1dd1f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d2a784-87cc-4093-9648-eb9d0a09e058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4307dd-bfb8-4d57-a177-42eaf112a3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5805b851-a5ae-4511-991a-9e4d6fe6f527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9051bbe6-8bb0-48f8-aa9f-485871f17b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a9c0e0-b8a3-4c4a-b77c-66728d91064b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90477b7c-34a1-44c0-89ed-d318b071760b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1211c41f-5ec5-4037-bad8-3485e7d37c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2007dc-4c95-4e3c-9a1e-188b31050f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff518ad-b3ab-4c01-897c-bfa3040d3dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe8aefd-9e37-44a7-8922-1e0f358c7d54",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac5a6e-a7b5-4cbe-a2e5-b0e00d8c8932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68911dbd-41a3-4430-9700-86797e71f402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe322d2-b21c-4c90-b3a7-ff39ee8ce848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4879af-bb7e-421d-b164-45d41f66261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f408dc-fbed-4a9d-a948-ab46151ea360",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be65cf75-9ec5-47fa-b9c6-1f5ae6fe0068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3d84fd-454d-4d29-97e8-090a151096d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb7d06d-dcf4-4059-9720-e189be8083da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb0e0fe-757c-4c4f-bec7-93a0a9d84596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84d1463-8d7e-4a68-86fa-8a46c23cf30e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ba805c-81a3-4946-b360-6034fcc994b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e079f164-0aea-4e43-881d-0690bb9d8497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa04912b-cfad-449b-86e8-62ac365646a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ad3d6e-74c6-4b8d-96bf-a9c82d09cf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac44f60d-69b3-45da-a4ef-6e1f85750b2a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23e49c1-58b9-46f9-88bc-168cb019665f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd977be-4a5e-4bb8-93a3-20a4074139a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c951a8a-1078-45d7-a5f5-a7f3235a37ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a05f36-7744-42e7-bbfe-9e23e099fd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a541c63-3a14-439a-a15e-c897e73e053d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2c9a69-55fa-48f6-b5fa-6f3fdefe6c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4cd78e-47cd-43fa-a4bb-7b210796edeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d86b24-6f30-4d22-97c5-73103ba11b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158aa54e-81fb-4d83-aa5c-2820c8b6ede4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a646903e-ac78-4df8-9541-fac338f99fbc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1d41dc-4168-47f1-9a09-0ee70002ff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60f21c1-6173-4e40-a9f4-3de5a4f90870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da446fe3-85f3-4c26-ae2d-745e749d860c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c559f81-fc4c-4a69-8e58-00742cd57602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b18521b-900d-408e-aa11-2a922bc9ae8c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7560239-26fd-42b2-8749-04226847c5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8b9bb3-e273-459a-83d4-7b7276ab8d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d601019b-8b9f-41aa-8b2c-7842157f5f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c630317-462d-4036-8ce5-0a2ab6aed49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bea48b-7cbe-4779-bc1a-34465e282bb6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6927e44f-5f27-4777-a540-b28eec847615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb26053-e3d0-477b-829c-3326e1797dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e2267c-8e66-40ac-9ab1-eb343ce3c323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3699b8-1fc7-47b3-bd8e-d3b050fd1192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b8478f-867d-4ca4-a21b-f7436def4e67",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad23121e-45a6-4925-b2e7-683242feec61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07ea33c-3881-474a-9b4f-151602e4f6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561ce3a4-56b9-4436-a223-c2495a0fd0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66193728-f1b0-4e26-b9be-4b801e50366f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8d9180-dfba-4029-8a54-14b50ec96773",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8305fff9-25db-479a-86b9-b0be6a28c7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480d5eea-47d3-4ded-9c38-26de090a72d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43ba294-148f-41f3-966c-f043cf070df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415bb654-0ba6-4042-b465-ed9814f2fcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1ed7d2-bed3-4a77-8834-a01d6e720163",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52aa7e3-4188-44a1-9f6b-535064bf9187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacecb9c-754f-47c0-9e28-ac00291d55d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa58040a-de81-4bf1-8498-ebdda2bcd126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69685987-31fb-45e0-9dfb-af00bb0218a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9925ccf3-3500-4889-8dec-448353cf0c76",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eb7a9a-ea28-46d8-ac75-01127fbaa685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80fdcbf-351d-4f05-ab12-457f80f2797c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816be195-bfaa-442e-9c1f-7e711494c271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe993f7-1427-4e5e-a7f3-e0aa2124263b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113d04a6-a8b1-4667-92a5-c21ce0a28bc9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e3ebf7-a125-4477-a1ff-e1b430052df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb80af6d-5bc5-4660-b89d-d31cf7c36a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37c3786-c0b4-43fd-a394-37e3f1cf4b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1a6569-8c26-42fd-9e6b-72aa261b0335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd478d1-7ae1-4a5e-ba5e-3192231bb7d0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cad734c-d9fb-4122-9e6c-35938e693ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ce8b59-0eca-47b1-b272-b59b2d257fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caa4c1f-378a-43c8-8e50-ce27deb8191b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9a4291-9a20-4938-8504-d9c7844cf177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7e3a24-e6da-4742-a8c2-2fcaed145068",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f49ba6-5b79-42f6-8c2d-16bbaf2ab202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ccc149-0ffb-4741-a7b8-47d812bbe282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba165a8-dc30-42e3-9e11-60657894765b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f611c896-85e8-4964-afdb-cea39526f95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a59189-c9d9-412c-95ce-3e15c6d65ace",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e310d98-d75e-44fa-96be-76b0935f5823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795ff01d-8d89-4499-b5e8-b02e075cef92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a6532c-2ec6-4c95-a8c9-6f9db110a540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe721a68-26c0-4554-a880-606ea9fda790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c48f40-d44b-4483-9ae8-b344dabf4cfa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be825b8f-64b9-4932-87b4-bf5413cca44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51979a39-f21c-404e-9075-3d9925cce753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5350925-3740-4f56-9036-b1737adc31c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45fd7fd-9fe3-4302-99f0-9f192e14c8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e1396e-1914-41bf-843e-fcd0014465fc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7869f3fc-a683-457e-9039-b96590d7991d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f6c514-505f-4502-b3a8-84341846caba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054df596-a7ea-45ac-b408-21f704762d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd08faed-f19a-4269-aa49-8bd729f4b105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cebee1-2485-485c-bda1-66c702f1c0e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3d5f18-8780-4a7c-b024-0f1a0379e52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa60cb2c-a3ca-46d3-a4d0-502a47da573a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f28954-dc9b-40a9-bab4-239045c66ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d997744-28be-482c-a9e5-7bf455e9c65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c205bd9-68bf-4a46-befc-a4953c349f94",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6f6a02-869c-4d3a-b5fc-26b23adc875d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8560dbc8-8b45-47eb-bbe8-b78e0c44b13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce04103-bf17-4e88-b885-c74a8af80a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb70c50-9224-4d85-aba5-446dd63c85c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9009ab8e-b49c-40c8-9b93-907117a96dbb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8b1acb-7e96-4639-921e-98bbb69ed7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980d82f3-deb9-4bff-992e-2475f243130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d2cb52-7988-4a28-b38e-471825f888d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9565046d-07e0-4633-9f52-021fcabf5cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0a7604-02cb-4968-8b0b-f4f7e6b8bd73",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b4cac6-85f2-402d-a91f-2a741d45dd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014ad11b-ebb1-4a79-9a7e-ca687696e7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efac02e-33dc-416d-9f19-1fcd278452d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca8551f-c77d-4c10-9c36-1f02ae78a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de91f1bf-a572-4f81-b424-dd22c41f266d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074b1453-9d78-4416-baa0-4a089450ec13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c408f458-0b50-451a-8462-4af667f3c1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341b5d7f-c28c-402a-b033-6daa0de43390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70974320-b615-44e3-a510-44b88bfad9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766ff4a1-6a1e-4268-8250-db748bd0c1c8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04780889-20e3-49c3-b003-6f2be8009ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ce8fc0-b471-43a4-a5a8-e7c503ca1788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1b187b-9352-45b6-b511-b3fe211bd591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6d2faa-0c1f-4629-a51a-c503365ffaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925446e2-818a-4fef-abeb-894c4209abf8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c1a6e0-686a-46af-89cf-09dd3cdbf714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da38b81-d59b-42ce-9081-6f6cdfd76ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a82685-99f0-4f55-8572-4774e4142e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b817d4-2207-4174-abb0-77cd6aac4c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e01024e-2e1c-42b6-aa8a-0d76574fe3e4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3960e595-36ae-4fd5-be70-76e774ccb5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa7c8ce-a871-4025-a7f7-05f5f7be68a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e9d22a-a2fd-4a24-b013-d0191a3040f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be31c697-5c66-4a73-80fa-7ecc0d988802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d04686f-9949-4621-9465-9b15f94b1c4b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835fa8f9-2b66-4992-90c6-94a6b6ad0df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8305eae3-f01e-4333-b06c-e7eadf3a7bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e0f1d9-cc3a-4052-821a-50e82ed5eee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba99286f-a349-472d-a1f9-2aab27632a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c193fe1c-3192-402c-9c78-9c97131f29a5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f2f4e1-d998-475d-b8c4-0e0006201bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176f9dfb-a3df-406a-a68f-262e90c15a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb1a160-a818-4017-9418-3515d7bc6eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24e1868-47db-4a26-b364-2295c5cbc692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c0c8b8-bc22-477c-a3ff-956ed5bfaff9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09250409-7ea1-4ff9-bb20-26d37ddf7443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f65c51-a65c-4dd3-b9d0-c2195fedb3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f50e74-5328-45dc-a4fd-49d59da3351e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7183c5-6f8e-4c4c-aaad-e820b14d1654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d20bfdf-ac89-47b2-aacc-0aa0279b2dab",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62264840-ac85-493f-92ef-17b53a0224a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af0b9c0-771d-4789-8524-fb7e480dd095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f409bb6-1af1-4318-b1fd-d64a1ed7ff66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2529b6fb-f210-4906-97db-747857ac0df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e925feb-b84c-4a5c-b3ee-0b5d0ec20398",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15defca1-a481-4f21-82d7-44b88f342c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7144c8de-8ace-4823-a057-926e780b3d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edeb332-df54-4f5e-88a0-77444efbd6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a342a1-57be-4441-9b33-aa2e8cc6d501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668359e0-94d7-41cc-9e88-aaa2e24361e5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f10f462-ecfb-4867-895f-10068cd9bd90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce40764-3112-45ac-b513-b60eb2348f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2769f3-ff01-4657-81b2-787d2ceb6de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176902a0-d866-401f-8d20-ab126eb5a4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea231189-57b2-400d-bc8e-c3c18209a8db",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48167d5c-b493-4d64-920b-f6e90e4b03b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d279c8e3-bdc5-4793-b267-e0cd305b0eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1033bf-7a87-4b2b-b95d-81b56435ed1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1789851f-1eb8-4942-a46c-917542e41ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41d3f87-4174-4c7c-88fd-c68178ae3cf6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757271a9-42fb-40c1-9cb6-090bf0be8255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283122c0-57bc-4e80-b21d-2e8cfae38ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6003303d-44e8-4c42-a152-c9fd860de124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662fb31d-ebd4-4dfc-a70c-525f7ab9880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1478ba27-cb91-43f8-9a2d-fdc825da901d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b8f2d1-b782-437f-a4b3-290492aec923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d50004-9cfb-49f4-a210-d87642a8320c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196ffd5d-ecd9-41bc-b89f-306eab75f9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cacf3b-1ebd-4804-9d09-e99abef88ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d676e9-6b4f-4da5-9cf9-ac051e821782",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdc1807-f766-4220-84ba-aadd8da0a771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ec7d8c-37fd-4db5-b902-1c23ef498146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbefae63-2e2e-4eac-989c-26eb09cd56f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc63a25e-a87b-4203-86e9-303126290106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c94440-efd4-4ca7-8794-5162d35a307d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb910b14-77d6-482b-adbd-6a529817e1d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7d30b0-6616-42d0-9032-e2cd60759326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758494bf-6283-44db-a57b-89967e6895d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6498e58d-fa6d-40a8-90f3-94733afb06ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c941e0-7545-4dc8-bc49-887070e22918",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d2cf91-6e28-4e96-ba7d-7f749ec007a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd12f8d-49b1-4bd6-9634-f30b70ee03a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299de521-661d-487b-929c-57d6bb9b99a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dda08b7-d588-4cdc-85b8-a7c126e4f2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974ab0aa-8e43-4727-adcb-89def8a972f2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c327d0a0-d576-4c6f-928a-4bb093b6f883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e2b841-c72d-442c-9e75-bbb840b1dfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920dd72b-7ef2-4480-80ee-f26148ab5880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd05419-c97b-4fbe-a718-0c1c88dc2063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57deeaa6-2994-4ad6-8d98-7ef326b35a5a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cb8557-99c5-4ab8-b7ed-fb3e4271d248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305b9634-6570-48fe-a026-27867729bc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8f9e8d-e915-432e-b8fd-effbe7d96e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfa5d18-f782-433b-b19f-88be83cdd174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bccc420-3be2-462d-bd8b-2323121bf7e2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28892df-9272-4a99-8dab-1c283a4ba86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa85e14-4984-4d81-aef6-af138e996c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d0f2fd-2835-4297-84c3-f29c70d42682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98c8655-65a4-4f50-83b3-931fcc891831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43ddf6d-9a4d-4dde-96c7-23cb7da1e3d3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29880892-387b-4e89-bcd1-c4ff2447bac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da35d7fe-7149-4c40-87e3-4ec994eca39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc28903-7324-4404-b9a4-42f6f5303b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fba2df2-dbb7-4d86-bd87-e3892dbceede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce82f87e-048c-4d01-98eb-e9ad3afcf163",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884f47f7-93b0-4073-b3b1-4d973bd7716b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d22d5ed-9106-44aa-8524-9320becd0265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9249548-c952-48d1-b442-0ea987618892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cbf1f6-2066-420e-8bae-227d8d7ad075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6584c5-d671-494c-9253-686ad3b0b9d9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6069cf8d-9abc-4ced-aef6-830b195c4bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661f7330-0fed-49a9-a921-124ca7591753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01a36c9-b073-45f1-a574-0b014e294948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c48249f-857e-4ee4-b05f-d9e1a16bcabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb1b4fc-8b0e-461d-8432-e71385104dd6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab47889-ca61-4ab7-98e6-60d0509cf643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8027114-331a-4155-abd6-59f2019d86a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7666f81-66da-4166-b113-42885d6bab29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b0378c-4a98-4736-89f9-b0e88d99515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feeeab2-5014-4a23-9978-7b05730652b1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d6b21e-87ff-45d1-9cfc-f22fb62ec1a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16adc628-98ff-49b5-a42e-735424d48a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e650fc2b-a928-4e76-93e6-c2e2e0f3c587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9806a185-ba11-4a6d-bb19-f51ad3855e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fecb4c-883c-4010-bd29-553ef2678ab2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e435b06-fbc9-472c-b648-b5542bf6c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6a0447-79ae-4166-9bec-9fdbf1fc8cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee0b885-a5b6-4fc1-ba57-f10aaf0ef283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a0932f-71ad-4b92-bc38-1638e1872bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c839e5d4-6c75-4630-bb69-d0adc35a11ca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e312758-eb17-4f1e-95ce-98d907231262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb72e92a-25e7-40a0-8cba-9c137b77a64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9dd739-1c64-46a9-8d18-ec64b5f33b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92241446-d12c-429f-97f7-aacc8ccf7295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d3d562-b45f-48ce-b4aa-8a057f8eb326",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5318e57-4725-4109-80c0-f44363b7e2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ededb65-7107-4062-8a24-09db541df13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7154ff73-fe7b-4f05-9efd-bd7d275da4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8016c050-e962-4286-94cc-3463802ab4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09761cc0-6438-4e9f-9768-7d0b31e7daa1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bdbb2b-c5ea-40b5-a37d-98ce297dd628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d9fa45-f9b9-41ca-9b2d-3a7c6183c065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d85041-4fcd-4e0f-a514-37e713d1fddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5bb917-9bf6-46f2-b894-4385961922b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f3554-a8eb-441a-b97c-7c06fa02a10f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac4155b-da9a-45ab-8707-63b756307a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74face3-b56f-419d-98e4-b2eebd5a2068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34239bb3-d179-46f5-a9a2-a379539dadb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ced0bd-601b-427a-9332-7d0e2dfc088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af3d122-24db-4983-8d8c-73c568411a1d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98726e22-9edd-4833-bad4-c3b82849d4f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a20dc653-2c03-431e-9243-eb2a0df3f136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d07f0b0-e480-42f0-b85d-f4963600f8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d972cc2e-6f2c-429e-92fe-2d8c756b569a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1fa15e-c80f-4007-b1df-767379254794",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c0955c-a9c3-4b63-8c85-a79d3f1e8586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37dd66f8-4f2c-4831-a28c-5285945d7bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44a65f0-d688-4b18-b16c-968bc8f57d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d564877-d720-4881-b6a7-f4618528a8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898caed7-5467-4b73-8b5c-e8964c308f6a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b855d61d-e0c3-49cd-a238-7fc8552abbc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a70624-9080-4a7c-95a9-870b421e74c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ec0269-1420-4f07-903b-9babfd14974e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81cfd75-ab4b-48af-88a1-6d9282d09c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775ce267-0fcc-49e3-83b4-e3649ad5bab9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0219184-3c41-431c-b8f2-968694fc8aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525fdc31-ca7d-4f74-92b1-53cb09f73e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131928fb-a51c-40d5-8cda-d7a850ad7584",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3f0afa-fb09-4e65-9661-d1868242796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee040df-0faf-4174-81f5-db95630a7311",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e870921-6c47-4253-8a96-daebc0323062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25ebe21-3182-4591-ac00-27f59cfcd831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdaae4b-23af-4508-9936-26857b9e5b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fafedd-a5f6-41d0-832d-ed1b2f2bbd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5e405b-69bd-4bfd-90e4-306dd16e1625",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0fc9d9-3a61-40b1-8db8-40d30a57a25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0cd20b-ba3b-4caf-9e06-bb4e32a9fa29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11ee2d8-e837-4ddd-b695-e0ab982eb6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2ab670-c6e9-4edb-b591-59d8788635de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e73954-7a40-4ae9-aed6-32817e236ee1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332d8480-b6d3-4971-af1a-5364a1a29628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316a1fe9-dfe7-4b03-814d-65e261fd27ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad58dc89-e782-4cd1-a52b-7f55c498fd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6378e027-bf05-42dd-8663-833a04899a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d56eeb-2267-49c3-90c6-eab5a9b0033a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0147eb8-60f2-44ed-b505-513192e3b30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f3acda-1b96-44dd-bb71-03adac1cb2f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb4e84d-fcc3-4ec0-b7b6-08310eac1a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fe2851-13bf-4a18-b98b-912a5b07bc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0786029f-5c9a-47e6-a9ae-658a91502d08",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af56d54d-533e-4ca6-bf1e-e233e4ee2790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7e209b-84c7-4322-825b-9f120ddb522e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ba6589-c4e0-4f9d-bdd4-a27564a786a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d95961-99b1-4b8f-a663-e285be5806ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5357b5af-152d-4b48-8882-3664f50b4239",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4db6c7a-8614-4e4a-865a-9ce4435b7a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403ded21-8500-432b-86a4-a4ced7bd6523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c562c8-e6c1-4994-a4cd-43303ad62684",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ec3967-1db7-48ef-8f8e-54c58f7d6a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed566271-e5ae-4bac-a711-c0007a62bf06",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa01ce7b-f77f-4ee7-807c-ea4fa6174727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d09aafb-6261-4bba-9605-85077835b3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5b714e-8e43-4bfa-8699-a0b28c4ce112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d4b48f-3398-4fef-ac1c-7109cfc5499e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5663ed1-0610-4c80-9a6f-f47764d903a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a76ca2f-e98e-4bf9-a127-07e01f076d0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49e7b6ba-d466-46a8-9460-44d7fb51a37f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa342e46-4d6d-4ce8-82be-b058fb7df90e"
                    }
                  }
                ]
              },
              {
                "id": "6b365def-6e23-4bb7-a9d4-8ba491497da5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dec9fa92-1fd5-4b62-beae-c265d6183500",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dfcccd-9ae9-436b-85e2-1869c5c7e526",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b5ed36d1-1489-4dc3-8d33-681d233317f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6add462c-112d-4dcd-8fc6-917b1e346650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "931329d0-cb56-4151-87ae-f0ede1a50afc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0f24f82-cea6-4249-8752-2a81fb241a0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97bfbe4e-c3c1-4bd9-8dbb-6ff9724196da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b2796f-903c-4d89-91e4-1aba18d00734",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94fda0ef-a96b-488d-856f-3d043ec8d5bc"
                    }
                  }
                ]
              },
              {
                "id": "c261c71d-c689-44f2-9948-9501ca80d155",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f7ac30c5-f514-4fe0-99bb-f4c40489d3d5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc4fd07-5977-4c1d-917f-5cc51a08d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b9e29647-d11b-4dc6-9026-3d6145c728dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625e2b39-0c0c-4efa-9181-d1520af70960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679d6134-d4dc-4e93-8c5a-1bfe0bf080a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ebfb8730-c1a3-453e-9072-461ccee82a7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "145b6c16-7d71-4737-b8bd-3e648e89e8ce",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "155b8209-93c6-4d1b-b972-afed5715e600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "726e4a46-9133-4707-8aad-8e289e943e22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13147f94-f4bb-4a77-8f4c-5badc2a17fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a149c2da-27bb-479c-ba6c-b14a6c96934a"
                    }
                  }
                ]
              },
              {
                "id": "53e7213a-2c4a-4d8b-9ff1-e15e2669ac4c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b8ca8a-7a6c-42e8-874b-f64bf4c47f3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "12c9c7fb-bd0b-446f-a485-585afa53517d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc3790c7-40dc-456b-84e4-7673dc93008a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f79d9e6-de2f-4a44-b9c4-6027c474fe13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b74f8a13-af6d-44d5-8c66-096ac980bd55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8b60d300-b132-4c12-97ee-9153714eb69c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8abd9b8-6d4e-46d2-a708-08d8eca02430",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27a82a73-ea2e-4abd-893f-e9ef9c92f3d2"
            }
          }
        ]
      },
      {
        "id": "11ab9004-2585-4e3a-900f-caa59abf14bc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "77aafedb-1763-42e5-baf4-bab302fe6ddc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3625c2f0-4cc2-4aff-a1b9-250891e31d86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42fd2e53-d6f8-4dff-9df8-d12987ff76c9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c25917a-d73f-4eaa-afa8-7bd4e4286481",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f2e8f1b8-8de4-494e-906a-339e4dc08b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ac391c-2830-4591-93e8-d13edc55f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df0106cc-664c-4f2d-a4d9-9fb801c312de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb23f018-8f96-485b-85d0-c3897ad5149a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25878b95-8098-462c-97a5-cad2f18e07d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d747f1a3-1b04-45db-b9fb-e8b6c016eedb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97754060-6f89-4472-a84e-5e37b1251720"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8efafbdd-e0d3-4bc5-8f12-7db2bcd7f461",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7a762b0f-403c-475f-a64a-33bd01e7b33f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67e03d28-41d8-4bd1-865d-1d5557f272f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9118ec09-6a61-4914-8380-bb674be303a6"
            }
          }
        ]
      },
      {
        "id": "5ebd956a-91f8-49ca-a704-607f19678b04",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5bd90b46-39bc-4752-8f06-22f34989eaba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95ffa5dc-3668-4ac6-b750-c25cc8a8a2e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2da7b529-a861-43e3-8343-09f7203fd2af",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbeb115a-36e3-4b25-a080-171338d01831",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0abae70-b5e4-466d-8e10-922194c55faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6b1dea-18d2-4ca0-9cab-add3f9617cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "373c912f-0246-40f9-b213-1681dda0cfdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec8da395-236f-4293-80a9-8548896c93c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa161ac0-e599-46be-9d80-97da3b33a25f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6154ff2-ba2e-4b28-bec4-01cbd5c743ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "007ba466-d6d0-4d0a-aac1-d0dbfd3138c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91397775-d659-4057-8d6f-402c3ea46e2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7860d6d6-1152-4549-a183-ebcf0c7604d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ee83c9d-3145-47d7-babf-01b2923c4009",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6740e02-ab57-4408-8dd5-7c78ee1c3b6b"
            }
          }
        ]
      },
      {
        "id": "fd6abf4b-cd9c-407b-97af-7bd8dd98830f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9db85c2e-6939-47a0-8298-398de3e990b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2e4a9cb-6207-4f11-833d-faefdf26f507",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bae03a8e-8d42-4f7f-ad7d-928889fdfa4b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d162fb7-965f-494d-94f9-f3d5498788d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d2852fa-d0d1-4a80-aae1-318196c0ce51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e662a87e-3767-4aac-a3bd-2961ef875546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5b90f52-8bf0-4906-aa54-933ec5a396ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d2a0913-5a72-4e82-9903-bb4457b03f5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e4d3e54-b58c-4b3e-878f-02329c81bcf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43db4d26-15e1-4ae7-bd83-ba23247d848f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41853138-6b19-4252-8bde-ae569916f261"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "981b3b21-019d-4cda-938f-ae3e95c113ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c662d56-f0dc-42b3-90e0-b586b54583de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d677a51e-b85e-4d40-bafe-951ad8ddc4eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b657c3a-6eca-47b8-b3a5-e09778997ad2"
            }
          }
        ]
      },
      {
        "id": "ae5a1333-0df4-4a45-aa8d-0d3ddc503869",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5578bb8-e81a-408f-9e16-a18963d9462a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8430389-71e7-457b-8c4e-386a4b76c8ac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "64ec8495-fa6e-4972-a5d1-cc66d35f7026",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07b298d7-22aa-45c7-8d41-c1f2962016cd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9f0167f-bc4b-40cb-af9e-8c9c2ef70bc2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 7
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 251,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 35
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 7
      }
    },
    "timings": {
      "responseAverage": 136.98185483870967,
      "responseMin": 13,
      "responseMax": 3366,
      "responseSd": 375.26470452345455,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716338202114,
      "completed": 1716338244393
    },
    "executions": [
      {
        "id": "512b711f-03fb-4700-bfd4-b60a3f5987e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f7fc0472-2631-49b0-901c-af274403d33e",
          "httpRequestId": "26e9bc67-c3fd-4c4c-9abe-c56281fd3cf9"
        },
        "item": {
          "id": "512b711f-03fb-4700-bfd4-b60a3f5987e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d6933417-e105-40ad-9045-c4eb42dafb12",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "f82e25fb-496e-4edf-ba6d-033baf6fc514",
        "cursor": {
          "ref": "2707d7e3-c02e-4a3f-8f0b-d657613fd5aa",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1229edae-110d-4cae-b6d0-7a0c1caa6938"
        },
        "item": {
          "id": "f82e25fb-496e-4edf-ba6d-033baf6fc514",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c4414082-464a-4dcb-a430-1eb53d76ec3c",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "12a97925-77f1-4c9f-8b4a-7ce362625b90",
        "cursor": {
          "ref": "3b7f9223-b134-46c2-8785-af108fa4107b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "030872fd-255d-4c42-8de7-b775875cfdbb"
        },
        "item": {
          "id": "12a97925-77f1-4c9f-8b4a-7ce362625b90",
          "name": "did_json"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "id": "1f8b6e5b-4898-4627-9060-2420bb764566",
        "cursor": {
          "ref": "f814fa18-7c56-4936-8018-79575bc0e392",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "07358cad-2bb8-4957-8ac4-3862f451497c"
        },
        "item": {
          "id": "1f8b6e5b-4898-4627-9060-2420bb764566",
          "name": "did:invalid"
        },
        "response": {
          "id": "795de182-fb2f-4a29-8c54-6072cf417da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2394,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8b6e5b-4898-4627-9060-2420bb764566",
        "cursor": {
          "ref": "f814fa18-7c56-4936-8018-79575bc0e392",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "07358cad-2bb8-4957-8ac4-3862f451497c"
        },
        "item": {
          "id": "1f8b6e5b-4898-4627-9060-2420bb764566",
          "name": "did:invalid"
        },
        "response": {
          "id": "795de182-fb2f-4a29-8c54-6072cf417da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2394,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cc1907-081c-417d-a0ba-f2d7bb318f24",
        "cursor": {
          "ref": "83d7c52e-7b44-4de8-a132-20d8f205eb30",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "93a8e255-e2fb-4c2c-a420-ea8620d8b652"
        },
        "item": {
          "id": "b7cc1907-081c-417d-a0ba-f2d7bb318f24",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "866e8812-8eca-468b-be82-ba6da898f03d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2609,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbd9ca0-49be-4a58-8cfc-2335a3ad3690",
        "cursor": {
          "ref": "816193cd-0782-44fe-af11-c7d927150f31",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "97ef0446-0c53-4545-8c16-f4581d7d076c"
        },
        "item": {
          "id": "5bbd9ca0-49be-4a58-8cfc-2335a3ad3690",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0d2102a8-f530-4a43-ad39-55511376ce0f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1997,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313b925c-e500-455e-af12-c2a0cba23f7d",
        "cursor": {
          "ref": "11fbbe0d-177e-4d6a-9c6f-7a1dad67aee8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "21b9ac2f-04b6-40b6-bc98-805b9149f25e"
        },
        "item": {
          "id": "313b925c-e500-455e-af12-c2a0cba23f7d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e438bac1-4ce7-4f4b-8d61-bc0496a39cfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "55840ea1-53b3-4ccd-b32e-bfcb51472d09",
        "cursor": {
          "ref": "787d3a40-3a5f-426e-bbaa-1275560dd2a4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "24532242-e9b0-4bdb-a827-cf699a9e41e5"
        },
        "item": {
          "id": "55840ea1-53b3-4ccd-b32e-bfcb51472d09",
          "name": "identifiers"
        },
        "response": {
          "id": "96b0b2a3-17d4-48bf-a137-959d34c1db0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 78,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "971fbfe5-7c48-4796-8400-fa7ccfcffaa2",
        "cursor": {
          "ref": "74831476-1a6d-4ff5-b049-18526c8589f1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48c9f211-7537-4cd6-ace8-24e4a423dd08"
        },
        "item": {
          "id": "971fbfe5-7c48-4796-8400-fa7ccfcffaa2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8558f9a9-e937-4e79-84a6-eeea96e0c8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1874db31-5019-4a44-a891-7fd5f9abd958",
        "cursor": {
          "ref": "b7fd393f-4a15-40ca-931d-98ce5888a947",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b9e5601d-bb48-4988-b5d0-19fbd3eb376e"
        },
        "item": {
          "id": "1874db31-5019-4a44-a891-7fd5f9abd958",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "af37ffaf-46f6-48b5-8708-750b9684275a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd23d751-2033-43db-9aa6-37c3282228de",
        "cursor": {
          "ref": "39384c02-2c1f-441b-86fd-6e27b2640f32",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "68342cd2-5aa5-4526-8a50-07f0bb023b1c"
        },
        "item": {
          "id": "fd23d751-2033-43db-9aa6-37c3282228de",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b2e5a7f7-90b1-42f3-b8c4-418535e38d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e32c53a-a65c-47a4-b170-1c8f6de06d8a",
        "cursor": {
          "ref": "7ca3e64c-6e2c-425b-a860-5bb814075cb8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5e8cc606-8569-4c45-a967-18860b2f5af9"
        },
        "item": {
          "id": "2e32c53a-a65c-47a4-b170-1c8f6de06d8a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9474b551-1fa1-467d-b6f2-5dccd3971a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27450674-3403-47ba-833e-b4d7eea85a7c",
        "cursor": {
          "ref": "83cd93fa-dde7-40f5-a359-d15e38edb329",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f1e86096-b75b-428f-85fa-90beb8233355"
        },
        "item": {
          "id": "27450674-3403-47ba-833e-b4d7eea85a7c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "63f1294a-2dcd-426b-a5d2-deadcdad0a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74d470-0ead-43e9-b6b2-e7fc769aeeea",
        "cursor": {
          "ref": "4b4eaf46-60d2-4273-a1be-48a48a6b6e9c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "492e254f-0cb3-43c5-93b2-4ac6c0003b91"
        },
        "item": {
          "id": "bd74d470-0ead-43e9-b6b2-e7fc769aeeea",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2bbbebc7-0891-4c81-a3bb-e2b1811318d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f85fae-ccbc-42fd-ba4d-b6d699b3e45c",
        "cursor": {
          "ref": "c6d57c10-0a98-4531-95c4-98d1681d750d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f8227067-6875-45e2-87a2-3380d15b23af"
        },
        "item": {
          "id": "e6f85fae-ccbc-42fd-ba4d-b6d699b3e45c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e5911fad-a540-413f-b6f7-b39ab61b4f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba86912-6d40-4b76-9d10-fb6131f677ca",
        "cursor": {
          "ref": "fc41bd3b-e09f-4e45-9047-9b69a1b83e26",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d4e8b694-72c2-4c72-82c8-b67a23610c99"
        },
        "item": {
          "id": "eba86912-6d40-4b76-9d10-fb6131f677ca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "416667e0-6177-40ae-a308-ff647f254853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f24c68-8201-476a-ae0a-2f4d45f462d1",
        "cursor": {
          "ref": "656053c3-f36f-4d52-ad36-759ff5b33e99",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e05cc802-bba5-4216-94a9-591b6e0e68d5"
        },
        "item": {
          "id": "29f24c68-8201-476a-ae0a-2f4d45f462d1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9d16a048-0404-4a83-aaa1-01c2cbd48498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84acb9df-cdee-40a1-8042-6467cb74ac35",
        "cursor": {
          "ref": "ed7013d8-362f-4ba0-97f7-954c0ea44a33",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a56e8bd4-c08c-4897-8879-d0f75aa47399"
        },
        "item": {
          "id": "84acb9df-cdee-40a1-8042-6467cb74ac35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6373de8a-1a38-4a28-9c50-8dc1175bde6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f78e783-654b-4c1d-99c4-4f7ebebe1f0a",
        "cursor": {
          "ref": "40a1c672-6d84-436b-bdf3-04e52e4f87ac",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c427cc9-058e-41ae-b646-36741888fa03"
        },
        "item": {
          "id": "8f78e783-654b-4c1d-99c4-4f7ebebe1f0a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5e8875a6-9322-4afa-a948-57aa17cada58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83db330d-00c1-4850-a386-d132095d233d",
        "cursor": {
          "ref": "13edf3a6-8e27-471d-816d-fdf02723b241",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4e772251-16ff-42a9-ad8e-2ec3a61b5d41"
        },
        "item": {
          "id": "83db330d-00c1-4850-a386-d132095d233d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b5bf7f7d-665a-4e7a-8c4f-2537c279da3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e99da7-159e-4c4d-9ec6-f53299f71092",
        "cursor": {
          "ref": "220e0a4f-66f5-468d-a529-2fd53693f98d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "450285bf-00a6-41ba-825a-2faa6568676f"
        },
        "item": {
          "id": "77e99da7-159e-4c4d-9ec6-f53299f71092",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "368330ab-56e1-45e7-a0ee-f0df9a119784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a45641-0b05-4fa7-afe2-d69b9a956f26",
        "cursor": {
          "ref": "9e35707e-09f3-4421-ba81-a1c2241e2375",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eeb1de65-a3cd-4de1-a4c8-9a7647c30080"
        },
        "item": {
          "id": "61a45641-0b05-4fa7-afe2-d69b9a956f26",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d2dd8eed-518d-46ed-a614-cde2129b053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f1b731-283c-4305-a15c-48c8b443f594",
        "cursor": {
          "ref": "c53450e3-7850-4360-9b2b-608ad58825c3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4883804e-a9f0-4a06-91bb-e2add676c5e2"
        },
        "item": {
          "id": "f5f1b731-283c-4305-a15c-48c8b443f594",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3cb60961-6fe7-47de-be11-dab9d529e15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f782902-c117-4264-be3d-39bf0ea7cefc",
        "cursor": {
          "ref": "d10d8ffc-44cf-42ae-82ed-eecbff196c46",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "65105e5e-1845-43ca-9bfa-15660fd2c80b"
        },
        "item": {
          "id": "7f782902-c117-4264-be3d-39bf0ea7cefc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "845edf5d-164e-4ee8-8edb-1a3e0f6bf5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746358c7-f40e-4d1a-b414-d8e29fb0f32c",
        "cursor": {
          "ref": "2fe65cd4-d67b-4e67-bdb9-2320745ddb94",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "08166e28-dd73-47fd-b44d-bcba261c7f3a"
        },
        "item": {
          "id": "746358c7-f40e-4d1a-b414-d8e29fb0f32c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "be661259-6c83-4a55-ab94-cc73aae2c003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643259a2-35f6-4b65-9fac-da3c8e84e463",
        "cursor": {
          "ref": "58cccd03-eeac-47d1-a0dc-01a55be41811",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5d1f6b6d-f021-4cbe-befe-0b8cdc81f4f4"
        },
        "item": {
          "id": "643259a2-35f6-4b65-9fac-da3c8e84e463",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4f55af2f-b207-4486-8d48-8debddb9e630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9d435e-285a-4fb6-b30d-219d5880c0f4",
        "cursor": {
          "ref": "7bd22eef-1480-4aba-ac93-84203786444c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "82d493f9-17f5-45b6-af53-ca65cec833ca"
        },
        "item": {
          "id": "cd9d435e-285a-4fb6-b30d-219d5880c0f4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "135fe6de-94f2-40c1-8c22-040dae421c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed762e4-31a4-4cdd-bede-8ff69f2d77f6",
        "cursor": {
          "ref": "54d13da5-02e7-49c6-9a93-1a945696aff1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dac940b1-410b-4465-a51f-a3409f52ef9a"
        },
        "item": {
          "id": "5ed762e4-31a4-4cdd-bede-8ff69f2d77f6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b849bcff-5ea9-4073-87cd-20b7a88b9455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc0d40d-c87d-45ac-bd4b-f8d4e51ce820",
        "cursor": {
          "ref": "198f8ceb-8a09-462a-93fc-17c99e8f5155",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b5543d55-7b68-43d5-aee8-90948c0e1608"
        },
        "item": {
          "id": "9dc0d40d-c87d-45ac-bd4b-f8d4e51ce820",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "89dbbc66-1d24-4384-9741-75887fc3bc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42871f5b-b803-4ab8-8a33-ca33428d1552",
        "cursor": {
          "ref": "53232250-1395-4c55-b46f-45244298352e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "29340df0-8f7c-424a-8294-b63c62021cb1"
        },
        "item": {
          "id": "42871f5b-b803-4ab8-8a33-ca33428d1552",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "090ebea3-d11c-43ec-b2b3-cd3047da701c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299e55c6-e8a4-4a4e-93f4-b68b89593286",
        "cursor": {
          "ref": "0a919168-b354-439b-a8a3-df1311f2a17f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f948aecd-ee79-4d48-9a50-4b5b179b5e76"
        },
        "item": {
          "id": "299e55c6-e8a4-4a4e-93f4-b68b89593286",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "98a14941-0319-473d-988b-eb7215e262a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d71b83-0264-4113-aca4-6f4992b37301",
        "cursor": {
          "ref": "b255bc1a-e89a-4fac-ba4a-2719f6b324fe",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b104324e-c79f-4aee-9346-97e9f8018c9e"
        },
        "item": {
          "id": "d2d71b83-0264-4113-aca4-6f4992b37301",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3ede4d70-8dfd-4af9-a0ca-11a90594892d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dce3a22-ffd6-4e4a-8068-4f235ee3db6e",
        "cursor": {
          "ref": "ed9601e9-f95f-4683-b6fe-7b8891446b71",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "662f76e9-c815-4e9e-8c16-1602ec4845dd"
        },
        "item": {
          "id": "1dce3a22-ffd6-4e4a-8068-4f235ee3db6e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "09cc764e-9281-449e-b9c6-5f0478c667ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35154b2-d626-4edb-a6e0-119465926e17",
        "cursor": {
          "ref": "057869db-76a8-4520-887a-962eb3038f11",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ef807ca5-f783-47ae-953f-295afd516be8"
        },
        "item": {
          "id": "d35154b2-d626-4edb-a6e0-119465926e17",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b9865e47-64fc-4a8e-b26d-4c78a97d3b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d3593c-1cd0-4fd9-97d3-c7c9882d18d6",
        "cursor": {
          "ref": "2db0d3aa-1fee-4be7-aa86-1fde9724f242",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2d1d3225-f05d-4f96-9f41-c6b21b69925e"
        },
        "item": {
          "id": "c5d3593c-1cd0-4fd9-97d3-c7c9882d18d6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6c855047-5a1f-4145-ae88-e77c837ccff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04621bc-593a-4dd5-85e8-8e57eee00b13",
        "cursor": {
          "ref": "b474f03f-1963-42a9-929d-7110fdacc267",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f2781c61-62ba-4bcd-b442-4739284ecf96"
        },
        "item": {
          "id": "e04621bc-593a-4dd5-85e8-8e57eee00b13",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "615c12a7-a27b-4b0e-9434-e7c5e6932aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aac9a25-325d-40d7-8203-0186ebdaee7d",
        "cursor": {
          "ref": "2b00afda-ee60-4193-9072-7a580050fbc5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "747eb79a-adaf-46db-998f-dee823deda2c"
        },
        "item": {
          "id": "0aac9a25-325d-40d7-8203-0186ebdaee7d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "38bb7f73-c2af-4c12-8f53-1cb52a2afdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4ff3f6-f8f2-4d1c-b484-6df170e42333",
        "cursor": {
          "ref": "db7c5f3d-11d8-4cdc-8885-8fcd93329d3e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "38b8e05a-58fa-4f3c-8792-1b5dddec0fbd"
        },
        "item": {
          "id": "1f4ff3f6-f8f2-4d1c-b484-6df170e42333",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4e08b030-7a9d-4d50-865e-67e8b97e8f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451654de-7c97-4259-9eec-accf95481a99",
        "cursor": {
          "ref": "391f127b-6bc8-4873-93d1-2990379535bb",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "60554d01-5861-4824-bf13-bc4ae28ea5c1"
        },
        "item": {
          "id": "451654de-7c97-4259-9eec-accf95481a99",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7ade380b-4365-4b9a-9718-58d7433ee9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b91ff8-79ac-406f-8dbc-5d7bb23e32b1",
        "cursor": {
          "ref": "78d73675-b49f-4323-a0a2-e462b3f324d9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ac425f09-f603-4b91-9962-9df05d832ce9"
        },
        "item": {
          "id": "d2b91ff8-79ac-406f-8dbc-5d7bb23e32b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "816286ee-a79b-4e38-b3ed-4e5313749dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a788f3cd-56ca-4d47-b2ae-4ff9b05ceecd",
        "cursor": {
          "ref": "6db9f0b5-7275-4c13-8293-b10debcbe9f7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b9001052-d772-410e-a3ca-6f1fd55d9713"
        },
        "item": {
          "id": "a788f3cd-56ca-4d47-b2ae-4ff9b05ceecd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8fc66c3c-6b47-4424-b637-d78a144fb65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d0ad4f-0eb5-4834-9ba5-5624e162b1ec",
        "cursor": {
          "ref": "f08186b9-4888-4f5e-baae-7919662d4046",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8fff150c-472f-4101-907d-40e637ca5f08"
        },
        "item": {
          "id": "c4d0ad4f-0eb5-4834-9ba5-5624e162b1ec",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "23290b03-b4b4-4665-b280-af9825520c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1425f8ab-4fae-4401-923a-f09ede64be01",
        "cursor": {
          "ref": "36330ed3-6d33-4908-a947-dea625bd79e7",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b23b5fb7-ac34-49c0-bc5c-a1c6615b2aa9"
        },
        "item": {
          "id": "1425f8ab-4fae-4401-923a-f09ede64be01",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32d0994e-2da8-4fd9-804a-8ad87949a370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1970f146-e756-4856-9926-51c1fdfdb1f5",
        "cursor": {
          "ref": "3ebf2051-1c51-43bc-b3d5-93861d67d06b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "67cb8206-4c3b-4398-a9cb-1250f01601b4"
        },
        "item": {
          "id": "1970f146-e756-4856-9926-51c1fdfdb1f5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "65b2f13f-b9e4-4bce-843a-4f79082a1fd8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683e3c39-c87e-47ad-b881-27f3c63b6103",
        "cursor": {
          "ref": "dc651f3b-512b-4d9b-b3fb-7c7c49ef3511",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "74d176bd-ad2f-4a59-9619-aec49e70e12f"
        },
        "item": {
          "id": "683e3c39-c87e-47ad-b881-27f3c63b6103",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "41fe3bb1-93b5-4eec-979e-040b10861d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f096719-eb45-40e2-a63b-1a52225034e2",
        "cursor": {
          "ref": "a73089c1-6d1d-49c3-a093-37406adbcecc",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aa0f3c39-4902-48e7-b7b3-68aacf6a3357"
        },
        "item": {
          "id": "5f096719-eb45-40e2-a63b-1a52225034e2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dbcd308f-e3bd-46ac-a535-e0657f92409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c4969-5f45-4cdb-8a64-91e1f03b5888",
        "cursor": {
          "ref": "bbc8786e-a20a-40ef-8fbc-84245309fccc",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8400da27-1d4c-4117-89bf-61f4f8891655"
        },
        "item": {
          "id": "3d3c4969-5f45-4cdb-8a64-91e1f03b5888",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aa626c9e-3903-420e-85a1-5679a71ed275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0c1a17-d1b3-4362-97d8-6face408a19d",
        "cursor": {
          "ref": "8f8ed544-fc21-4642-a039-df9b7f919769",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c098cfa1-f1e2-470d-a43a-abaf6001e594"
        },
        "item": {
          "id": "de0c1a17-d1b3-4362-97d8-6face408a19d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3f86e3b9-cc5b-4eca-ba76-07ee05351aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c517887d-8a02-4175-a6fa-05e459de0bb6",
        "cursor": {
          "ref": "92b43876-2606-4eec-9e3f-009fefde5f72",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f563dc56-3801-4d50-a628-3b3991c75621"
        },
        "item": {
          "id": "c517887d-8a02-4175-a6fa-05e459de0bb6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bddd5641-f677-448b-98b3-a1057c561cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dae9621-e9f8-408b-8ed5-71c43d35503e",
        "cursor": {
          "ref": "bfa35004-4050-41b7-b503-e462ff828993",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "753a7770-31ec-4346-bff1-41dd3e2cb3d9"
        },
        "item": {
          "id": "7dae9621-e9f8-408b-8ed5-71c43d35503e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0ba22e8b-be1e-4d13-a186-f1620b0ab474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9595a9d-936c-4058-b7aa-bf7866cc4bd9",
        "cursor": {
          "ref": "403b5956-9449-489c-a6a2-136e5eb1035a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7cc22c57-d295-49a6-951e-8f0ebac2eabb"
        },
        "item": {
          "id": "d9595a9d-936c-4058-b7aa-bf7866cc4bd9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d38469de-2853-44e7-b422-c6a0007a67db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769e6c55-253f-433d-93bf-2996567b8dfb",
        "cursor": {
          "ref": "f848a364-edf0-408f-a5ab-26744c64c811",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0e16c9ab-ff3b-4710-9545-275431138a8f"
        },
        "item": {
          "id": "769e6c55-253f-433d-93bf-2996567b8dfb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4d5450bf-f961-470b-94c6-15dd5a92bf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d138c132-8edc-4c61-9244-95f46ef52929",
        "cursor": {
          "ref": "d03e6433-9b70-4f9b-9d76-eba802622548",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "54ba558f-725e-44e8-a9b6-f6696ae1f83d"
        },
        "item": {
          "id": "d138c132-8edc-4c61-9244-95f46ef52929",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e700a4c7-5683-47f1-9fa9-58551fbb4350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944071f7-f5ad-4dbd-91ae-d0262a03996f",
        "cursor": {
          "ref": "aa26198f-91af-42de-9eeb-29703a1869e4",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "549290ad-4995-412a-bbf3-a3928bd2da8a"
        },
        "item": {
          "id": "944071f7-f5ad-4dbd-91ae-d0262a03996f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6d07a341-af71-4592-b88e-e68d35a4434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f457246d-b372-4c81-b937-807a451351f5",
        "cursor": {
          "ref": "466979ec-157f-4973-93f1-accb70c69249",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3038bbcf-776b-46ae-8289-d428fcce4b2b"
        },
        "item": {
          "id": "f457246d-b372-4c81-b937-807a451351f5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "90e43c7b-8010-41a1-ab4f-2c576168abf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e53b44-69a3-4976-b2d4-562514ded4dd",
        "cursor": {
          "ref": "f6a97d06-7a84-461c-8901-6548214558bb",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bd413b84-41a5-4497-be14-e3c9361f9d13"
        },
        "item": {
          "id": "d0e53b44-69a3-4976-b2d4-562514ded4dd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3145edf4-04d9-4f9a-8920-157f815c397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b781f6-449e-40b6-a8d4-a4a5f36f8ef6",
        "cursor": {
          "ref": "4168ad14-c359-459b-acf3-3d6f00efc792",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1674ec79-e7e7-49e6-8973-fbc23b21853b"
        },
        "item": {
          "id": "27b781f6-449e-40b6-a8d4-a4a5f36f8ef6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "70d73eb5-1a35-4dbb-8829-433aa74ca6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f8a45f-52c0-4b96-8c4a-96171f60d3c5",
        "cursor": {
          "ref": "41316ef9-35aa-4c1a-b079-654284e43e9b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98d5eab9-f834-487a-aab3-02ea1f5ca6dc"
        },
        "item": {
          "id": "c7f8a45f-52c0-4b96-8c4a-96171f60d3c5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2dd3499-9c76-43c1-a928-df50e9f6f9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd13f7b8-566e-4c1c-ada3-36db5e5f71f0",
        "cursor": {
          "ref": "4bb8cd99-5891-4f1d-bbf0-975f20436773",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8db1cbd0-3bf7-41db-97cc-78a51b85bff2"
        },
        "item": {
          "id": "fd13f7b8-566e-4c1c-ada3-36db5e5f71f0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e00737a5-ea42-40ab-8e7e-3a72109d7f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cd1050-d72d-4cf4-858e-e42030db272f",
        "cursor": {
          "ref": "27eab8ef-c475-496e-8ca8-e222a46f10f4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ba49193e-03e6-4031-91ee-cbcd0d984b7a"
        },
        "item": {
          "id": "f1cd1050-d72d-4cf4-858e-e42030db272f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ba5bf83-9bf6-4bdc-932b-dbcfc9458174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e88c7-6ef2-4b7d-a2a7-75339a36ee07",
        "cursor": {
          "ref": "ce2f04a3-9bde-4dcc-891a-8612a3cf31f7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2f2e5128-3de9-4011-903f-318267eccdd3"
        },
        "item": {
          "id": "ad2e88c7-6ef2-4b7d-a2a7-75339a36ee07",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2e18da1a-0e1e-4ef2-aba1-1cfe35ee6c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3acd52-843e-4b1a-9b3e-594f4dcea2ee",
        "cursor": {
          "ref": "c41ae361-3cec-4d43-ad58-4b3f6dc61a3b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "17f29f32-7907-4d17-a952-3db8d82e4f5e"
        },
        "item": {
          "id": "6f3acd52-843e-4b1a-9b3e-594f4dcea2ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1dca710d-3bff-4d85-94b1-e9ad8cac6590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df0566c-3ba6-4007-baac-559e3a7c0a9b",
        "cursor": {
          "ref": "a954630b-2e87-474a-b7f8-f7ec740c44e4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "816931b6-7f76-46bf-aa19-cd9857b7117c"
        },
        "item": {
          "id": "1df0566c-3ba6-4007-baac-559e3a7c0a9b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e75cb0c5-b0ce-4e47-b48d-41e14a46bde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31683245-d868-4292-82ed-55f99b048016",
        "cursor": {
          "ref": "06c7d098-e8b5-4868-aa85-64b20c19d9fc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d596830e-ff8a-4ea3-b119-49a24e28d17a"
        },
        "item": {
          "id": "31683245-d868-4292-82ed-55f99b048016",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3e299a76-6612-4738-958e-d863e65f6a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cdeb4b-ec5a-4e97-886b-bab10690e56d",
        "cursor": {
          "ref": "f05dcaa2-b67f-45e5-a6ec-f8de63d75036",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "80621a9b-6aa6-4c51-a478-bb89bda70366"
        },
        "item": {
          "id": "00cdeb4b-ec5a-4e97-886b-bab10690e56d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7a9c56d8-1b60-4fea-b2a2-b12441ccb76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9075e1ee-3e8b-415c-a740-5076016d2cb6",
        "cursor": {
          "ref": "6017a6db-8699-42cb-9af2-3721dafd3008",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7eb0c3cf-c253-49a1-a5bd-9236967d9a64"
        },
        "item": {
          "id": "9075e1ee-3e8b-415c-a740-5076016d2cb6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bfd06a9b-b4cb-400f-9942-f073ed1fbfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e047106-3ac3-45e9-963f-4dc2d332c2eb",
        "cursor": {
          "ref": "a89558aa-e2a4-41bc-9e3c-9b1703e96ea7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cd6f5d39-97a2-4589-8c86-3df7746d4efd"
        },
        "item": {
          "id": "5e047106-3ac3-45e9-963f-4dc2d332c2eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "03a37407-daaf-49fa-98d4-f09de826c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b90124-d886-4dcf-b9f9-89e07c9d49c8",
        "cursor": {
          "ref": "d3d622a5-639b-455b-83f3-dcf6e1859f0b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "17848346-37fa-461c-98e8-843a30e8a40d"
        },
        "item": {
          "id": "17b90124-d886-4dcf-b9f9-89e07c9d49c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8e148cda-147f-4aa9-ad62-6c11ced1367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b590dbef-d9f2-47bc-89e4-ea472a74aba1",
        "cursor": {
          "ref": "9bcdc402-e086-42f5-a925-3b41d6df1c87",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c3d0caa-3b8f-44e3-82ba-d7cc6fd4d359"
        },
        "item": {
          "id": "b590dbef-d9f2-47bc-89e4-ea472a74aba1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "26f630c7-5b61-466c-aa72-1bd82181de3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856c32b5-a4d7-4e95-b63a-db682daf4a46",
        "cursor": {
          "ref": "650512a4-7668-4e8d-98f6-4aec10673293",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b741ccab-6805-4901-bf96-b1df98fa0681"
        },
        "item": {
          "id": "856c32b5-a4d7-4e95-b63a-db682daf4a46",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b0898d3c-925c-4ef2-8dd5-9cb8da60c1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2283082c-f058-452f-bb19-c5bcd110bfd3",
        "cursor": {
          "ref": "93efaef3-0350-426c-9068-03676b14170f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "99e125d8-f7ca-4c87-b6dd-3a24ad5cb0c6"
        },
        "item": {
          "id": "2283082c-f058-452f-bb19-c5bcd110bfd3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d5dc1a2b-21c0-49ff-a11e-4762fd777526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3899ddf3-a371-45ad-94f8-d2c45b1acabd",
        "cursor": {
          "ref": "b861dd06-457c-4b37-aa4d-1e901315a96f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9091841f-3fdf-4068-8fd8-22d6e3a6d053"
        },
        "item": {
          "id": "3899ddf3-a371-45ad-94f8-d2c45b1acabd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c707b82a-a0cf-4486-be83-b704bbb28de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2ff712-0944-4e8b-ba05-9298dccb8199",
        "cursor": {
          "ref": "41b562be-a8c2-461d-b737-a808af223a09",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b0f99c51-86f5-4e3c-872b-d7dbdaedd097"
        },
        "item": {
          "id": "8b2ff712-0944-4e8b-ba05-9298dccb8199",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f2f4d9b9-9d51-4a01-922e-d49ec2a42502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0847d6-9431-47ad-a88b-d667335d7161",
        "cursor": {
          "ref": "f61e1b64-55af-4f98-8432-646f40626171",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "afa577a0-7180-47db-95e2-99a706116473"
        },
        "item": {
          "id": "dc0847d6-9431-47ad-a88b-d667335d7161",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "72e001c6-129d-47fd-8eaa-0be4c851e191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c8aae2-0d69-4cc2-b431-14e143decfa9",
        "cursor": {
          "ref": "2afbfcf7-e543-4b31-b4da-4e82da42d24f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "94a27ec4-2d51-4c58-aee8-c25b76613b33"
        },
        "item": {
          "id": "b2c8aae2-0d69-4cc2-b431-14e143decfa9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "29ede063-d14d-4f40-a707-dea0c6318d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf029f77-4f44-40a4-9414-84357fc2db7b",
        "cursor": {
          "ref": "28af0d34-73a1-4505-bd45-f40a93c84862",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6e3009fc-49b4-4c09-bafe-3e8468a6bd0b"
        },
        "item": {
          "id": "bf029f77-4f44-40a4-9414-84357fc2db7b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c8945579-4dad-4135-82b3-35ef8baeb8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b62c32f-855e-4cd4-a6c5-5ae59864439c",
        "cursor": {
          "ref": "3832ffb7-aaa9-4de6-b84a-3a82617b5f4a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cc52726d-ef01-4268-80b6-89e603ba3b51"
        },
        "item": {
          "id": "8b62c32f-855e-4cd4-a6c5-5ae59864439c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dbc52538-0536-42f2-9233-18f5cfa0d3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2ff727-6307-4ca3-b2c2-1d3c493262b5",
        "cursor": {
          "ref": "4bc7abc1-236e-43d7-91f9-6988b8ae8959",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0ae40112-59cb-408d-8d66-09b6ba728882"
        },
        "item": {
          "id": "ed2ff727-6307-4ca3-b2c2-1d3c493262b5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c2fa9904-87d4-4594-9839-c3c2f7c7d143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467f7445-130c-4839-af2c-82be413724ed",
        "cursor": {
          "ref": "3cad6eb4-2e25-4b90-9cda-5372d87888be",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c37ddc47-b4e2-48a0-8652-b19edff05895"
        },
        "item": {
          "id": "467f7445-130c-4839-af2c-82be413724ed",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "62804fd3-f2a5-4daf-a37f-b95d8856eeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5db7d85-2c64-495e-b908-4893a656b50c",
        "cursor": {
          "ref": "b0e041bc-a118-486f-a207-841a3706526e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd8964a3-100f-4eaa-aba7-516c9ecbdbb6"
        },
        "item": {
          "id": "e5db7d85-2c64-495e-b908-4893a656b50c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "720a6eef-0bc1-4337-8d30-60afef134f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267b2ee7-8e99-497d-92bf-4f76e9b5527c",
        "cursor": {
          "ref": "6fa0af2f-984f-4133-b633-dcc97e37e24b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f5553b46-a839-4c71-90aa-0ad645d400d5"
        },
        "item": {
          "id": "267b2ee7-8e99-497d-92bf-4f76e9b5527c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3c9f0cc5-5595-4211-9233-bda951da21dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034afcdd-e613-4c17-9765-8deb2aa51585",
        "cursor": {
          "ref": "c95d2dcb-5a86-486d-8d24-34794df3700c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f4b5d496-6e69-45b6-9e3a-6f7667d1827f"
        },
        "item": {
          "id": "034afcdd-e613-4c17-9765-8deb2aa51585",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af9ef870-2370-41ab-be9a-afc43a21a5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f5e668-bf28-4b73-8ec6-1eb4d09e9e23",
        "cursor": {
          "ref": "567af3c3-d32d-4152-91e2-53b1efd70cdf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8797416b-2827-4722-8b71-eb5bb620eb22"
        },
        "item": {
          "id": "66f5e668-bf28-4b73-8ec6-1eb4d09e9e23",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "523994c7-ac3b-40eb-aa0b-beb9ccf5753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8794e5be-9fbb-4367-afb5-d41396692c18",
        "cursor": {
          "ref": "7678444d-3357-4224-b4ca-f175e52b8d8d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "00f9ed74-0b99-4374-9533-6605307120ca"
        },
        "item": {
          "id": "8794e5be-9fbb-4367-afb5-d41396692c18",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7926a276-a2fd-4652-b70d-8e88bdea1a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208d4ce9-b3ee-4649-8a2b-048b1862cea3",
        "cursor": {
          "ref": "bd64ad64-7daa-41f3-85a4-d82b741bc8ba",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f6c8c22b-6c5e-4e19-9a13-f572341b8c6c"
        },
        "item": {
          "id": "208d4ce9-b3ee-4649-8a2b-048b1862cea3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "27bf9311-2519-4380-b243-2ead0e29dd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9499d2-0fae-483b-a414-2ea04060bc04",
        "cursor": {
          "ref": "f3ba631b-c8ed-44bb-a977-6abebb734426",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "551b669c-e6e6-4849-bdc2-638fa0d2b98d"
        },
        "item": {
          "id": "8a9499d2-0fae-483b-a414-2ea04060bc04",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c110eed9-e3af-4651-8159-869cb62777db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731189de-c2c5-4544-8ccf-177c57bb32bb",
        "cursor": {
          "ref": "ee0fba07-0a72-49c3-9238-8a7fe07a6738",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1d6b9579-a41c-40b2-8f5a-7e59faf2763a"
        },
        "item": {
          "id": "731189de-c2c5-4544-8ccf-177c57bb32bb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0430a994-1da5-4cd6-ae33-766bf9815292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23210b69-2050-46c1-809b-20b6ade17214",
        "cursor": {
          "ref": "7e30d0bf-d9ab-4b65-9dae-6caa777a0877",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "86b86f5c-2c15-4778-a992-4cecc968b4ec"
        },
        "item": {
          "id": "23210b69-2050-46c1-809b-20b6ade17214",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1d4a9f01-8f03-437e-ad15-ca9d75d66106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f108f9-3b39-44fa-83a8-789ab4c01265",
        "cursor": {
          "ref": "adbc104b-b887-4785-9265-d6f5570f03c2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8c5a6a51-bd97-460e-884e-1bc96c2eedcb"
        },
        "item": {
          "id": "72f108f9-3b39-44fa-83a8-789ab4c01265",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a78fa426-4f77-4d40-aa6b-422f5c93cefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae958cab-a835-4355-be8b-67cfa147a9de",
        "cursor": {
          "ref": "95437dc5-7b6d-4682-83db-3865a00389ff",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "abb5fcb1-172a-49e7-913e-c2dab76bfffb"
        },
        "item": {
          "id": "ae958cab-a835-4355-be8b-67cfa147a9de",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "40332ebd-bdde-4842-883a-c01333e992b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac14b69-5cfe-4346-8fa5-c9da4f9b565c",
        "cursor": {
          "ref": "0fef677a-79cb-4579-97bf-a7b81b3ec3f5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f0e76ed4-4ae5-47b5-ae6e-8aaaf4320d4d"
        },
        "item": {
          "id": "3ac14b69-5cfe-4346-8fa5-c9da4f9b565c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bb0f3095-0ae6-4d04-99c8-c72f5179431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25f2fb8-cbf5-4476-9186-17ad32cc5cd5",
        "cursor": {
          "ref": "09253cb8-2403-48a0-bcbd-aa6d255c7a4f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c0ef2ffe-0249-4ec4-ab76-26b3b79bdf0d"
        },
        "item": {
          "id": "b25f2fb8-cbf5-4476-9186-17ad32cc5cd5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "74221931-9ed9-4f87-a45b-fc6d7c09096d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9f4528-3a09-467b-bd27-cf078811f62a",
        "cursor": {
          "ref": "358bd90e-67d1-4ba0-9d0f-d4d339205df1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dfdfea2f-2da9-44d2-bff1-05da6bab0df2"
        },
        "item": {
          "id": "2e9f4528-3a09-467b-bd27-cf078811f62a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "032f7091-5a08-4e25-a624-4e331f8b228f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393fc99e-116b-406c-9116-5365124cdb82",
        "cursor": {
          "ref": "0887e35a-f518-46f4-b2a3-7b7b90d730cb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fae738d0-3434-4859-8385-a7be4b4b2ee5"
        },
        "item": {
          "id": "393fc99e-116b-406c-9116-5365124cdb82",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5d8089e9-a22d-4ad0-adb5-d1c2d17c0c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b02da4b-3873-4b9d-98cd-c6eda68dcbc3",
        "cursor": {
          "ref": "8f749ecc-9982-4e56-93c7-366bdd3022d3",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fa56ee9f-c8c1-45fd-abce-4e904479f413"
        },
        "item": {
          "id": "3b02da4b-3873-4b9d-98cd-c6eda68dcbc3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ae7200a8-4f2a-4fa4-809b-1d2034dd6634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eba233c-4ac1-498f-9e03-80a248864589",
        "cursor": {
          "ref": "6b9be0e6-1653-4ae7-a2f7-1b1b0436fcc4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1078493a-a49d-41ad-b55f-69c0f729df03"
        },
        "item": {
          "id": "6eba233c-4ac1-498f-9e03-80a248864589",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "572294c5-0677-4f53-bddf-b6a1eca716d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa2423-4ad0-43da-a6c1-17cfe3cc4a54",
        "cursor": {
          "ref": "0e55de5a-1dce-4469-a969-e28060819fd2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e384a1fc-16e5-4dc8-a6da-0d86be375699"
        },
        "item": {
          "id": "59aa2423-4ad0-43da-a6c1-17cfe3cc4a54",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "78a5af9a-45aa-4dd4-a803-c85bd8a67efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caaf227-eae6-4ffa-81f5-fb4248dd710e",
        "cursor": {
          "ref": "1f4defce-3e57-4d56-9389-be4efa57f14c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "47afdd5e-11e1-4c31-8351-3fb0a1674c7a"
        },
        "item": {
          "id": "5caaf227-eae6-4ffa-81f5-fb4248dd710e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "15a78b0f-2359-491f-a0ad-da4202842ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054bb809-31b7-4172-bd75-07f7d87b7349",
        "cursor": {
          "ref": "c9294c17-dc8d-491c-bb14-60e90ed2da1c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6d25d214-9126-404b-9405-4314dd16887c"
        },
        "item": {
          "id": "054bb809-31b7-4172-bd75-07f7d87b7349",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ff349949-494a-42f9-bb18-6625e367ae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ee0372-40c1-434c-a70c-590ebbaefe8d",
        "cursor": {
          "ref": "5639a00b-08e5-4bfb-91b7-65eed5e0426b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "785b66d8-6b81-40f5-880e-83747b3fcd55"
        },
        "item": {
          "id": "b8ee0372-40c1-434c-a70c-590ebbaefe8d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a9c22388-384a-44f4-a0fb-6a9034ca25e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760ea871-fb78-413c-b9d8-a89a16a3f844",
        "cursor": {
          "ref": "d376ab6a-eaa0-4c1e-8482-a4d3c4d56818",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "65710e11-9a75-4704-9c9d-d1a810b96e8f"
        },
        "item": {
          "id": "760ea871-fb78-413c-b9d8-a89a16a3f844",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b177c3d2-1eb4-40ff-a915-a326007c16ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f18877-de24-4f06-bed4-4c16659c81a4",
        "cursor": {
          "ref": "3aa231f6-4b18-43b3-8ee3-3cfcda1ff285",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "166b5fb0-917f-4f89-a996-8d49371dcd87"
        },
        "item": {
          "id": "79f18877-de24-4f06-bed4-4c16659c81a4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ef15b6a6-6bd8-4018-8804-38d6cab3a7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4ec58335-1ed0-40d5-9fb5-afe8a7d3baca",
        "cursor": {
          "ref": "0d66fd91-8da0-4863-beb6-caba4c91aa8a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4cfae3e2-cc5d-40eb-a5b7-9b5261f72d64"
        },
        "item": {
          "id": "4ec58335-1ed0-40d5-9fb5-afe8a7d3baca",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dc9d8602-6c70-4aac-8797-f12935f49b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6ccb120d-ada3-4a44-951c-4f2aa6f8bc16",
        "cursor": {
          "ref": "0dff3916-8843-4836-ad3e-4864a029c150",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cc267b31-3fb2-42f9-a1c0-eb8552f519ed"
        },
        "item": {
          "id": "6ccb120d-ada3-4a44-951c-4f2aa6f8bc16",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f7e84cd2-3204-4545-929e-79c68c259a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0b1873f9-6e93-43e8-826a-1c1217772dc2",
        "cursor": {
          "ref": "f5ec82ed-72a6-4dd9-90d3-87459b1da1a0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cfe244e3-c4cb-4d87-9a11-fde67396d8c1"
        },
        "item": {
          "id": "0b1873f9-6e93-43e8-826a-1c1217772dc2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a39da40e-5f4d-494b-ac8b-d8668dcef347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7b25407a-19f7-4628-b6f5-9ccc69bc6da4",
        "cursor": {
          "ref": "5b96b6c8-f40a-4423-8c46-0634f18b4ac0",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d022d960-3e3a-483a-b9f5-bc9c8c46fd59"
        },
        "item": {
          "id": "7b25407a-19f7-4628-b6f5-9ccc69bc6da4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c369ae2c-009f-4acd-8be9-338581c1d57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "47a424a1-c79b-4fb1-9ed0-5f8168be7993",
        "cursor": {
          "ref": "7ec492d4-e7aa-407d-9bfa-aaf8e817cb67",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3082a45c-949d-42fc-912b-88aab3954408"
        },
        "item": {
          "id": "47a424a1-c79b-4fb1-9ed0-5f8168be7993",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "320c473e-eacb-4645-86ec-4348562149f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9f161538-f555-446a-92bd-9a7fa799d226",
        "cursor": {
          "ref": "c570ab10-fed1-42af-bc00-2b199d5f454c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "97589d76-abba-42da-909b-08af37099c77"
        },
        "item": {
          "id": "9f161538-f555-446a-92bd-9a7fa799d226",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6cc652d7-6f32-44b2-a63c-9beda145a8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ab737b4f-9e15-4b69-9478-6af556c183b2",
        "cursor": {
          "ref": "94a82ad7-bbe8-46cc-b5f4-a72ce4720fba",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "46229c41-cd85-46b7-8115-e51785dc8909"
        },
        "item": {
          "id": "ab737b4f-9e15-4b69-9478-6af556c183b2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8843fe2b-fdd5-46a2-b0c4-f0bcfd13b70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a300238-f404-486f-9235-028ff5aa3604",
        "cursor": {
          "ref": "dc0efccb-bc30-4432-8da5-b74ff83dc06b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e8081128-e305-4b2d-9c75-149d83c3350e"
        },
        "item": {
          "id": "9a300238-f404-486f-9235-028ff5aa3604",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "26c4310c-988a-41ab-84eb-1deeff66d68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef90cd5-b0e6-41de-8e5c-942bc62116b5",
        "cursor": {
          "ref": "62e57874-cb3c-4941-851e-1e615497f6b3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f376d6e1-ba87-40e7-9465-964aac270c28"
        },
        "item": {
          "id": "4ef90cd5-b0e6-41de-8e5c-942bc62116b5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "185f900d-6c97-468d-b27e-b71f04a23b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ec32b4-29a3-4b53-b7b3-cb83802a7e02",
        "cursor": {
          "ref": "821db877-7e08-4a00-ac53-13466a32d5f4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "62884e50-25c0-4775-a115-7ed08e19c74b"
        },
        "item": {
          "id": "e0ec32b4-29a3-4b53-b7b3-cb83802a7e02",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dd2968ef-9437-4ba1-9c8f-5542d5cc2eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadb678c-d3d2-4775-8e3b-a125c60d5fa4",
        "cursor": {
          "ref": "8d59cb4b-db80-4079-9b00-cad844fa56eb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f23e65fd-8e44-448f-860d-9885363f8da5"
        },
        "item": {
          "id": "fadb678c-d3d2-4775-8e3b-a125c60d5fa4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "08a765e1-48d8-499e-9618-5402c45007c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3b293d-985a-4820-8c68-ad3f4e6090f8",
        "cursor": {
          "ref": "e0c5e694-99a0-4e30-b850-2cd9b8c4beda",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b091f126-695b-4f05-b5c3-2af6c394feac"
        },
        "item": {
          "id": "ae3b293d-985a-4820-8c68-ad3f4e6090f8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bd4bf3cf-4b2c-4d37-9b5e-71c1d44933fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c863805-8e91-4fcf-aa20-0e930e866dbb",
        "cursor": {
          "ref": "d6309cbc-0f8c-4dae-95da-7352fae76225",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e0642fde-1ab2-4c3f-93b4-0d4f75c6e729"
        },
        "item": {
          "id": "2c863805-8e91-4fcf-aa20-0e930e866dbb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf68e4ba-10eb-48af-af1e-bed765e4cb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e96e38e-f866-4f0d-b6fc-2de315ae50e2",
        "cursor": {
          "ref": "6bc2dd5b-cd3b-4a2b-8624-d4bfd855bc30",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7257c4e5-1cab-4e99-86d8-0c3e0739ed34"
        },
        "item": {
          "id": "7e96e38e-f866-4f0d-b6fc-2de315ae50e2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8bb4e23-9000-45ef-802d-6c337925cc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17267a04-d726-4e38-bb4b-334b80d5cadb",
        "cursor": {
          "ref": "f67b67a7-d60f-47d6-9e78-72f92b841f01",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "34282fb3-df88-47ce-8481-e56d97bfc912"
        },
        "item": {
          "id": "17267a04-d726-4e38-bb4b-334b80d5cadb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0b81a991-1fd2-4451-82e5-8f3bfff6273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be41cc3e-7cf8-419f-8c29-bd6db86fb830",
        "cursor": {
          "ref": "31cc629a-ef06-46cf-a2b7-146c4f73ff72",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c51bd9a3-f8b6-49c0-bcb7-04c49c1928a4"
        },
        "item": {
          "id": "be41cc3e-7cf8-419f-8c29-bd6db86fb830",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "10ba081e-6632-434e-b61f-5a1e5be2ca7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4045572e-104f-4dd3-b49d-08cc10872953",
        "cursor": {
          "ref": "2efac5af-1d8a-4237-8782-24f9533a8b54",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4d8e000c-6df0-480f-84c6-1fd3aeeaa602"
        },
        "item": {
          "id": "4045572e-104f-4dd3-b49d-08cc10872953",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5794d409-a7ee-4284-bc43-d43222467218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae257b9-1dd6-473e-9b7c-0aed65007bdf",
        "cursor": {
          "ref": "3091299d-3e30-4299-af23-fc3f572a467d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "22e46f40-2382-4516-8a07-f59de121dec5"
        },
        "item": {
          "id": "dae257b9-1dd6-473e-9b7c-0aed65007bdf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f5d246d0-c054-4ce1-b993-ad0bd77dc271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b32bdd-9ba0-4dbe-aeab-88c98dc5143f",
        "cursor": {
          "ref": "bb939290-ee4b-4a39-b513-03791305db15",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f244648a-c17d-46aa-9bfd-879056420015"
        },
        "item": {
          "id": "01b32bdd-9ba0-4dbe-aeab-88c98dc5143f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "57a51502-3fa5-4262-8e3a-5ac3e5146708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfcef89-8ab1-41fa-ab0e-1e64ff838906",
        "cursor": {
          "ref": "1e36892c-0d27-4746-bcc5-5a084c05dec3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d0641b35-f746-44c4-baca-94b9f336e8ea"
        },
        "item": {
          "id": "8bfcef89-8ab1-41fa-ab0e-1e64ff838906",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "870b259d-62c3-4b82-8117-151c12807c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed107b1-0501-424b-bdee-85c2ca635f9c",
        "cursor": {
          "ref": "72f9f843-4a9a-4751-a218-bfc861923327",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "82ece4e2-d112-494c-8e08-d1a4b61f89b0"
        },
        "item": {
          "id": "eed107b1-0501-424b-bdee-85c2ca635f9c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cb44e7ea-41b2-437b-ae4c-c6cd0a33fe9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea44d31-8499-4a00-a3af-013c396615e1",
        "cursor": {
          "ref": "65bb6c65-d54a-4ac4-bc68-5d1cf7a635ab",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2fbfae55-dae2-4049-b1a3-1c26f05e1719"
        },
        "item": {
          "id": "5ea44d31-8499-4a00-a3af-013c396615e1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec206796-4b55-4aab-9009-7acfcaa37810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a75bbc-df9f-43f1-a9c5-4c941ad6d2ed",
        "cursor": {
          "ref": "d5498ddd-013b-4bbc-bdf1-4b1716190872",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ae9f3c00-9d9f-4db0-a218-2aba67320154"
        },
        "item": {
          "id": "27a75bbc-df9f-43f1-a9c5-4c941ad6d2ed",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c5e8cf37-f9c4-4029-bc85-fa18bfb44978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b160c1c0-a5c6-48c2-80c3-34a1ddaecf40",
        "cursor": {
          "ref": "d6e22a4f-c08f-459c-8a8b-c4d8301a7405",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "29e06224-2160-4ca6-bc5f-6abc2ccb3e52"
        },
        "item": {
          "id": "b160c1c0-a5c6-48c2-80c3-34a1ddaecf40",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "71f2f143-1f4f-4b6e-aa9b-c41e29d8ea04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e107dd-8793-4f30-b227-b6596dac907f",
        "cursor": {
          "ref": "7854f5da-651b-4b4a-83e7-bab981b6311b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "93a4f880-4525-43d8-8a12-1b8d5cbf8c5e"
        },
        "item": {
          "id": "a6e107dd-8793-4f30-b227-b6596dac907f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d4224f0b-e4c7-40ae-b086-bee4fa37468b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92b3919-3910-41a7-a648-71c3326e3611",
        "cursor": {
          "ref": "ab3be7db-6361-47ec-bd88-7bbe90ea8e6f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9bc328d0-2634-4e7e-a3bd-801b8a4c8189"
        },
        "item": {
          "id": "a92b3919-3910-41a7-a648-71c3326e3611",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "62610cd7-3f0b-408d-9a6d-dbe6fdeff1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39f98f5-0629-4343-a16c-c7b468df80ff",
        "cursor": {
          "ref": "30218881-48ab-4235-b117-9a23ad93e886",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8fa706ed-ab9b-43ba-bad3-56ec8fe00a78"
        },
        "item": {
          "id": "c39f98f5-0629-4343-a16c-c7b468df80ff",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9e96586c-7341-4685-a6f4-22a785578a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6746115-42e1-4bcc-9648-d4bfc896d2d6",
        "cursor": {
          "ref": "8cdbc055-7294-494f-9f2e-f5285eecd417",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8917b0a9-f4be-4791-9d28-307e7bba9a30"
        },
        "item": {
          "id": "e6746115-42e1-4bcc-9648-d4bfc896d2d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "82a7dee9-a103-4082-a331-40275409b35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69bca8f-6821-4942-bdfe-29ef1721d4bb",
        "cursor": {
          "ref": "5911cc12-b646-4919-9ad5-f61a06bfe1b7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "74a53333-1c2c-4634-9311-cc8de25f1dd1"
        },
        "item": {
          "id": "c69bca8f-6821-4942-bdfe-29ef1721d4bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "594c309f-52c1-4fa7-9d36-7d072bc77886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49eb8b6-a943-49ea-ab88-0a9ae895fed0",
        "cursor": {
          "ref": "d91abab2-7f2d-406b-9a86-3546c12faf87",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "15802394-b1fd-48d5-b6a1-c3279cc523c8"
        },
        "item": {
          "id": "f49eb8b6-a943-49ea-ab88-0a9ae895fed0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f2471d7-16dc-427b-83c3-539a258d4db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9990ff0-9660-4cdc-b6c9-f52a764bf94a",
        "cursor": {
          "ref": "191a3e9f-ac7d-4489-b32d-31958ad94fb8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4d40b11c-fe1b-4483-be52-c4797a986992"
        },
        "item": {
          "id": "a9990ff0-9660-4cdc-b6c9-f52a764bf94a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c8178a0-a3e0-4bfa-b2a1-feb03be05dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e85aa7e-6ff6-4e44-9fe1-bcbe9eb2430d",
        "cursor": {
          "ref": "36ca9d7a-8025-40e2-915b-e53d6b19ea24",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b497b090-b500-4100-97ff-a5c244d639bd"
        },
        "item": {
          "id": "7e85aa7e-6ff6-4e44-9fe1-bcbe9eb2430d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e6621ca7-45ba-4aa9-8418-027c7e7d76ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbc99a2-7589-4ea0-aea0-96c46e378935",
        "cursor": {
          "ref": "2b801605-f3e0-4801-95f6-413957fc8a71",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "45ea59fd-ad83-492e-bf36-2937a2594d2d"
        },
        "item": {
          "id": "0fbc99a2-7589-4ea0-aea0-96c46e378935",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "61264824-d90f-4c96-97b1-eac9ece79c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be94b63-bd7d-4f3b-b1fb-447e8d8bb37a",
        "cursor": {
          "ref": "693e2aa3-38d3-4c36-bd09-96db72682512",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3e651372-e9ee-4a93-8559-6c931a608bb9"
        },
        "item": {
          "id": "1be94b63-bd7d-4f3b-b1fb-447e8d8bb37a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39df24ec-c486-4749-8895-299f736d3834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aeba07-b4b0-4aec-a86c-9f3905056bf9",
        "cursor": {
          "ref": "4891cefb-5126-4b48-899b-3ac761690237",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bf1ea58b-9332-4fed-902c-d2d223004138"
        },
        "item": {
          "id": "e0aeba07-b4b0-4aec-a86c-9f3905056bf9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "70019e7f-7495-4ba9-a129-42f14dce8238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090cdc9d-c1ff-449b-98f1-150ca0e2096c",
        "cursor": {
          "ref": "bf4d91f7-c9bb-4c62-84fd-2aedf3208385",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ff0b15d9-65d5-4385-8f05-e78770c1576b"
        },
        "item": {
          "id": "090cdc9d-c1ff-449b-98f1-150ca0e2096c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dbf05bbe-9b9b-4c3a-95ff-e132fa81035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c1b189-d600-4d9c-82f1-2cada34e4903",
        "cursor": {
          "ref": "8d25df65-9197-4aa1-a938-e3102cf46ab6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5f906479-ca32-46b1-b9e4-f1231ff769d6"
        },
        "item": {
          "id": "82c1b189-d600-4d9c-82f1-2cada34e4903",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d6510a20-963d-40c1-a8a8-7c65b89c2f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e85e3f3-af0d-43cc-8fbb-6dbd11984e35",
        "cursor": {
          "ref": "6ba36ff3-fac5-4cf3-b5f8-238b640c7deb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fbdbf21f-d68a-4e4e-a886-5e4f348462fd"
        },
        "item": {
          "id": "9e85e3f3-af0d-43cc-8fbb-6dbd11984e35",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c95f822c-1d68-476b-9fa6-2375120e292b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e515ec87-eeee-4046-9d48-41d5cbd92558",
        "cursor": {
          "ref": "781c6dae-7aa3-4659-8698-e1ac7bbcf404",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d2cf3aa1-1e2b-4eaf-8120-d64de07bf6ee"
        },
        "item": {
          "id": "e515ec87-eeee-4046-9d48-41d5cbd92558",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cf99feaf-117f-43f2-b961-37f51b9b7a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdd28ce-52e9-427f-afa4-3d91be57c1a9",
        "cursor": {
          "ref": "42dc97de-e1a7-452e-bb79-297410d5fc45",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f0ef2947-be17-4ccf-9507-da973fefe5c3"
        },
        "item": {
          "id": "bbdd28ce-52e9-427f-afa4-3d91be57c1a9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fa76613a-2187-497d-afe8-9c8c056f53a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f82456-9a56-4f86-b4a8-7119b4379f2a",
        "cursor": {
          "ref": "72dbcb6a-2363-4fbe-ab63-ebaca8d26d5f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a7effa6d-2035-4446-a71c-0d54a9396b11"
        },
        "item": {
          "id": "68f82456-9a56-4f86-b4a8-7119b4379f2a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1eb9ae50-0383-4b1a-b121-25889da6539b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95b9e3e-0511-4672-9239-0e9b947e96b0",
        "cursor": {
          "ref": "a6239522-a156-4de8-ae9a-6d91af3b3c36",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "926306d3-126c-48a2-b128-d0fe75cd5802"
        },
        "item": {
          "id": "b95b9e3e-0511-4672-9239-0e9b947e96b0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cb4b050d-7a12-4355-b686-d4bcd329e7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7c472e-ef85-409a-a8de-5a6f156a692b",
        "cursor": {
          "ref": "da12354c-691d-4a4d-a594-55e3f43d6581",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "984eb219-18bc-407f-900a-7456e2efd126"
        },
        "item": {
          "id": "4b7c472e-ef85-409a-a8de-5a6f156a692b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5519029a-a6e7-4bec-817e-d0e83d1a6e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4521594a-6f10-49ca-957a-798b8759a217",
        "cursor": {
          "ref": "3f0e28be-afd4-4061-8786-6eca3e41ce5c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "af6d83a9-a7a7-45aa-95f4-dd731cd0302d"
        },
        "item": {
          "id": "4521594a-6f10-49ca-957a-798b8759a217",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "053ddb68-986d-42b1-90e4-c53ccd61d824",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e4cc17-0283-4039-bd16-857de9e2e091",
        "cursor": {
          "ref": "490ae12c-1276-4e83-8159-da9ebff8302f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0cf107ba-e581-4add-8eef-a20130d2fa29"
        },
        "item": {
          "id": "53e4cc17-0283-4039-bd16-857de9e2e091",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c3101aaf-c6f1-4928-aaaa-439fafffa596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd122d1-fc8a-4a11-ac2a-f9a4a8dc7803",
        "cursor": {
          "ref": "204a77b4-f3fe-400d-82fb-b6c12e6fba81",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "198625c6-2351-4c02-b9da-9943fa599433"
        },
        "item": {
          "id": "ffd122d1-fc8a-4a11-ac2a-f9a4a8dc7803",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0b4347d8-38c8-4b8b-b5fb-5c60ddf099a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74712b1c-553a-4b04-84a9-0237184cfc03",
        "cursor": {
          "ref": "d9a6e218-3434-4666-a83c-7ace4f59dc86",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4f8901df-bd61-49f1-ac10-aa9fb5f90112"
        },
        "item": {
          "id": "74712b1c-553a-4b04-84a9-0237184cfc03",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c5418497-3e68-48e8-b9bb-9db4a67d8439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f56afc-73ff-42f6-8fd4-bb50b5d90e04",
        "cursor": {
          "ref": "ed2a3791-89f1-47b5-b5c2-0769266c855a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ba204a53-13ad-4616-b52e-7e4a217dd2ea"
        },
        "item": {
          "id": "47f56afc-73ff-42f6-8fd4-bb50b5d90e04",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9dd55f9b-c06b-4ca7-ab24-ea0be50e41ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d13fa0-366c-485c-80e1-327a773c3aa0",
        "cursor": {
          "ref": "2f25701a-bd17-4f91-90b9-0c9dec78612c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "83ba4ace-ba1a-4df5-b8d2-a8225216e31d"
        },
        "item": {
          "id": "a3d13fa0-366c-485c-80e1-327a773c3aa0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "874738c1-ef4f-4a86-9de9-01a26b0cf8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23c2274-d2b0-43d9-b7f3-a119ea07494e",
        "cursor": {
          "ref": "ed3dc3c5-69af-419a-b636-b270f0421d2c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1680b448-513c-4eeb-82a4-b5dfc17dfa4a"
        },
        "item": {
          "id": "b23c2274-d2b0-43d9-b7f3-a119ea07494e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "784db992-efec-4913-b6aa-127e11b760bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e87f23-44a5-495a-a699-d6ac31fffcbc",
        "cursor": {
          "ref": "bc32aa24-4ac9-4a87-bbdf-29a8a037712e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "935811a2-1990-4c17-8816-331c4eb7de3c"
        },
        "item": {
          "id": "02e87f23-44a5-495a-a699-d6ac31fffcbc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1555534d-3c26-4c60-bee1-f88a05a913fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eeae8a-3b8c-464b-b1d2-a27d9f7ccb36",
        "cursor": {
          "ref": "a13d3e5c-3d85-4250-b631-1dffc1761bcc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2ca968c3-c75e-484f-837d-5237c090327b"
        },
        "item": {
          "id": "98eeae8a-3b8c-464b-b1d2-a27d9f7ccb36",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "365cf24c-b7de-42b6-9aa0-45373d55a5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff23ade4-862c-45af-8078-82bd2a7e4b63",
        "cursor": {
          "ref": "584d6336-5f84-4bd9-ab2c-65c889d68287",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d308dc0f-8f69-48b4-aa71-4694a084a740"
        },
        "item": {
          "id": "ff23ade4-862c-45af-8078-82bd2a7e4b63",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ce30de7-f431-44d8-96f9-5d570436bc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0a2a4a-1bd8-4483-8dcb-111fc8acd0e7",
        "cursor": {
          "ref": "e732248f-6866-4579-9d5b-dd776a7729cd",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e520717b-00f9-406a-a462-2d59bf863f13"
        },
        "item": {
          "id": "4b0a2a4a-1bd8-4483-8dcb-111fc8acd0e7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4aedb8a4-7e58-4e5f-81ec-1188a42dd32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388f237e-8f5b-4a74-926d-8e430646399d",
        "cursor": {
          "ref": "b347aab5-4675-410e-a97b-71ecddbb9ab4",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a2222f0-2c45-48cf-b238-1eb33cb20b51"
        },
        "item": {
          "id": "388f237e-8f5b-4a74-926d-8e430646399d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7848c065-3f4c-4a6e-9df0-0851c5a2c0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68940833-9b0c-489c-af9f-074ec89a2ac0",
        "cursor": {
          "ref": "9acec81b-d1a7-421c-8757-825752bf191f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "60971797-9158-4c67-85b7-85ed41f1eae8"
        },
        "item": {
          "id": "68940833-9b0c-489c-af9f-074ec89a2ac0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d7a39abc-7512-4f2f-bf07-8fc39309506e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a7643b-be5d-40bc-897e-a23c3c2d693b",
        "cursor": {
          "ref": "7785cd93-9885-4a89-9a06-5f4aa75063e0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7210c721-47fa-4891-8e71-c4abf25881a5"
        },
        "item": {
          "id": "17a7643b-be5d-40bc-897e-a23c3c2d693b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4c71d30a-4856-4dd6-8f9d-9a9a4952bdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935cd518-c1c8-4e6a-84ef-8b5823489021",
        "cursor": {
          "ref": "6f46ca60-2bd6-48e6-b0ae-31defb305817",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5639f87e-4ec1-40d0-ba5f-d833338a4413"
        },
        "item": {
          "id": "935cd518-c1c8-4e6a-84ef-8b5823489021",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "607f386d-490c-4d35-aa24-8a7098dbb9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9187ddb2-2942-4713-a152-8ea987359c9d",
        "cursor": {
          "ref": "fd5849c5-4ac7-49ee-b4fc-43ca7b524643",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a4288931-bf13-4407-8d6c-763fc249f9f1"
        },
        "item": {
          "id": "9187ddb2-2942-4713-a152-8ea987359c9d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "61cad632-72a3-4e46-81df-02e835991b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beebbfc-87ad-4735-826b-3137b4e0c484",
        "cursor": {
          "ref": "95afa762-fe32-417a-b70b-9b31fc445889",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e48f1b1d-c069-4855-970b-b4dd39c447f3"
        },
        "item": {
          "id": "6beebbfc-87ad-4735-826b-3137b4e0c484",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b5c05d78-c61e-460f-a595-209a697242fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2505ba3a-60d6-4067-ae9e-2ff1cbee99a6",
        "cursor": {
          "ref": "de277310-9b89-4248-97bf-2dda698313b9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1a0f5543-24be-4c8b-a782-3690d88b53c9"
        },
        "item": {
          "id": "2505ba3a-60d6-4067-ae9e-2ff1cbee99a6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6c3bbd39-666e-4c50-8052-92937654a196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274e7871-336d-4e1a-8c26-5e3be1b13e1d",
        "cursor": {
          "ref": "5a26e362-1cbb-4657-a3f3-a3ab0cedcc4f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3927c201-1798-43b6-9e58-7880e23f4289"
        },
        "item": {
          "id": "274e7871-336d-4e1a-8c26-5e3be1b13e1d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ed0bc2b5-17df-4a1f-b894-101d6778d2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53513b52-15c6-4f4b-8a21-5a6be00ee2ba",
        "cursor": {
          "ref": "e9b21e9e-2e93-44f2-b553-b73a0e44a63b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9daf4500-1241-4f00-9b75-33f939cc7f40"
        },
        "item": {
          "id": "53513b52-15c6-4f4b-8a21-5a6be00ee2ba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "47ab91a6-a0b6-4669-988a-eac367629f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d144453-e564-4570-a202-0995997cf0b2",
        "cursor": {
          "ref": "9ed1a197-fd7d-4171-b16f-714e227c9cc5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "56aa8b4d-9380-40f9-8c78-7c858cc13919"
        },
        "item": {
          "id": "0d144453-e564-4570-a202-0995997cf0b2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "80b27748-b1db-461d-92d1-f50cb019a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1180f0-fa88-41f4-8dc3-6cbfaef83baa",
        "cursor": {
          "ref": "a31e4062-9e5b-4981-bb16-dcda0846a0b9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "11b11339-c1a1-4038-bbfc-7eded54c3385"
        },
        "item": {
          "id": "6f1180f0-fa88-41f4-8dc3-6cbfaef83baa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e9ba7fc5-a356-495c-b390-d9776be29e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb7a5e1-4571-42e4-878c-22c124e75780",
        "cursor": {
          "ref": "e58d460d-a566-44e8-a9b9-0d2864968f89",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "017f93c6-0f9d-4af2-a535-5263d7f19df9"
        },
        "item": {
          "id": "9fb7a5e1-4571-42e4-878c-22c124e75780",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c6aaabff-7f34-4d97-9f05-e4811faff7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01078e9-17c9-4550-aa07-d508fc3aa7f9",
        "cursor": {
          "ref": "b49d84cc-12e3-486c-9e5c-7e96f6990601",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e1268934-4cb1-4f09-b6d4-f7959228e236"
        },
        "item": {
          "id": "b01078e9-17c9-4550-aa07-d508fc3aa7f9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "844e7e4e-142b-412a-aa9f-5cd6ec3eb3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b136247c-a8cd-4b62-b1fd-3492b9260b66",
        "cursor": {
          "ref": "da40c5b4-1c13-486a-9baf-86e068535a88",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a8f41a58-4045-47d6-8775-59f56b4ebc1e"
        },
        "item": {
          "id": "b136247c-a8cd-4b62-b1fd-3492b9260b66",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b6a76dd5-35fd-4910-96bd-b13cece0b77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae149530-19b2-4d42-9dda-2ca80e227616",
        "cursor": {
          "ref": "6e3829fb-5e1f-4def-b1fe-ab7c0692ffb3",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "de63b003-ca67-4365-a5ab-70a181aedcc6"
        },
        "item": {
          "id": "ae149530-19b2-4d42-9dda-2ca80e227616",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7382b86f-1ade-442b-86fc-8e45bb91aee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc777393-3987-4983-81f8-b7c528299e3c",
        "cursor": {
          "ref": "369b6b6b-3fb3-487f-a6bf-70f929b35182",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "07eb36fd-b5d3-487f-b3a1-141607725514"
        },
        "item": {
          "id": "cc777393-3987-4983-81f8-b7c528299e3c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4fd7c3cc-4b00-4964-a321-0e27bee1c80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde6cfc9-d901-423d-abd5-8c30230438c9",
        "cursor": {
          "ref": "ecce7a9c-7170-48aa-8197-2dcb4f42a8a4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ee463e00-d7c0-457f-a15c-a98905bbe2f8"
        },
        "item": {
          "id": "bde6cfc9-d901-423d-abd5-8c30230438c9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0fde086e-5cfd-423e-83d0-ca9a83e7ac48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91192f30-023d-489f-973d-0312cdb8f0b9",
        "cursor": {
          "ref": "27e3473b-505c-416a-97bc-5fa96f170d22",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "144e33f0-5d49-4feb-b980-ba162c407905"
        },
        "item": {
          "id": "91192f30-023d-489f-973d-0312cdb8f0b9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c2615598-52c5-44a4-ac55-ab307d216880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08dc34c-aab2-4fb8-b2c9-af80be579cfa",
        "cursor": {
          "ref": "87ab34e8-2507-4030-8bb5-0de2079f1c5e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1aeb5742-52de-45d8-a00f-a875a22591e8"
        },
        "item": {
          "id": "d08dc34c-aab2-4fb8-b2c9-af80be579cfa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6d98a662-1b10-4607-9c7f-d4e2349f9b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0bd480-bbf4-44bf-8d1b-dd80b4be6ef8",
        "cursor": {
          "ref": "1cd87696-ad4d-4545-803c-975ce394b77a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d9a0ac9a-4fc7-4850-99a5-929dbb610a87"
        },
        "item": {
          "id": "3f0bd480-bbf4-44bf-8d1b-dd80b4be6ef8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4de991c3-ebf8-421f-a287-2fddb0ddce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14223b31-cac6-41a6-87e5-a553ee077758",
        "cursor": {
          "ref": "80810893-cb80-45fa-a914-1b6a9da65ad0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9ef9c4c4-2614-48cf-879b-23f8386818bd"
        },
        "item": {
          "id": "14223b31-cac6-41a6-87e5-a553ee077758",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a2d2d3bd-6e22-482d-a793-b966c2a55185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e8e408-6e66-461c-a1fd-a18e4101bbbb",
        "cursor": {
          "ref": "ab168b5c-4b22-49ed-950f-25d6245e396b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4d89b642-135b-492b-9a7b-16f8f887e6e5"
        },
        "item": {
          "id": "c1e8e408-6e66-461c-a1fd-a18e4101bbbb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "694c2cf1-86f3-453c-9e0d-7199ca381fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7de6a36-94f0-4944-9805-25593754dd70",
        "cursor": {
          "ref": "7fa5c82d-09c6-4721-affc-0a81c04d714c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "305b3598-aedb-469f-b317-8397162d8896"
        },
        "item": {
          "id": "d7de6a36-94f0-4944-9805-25593754dd70",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bfaff9ba-8e22-4eec-824f-12373c09f592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faf507e-be8c-4ffc-9b37-37bcf6f1dd1f",
        "cursor": {
          "ref": "12a4942f-73b7-414c-aaf7-fefbd84ed243",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3496b13b-3ef2-4e18-afbd-021aa0b4bf8f"
        },
        "item": {
          "id": "5faf507e-be8c-4ffc-9b37-37bcf6f1dd1f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e0bf19bd-bedf-40fe-9c92-2c23ec4cc9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a9c0e0-b8a3-4c4a-b77c-66728d91064b",
        "cursor": {
          "ref": "38c6ffc1-efe0-4b55-bbad-221bbd44c1a8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7bce5cbe-38d1-4886-89fa-f165d3ad5707"
        },
        "item": {
          "id": "98a9c0e0-b8a3-4c4a-b77c-66728d91064b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5f5868a9-55a1-49c2-9705-8bfcf5fd2c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe8aefd-9e37-44a7-8922-1e0f358c7d54",
        "cursor": {
          "ref": "812b23d0-d610-482a-b93b-1dbadd86d9c6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "30bb3b40-7e7b-4114-89a7-32df60ab1047"
        },
        "item": {
          "id": "abe8aefd-9e37-44a7-8922-1e0f358c7d54",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "df96cf36-2d66-45ab-96fd-3198ed51f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f408dc-fbed-4a9d-a948-ab46151ea360",
        "cursor": {
          "ref": "11b72d10-2f3b-4812-9b64-c487784df3d5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2592afde-e25c-4069-876b-d30863a35ce7"
        },
        "item": {
          "id": "b0f408dc-fbed-4a9d-a948-ab46151ea360",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b630f0c1-aa02-4a87-b4ea-99e30eec060f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84d1463-8d7e-4a68-86fa-8a46c23cf30e",
        "cursor": {
          "ref": "3fa1d5e0-c3ce-4b5d-a0c2-c2ef69947879",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "503fe95e-5152-457e-9674-b26f053be989"
        },
        "item": {
          "id": "f84d1463-8d7e-4a68-86fa-8a46c23cf30e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1af9d1ce-73fb-43a0-9cd9-0b842fe6ab51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac44f60d-69b3-45da-a4ef-6e1f85750b2a",
        "cursor": {
          "ref": "7df00e25-af36-4718-9ef8-07cd7d6801e9",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4ac292f2-8d64-43a4-abdc-6424a123c825"
        },
        "item": {
          "id": "ac44f60d-69b3-45da-a4ef-6e1f85750b2a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b107215e-f319-459e-bf4f-09fb31e11865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a541c63-3a14-439a-a15e-c897e73e053d",
        "cursor": {
          "ref": "12f751b8-eb03-4491-937c-c7d64c561b70",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9136f849-2adf-4dc9-ac13-058c09f04ce8"
        },
        "item": {
          "id": "9a541c63-3a14-439a-a15e-c897e73e053d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "868bf009-faf9-4e55-889a-724beeaac83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a646903e-ac78-4df8-9541-fac338f99fbc",
        "cursor": {
          "ref": "df4b42b3-1205-4ea1-8c5b-52197ba49402",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0cea5fe7-ac8d-4043-bbce-ca6c1a730763"
        },
        "item": {
          "id": "a646903e-ac78-4df8-9541-fac338f99fbc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "96524d57-dc33-4b0f-8c14-9f89575b0048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b18521b-900d-408e-aa11-2a922bc9ae8c",
        "cursor": {
          "ref": "21a20ea4-cffc-466d-aeaa-52caf5c309b6",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f18fee22-96f2-4727-b2ad-1006241631ce"
        },
        "item": {
          "id": "5b18521b-900d-408e-aa11-2a922bc9ae8c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f9b3bc0e-56bd-44c9-8e48-4f8ccd0f8508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bea48b-7cbe-4779-bc1a-34465e282bb6",
        "cursor": {
          "ref": "3006cab6-44ea-4934-89ab-21d7587acc58",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6ae370f2-9f4d-4a2c-8844-78816a552b8c"
        },
        "item": {
          "id": "d2bea48b-7cbe-4779-bc1a-34465e282bb6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dae56e7b-89f8-4d76-922b-bf2c10d16046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b8478f-867d-4ca4-a21b-f7436def4e67",
        "cursor": {
          "ref": "3e12c9dc-313b-4fd3-a720-679e3df7baa7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "91581f1c-3be8-4737-9b15-c81cca7dcc72"
        },
        "item": {
          "id": "54b8478f-867d-4ca4-a21b-f7436def4e67",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7a9a255c-200f-46aa-8945-722c8ae42be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8d9180-dfba-4029-8a54-14b50ec96773",
        "cursor": {
          "ref": "90a9cc2a-8008-4c32-b18e-a5717589a8a3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2d6c40ec-09de-4bcd-86da-659136b218f7"
        },
        "item": {
          "id": "8c8d9180-dfba-4029-8a54-14b50ec96773",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a9510e65-cb8f-45f2-9ee3-94f20ef7db3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1ed7d2-bed3-4a77-8834-a01d6e720163",
        "cursor": {
          "ref": "d210d7df-95b8-4d96-8aa2-04796c0ae133",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "24bf50f5-b297-4547-8289-5ea3846b4952"
        },
        "item": {
          "id": "ea1ed7d2-bed3-4a77-8834-a01d6e720163",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "992c7814-7efd-49cf-9f06-d69e013a1857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9925ccf3-3500-4889-8dec-448353cf0c76",
        "cursor": {
          "ref": "a5e2916b-6258-4593-994e-4475a75999c8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "36615a4e-ab2c-43bd-b1ca-8c4a6b99f2b6"
        },
        "item": {
          "id": "9925ccf3-3500-4889-8dec-448353cf0c76",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c6f91bdb-9e6a-4f2e-9ce3-4c08bd16e625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113d04a6-a8b1-4667-92a5-c21ce0a28bc9",
        "cursor": {
          "ref": "4379da82-c79e-4ccd-81b3-371898293fb9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "987f3717-70dd-4b2c-a662-f989a5bdd6e0"
        },
        "item": {
          "id": "113d04a6-a8b1-4667-92a5-c21ce0a28bc9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a0221399-a399-4fc9-8f5d-a108469ea448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd478d1-7ae1-4a5e-ba5e-3192231bb7d0",
        "cursor": {
          "ref": "d941b3ca-6a25-4f41-bdfd-06da47d8d4dd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1b44f387-f605-4e62-9250-ac1ff18fbf20"
        },
        "item": {
          "id": "1dd478d1-7ae1-4a5e-ba5e-3192231bb7d0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c4cf6abc-c717-4f9a-8633-46a508ac6fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7e3a24-e6da-4742-a8c2-2fcaed145068",
        "cursor": {
          "ref": "8d936989-ef11-4199-bec1-1e7006e25da4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d15d781e-bd44-41b4-9fb5-c40f69efd39e"
        },
        "item": {
          "id": "ab7e3a24-e6da-4742-a8c2-2fcaed145068",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d0342a1c-a57d-4b27-8cb5-d5406d122d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a59189-c9d9-412c-95ce-3e15c6d65ace",
        "cursor": {
          "ref": "a4bdd828-f76d-4deb-bf4e-35441db35e6d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dfe8daed-ea51-44ab-9931-a6273742f0b2"
        },
        "item": {
          "id": "13a59189-c9d9-412c-95ce-3e15c6d65ace",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1b072839-61da-47d9-b590-363b963dbe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c48f40-d44b-4483-9ae8-b344dabf4cfa",
        "cursor": {
          "ref": "98f9af97-9e0a-4d93-81bb-ae62f7b0c8c8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "282840a0-c975-4dd9-9b5f-ae081d30c5f3"
        },
        "item": {
          "id": "e6c48f40-d44b-4483-9ae8-b344dabf4cfa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eb04ade9-0fa3-4770-84f2-f911d570ada6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e1396e-1914-41bf-843e-fcd0014465fc",
        "cursor": {
          "ref": "636852ff-b422-4978-997c-73b3080e28bb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4e8724f2-95aa-4327-a646-7f61b1f919d6"
        },
        "item": {
          "id": "f9e1396e-1914-41bf-843e-fcd0014465fc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b78469db-b6c6-445f-887f-1330437ec8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cebee1-2485-485c-bda1-66c702f1c0e7",
        "cursor": {
          "ref": "7e93763a-5f6a-4c77-8dac-92fa5f09f7e4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "840e5dd9-95d7-463a-aed2-420073fb09d7"
        },
        "item": {
          "id": "e7cebee1-2485-485c-bda1-66c702f1c0e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a0fe93a9-2b8c-40dc-a457-1c84b6d21bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c205bd9-68bf-4a46-befc-a4953c349f94",
        "cursor": {
          "ref": "1da4c8e4-f079-4ae7-8bab-5348f14064fc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a36ca78b-9858-4e42-b344-19ace41b776f"
        },
        "item": {
          "id": "7c205bd9-68bf-4a46-befc-a4953c349f94",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3bbeeedf-3e7f-44db-a61a-36b18256372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9009ab8e-b49c-40c8-9b93-907117a96dbb",
        "cursor": {
          "ref": "242864c0-8947-44ae-8695-188f847ba60f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5f156c1d-d998-4e2a-bdfa-4bfcdccd06e0"
        },
        "item": {
          "id": "9009ab8e-b49c-40c8-9b93-907117a96dbb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9effaeb4-3dd3-45e9-9066-48ad074ec8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0a7604-02cb-4968-8b0b-f4f7e6b8bd73",
        "cursor": {
          "ref": "4c40d9be-26d6-40c3-8e6a-0c9b90b6f8bf",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fd1915cc-a4c6-4da7-98fb-785a517c3953"
        },
        "item": {
          "id": "6b0a7604-02cb-4968-8b0b-f4f7e6b8bd73",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bb8f0dd1-f97c-4818-b281-5a8e8851ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de91f1bf-a572-4f81-b424-dd22c41f266d",
        "cursor": {
          "ref": "ab89c195-19b2-4ed4-8a05-d74625f3cfb3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2b8ca600-7499-4e20-b7ae-81b823f14c59"
        },
        "item": {
          "id": "de91f1bf-a572-4f81-b424-dd22c41f266d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3fb75ff3-3077-42a4-b250-4f75d7158a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766ff4a1-6a1e-4268-8250-db748bd0c1c8",
        "cursor": {
          "ref": "121bbe63-293a-437a-8aaa-d1603986fbf5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "17eedb12-d1f2-4e87-b127-b84e23731543"
        },
        "item": {
          "id": "766ff4a1-6a1e-4268-8250-db748bd0c1c8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1b203b3e-278a-403a-a822-6d8dc998a6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925446e2-818a-4fef-abeb-894c4209abf8",
        "cursor": {
          "ref": "939035c5-9cf3-4ad8-9cb2-67e40e797bfc",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "01d33e3e-04cc-4068-b731-6274cae71071"
        },
        "item": {
          "id": "925446e2-818a-4fef-abeb-894c4209abf8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cdde116d-8cb6-43aa-a74a-7b561f454305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e01024e-2e1c-42b6-aa8a-0d76574fe3e4",
        "cursor": {
          "ref": "0d3c3df7-b62f-48cc-975f-75bd3e0e9783",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ba266b0f-f952-466c-8867-85c6149aa29f"
        },
        "item": {
          "id": "5e01024e-2e1c-42b6-aa8a-0d76574fe3e4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "798c1f07-25c4-474c-8f11-c312d8278350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d04686f-9949-4621-9465-9b15f94b1c4b",
        "cursor": {
          "ref": "f19aa991-5a20-4b41-8bd1-2b35f43cf3a7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "74ac07ca-1fea-44c7-b5f0-06db974266a3"
        },
        "item": {
          "id": "5d04686f-9949-4621-9465-9b15f94b1c4b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "12c73c76-b1a6-48e6-b7e7-7aefae2874ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c193fe1c-3192-402c-9c78-9c97131f29a5",
        "cursor": {
          "ref": "616c4369-9855-4a24-8905-6fdc30c81ffc",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7a9564a1-588b-4953-a12b-bd35a07c80f0"
        },
        "item": {
          "id": "c193fe1c-3192-402c-9c78-9c97131f29a5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "72816cff-3f8f-46c7-806a-abe167880792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c0c8b8-bc22-477c-a3ff-956ed5bfaff9",
        "cursor": {
          "ref": "4aa8860b-f805-4d79-b18d-ea913f4e55f9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "99765d58-134f-48e4-9dff-cb7659ade824"
        },
        "item": {
          "id": "88c0c8b8-bc22-477c-a3ff-956ed5bfaff9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "12b16356-583a-4226-832b-66b44b8c9bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d20bfdf-ac89-47b2-aacc-0aa0279b2dab",
        "cursor": {
          "ref": "7edbefde-96e4-4895-8b42-51f04004200d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "94801a2c-c905-4598-b47d-3b650f4fd432"
        },
        "item": {
          "id": "4d20bfdf-ac89-47b2-aacc-0aa0279b2dab",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "365d28f1-440f-44b1-ab7d-77f5545d781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e925feb-b84c-4a5c-b3ee-0b5d0ec20398",
        "cursor": {
          "ref": "19436cff-1816-44bd-aa3a-e982a6ae4d82",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0dbdb11b-e308-4920-b40b-e620b7a1d917"
        },
        "item": {
          "id": "0e925feb-b84c-4a5c-b3ee-0b5d0ec20398",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae566b6a-156a-4ca9-b9f2-2d211932a0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668359e0-94d7-41cc-9e88-aaa2e24361e5",
        "cursor": {
          "ref": "18461ee5-8b8a-40e2-a8a6-3891d5e15069",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1765569a-fdda-4162-b1ea-2812e8550f04"
        },
        "item": {
          "id": "668359e0-94d7-41cc-9e88-aaa2e24361e5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c68c14fe-9089-4ef8-a737-f6f344b409c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea231189-57b2-400d-bc8e-c3c18209a8db",
        "cursor": {
          "ref": "e9f2fdcc-6843-4705-b86a-b7a5c201d3bd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3d51118f-9ecb-4939-9136-1a660042f601"
        },
        "item": {
          "id": "ea231189-57b2-400d-bc8e-c3c18209a8db",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "91a4e5c7-e50b-4949-b55e-05993512616c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41d3f87-4174-4c7c-88fd-c68178ae3cf6",
        "cursor": {
          "ref": "00e22dc9-1c3a-4a22-9024-250e1fb3acf1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4542b182-da7b-4838-891a-9b0a125249ec"
        },
        "item": {
          "id": "e41d3f87-4174-4c7c-88fd-c68178ae3cf6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bd0eebc6-0115-4416-9b01-8419fc61d0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1478ba27-cb91-43f8-9a2d-fdc825da901d",
        "cursor": {
          "ref": "11fffcba-ffe5-4f97-9ac1-d4a617c4fa28",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4d3c0638-7168-4910-af90-01485288ac77"
        },
        "item": {
          "id": "1478ba27-cb91-43f8-9a2d-fdc825da901d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b5c4cf19-68af-4fc9-8e13-ff930d97d82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d676e9-6b4f-4da5-9cf9-ac051e821782",
        "cursor": {
          "ref": "e0cc5cc3-700d-4a28-9097-9e4da3fe8ef4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "be4992a1-bee0-4508-b7b9-edcf0897f763"
        },
        "item": {
          "id": "d7d676e9-6b4f-4da5-9cf9-ac051e821782",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "188ec545-0f3a-494f-a28a-3daebbc99ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c94440-efd4-4ca7-8794-5162d35a307d",
        "cursor": {
          "ref": "f1ecfbb4-3a93-4991-92ec-996f0ac9d69e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "de2d8b8f-e8a7-411e-8865-70ad1b75b8dc"
        },
        "item": {
          "id": "51c94440-efd4-4ca7-8794-5162d35a307d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "65db3788-a90d-47de-976b-09df4b074935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c941e0-7545-4dc8-bc49-887070e22918",
        "cursor": {
          "ref": "f6e3bdd5-531f-446b-8a8c-d68e77fe4639",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cecb2795-e217-4826-8e8f-131af50a88f3"
        },
        "item": {
          "id": "03c941e0-7545-4dc8-bc49-887070e22918",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "526177ed-f2ee-4f49-9ac4-27860ec8f067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974ab0aa-8e43-4727-adcb-89def8a972f2",
        "cursor": {
          "ref": "05608eb1-8c9a-4108-91d6-4eacbdfdf647",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c2cb067c-8b48-4964-a4ea-cc64a13e0f96"
        },
        "item": {
          "id": "974ab0aa-8e43-4727-adcb-89def8a972f2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6afbb5c1-b87f-4456-94fe-7fda2f059115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57deeaa6-2994-4ad6-8d98-7ef326b35a5a",
        "cursor": {
          "ref": "98873969-74c2-42bd-88f8-82c3e2830a65",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c77e614e-a917-4e59-b951-469c2a7f137b"
        },
        "item": {
          "id": "57deeaa6-2994-4ad6-8d98-7ef326b35a5a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f40be9d2-1538-452a-8706-953a3082b0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bccc420-3be2-462d-bd8b-2323121bf7e2",
        "cursor": {
          "ref": "36a7fe4c-8f1a-4b13-a018-2e0eae19b52f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eb95c380-96b1-4954-8832-316ddcfe6e76"
        },
        "item": {
          "id": "4bccc420-3be2-462d-bd8b-2323121bf7e2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8c234912-9714-428e-873a-b3c5c95aa456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43ddf6d-9a4d-4dde-96c7-23cb7da1e3d3",
        "cursor": {
          "ref": "58755df9-9e86-4a1e-9f43-3a7b95eebcd9",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ecbe998a-48d1-4d35-9016-39cf61bb0700"
        },
        "item": {
          "id": "e43ddf6d-9a4d-4dde-96c7-23cb7da1e3d3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "827a8d3e-9ceb-45c7-b765-17e0a761e362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce82f87e-048c-4d01-98eb-e9ad3afcf163",
        "cursor": {
          "ref": "90145e88-66f7-45c6-9945-12e4cd6f4a2c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b909806d-4452-48eb-a6b7-a8204da84e1c"
        },
        "item": {
          "id": "ce82f87e-048c-4d01-98eb-e9ad3afcf163",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "588ba94e-de3d-48c6-b1fd-073f04d22829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6584c5-d671-494c-9253-686ad3b0b9d9",
        "cursor": {
          "ref": "0f8904cf-7fff-43c5-bf5f-33a7fb189c0a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "704093d9-5185-44ca-8f53-48d3d9ca5f40"
        },
        "item": {
          "id": "fe6584c5-d671-494c-9253-686ad3b0b9d9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a8b50ae8-b414-47aa-b12a-a5f5f0c02c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb1b4fc-8b0e-461d-8432-e71385104dd6",
        "cursor": {
          "ref": "b08a81b3-07c3-4d7a-96a6-919dedeadf25",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8502302f-a28d-4fda-ba56-9d0122045a71"
        },
        "item": {
          "id": "3eb1b4fc-8b0e-461d-8432-e71385104dd6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "547b92ec-2f70-4074-93a3-6497763868c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1feeeab2-5014-4a23-9978-7b05730652b1",
        "cursor": {
          "ref": "310d3a62-458a-47b0-b63e-950d9c0c5ecf",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7b49ba6c-3b28-4bf9-a48d-6abb33c133e7"
        },
        "item": {
          "id": "1feeeab2-5014-4a23-9978-7b05730652b1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "698f7ad9-5e59-485e-9cf0-6791430b904a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fecb4c-883c-4010-bd29-553ef2678ab2",
        "cursor": {
          "ref": "b19fd4f1-80a6-491c-b6de-fa082b24540e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "911457e0-b58a-4845-a57a-a4fc439407ab"
        },
        "item": {
          "id": "43fecb4c-883c-4010-bd29-553ef2678ab2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bfc72249-57a5-41e2-9d85-f35d5cfd95d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c839e5d4-6c75-4630-bb69-d0adc35a11ca",
        "cursor": {
          "ref": "22043213-7f64-43cd-99fd-638e5fde90ce",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "85814b04-9e82-4182-85d7-1c6a8bd5130a"
        },
        "item": {
          "id": "c839e5d4-6c75-4630-bb69-d0adc35a11ca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8994cef2-f9f3-4b7d-bb7a-adb63bdc9c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d3d562-b45f-48ce-b4aa-8a057f8eb326",
        "cursor": {
          "ref": "b704de6f-2f15-4b05-819a-5e46ed46cd5f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "024c6b7a-8425-4ee7-adea-cc6bd197d7ba"
        },
        "item": {
          "id": "29d3d562-b45f-48ce-b4aa-8a057f8eb326",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "78ff2fee-66ca-471e-91c3-30d6fd9c9006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09761cc0-6438-4e9f-9768-7d0b31e7daa1",
        "cursor": {
          "ref": "4ae71e2c-27b1-467d-8a9d-77b9ecf79b49",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "63af5c4a-82fc-41d4-b8a3-7af0df8c2195"
        },
        "item": {
          "id": "09761cc0-6438-4e9f-9768-7d0b31e7daa1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "75000820-5fb2-4eb0-8d07-49051a7bccac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f3554-a8eb-441a-b97c-7c06fa02a10f",
        "cursor": {
          "ref": "9cf51576-b4d1-47d1-ab59-797091ae7488",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "62461fe0-9d39-451e-bc7a-eda4c588882c"
        },
        "item": {
          "id": "ae5f3554-a8eb-441a-b97c-7c06fa02a10f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8f242096-6f3e-4b1d-a06d-4eb4e181ea35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af3d122-24db-4983-8d8c-73c568411a1d",
        "cursor": {
          "ref": "e5b4fe83-39f0-4201-8f71-2467ea10453a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e61ade30-6d61-4d09-a895-d4f7e693cbf0"
        },
        "item": {
          "id": "7af3d122-24db-4983-8d8c-73c568411a1d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c15b3ec8-729e-4b2c-8814-00dc08968dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1fa15e-c80f-4007-b1df-767379254794",
        "cursor": {
          "ref": "387cd095-2067-456e-83c7-d90d693ffa9d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "49f0c223-4d91-4b28-8b9d-5fc613f42772"
        },
        "item": {
          "id": "7e1fa15e-c80f-4007-b1df-767379254794",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98e045fe-1d73-4f26-a9d8-901be659ec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898caed7-5467-4b73-8b5c-e8964c308f6a",
        "cursor": {
          "ref": "861d35c6-5ecc-4d53-992f-119898f6e428",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "75a5433e-776b-4255-9e05-179feb083031"
        },
        "item": {
          "id": "898caed7-5467-4b73-8b5c-e8964c308f6a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1a094ee2-186c-435a-a8a1-6c01bf001589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775ce267-0fcc-49e3-83b4-e3649ad5bab9",
        "cursor": {
          "ref": "739e0ce4-3f07-486a-9b6f-ebe963611459",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d4f2cabc-2e3e-4219-a20d-f9821ae6e747"
        },
        "item": {
          "id": "775ce267-0fcc-49e3-83b4-e3649ad5bab9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "10da9256-d224-4301-afef-a1667983d77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee040df-0faf-4174-81f5-db95630a7311",
        "cursor": {
          "ref": "a61673cb-a54b-4773-8153-b1f07084871b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bd63b74c-9901-4710-a688-a5f166f4bfa0"
        },
        "item": {
          "id": "cee040df-0faf-4174-81f5-db95630a7311",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e2a366b6-82a5-41cc-8a43-ae30aad86bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5e405b-69bd-4bfd-90e4-306dd16e1625",
        "cursor": {
          "ref": "8e24844f-007d-4f52-a1ae-ae318b490417",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f9ec6ca4-7e37-4522-a266-131724b60fd6"
        },
        "item": {
          "id": "1a5e405b-69bd-4bfd-90e4-306dd16e1625",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e4f97781-75cc-4c90-ad98-a3a931c0078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e73954-7a40-4ae9-aed6-32817e236ee1",
        "cursor": {
          "ref": "c357aacb-f08b-4272-8938-f49060b80ccb",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e00411ff-b2bc-40a2-8315-71efa1e724ed"
        },
        "item": {
          "id": "69e73954-7a40-4ae9-aed6-32817e236ee1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f9968b92-2e7f-4305-8999-bcf8657f61c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d56eeb-2267-49c3-90c6-eab5a9b0033a",
        "cursor": {
          "ref": "e53fbd2f-509f-4a7d-82d2-01348961fa28",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "db32f663-a483-4b1e-8e5b-46df45d3565f"
        },
        "item": {
          "id": "a4d56eeb-2267-49c3-90c6-eab5a9b0033a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e46387f4-ddf6-46b8-8ffd-fa8e1be22a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0786029f-5c9a-47e6-a9ae-658a91502d08",
        "cursor": {
          "ref": "b6bacf6d-b246-48d8-8566-537d29a4cb2a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bcd77b9d-50c5-4933-9245-a9568946941e"
        },
        "item": {
          "id": "0786029f-5c9a-47e6-a9ae-658a91502d08",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eab009ff-dc43-42dd-b90d-25d4a95f25aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5357b5af-152d-4b48-8882-3664f50b4239",
        "cursor": {
          "ref": "82824452-a993-4d25-8996-784f81b05459",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d527b325-1f57-44d5-b856-f8486ab7a656"
        },
        "item": {
          "id": "5357b5af-152d-4b48-8882-3664f50b4239",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "36949cae-78b3-4eb3-a674-2fe376e63099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed566271-e5ae-4bac-a711-c0007a62bf06",
        "cursor": {
          "ref": "df8f3587-eed2-4c9d-9aee-147cc7fe9f88",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a435d66b-7fc3-4255-b94d-9b45ede44dec"
        },
        "item": {
          "id": "ed566271-e5ae-4bac-a711-c0007a62bf06",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ad36558d-e8df-4a49-ba91-b7cd781a92a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec9fa92-1fd5-4b62-beae-c265d6183500",
        "cursor": {
          "ref": "a60ebd16-d9c5-4907-97b2-a2f556032e74",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "72b323fb-e3dd-4550-b864-6c39b1a37062"
        },
        "item": {
          "id": "dec9fa92-1fd5-4b62-beae-c265d6183500",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ae092637-122c-4a9a-b5f3-a7386acca4e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ac30c5-f514-4fe0-99bb-f4c40489d3d5",
        "cursor": {
          "ref": "a3e072bd-73d6-4e70-922a-860e1317ca87",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54dbe50c-5c76-4086-9422-c26bf9c2c2a5"
        },
        "item": {
          "id": "f7ac30c5-f514-4fe0-99bb-f4c40489d3d5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63a63efb-553e-4fa4-939b-7c3790d81ed8",
          "status": "OK",
          "code": 200,
          "responseTime": 2147,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "145b6c16-7d71-4737-b8bd-3e648e89e8ce",
        "cursor": {
          "ref": "37fd2832-7a9f-47c5-ba7e-6ebc55b36d0f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6a82fb16-f4ed-4d56-9b6c-9e980a5ed6a3"
        },
        "item": {
          "id": "145b6c16-7d71-4737-b8bd-3e648e89e8ce",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9c57723b-ee64-4d84-acc6-a73fe19aac02",
          "status": "OK",
          "code": 200,
          "responseTime": 3366,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e7213a-2c4a-4d8b-9ff1-e15e2669ac4c",
        "cursor": {
          "ref": "92d0da5b-5319-4be4-9cd1-16f9f672cf28",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e2c44e8-2de8-46a2-a6df-7f73b41e4c20"
        },
        "item": {
          "id": "53e7213a-2c4a-4d8b-9ff1-e15e2669ac4c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a3e7907c-8a4e-46ec-8f3d-f99611068c5f",
          "status": "OK",
          "code": 200,
          "responseTime": 2332,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fd2e53-d6f8-4dff-9df8-d12987ff76c9",
        "cursor": {
          "ref": "7250ff75-df30-45a1-9abb-72f46e7967c5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ff1b4ee3-1fab-437b-97d6-3b64d2d391bb"
        },
        "item": {
          "id": "42fd2e53-d6f8-4dff-9df8-d12987ff76c9",
          "name": "presentations:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:248)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:248)"
            }
          }
        ]
      },
      {
        "id": "2da7b529-a861-43e3-8343-09f7203fd2af",
        "cursor": {
          "ref": "d8b35e28-a4ee-42c1-88aa-a61af270f171",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7cff27a5-5f72-40ba-b4af-fc40439d74db"
        },
        "item": {
          "id": "2da7b529-a861-43e3-8343-09f7203fd2af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:249)"
            }
          }
        ]
      },
      {
        "id": "bae03a8e-8d42-4f7f-ad7d-928889fdfa4b",
        "cursor": {
          "ref": "09c1691f-5fc8-4168-8dbc-1be74a05c0a2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "70b585f2-8e62-4521-91a0-030c2b0ffd4d"
        },
        "item": {
          "id": "bae03a8e-8d42-4f7f-ad7d-928889fdfa4b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:250)"
            }
          }
        ]
      }
    ]
  }
}