{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "16943a20-46d4-4510-9158-b19a31f344e6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "be90ad33-b121-43f0-a24a-5029e7c66c59",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02c4360f-26a9-4c89-9687-72d0ca4fb258",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d3c81283-1c6d-443a-adf6-559f88d8ec57"
                }
              }
            ]
          },
          {
            "id": "02570318-6e41-4aea-b941-7e4a97008856",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53f25ab2-8385-4d31-8c51-825f9f303ef2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f458824e-15a6-48b6-bed3-b8500e7b9d67"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1d028feb-44f9-4980-87f8-012327bb2111",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e0904e73-e222-4e23-ad41-bb557a3c0272",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1183583-15e0-46be-8af3-8de8dedf1e4f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "280b2644-c5b7-4d1f-9761-5cd1605dec1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f5a3bde-79e0-49eb-a52b-5bd8ff7d7d54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9af0956a-3a0d-4917-ab1c-649ca3cd1745",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e911f2a1-9566-4505-91f0-6d12a1859bad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3f27a33-ece5-4935-9fb8-e5c3b9ab1ccd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9de1ccf1-fa8d-4a0a-a24f-11955411415c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecd5bd65-51cf-4c45-8197-392562c991b1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "06d4a510-9b31-4fac-bf5b-96a3641644cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0042fc8-94c9-4781-989d-b109108e7053",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "262aa6ea-8d59-4ad7-902a-c746f003040e"
            }
          }
        ]
      },
      {
        "id": "fa8fb72c-718f-42af-86d1-0ac06948c54a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c67c7d7b-32fe-419a-9327-404b36b7c099",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00b87f74-b65f-4f60-89fd-12cdbea7c2e9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15f383d7-a882-42ae-8320-a33c070cef4a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455cc744-36ae-4df6-8103-83bc5e1a566e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bac8bd2e-fc60-45d3-8720-86b657999565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadf2a1a-366a-4ca4-be3e-71b7e6e092a0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ecbe28-a08e-4990-90f4-a911cd65818e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8a8bf39-b58b-495c-a1a3-28f9c00a3519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3b18f2-e918-4f03-9c83-6464efbec440",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dea0bd8-a067-4717-aa89-02e907dfb7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec3ac9e3-4279-43fe-92a0-f836275bf191"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2ce426f-747f-42ae-bd8b-6c9cc5daa524",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aad471d4-f30e-4601-b137-99bd4a05777e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362a7a8a-2337-45cc-9acb-d18d729df5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cfd5b89-ca82-41be-8105-610ae090c11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e65281-dd93-4081-919a-8543fd882105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c9fb11-cdda-48a1-bd57-cf41918995d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5a3e37ee-4827-40ab-aa51-2a40a6c0bb1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8ea9bb3-4921-4b99-b72c-3a4d10566d58",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9170d9f-425d-441c-8497-c0c590114348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b4ef15ed-7bcb-4915-9c3c-e3d09014bfec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f643a4a-1993-48f8-a9a7-d29b0fc8f390",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9906aec4-71b8-41b5-bc90-d78bd2fea015"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5510b3b-6129-4f88-b11f-04a4c59941bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b98cded3-48ee-412c-8fba-9150e3421380"
            }
          }
        ]
      },
      {
        "id": "c4017dd8-6797-4ff2-8243-6eb6b4f107b4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "17801224-f07b-445d-a72a-3433e84e2cde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efcd25b8-7567-465c-8d32-a3b86bbaf35d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d6f0a13d-c962-4441-b3b0-a7dfd280f10f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd464251-c584-4d65-bacd-dbb826966853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a060f9-ea13-4639-82fb-8dc14c2a8c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b167e2e-dd29-4427-a525-479cdbbb9699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ccdd2b0-1cfd-4754-9b14-c85be88415e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a76022-e281-454d-979b-741f40f63d77",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc6d859-aa16-4de2-abc5-74bfbc9ecd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7192a4a2-0c86-4edc-87a9-8fb84e673ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10edf56f-7ada-42b3-a3aa-a72c52ebfbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45769d07-84a1-4271-aef0-312fafd73a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9c5021-3426-4926-8421-d4de58464254",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7b358c-cd03-4964-9784-8e16935888ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e5937b-7ca5-423a-910e-cba78fd7b229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fced9d4-3a5f-4fef-a22a-c36f1dcb6f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb880969-ea14-4bfb-afeb-03f2f7dafac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f27f57-a75f-4f49-8af2-dac607f6cf33",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0886d23e-c08a-4d75-b9d7-1cd67371c5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea8988e-8527-4103-b611-09648711df59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27baf794-8fa0-4dd0-80a8-4a38afbb2652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e209b19-ae05-41c5-850d-5977b48ccfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fbea75-35d0-475d-8f1d-8018317b0daf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1e208e-f61e-4d45-ad46-31af120ddcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b3e2f7-3e29-4a28-8d88-09bc472572be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d322e3f3-ff70-4ef9-9e19-bc797bab152e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7116f02-4a7b-4797-bcc5-9bb95d7b3d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87099b96-a534-4cd5-9ffd-a282f9553833",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e138f7-318c-4948-b13f-cb4d5d6049d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccac7f1-dc00-4550-b356-af660ae64b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3081394-05b2-4b48-a931-1d64ead052f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce169f0c-a844-4c96-a18a-4294dcc8dc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f41d64-df27-4910-8a3c-fb508fc78dd1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b679d9cd-fb5b-4c0f-8be2-52d430f390e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2628c759-4274-4f9c-b241-d4cd56df0266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bb6589-011e-4d3b-916a-45bcbe89db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c3f3b0b-fbf5-41ca-8305-c9865e1d8b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec08505-769b-49d8-aaef-15c781ef0576",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702e1e4b-be1b-473c-8f23-8f9abd54c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e10328-a56b-43e3-94b4-a251c48c6773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0799f2e0-296e-42df-bdc9-4b6d288dae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15ecc354-7c79-4119-8dce-7940ed6ad45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529c8b80-9c52-4015-a14d-78d55d80b528",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6ebeab-00f7-478b-a186-364328adacc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb71027-932a-47a5-9442-78c0ae6e5006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccb61b9-8bc3-486c-ab9e-965fbf0654bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a37491-679e-4941-a32b-fb3d8e166740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06a6316-0241-4630-81c7-58f845de3d13",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7fe4cc-455d-4900-ae0f-b99dbbf53aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cbf756-e408-4d9f-aa04-66c9d55163d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b708e75e-8d0a-47a6-b4e0-5d1e47a2f250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a5fe5f8-6cda-473c-97f2-f95c96f9550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453c1d77-3dd2-4f01-9e71-48d2293bba53",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7c0fdc-031e-42b9-91a0-87df2198e609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a258f237-f840-4948-a835-2bb219d46469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255f7b2f-38ac-41a9-9e9b-0c311ae799f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58b86e69-807e-47c5-82a8-d60176091952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8795ee24-2831-4d3b-83d9-bb8a01688751",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158d5651-0b5a-4b51-aba8-92e71e9bc094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec50904d-112f-4a6b-aa12-359c5fdbac73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55827720-54ec-46b7-9d17-2d1e2fe461a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c750faa2-6293-4572-9a9d-6be96a301d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdf9bbd-5888-4af0-a235-4be95081a884",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea71ac16-9a7f-4170-bc31-f4ee4e78bc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22195cd-b589-4a54-a6ed-10bee332d5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb22bc2b-3e9a-49a4-9a17-932dc4faefa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff7897eb-664e-45b7-8723-518b60a7c193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac7f403-b27d-4a48-933f-785aa20d2b7f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bee9b9-39ab-47cb-99f9-ea83b93ad412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7b688a-be31-440f-9a2e-9330c34f6112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9606988b-8739-417a-a432-737a695a4151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f93e35f6-b7f0-4d95-bd94-d060ed6a7824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b8b986-381f-40fc-a5ff-d75cd34fdf11",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cba9fc-fd7d-40d0-8493-7a4ea3cc3920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56bb60b3-27dc-4636-b9a2-41d4dc1ff4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394a8207-5790-4a5d-a594-9e9e10692bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73016d4-b700-4750-a3b1-53b0f31ecd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafefef1-e57f-4eee-a47a-459bc33394ef",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a84e9a0-0b9a-4aae-be55-e6d2f9b05903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57dec36-11cc-41c3-8e1d-302f05f0d453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0933a10-fe0b-4a46-bf98-75dfc2b00891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd1adebe-12e1-48bf-92f5-b7f69b71e129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96600c8-c017-4429-9424-c841ab25a399",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e28f41b-a7c3-4a81-b9ea-331563a10c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b43ea3-bf08-460e-9211-fbb6cbbbda7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5813021e-b32a-47d5-afab-2e9bd8d4a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce2c583c-fcbd-4333-965e-ea053e47bb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c78007a-0c9f-4022-a9fa-7dde964708c8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6e8e34-769a-49a7-9fa0-b73a0282c09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a987b79-0d42-405d-8576-5b771010c766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7e5025-daaa-4d9d-be1f-507594bc568a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22b330d-fef0-484b-8917-ee07b417a37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe63b60-d2e9-49c8-a4b8-6674990bbb70",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea4e73f-c56b-4a36-b1fd-644424166b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1f43ba-e6d0-46fe-8662-19b4d1d3f3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e69aa6e-9ed4-4cb5-8ed1-a63e03c7eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91c31e7-c2e8-4a75-930c-191e121ba687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1edb60-f225-4591-bee2-91a6d9b64c21",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2288da8-0c95-4208-897b-b98d7b99b29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2609e27-39a8-4c39-9876-344a1ed93ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372242d2-34af-4f4c-8180-a0a563eb207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a91c576-48fd-470d-8cc0-31c42b56ba3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcac7c7-79dd-4ac4-b086-41b5c0d2dc89",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1173e2f-ac03-4478-8a2a-cce4d95a2f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0994c7f2-36ff-4cba-a3da-09b2272ac689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad925ec3-a69c-4a6e-9150-70790c0f8840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4d2e91-a727-4b68-8efd-72374c13088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec68639-c33b-4225-a16b-33f20f94fade",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a8aa2e-20b3-4010-a72c-1869759e1cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641670e9-f93f-4a47-86f2-e98b724b6e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ac08b3-2f95-4ce4-ae58-c8ce1b091394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a766ce44-18b9-421c-a00c-7950b40ccb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a19668-93a6-4f5b-aebf-15b9316933a6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a44137-eb23-4423-9c09-4c9262bb60ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a2b3e9-73da-4c10-8ae8-c52ea73c750c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cce297-2eed-425e-b182-4bfa4da4e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a351ff1e-f020-4759-ad7e-3bb16ed6f3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d9db6f-e43d-4fac-ba59-ac247d9ab760",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8383e92e-655b-4516-ae2a-57b54af58db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2ecefb-fa6a-4122-a773-bc75cfe11ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf38fd44-2824-4f34-a55a-9324c9be6cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc89035-20bc-4a55-8604-d6034686642e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce68cddf-2303-45fe-9603-4195b4f29803",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25850c0d-4fa3-4da3-8c09-86452137d61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904e9965-f770-42aa-9f74-680bd97b6489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a108038-4025-4668-98d5-0188fcdc10b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ad91ce-05c2-46e4-a6f4-3b6f6a008e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4043fd42-99c7-4f00-8677-73d44b919fb6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9388169-647e-4f67-bcf0-30b4abaf4440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6ecdcb-5da3-4c12-a98f-c2778f35de6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d25da9-8dbb-4bd4-af5a-f88f293fe345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dad8a32-fefa-441b-bb96-b90deba8c514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6944b24-07d0-4a77-ac0f-ea33efd38c68",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aef1bef-4281-4646-bb92-f65a9c2ab5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5397e043-585c-4d26-9f7c-173287140b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993e8a19-4a9a-46f5-9ae1-ccca51af2f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fba1b23-2ec6-488f-a5fb-84340e136f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521aa147-ac7b-4432-965f-6a99eda3cacc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dddebd-33b9-4b65-926e-28392f80531c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7a3503-d6bd-443c-bf02-54e3aee58aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9c380f-e43e-4d83-9107-9601df75e611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37830876-2725-4919-9841-d2db38591b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff4bf2b-4d91-41fc-902b-146af8191db9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4eb041-6bce-41e0-8bee-3efb823f6ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df98bb7-be50-448f-aa9c-930165c900f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89697e97-43ea-446d-a278-2d46ce4ab37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd03d6a-db3d-4cdd-9307-047fc1f3e49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7060c705-1289-494c-b36d-8963a6981c34",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2112a9-9cf6-44e8-b071-a92d52c72791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9dc227-0e69-4e5a-8e17-280125296d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ac3f04-d3f5-420d-a1e4-c4b0e9f1caa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "53cf8036-cb0b-4351-ae2f-8a1dcf37a879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4552d73a-64a5-4e08-bf00-ca48a945e04a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8ff23a-4e91-4d6d-903c-8e8a7ea13877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c859fa8d-2ac4-458a-96f5-8f04a2fda2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec607f57-ccb4-4e4f-a5db-edb240e316f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d29787b9-a083-42a9-8906-9025614a5f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6db90f-c951-418b-b5b4-b8a0e6cfcdd3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a912e293-c75c-437e-8bc3-dd17e15a8c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0a45e7-de8f-4d64-8d11-7e58578b5d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedbf08e-87c0-4287-8fc8-9ad1c540f303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f313ddf-51d7-4b52-ad64-8a78a8886f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21ac422-5d2e-4b08-a3ca-da5dabd75915",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded41c6-23cf-4e4e-b5d7-89116aeb43cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220c4c17-85f3-4c16-a281-d56b1d66a6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656ecf06-b014-43e3-92d0-afdb66866003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94bd543-34a2-4d3e-9a27-fcb0f1f258d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f8cb03-8f20-4b6a-96d7-4cbced118429",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e0451f-4c3b-4b75-b3ce-d12de2b92623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a33db1-3be9-4998-8651-6f86cd7fdc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d2a91f-0d75-4594-a938-9691cb5f1f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "846d8795-103c-4f1b-8377-63d007b11420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378b6eef-e8a6-4ca4-a72f-a37c9aa7d0a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657ddcbb-d9ee-4ea8-afaf-7afe1c9aab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200a30d0-ddfb-4cbd-9409-bd9f99f79d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a070ca3-abcb-4fd1-ad06-aa94273bcb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "32b9739a-64ec-4e37-85d7-7e942e3061f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eff99fa-a8e6-449d-8d70-c5a09b27254c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a760116-68f3-4a5e-9273-10dd39602429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be0a84b6-da47-49c9-933e-35dbf4069207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61207084-bcf2-4050-9117-50f47b61c77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6534e9-34c6-4332-9b3e-114110db5a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf51805-6f9c-4931-bd66-33660ef36f74",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2511e0fb-df8b-4fad-bc12-723dd3ce74db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594093ad-958d-42e3-8c0c-afb163ac274b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b707143-a60b-4b12-9363-6510a85df6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70260ea1-c38f-4e15-9f7e-596b9da47478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c319ccdd-6649-4f04-a3e4-5e55509f9dcd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120e65bf-981c-4368-947e-3ab1222cdb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e78631f-08e4-42ac-8a87-55c22163b926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9199ee-6a93-4bdf-8fa7-be10e76c2574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc4ebd1-4a67-426c-9766-f90a6639f9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a79b8b-c5db-418b-98fa-ff57c3eae350",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25abe2c9-823b-4773-8720-8cedb1b83f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3278e4-31c2-4a7d-ac0b-1a046f94c5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fee57dd-7454-40b4-96f0-218403885fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf9ad66-67cb-49e5-9260-bb271f338408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a51a5a-4c04-4e19-a42d-a39d19d59785",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3908d70-86ae-45d9-806c-8e277418431e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdd73d6-e313-43ca-ab06-c6a54a3a4f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbf07f8-d636-4fc9-aeda-6ed5980cee3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0afcb8f-ad88-429c-9d6d-b7dfa1aae198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12f80e5-80d7-4920-b0e8-0ee554cae26a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d06054-9f10-4fec-8381-39a432355a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b762a1b6-6ddf-4e8b-846f-1bb8a1a448c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abfe29f-5529-4305-9dc6-131c4453543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0459effe-a658-454f-ae50-df1c8fb475da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e85fb1d-ba2a-4697-af68-c0a8a3fab641",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7925b16e-a95f-46e4-9aba-9cb794a365b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b31e683-1aec-4040-980c-1198c6153586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2459f660-73a5-4b22-a35c-da3a805ead6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "887fccd6-28d1-4b6e-86d7-a00f72cbe727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f052002-6458-464e-8f6f-47076e7ca30c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0be653-f1e2-4266-82ff-7402e1bba425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e088ddee-8b33-47fa-921b-11cbcff4d9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faed5be-2624-43a1-87ae-7ae5eaff8c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a94bd4a-c9ff-4cdf-a5c7-65f92a7238c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d456a81-9b42-4055-acd4-2fba775f3fe2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88af7f27-a49e-4944-a441-03da9f389182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297daa89-3363-473e-99cb-10b4db6fe685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8265a6-5a8f-4d5e-9860-d1be55f183da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "28179be2-9420-404b-a86c-45ed6b5b3ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d16840-6540-48e7-bf48-cbebccaef009",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3f8104-f9b9-47f7-b92a-26f175b4e62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3032623-cd67-4ecf-a364-17f601f41af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121585bf-b2de-4250-ae39-0a152a30c8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d8b9c9-5752-44b4-874c-9689d7a214d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bfc4b1-c8e2-42e9-aba0-eb17ad28eb33",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f7869b-3d8e-4276-a0cd-0c1256a8b234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e70a23e-e053-4139-9c2a-687030d7fbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba676044-5098-4002-b05f-8b67432dee36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb27b05-5d6a-41cc-9fc1-6c6efc737d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddb743f-086f-4b94-9b70-c09a91cac8c3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a075f3-9580-44dd-90ba-32298ed588e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3aed32-bf38-471a-a6f4-d83b04631fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb5738c-b3a9-4057-8a53-f9881a37ed18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcf6ff7-3046-487a-9203-54df986c1e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce404e7-2aaf-4561-b463-1383ba884ffa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb66e853-ab80-4e9f-9f80-9343a47ec2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20f1b2e-4b05-4bac-99ef-e9565400a9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeac519-d299-4132-9a88-ca2380477f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "062aadd6-5815-4cf6-883a-2c946f76a698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22761ca8-017b-40c2-9fe1-3747f2b125bd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7617bbe8-3725-4e77-a5b0-cf093bf580f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a06c681-bd16-4efb-a5ea-8dbe92c11745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba7805f-62dd-46f5-96cd-3b23cc60318e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "affbbfdd-1636-43a6-8208-fcfd53a20c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a59b38-c4ea-4699-a85a-55583f34c57f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e921bc-0b74-43ba-a920-bfe962d824c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3957e84d-350b-4da6-ae54-1b95140e052b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e150cb83-ed03-47ba-a7d6-e52c8a926a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97987de6-8f07-42b9-9890-b0af1268f66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0d42cc-daff-49cb-a276-450503359324",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93080b34-74cf-479a-9742-047dde889694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aa636a-3913-4b6f-944a-e71fc20396d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838112b1-c13e-4820-be46-1bc35ff9b705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af6602f-2339-4b46-b118-fe2b7026fb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cbba37-fd7d-4e44-9b2b-6ac8d642cb12",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef8a912-e6cb-455d-a6f0-43a21d9134a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2652ae9-b168-4202-8587-856d90fc6beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b347f89-cfe9-4e9b-b94a-2459288f8d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "445de0cf-f96c-4e04-bcdc-a5d416107884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036265d7-b71d-4d0f-a3cf-fee443f4ee77",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cdf695-9fa3-4947-876c-023b4aad6989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff90993-8611-4e3f-bd74-c59ab01da714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b2c1e-a9ea-412d-a752-a8813c5bbd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c50ca7-7ebf-48c4-a8b6-029d9d3a79a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e53d04d-9d4b-4d21-8663-669cd75abff0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dfd5f3-3f01-4092-bb90-e9bd4aa4a229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61af6d6a-a01f-4bb2-b0b3-fa53120b2583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875e0e76-452e-4924-9303-006e66fffee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8526f5-1c39-4b75-901d-d4eac32d1ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec8edbf-233f-4e09-93ec-3289998bd511",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a49297-a0e6-4ee4-a290-abe694d8c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926de90b-8376-4ba4-98d2-11fb1c2c69c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978413ff-b156-48d4-bf71-0bd2bf4afe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7889d2a6-9598-45ab-9748-8608c4d711f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a80d435-3642-4d65-a8e3-3246b67f3700",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64149d58-f3f6-4737-9143-5bd1b90d4949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deaf0c63-e108-459d-9fd2-06eb51918478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb43006b-9f93-4ea5-af27-9dc76c7b6bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "47bd6693-ed32-4ee0-bb67-730f2ab10fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92923f04-3742-45d1-be5c-7fb0877eb906",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77077be5-57ea-413b-ada9-d062e956ff94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb4efc0-dc58-4202-8027-9c19eff3f93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21600646-f05a-4b35-bf80-c21b9ee48a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27621d2c-06cd-4531-95d4-2978f14d5972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c85210-f274-4698-ad10-4143025038cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2edbb72-b1b2-4eb3-8a52-6df28225ca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af9d63c-ef9a-4000-848f-6ce163033f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd2e2d7-9adf-4f09-87b8-8a51b4064a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b44938b-7821-4a18-97c7-47f2f7881296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07d17ef-ba99-4b68-9405-cd7da5a177c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e192a-4345-4ac5-b45a-a346219e5621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc161319-c3fc-4740-8f86-89c8d868028b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f8c246-9879-4410-960a-b75f989e6735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c401079e-859c-4867-be68-63641dbd9a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff48c5c1-118a-4d44-9fea-daf37e4e356e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157f4922-c672-4286-9ba3-3bece1826c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d368166-dcd9-45dd-a186-a2dfb8f0145d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0a213a-7004-4960-99d4-a38531083b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0c64f2-83f3-4f51-90ca-9bfd6207f820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe58b393-bdbf-4eab-aa84-5e8006d100ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04adae39-1c60-432d-a652-cd536fe84728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f86738-c462-49e8-a9d0-a531c18c9f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484b412b-66a8-49ca-a6e9-c56cc2845527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a54a2eac-90f4-4b57-ad15-83c1e740f23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b639f65-9a00-438a-a0ba-92bf7074538e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd8219b-a530-4a4b-909c-dab127d0eeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5820edc9-fb0c-4455-851a-cf9bc2493509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ae9492-e311-4695-8cc8-5bd25ca0eba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "565b2bda-535f-4e95-8d44-dfba482a323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb60b42-b6a1-445e-b49f-0894b4de9cbc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b4a94-9136-4fe4-bf51-da60662e8851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d6dca8-b747-40f5-8af5-87839adfd6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce9c95f-3209-4c12-bb55-7594a6ea7078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c1e0d9-acc1-4d31-81df-10ff675a030c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a02cd06-df63-4e82-9ba1-7549542e67da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9da00-7af7-4812-810c-204e8dc1deac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd0a276-06e7-492e-820d-3fea99f78f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a2f7b-05e6-4351-9573-a913b01106a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d784aa63-8654-4868-80e8-392b916b3952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f67dcb-e68e-4ee7-8ac9-6a565a4ea26e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c41b873-6aac-4b23-b2b6-a97a3f8b9470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667e686d-61a1-410a-89b8-63337d15f5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99ed4a7-e3cc-4fcd-a887-e1094060523e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b095ba-bd52-4922-9818-1beec6e29e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0361ac87-8941-4eff-9346-ab4aac5ff8b1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3235a43a-1534-45b7-b32a-e593f7a8b47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4129aff0-0459-4455-a353-eff7f84a179b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880baa19-13a0-4ced-b5f2-39e8726ac528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "602c512c-1d37-4a33-a422-198668bbfdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d30612d-ae59-4c5f-bdf8-2e6fce636515",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219ce93b-4114-4320-9963-adae92e8e685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946538be-74fa-4566-976f-796880c71f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064c3593-9564-46fb-adcf-c3c7f6b3c013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28ed2420-ebe8-4bde-a46a-e1a6c731cc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7ae283-1efe-44a8-96f9-e04d5340b179",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a86d19-d6fa-45ae-8d89-99dbf1bc7a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb93c68-966b-4a3b-8e22-fc1d930c2de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b114bebd-ef84-4c61-96fe-74571ffa1517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbb6b07-ab9e-4f56-a317-514dbc0fcf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0dee89-53b1-4bbe-905d-a0e4d7da00d2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beac34f9-24d1-41e6-a9ef-9adc14c6b3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f828bc5b-ec97-470a-8394-044e0565a879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f77dbae-277b-44b6-82e9-fd293fc5c945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d2a92f-f96d-4e68-946f-ea2e1538e3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b024d8-2fcb-4d5f-bea4-ef164fa53a17",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9d4eea-2a72-4715-a26a-73f0a851a3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425353d0-ae66-433d-9746-74a414828150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3cc617-23bc-4ec2-b3c8-93092df0308b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64337dc1-2546-43fd-9a46-b2b16a2bc490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a3c83d-e321-487b-add8-101bf3577fc3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6254cb06-ad41-4995-b157-0c3fb0006117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab93cb3-e01b-42cc-a3f2-0c4408ca7494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205afe5d-4821-4256-9faa-52c501e21bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b76bbe5e-852f-48a4-9a25-924009d54c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a207f3d-bbe7-4618-b644-b9a710a80be2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34be50db-79ab-4bdf-864b-37a7bb4d56a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde53a99-d3d4-4ede-99a9-d22543fd8a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad5e2ee-4766-4d30-9c6a-a728a8556847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7a3069-126b-458f-a62b-1274cadebc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa7e0a-93a1-4515-b277-743e50cc51b8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd29e0a-9405-4bbb-84f9-fec52c800620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9440792c-390b-4b47-9217-a2fe2c611139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509eb8e5-61f6-4289-9724-88eb0577e94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "810a0bb8-23e1-4731-bf70-c1e2f7af0cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148c255-ac80-48c2-864f-2571dd2e470b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909d6a2b-c99a-47dd-92d3-a425673a34e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01f6fdd-6b6d-47f4-80f1-e3040212911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacca8b8-999e-4227-8448-0098afa132e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eff28e6c-1490-4641-a311-fb658224fd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4eab63-ce87-4a81-baf5-42018120c0e3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c703c095-abce-4d24-93b8-0f1a41b8994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9a7590-3fc3-4d13-ace8-764f44861e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5abfaaa-2823-48ed-a8fd-85936e55c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23735bdb-ebab-42dd-9d91-20073a7b9757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7294430b-a3f6-4021-9355-45b58a2ea8fe",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d4b9e9-6ce2-485c-a66b-9c1a7a764cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24aa0de-63b1-4d17-a2c4-7e7ea37a0acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdba10dd-d4b5-43da-8228-b5ac0b44b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b209d15f-bef7-4b1b-896d-0ffcee86c22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf490ed-2e9c-4169-9441-f7724f40d380",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2720861c-f61c-4aec-88b3-4d4adf3f007a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f369878-ff71-4a4a-a809-dc79f5389a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211877cc-ab37-4f41-980c-2cc60eec627d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0d12ea-5804-4e24-a2a4-959443e0b4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dffd5c-36c6-44ea-bb0d-09f2e8b81c71",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6a1d8c-ddcc-49c7-8ed9-e6ffaa9df6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f36a8fd-092e-457e-925a-6fc099e13684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5223dc5-5ef7-497b-8539-db977b193651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a112c5eb-9cdd-4b41-b62e-1e1de752b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb5cf8c-f492-4c44-a6e0-65e756dbdf78",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a63518-e53f-4554-b648-df7013e43ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd31e58-2f02-40e1-b0cf-0bd904846cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf6e723-c7ca-421b-ab5d-99870ad6734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f42ab707-7135-435c-95ae-627e94c7ebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96d9ce6-b111-40a1-bb4e-30d228d92056",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6f965f-02b7-4aad-a1fb-30bb56f61bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d6c24a-6cb9-430b-b403-c2027ad3d098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7230e9-b630-4f78-bdf0-bc0efab318ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d55e0ce-c7d6-4840-9f58-6b483227ad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5d18cd-80b5-408b-a1d6-0ea3b9a4a341",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48d94ae-965a-4017-9d80-ba0bfcc421fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f4455d-ac3e-48b4-83a6-94e961f24caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bd1e15-0878-4584-9954-607df7107920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27af127a-8c01-4978-83e1-3a1f0be81cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8be3b07-97aa-4c84-b9d1-044ba41c0302",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab87392-0658-4c69-8950-e02f4125837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df812ab-0081-4ba8-a810-f5df5447e58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dcd679-5294-4931-bf6b-9a10db9ab422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e0cf95-18f4-487b-bebc-42fea69882bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23230fe-0efe-4324-8194-7d61684188ae",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e91ec3-6e69-4e31-b7a7-dbc43d3e2765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cfbbde-989d-4872-98ef-765e7d1c3706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6176e6c5-0bf9-4139-83a6-4f2684559ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b8746a-5782-42e7-a37b-210039634056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16609875-7644-4345-b746-9ccaf29bb463",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f530eca3-f5dd-48d8-8f41-f449fadaeb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479a9de5-a704-4894-8ad9-6ef4f50e3077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb82e0e-31cc-4277-9165-f34801ee252a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15ed6ad2-c0c3-4d7d-bff5-29cec1270843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc503887-34f2-4818-b4e5-dcf60ed08ac2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59324949-f184-4b2a-9c6c-9df56d2ede0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14346ad-aac8-4533-b92c-476f4e6a540d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf4a31e-2ad8-4dff-bf14-1c0450b42e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a4e441-6be2-4e3e-b1f4-c249c5a746b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7a8772-e76a-400c-9b4d-b1acea8ad87b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfe31aa-c858-4989-9b77-1c22f962ebf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07799593-bfcc-47e0-8864-e3f2afd6613a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b7a6de-e103-4029-937c-f62a57376837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a8744e-520a-494e-90c8-a9871942e275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7831e78d-6523-4d3e-b8ca-a4d305e9211f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5479db7-3959-4e84-9291-89e1a187432e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abebbff1-5348-4392-b136-b8243b4f1c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6082d39f-ab5f-442a-b417-d773f3c461ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b95ce8-342d-4b83-bab0-17f3d42ecd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed83076-5aea-40f7-a6f7-9e80a57e6313",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aa03ef-2a4b-490d-91b2-f8009f705645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cb24bc-61b2-4c7f-911b-5f0c6f69c074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fdc7ad-a85a-4e47-8ad1-0418d072fd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4c3af6-9d22-4f10-bc1a-fce7167f6a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9178fe-74d9-49bc-b677-f85bf20f8323",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a1070-d268-4ebc-9db0-bbf5d619b96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0246f78-05b1-4465-8ab1-2023005b983d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10aaad8-1f69-4ef0-8b6a-cc5b5f7f819f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "009dd518-71c3-481e-8243-a56b8a719624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a0dde0-8015-4458-b1b5-7de0101805d9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10dd07b-fc50-4af5-bcfb-bb8d90e97fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74cd0b5-f3c3-46f0-9ec4-119b5c46eb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f402a690-d9db-47d6-b318-da7ccdb74d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd914d46-4d4a-4eea-9123-fd52707d0f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e155493-6cf8-4c34-a328-574399269f11",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653562fb-14a8-48b0-8abc-bf054faaa4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51702cbe-2c52-4013-98f5-ac851f7e5c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33161fdc-bc90-481c-bd8a-65132590ecb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8deb242b-3bc2-466c-854b-88c88d675ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8399131a-a604-4b46-ac35-b3ec06dad712",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dee076-a8f5-4739-910a-442f4cb98da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8146b43f-2419-43ca-be72-0609bcec4cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b08d6a0-320d-460b-8c9a-e7dc9a675638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "59c762a6-ba20-42f1-8cd0-a458ec46060a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e948d1c-c0c9-4241-aedb-3a62e148d471",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c3bc60d-090a-4acf-9c21-6573a8ee54cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954f0c68-5ff4-4598-9540-70dd7405df6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa6e8c2c-50e6-4066-b73b-53ed002bda31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dfb49d-893a-45f2-9ab1-8741d5ebe300",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff923203-11d7-4ccc-bc8e-06a96e532b07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "154bf753-3e8a-4b2b-839e-05ea503cf665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edafc253-5708-42d8-a8ad-6f822451a01f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7017a04c-1a21-479d-8891-7b770d61c8ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b340ec8b-18fa-49b9-b7ff-ccd4a6294556"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "617fc191-aaf3-45b1-bf7c-353a5eb2c18b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c61baa97-544d-4501-8ee4-2fe2c59c4278"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec3d4c43-5661-46cc-b588-c1206094256c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36af4df4-320f-49e3-8694-550ed7d0e392"
                }
              }
            ]
          },
          {
            "id": "38461c50-d2df-4cff-a82e-7c91cf97fea9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "166561ed-9fd0-4b79-b505-ec57e2b12349",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2dbb6b65-e210-4cc4-a7c7-f3b2b87d7448",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5996f83-b8b2-4ddb-b3c4-588f87859243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bd32f251-a827-4bac-a6ca-2a9ffef06900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b4f5bf-425b-4b56-b504-2568672fe025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4ecc33-b01c-4de3-94b1-bb488452b459"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d075d23-7973-4709-aa14-093fe8a52e93",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea8635ee-a684-4593-8d8c-5f5829e799bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58ab4ad2-1cc4-4ebe-9b7b-8f90cf9db558"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cfb5b2c-30a9-4bb2-b9b1-9f5225542e53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5cdd70c-7fe6-4a7e-9bbc-ec01f4315e19"
                    }
                  }
                ]
              },
              {
                "id": "21abd775-8432-40f1-8329-53a970d88de1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0606e6c-ca64-4dd5-802f-8b53f16166fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09ec3159-ce31-4d8e-bb94-dde42886f571"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "712a2074-922b-4165-9dfa-3c415e2e1c49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fac4d530-6764-4254-8739-2ce02491577e"
                    }
                  }
                ]
              },
              {
                "id": "f9cdf7ba-8d67-470b-9de5-e65fe377553e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b3eaebb-c40a-449e-8898-eedf22f98935",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53f34231-d3d1-40c5-8465-9be4ba049853"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24f295ba-a8a5-49e8-bb24-8901426f01cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4597045b-15d0-4c53-946c-db4493f96626"
                    }
                  }
                ]
              },
              {
                "id": "0e25a688-1e9d-4699-9736-80df1ab03f59",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6455806-a46e-4064-96fc-be800608d262",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a503f13-6dcf-4752-a140-380daa1586fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c77a162-ad88-47a8-961c-479eb77702f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "54b12bb5-a071-40ca-977d-c6d07255a7b3"
                    }
                  }
                ]
              },
              {
                "id": "49a435e2-969b-450c-8e86-783fd738889a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5ed5646-71c4-4f41-a5d7-ef19716593fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a588034-a587-4baa-a0c2-143d0dfa9639"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e44a88c6-252f-41ff-bf87-c131bbf08073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7c20cf67-fce6-4b15-8e6c-f7d44956e429"
                    }
                  }
                ]
              },
              {
                "id": "7f640338-9f1e-4ec8-b235-4164f626ce0a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bb4cecb-bd60-473d-85c7-11c7a0bdd183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d5d6521-8ba3-48e7-803b-3a2ac6343026"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3a8c03f-db13-419b-89a9-38c5661dd6df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0647c00d-b4ca-49e7-ae7f-74e2ab2a9cbb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc18acc5-6181-46d3-a063-dd48c6457d44",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5deb6a95-7c72-48d8-9db3-667717dd2cf6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa0e912a-b5d3-4e36-b194-c9d7dbd80ad3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87724a67-2579-4424-977c-30a96234aead"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1e1df3c-938b-46a7-8729-4fbd64e4ff81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d049155f-fcdf-4b86-a49d-dcdf903aa7ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70e50448-e1f9-4797-a8bc-34bb6c789e6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44c58375-3d32-40d9-bdb5-55709f4d55c2"
            }
          }
        ]
      },
      {
        "id": "076776de-763f-4f46-a701-6b92049a047e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ea3c1d09-0664-47b7-a145-e65068f89d6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6460d81a-dfa9-408e-b38d-b3f1644a7bb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aafe8649-2165-44c4-9360-f5144ad75155",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d87abb5-f7ee-49a6-8340-1c7cd5127c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8cadf8-ff93-4976-9049-434f8973aebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a86bbab-cef4-4ce5-88f6-effac8d129d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1c0df3-a869-447e-bf71-1f657daf476c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b67878c-8288-427f-bdac-cda673e0f544",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eec16c6-59fe-4a2f-8e5a-c8769272e67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d683e20-e3c6-4bcd-a100-c3837c6aeaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0f202f-ab13-4969-90ba-2946f2c1d69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc947e8-e3d9-4cec-b40b-6a1aec06d359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b0dc07-c8af-4680-8bd0-0b77110819f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c419b0e4-6ca3-492b-9013-e771d0c25de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe09ab7-ac1b-41ac-9003-2f599fa999a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a08730-73ef-4605-a537-c533b0c46949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78023914-30ef-44a4-9ed5-86ea60a33502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df12ac5-c396-4413-875d-b6af279e86ab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32221fed-3fcd-488c-bac7-9d4d25311750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7b6443-f4db-47ee-8efa-3b13a47ab79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b531386-1804-4f05-9515-8efe952aeaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e1bb69-f6f8-484e-aa2b-95935eee4497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d2186b-148b-49c6-b333-0d2d08e59d7d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5374697f-cfee-4f50-87b5-bbeafe3b7fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b242491c-f9df-4857-aeab-0fccc249da7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e103d58-b78d-4b91-8a14-94bdf6517b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e011d6c-6104-4d4c-b4da-22724ef057c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32ebf30-bf23-4b13-b9c3-9fb1277c553f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5f4a6c-2822-45fb-bd3b-d44bb3d0df0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1464417c-561d-4e99-8e7a-8e1e28761cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a3261f-085c-42f6-8dff-8522623c28cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ff8ee0-ab49-47d1-97a1-7939aecb8549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c5288e-6cde-41d4-8d88-a4ef157688dc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32d1414-00a7-42db-b3e2-7fa9283b63ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ea6c8f-6452-492f-9e7a-cce8dcfcb8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5592e3ab-d441-4ea5-a506-55bd457a68f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4078a43e-df85-4c59-b2b6-a3a287922a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf53c9f-edbd-4bb3-b48a-c79821fa8113",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e4ee5b-5533-4406-8067-1c0f1e8e8f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ad50d1-5deb-4e2e-b3f1-f55c7d2f9880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edd3900-cf0b-4503-bcf4-99298bf1b0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2bd631-bea9-4fc7-8877-a03413a6dcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc947b8-1d7a-4913-a0ae-9e35479418c4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de666c1b-f037-4f4a-8769-41cd99db5a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064ed2bc-3d79-4182-b20d-8ea926c279cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9466ea9c-7711-45ab-9a6b-0ec355a7cddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87cb5e2f-75e6-4348-befc-55e899c3af43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa5dcd4-e2e5-4574-bc75-ae9a9292afec",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e121308-6c13-42f1-9a3d-c112c4c66df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f7523a-63a0-420d-b151-79de79e0d38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9bcdbe-b0b4-4980-85b0-e928ea262835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb00d52e-0b6d-41d2-a6d9-ebcfff4d1072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d541c62-b853-4ce7-bb16-508691c5a07e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925a6dd-32fa-46a9-bf45-6dcc4fa8f551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6df557-e32c-4eb7-8893-74f9fcde181d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24b0766-da3f-4a27-9a57-27340068ae8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "89739d36-91b1-4a5d-ba26-8e8a7270804e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb488b0-1f35-4bfa-aafe-4c28bed37411",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5aa7ee-3785-46f2-af2b-07897eeec371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f22649-5ea4-41fb-a47d-b478648b109f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f848c55-c393-4370-a0c9-b9907cafed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89b5484c-880a-4b50-871d-ce83b1bed462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ae71f4-bb85-4278-87cd-16abdf2e055e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db48a5d9-521c-4a00-8044-20e0abb7eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901685ce-3d3e-4da9-a90e-7471e2ad9a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9309493-c8c7-482d-a539-0b96864bb859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0613f848-ecf7-4ae7-872d-795006b3d314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f398ec2-79fe-4c03-9c46-d303249fabbc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2098c286-c5f6-4fd4-a7b6-8026e75dcf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ec0b48-8b63-4eb8-ac88-e9ec877c2c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accd7185-6661-4494-bf92-ae23cc06d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff9fb92-121f-414d-83d3-a38bcef20df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bdcf71-336e-4c3f-9ce4-70a94b7196e8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac5d2da-e4f9-4cea-91eb-e2d95f2c1f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5307236c-2cc3-4da2-8d42-0b15191b0671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8825a4ae-726a-4d33-9d4b-17d5bd46df6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fdea41-e4ad-4d04-99bc-01746b88814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77002e26-113e-4473-ab91-383340d84f93",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bca321-e13a-4951-a6a7-2345cc2a1e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc279b50-9830-401e-97bc-f0f0396214db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943187f2-8915-4a05-9721-d43a08ac657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e62aed-07ff-4ffe-a7ef-f170446f34d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf597826-64cb-41fa-8e42-d531e095e4f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2715efa-d33d-48cf-a335-787839831342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44100e3-bac0-4e88-99ed-4194162964de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaefc40b-9b65-48c2-ba6a-7799c9ffe521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3ba86c-3ca8-44fa-943e-2af2896d7eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afc8473-3d63-49df-85e3-6c7dfe3afbab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a5443c-2b90-4489-ae42-7ce572343e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdec1487-d9b0-4f90-9581-c132411e474b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1d1ed2-8075-4d7a-a4f0-c011fa7d3419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d70deb4b-2b81-4038-9e98-d0da652189dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfc7324-49bc-49e2-8e4d-ba2432f2d529",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6158b93-9ea1-408d-b956-2b6ff939e6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd25a43-fa13-4c45-bd0a-27a8f275726c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d899d910-0832-4b31-adb3-00c0701976c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1bdad0-fe3f-4598-b206-9f464a2cadbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb816796-a290-4fbd-b6fd-f6ac068b3cc2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a3d36c-e0c0-4c30-af93-f173c7f3e92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f806b8fb-d48a-49aa-b5a5-44b454d741ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c5c8ee-a196-471b-a934-ede3c32ce32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d50691-0251-49eb-94f1-d282bd1b1fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14eabfd-e1c0-4308-acef-442f2b9b1766",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff36999b-d046-4255-ac81-90f99a278312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06305a13-9c99-4891-834b-27dedc5b6679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49492b17-2265-444e-a8c9-31f3f26f89b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93819ca4-2fb6-4ee9-8f97-ededbdb5cd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aceeda-c178-4dd8-8a76-294474ee6e7a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b046b0d-06e6-4a96-a42e-ac9faa231162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953eee2e-4159-4450-b0b8-17592e090451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e801f88d-5773-425d-a062-6eddeb8c5dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ce1927-fc20-48b0-a0e2-19006e4d81af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fc3498-74ee-473c-96a3-c35e1bab3600",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9474d4-a9af-4e6d-8301-87fca56dc6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457a4399-a5c4-4724-b34e-627cd773024a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac45121-555f-461f-82cc-1b0b4d66adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e9926e-1826-4c65-8886-f717b30e765f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c7ac38-11d4-441e-833e-d73b8841667a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf5a669-e88e-47d2-a58a-f9285bb13000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a9b03d-e8f5-4a10-90e3-c7f67b5cff48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94032b9c-76c0-4313-b59a-7dc3277e8d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8194d0-adf5-41a6-9d60-495bd0e0eb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e718f2-9bdb-4022-a62f-8013d58f4483",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aa5b49-f372-4389-84cc-4e12932a0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a75e810-f24c-461e-a95f-95d94ccc67d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963521d6-12b2-4979-bb5c-f8f8df8332b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89653245-2861-4c5d-bcd5-be70198ee07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22fee29-b27b-472c-80ec-bd346c729c38",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc73d8f-cf40-42eb-8ab0-4b850af9e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836c95e0-6d56-42c8-aca1-320f02268b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e66a08-cf24-4a2b-8407-350c57f40c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae96baa-c240-4c56-9ac9-43f8e6ebdc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b050512-dbf6-4f3e-9ace-998a441ba073",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced83489-079d-4d0f-a124-aa2f25ff0c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f957c799-0d26-4ef9-84bc-3e1eb6984b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7013c111-d7ad-4a96-a4d0-f28463fa159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "805c2880-1046-464f-a9f3-b7acaa3cff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee83f31-4238-4698-b5fc-00f305e63239",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca431c08-475b-4fdb-8ede-79c74896880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58aa0848-c5d8-4aae-9810-3c68b5c22e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d2c9f6-6ce3-438b-87da-885c821055ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d962a6-e6a2-442b-a5b9-a0ee54f54409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa01345-1bdd-44a5-aa79-84561634056f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f710a-95b6-40f8-b434-e8c38ddfd6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7de1dd-c5b9-4198-848b-95042648d91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd9a2b-f52a-4649-93c3-4e5c6159a18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d5034e-73ca-408f-931e-1fce5709e388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c4cbb4-65bb-4159-885c-8416a9542275",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd66eb5a-141c-4789-a577-80a3bb9dc2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f73b57d-5241-46ff-8b67-3a914e69b504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c47083-5101-447c-88e1-a02812f127bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4e06c3-dad1-43e2-9433-be1f681968a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc50a780-9438-4e5d-a9ad-7a4655ada48c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc871e1-9db8-472b-bee5-a4eb145d4c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef8ee80-4ff3-42d8-8ecc-d518dfc49819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba58020-816b-4cc8-ae56-5306386422ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b67655-39fc-42dc-9236-aa1431e22651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fb78b0-cb42-45e1-a3d4-1d6260448b2d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f09d3d-ea54-4587-8b37-ef08de36c7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f2c223-046d-4c2e-8fcf-6152c1cff8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6224cda-bee3-4eac-b86c-f6944552e3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc68d6b-c34a-4c67-b7c4-629b0946138f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87900609-0f99-466c-88d9-b68e06b9cde8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a069020-57e2-4acd-b5dc-2f4d299d7889",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3daac2-8f5d-44a2-999c-180453526c04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "662c3c8d-b4a2-47b2-b19c-63b49ba0d2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c611dd98-7c07-459e-9683-77504b3a1fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8eabfe6-d9dd-4ed6-b7f9-e915909e0ca2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "649e4905-db35-4dc4-b7a0-09714d8ad41a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de50f481-6115-4ec3-b592-514e2422a256"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8612d042-ab41-40c7-bfb4-b87d5404d54b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66d3ab08-25a7-4d51-af7d-a8d993a8b08f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88476a5f-2406-4cca-913a-4a67110507f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e06258a-8ba2-4907-913b-21dbefa52696"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6a76771-600a-45b9-9e1a-f4680bb49c0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a811be8d-3d4a-4c8c-aed3-cf6719d89a7a"
            }
          }
        ]
      },
      {
        "id": "21776941-29fd-4920-b2cf-6bc90c7a679b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cd0fce41-d57a-4c2d-afb7-f2514d56709f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abc0a45f-2744-48d4-b8ea-68828bf4182f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef7f0ce3-ea13-422f-a495-6bdf76797443",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6045632-e84e-4d9c-b433-f55596fece01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e562eb98-7bc2-4431-971d-aec082bcaf71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d027db3-42e4-4331-a0da-e142e4bd4fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1714309-ca4d-4912-83ca-bb3f7e223a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b17edd1-22f0-4a24-ba5a-5b2b5c0c0866",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974c9e9f-05e7-4579-a930-3d9c3fae93d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b29132-4c00-4731-9c7f-7a31991aaed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d44afbc-f1f2-4d67-8e2c-4d2318e1b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d74ff8-694c-489d-b1cb-c4fcea914469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecec6ef0-57a2-472b-a8c2-efc3b2f5c9cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e835b62-8dc8-4016-986c-d209af4cf159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15b09f6-f4bc-4844-a19c-388180c8e128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb71d3a1-a924-4117-891c-575109862996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ed99be-8d5b-40b8-b0cf-ff46d37cc1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a012a9-0ec7-4e30-9817-53b854c4a433",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f29470-a981-4435-8624-ea203174a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd8a3b5-1aae-4b92-8b47-6b5900294033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a450300d-82d0-478a-a201-be89220e2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2542e398-bf56-4487-bf9b-bfe3473b4251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fec9627-3151-4674-b606-848b22b8d917",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb167666-2d30-4348-903f-5179bb0e3ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5133f7f2-6702-42fa-b4cc-2e4352cd1e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42b61fa-270a-48c5-8411-8ea56c27ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "382a58bf-4989-42c4-abd0-7fc8ca1f8aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382f650d-3dbf-4a23-bd81-4767d3f93e96",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34ea741-ef3f-4d79-8164-0e96a28859a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddab0e0-e913-4ffa-93b7-8f2a8cc02ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf849ed-11f9-4b0f-bafa-134a5443e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4a7347-f148-4228-bef9-e516690f31df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e0cb95-6a3d-45f7-8e56-5fc64fbe42c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da32a604-973f-4651-a9d3-6e9e832a2b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de58501d-2c5b-4f93-bf51-6c054e0aa6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40342b48-0021-4774-8564-ccf8fc9124c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7abbd73-8dc3-4bb2-b979-a69ebd156f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff476f5-4e37-4bd4-a432-386e5f201223",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6f868a-89ba-4998-af49-c24cf29216ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9faedbaa-5396-46e4-b3a2-2a05b152b7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bac3c09-05f8-4e3e-88de-a6a4f7e797d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "239575b6-4b70-42de-97a2-90b80c6a5eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee487dcf-1ca7-45ee-bdf4-be6175f5d697",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ea484-343b-431b-9178-ea7d4182c2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291a2a9b-8aa0-44d8-8b98-91bac760350a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3b2aa7-18e4-460e-8d76-c0a74336f6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "734e0821-2294-4c4c-bbcf-6dea740145dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0611067-ebee-4190-a842-59b1dda9354d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69946499-5418-41db-b317-1d946fca9a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d11707-9c66-418f-ab02-974c64ea9343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed43317-f3cf-4f33-8112-447bee7c5320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd93e320-1075-4ea5-97e3-e7d68176ed25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c9c66b-8462-4c85-908d-07a00694bb48",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d6dab-2009-4f0e-92af-fb84a22b9124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4798c2c0-42cb-4128-9583-6cc832ba24a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec5941e-fc01-4e10-b207-5487e16cd284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6111a51b-8ca6-4ed9-83c4-31d6ac06232e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc953158-54fa-4aac-b57b-e4c49fb2a176",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648fd2ac-47be-4f43-8a6e-63b86dd8d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94b2ea1-a008-4c38-a4df-4cb42663cc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8778ff6-6140-41eb-bd93-e252ec84c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1226ea74-5504-42f7-8a74-087603386017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dad5c1-6ac5-4edc-a89a-ad4e5e31271f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad201b4-4429-479e-a389-9795fc5c0ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0161d788-624c-41bb-b8f2-33d1c2905890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4fc73d-dba7-46f8-9253-9b46ab188f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc98606-81b2-4b1b-ad30-f65b0ae7f967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac50bab-fec1-486f-9b5a-01b6d4347278",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2604ea1-967c-4ffc-ada4-46b633b62406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f906f2-a705-46ee-b441-b02135c9a126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad91cf-6595-4ac7-9c0c-394fa515a42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "453adbb3-db43-43dd-acd9-f710075d45ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef21af5c-83cc-4594-8e9e-e534d64a0d8b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2313477-41b3-4a5a-a8c9-c46e9f41df24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e8f863-c7e2-4493-9a6e-69d25df83bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0580d87-4a6f-4185-a5c2-52f26188be40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c111638-bbde-4739-8bc7-726f9f4d3eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69391303-7611-44c2-bb76-aac97c70a1fe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc4cc74-bdbc-4a15-9732-e264e6f5e97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbbe776-b4bc-4ec0-b8ed-84d5feb789d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe4f2f3-21cb-44a5-bd6f-89529e246f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5ed474-2d7f-4813-8a44-7748d28deffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dcb9d9-930f-4bb6-831a-87367b81bda2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4471fb-1fb5-4175-b316-504488ad5b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2b3d02-6149-493a-8e71-e99b4dbbcc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a111c5-f5dc-4f2e-b883-aeb115afa3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d25c4dba-623b-4a6d-893e-7334e1f929cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743d4a70-9770-472e-a67f-b4c253b7495b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bb759c-eb47-4c39-b078-a9e5319db668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b70aeaf-c4a0-46d5-9496-3959885851a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ddff9-3450-44d2-98e1-c0800d0d5e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc8d6c2-b3e9-4135-8907-fb6f3dc23f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35169f0f-3e48-4c66-970e-13de49a775d8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2093391-1f08-417a-b2ee-17af48d2ee36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456f7fbc-57f8-4071-8694-ef43fb6d831e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae05b006-7d41-4ed6-bade-740208a98c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d22d11-fcd4-4c82-8e27-c468f680f44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70053c43-9de0-4b07-8846-2a2b13bec0df",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f5c586-6dd8-4b43-8781-d97a362e8334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587fcc10-a9c7-45a3-aedf-4fbe05208de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d6a6b-e6c4-4a62-bd05-85d433bbcdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd1b0ca-69b0-47ad-8818-76c783c62318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ce91bd-cab0-4d90-bb5e-0775e9fff785",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4010146-f19f-4214-8c07-db562ec7a2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf4dad4-a530-4978-b08b-a37e28007dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb9a7a8-1cdb-437b-a069-45d708d8c778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c24b02b-f683-4f4b-95ae-ce5289063529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4174fe2c-7762-4b84-86aa-02fee696e2f0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b63f489-d1b9-47a7-bc4e-014c58613b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981fa704-73e2-462a-8b04-6d38669c968d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05802484-4057-4200-875d-b60087d7b058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f466e50-d5cf-4a06-bfd8-90aba8a5da4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9642a1-476b-4fb2-ba3c-ecd6efbaaf9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7144a14-8831-4f52-849d-94d5f524be80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef255a18-26eb-4493-b720-f30fa4353b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc37916c-69e2-485b-a810-0367b3297dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "850aadd7-4e15-42b5-84b2-bc7b8e418747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc43052-f061-4784-9aa0-2033afe843c5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15daaa7f-1ab1-41c4-9bc6-dda13a3a598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4e358d-822e-4e95-83c1-6fa84a17b2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a9d28e-5438-41d7-8238-0b5151e4fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e700ec-6874-4034-8694-76cda2e5cd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac10cb06-3bb4-465c-b82f-fe2ce3c019c9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafd1457-e340-467e-b88f-4af25e4e0cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9251d5-843a-48c2-a88b-8a5438b26186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab9e281-790b-4aa7-95cc-9e34084c0f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a5c22b-a9c3-4117-ac72-49ffd5159271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9817e48-446f-4ef1-aa71-4a8e8759eb9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261854d5-936c-4ca0-ad21-546931ec07b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd076529-0375-431b-b289-00d93129239f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242453f4-13d8-4351-9e6a-5f1d80ed61d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5c83ba-21ca-407c-868c-fbfb486a4c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd70ac1-4933-4e7c-8b8c-52ec0ae1464d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c462ee98-1452-446d-a1d2-081d2e7ac1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44809147-20a4-440d-82ab-81f53a6b0b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468e6d45-bcac-4dc6-9b28-b8976147d62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8aba35-2df5-4c3e-849f-8647248376d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ba7f0e-1257-408e-88ba-23ccf7fd86b5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49466f13-f526-434f-8204-0c9608e0baa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d3b0c9-ae8e-4527-ab36-56af467271c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40877a8-5d58-4a9f-9a13-89a792106086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a998203-5fc1-48ee-9a5b-ec6770607738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b91aaef-94ce-4403-a476-f6ffc2c03b7f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2569ec4-5b35-4223-8588-3b2d18523189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5eca30-d479-4de4-8d17-69d24d675114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a3ba45-c668-4e76-bec6-8af9a33309a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e26dd3-9e37-4664-b8b5-a4b3de5b7050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13d7059-99e4-4a58-ba08-379b7e5604d7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2232809-5efc-44c8-978a-94967629f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fe7693-404e-4268-a6d8-192e235fa204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31ee58b-c99e-428d-817d-2043f296fbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5af4d28-8ec4-4177-b377-f6402c04e889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ba5ea6-f634-44cb-b22b-7fd8f45943ac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce03c351-c74b-467f-86d4-51376f94ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cad286a-eee4-4f32-9c68-82554df325d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13afc453-e030-4c22-b085-6e213aefd642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e79b068-bc22-4585-8a7c-775f577228e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdcb08a-386c-45fe-9308-836ae87561b9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95bc40b-c39b-41ab-b525-2cefbcb35233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688393f5-51a7-437d-a645-83f9d1144910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46845284-77ed-415d-b9f2-d40506daa9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1116fe6b-48ad-4e93-9915-d8691a51b6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa406fc5-a3f0-4ad0-b22e-8883409e9e43",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b37e2b0-7111-4823-8ee6-87c4c3006e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3707ee49-30ac-4730-b7fc-930232d9ce04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134765a1-2e97-4154-8e77-a8ad40271c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05c47f4-142b-42e5-abce-55c16655a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee5ba8a-8a70-432d-b76f-754d8e0e21d5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977ca986-ebf1-48b8-879e-152e83ccef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f32a9c-23be-4131-abc2-67f7506de67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bb8d6a-a527-46ee-ae83-965aeb906548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f12d6a-9f1f-45ad-81cd-6b424181e332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d27b59-b1db-48f1-b5cd-732d02a649c4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c952c2-8202-47bd-a769-952502e41da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad701574-cb45-4d56-a281-7ebd30e56184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e343d6-1d87-4f73-a725-c19c49173b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "335c2150-44be-45b6-bce3-7e44880fd29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb2aaeb-1efe-4f82-82a3-d82141001aee",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f90bbf-fa36-4b75-ab3c-2b366d8bfc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2c2e27-f989-4188-857a-023522bcc2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc39cb4f-34e1-4621-b91a-3a5d7edf2e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30e2f09-581e-4bb7-bb23-bcb99345e960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e6d070-c4c3-46c7-bc86-4e0d67228db6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f2e7fa-26cb-4b6f-a7c0-4f9a8092a732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40808bec-0678-48e8-a0af-1a9be7104b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba84f25a-1423-423d-899a-ce68cb5bd75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c6833e-7706-4e7d-9bd5-1097f7540230"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29dac78e-a9d1-4fb4-a609-2e7da58fcd7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2b825e9-4f10-485a-80b9-13a7223dc90e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e916d6-19f1-432a-8f0c-a35ecbecc1ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a876cd-ab1c-4239-8bbc-ef8019ea735a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdd399d-bdcf-48e1-b58c-a7752b410d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df7aa551-8047-4dd8-addc-618416dd39b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "850394b2-1ac8-42b5-ab23-ffce384e83ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b041c1bf-e8ac-49e8-9636-d0a38031c2f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "297e0373-1af8-49ab-8306-a0843b3ecffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f86582fd-0cfa-457e-9373-d5e8965781a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b7cf038-a433-45dd-92aa-16b5616729ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54936ffe-5cc3-4db8-a802-ab509e9b8567"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37f7b6bd-6118-4c94-95f5-1687db02116e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99f7c020-f3fe-431d-b687-d694f814dc13"
            }
          }
        ]
      },
      {
        "id": "9793851e-63f9-4711-9c81-020a56be9810",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4a089db1-1f7f-44eb-94ad-009de6a95497",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1944a291-3388-40ee-ae2e-b1529e3ca873",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d08dbc9a-d3f7-4e7e-858e-821a8abc8193",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11795c88-613e-4f70-a607-4e9acc5fa32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272bca21-8a8b-4b3a-ba39-7fef7da8da19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413089df-a291-4e76-8ad2-e0d13e733ec5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4004c687-ef14-4807-8ab4-f3a523f5553a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899fd8a7-341a-437e-be5d-96ba4100fd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7f3c1a-1286-4592-981b-e9a9a498dda7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f493d09-2062-4414-93b0-2a4bc9900b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d788f796-1ef3-4496-96d7-07bb0a9d8bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2add0e-cc3d-4008-8d91-d7cb62703467",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3871dd54-ee7d-49b2-a234-85d3d8782c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76f891d-3fde-4208-bb85-36dc4dc315bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06999ae9-32e4-4bd2-8c21-5e5f59ebe08d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d08e9a-bdaa-491c-a9f8-6d0e62b8f523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4fc0a4-e9c6-4aa3-9769-ee4a720ffb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe09024-95e3-440d-b908-22a8a59d4347",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488b4c12-11c2-4237-8e44-e130ab779e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140aeec5-52d0-4ebc-aaae-977471e75fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c79fa4c-87d6-4ace-9521-17e7714a5d1f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162227b3-be8e-4d44-8016-5f99afe85043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32aadeb-41e6-4d99-bf30-e12aa72081ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e30d20-c67e-445b-8f8e-398622bdc3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86d1854-e32c-42b6-9ac5-191063ddd22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958f20e7-1267-4a78-9c50-077730fb505d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9726ae-e4b8-4356-8445-6bd11b7537b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88afa69-11d6-4652-8e54-20d4c12a4f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37d36a5-5437-4ceb-bc49-3f3ce1355bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452417ad-a096-4f71-9493-8ee309798ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f10ab-4bca-48c3-98cf-098db2a53509",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9dbde7-350b-43db-a976-e22f372d570f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a448d75-620e-4ab1-8e12-54b06e9718fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227dac5f-44fa-4f1d-9ec6-bdb4c63ffd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7627403-8dc8-4224-906a-4bfd5571c5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a07fd24-9ec8-4fbb-a73c-90076422d4e3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321349e6-6119-4612-9190-fbe8c1a55a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb1dcf2-a79b-4cdf-ae7b-4c1717a08104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58df7fe-8cbc-48b5-ba44-db89cf0374af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd4f8a4-aa3f-4020-87c3-d64fb24ef427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e856c51b-db5e-4f2f-8558-04e4a73f6d46",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c4c7ad-2f6f-4b9c-971e-7f4fe4b29811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51a5764-b1fa-43eb-b2d0-1dd451101c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b60dead-0807-4d79-a542-b4d6d8a3bac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedf11fd-3650-48ca-9180-a76c9156a66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed11af8b-6584-4eab-92b0-32a9e0916a4f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f054c095-4aa9-4486-9c9b-492cb50bd401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9a75b4-4d98-4298-96d0-194744bab63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba02a37a-142c-496d-8754-3f3f6b384218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4006fd5e-b208-46b3-a033-12b6d72d6825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e62fe0-1fed-457c-8a0d-fd9e44128591",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7063314d-e518-4c42-b26d-625b24c1c491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed886442-27a7-421c-b9c1-bae384a6713a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2371aae2-2561-4697-903a-eb37bc2edb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d635817e-0c23-4f9a-986f-ab4c2e3f12e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0122b8d-3dd4-4abb-a785-2a4ed0b2efdc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c2388e-4f3c-41cd-85bf-b3a3c2dc7281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da96a723-2299-43c8-8afd-2f0c1b2c49a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2275b63e-5447-4b65-9c94-bb63751e0477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e2241e-d570-4ffb-9e40-029ef2f8f0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defddcbf-4b6f-4ad9-9d65-2388e3dc9065",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa00654-5692-4fc0-b562-2f19a3ecc760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532013e2-ba86-451a-b63a-ca04f7f08d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1741d68e-b557-4858-ab0d-cf1df97f4a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0335d804-89f6-422c-84ae-143087c0ee00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388feade-22ab-4f96-9b1c-ae7609ab186c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dab814-a662-4b92-b5ef-fa90196a9ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4bb879-84c5-4191-8925-56e07367365d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4345593-f3aa-454f-84a7-24e2605979cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca7f724-0e7f-4714-9e28-b3bd04745285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2031488f-6260-4fdf-9f0f-c2fe485baf9d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85a3b5c-5c2f-4a75-bda0-c33fd1523d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ab8980-4af6-4e7c-b3b2-685aee161b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d310a5ae-74e3-4669-a0b7-abb6f8e826a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026c3c8b-1611-48b3-9473-9de58e2fe20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db92f9d7-5df2-49b4-ac53-4300743ed120",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2d4e80-c2cf-4953-8a01-375fb2ccf3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c412cf-e403-43ff-81d2-90c513237a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae0ce73-9fe4-45d6-b38d-c367fa130a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f31b696-cef6-407d-97d7-b19bfe1ce5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c642bb-3a8a-4017-9b8d-67256d1470f2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a122e2e7-2c84-46cc-9aac-783d6a1f29f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9626ae49-4c38-4644-9609-426dceabde08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df38059a-a252-411e-b50f-088160bf7f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abe42b4-584c-4726-9f14-d76dcfccac16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b97db8b-cb31-4ba4-a9ae-e9d217ffebf1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b4f09e-b72b-40a8-ba03-6d32dcfc8e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5b49eb-c3fd-412c-803b-260ddad3e926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4788fd47-d4c5-4da6-8527-967b6bceb92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d237db88-391a-4a50-a665-9c7e616e04aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854f8cca-5c1c-462b-8ba8-90fded385d45",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11f0e28-0d14-4a39-b90a-d853bd0ec5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df398eb6-fe78-4a17-9164-35993d6bfbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8ed23-f3f4-4531-8003-0ce7add9e39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2e1445-9e21-4921-86e6-5fa775b11da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e54ecb4-410e-4dc9-b628-2ed4ee5846b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c36622-3b1c-4be1-9473-8fdb1007caf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6555b8b5-7574-4874-850d-9710e3a082e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb9dbcd-d564-49d3-9ee2-f27dd71711b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e4e49f-9158-43b9-be4d-b2b799a53da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccd33fd-0298-4f4f-8bc0-b49b50d2cdf3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8088c2fb-5b10-4403-877c-3dafaf39d152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ea0957-6738-428f-8e39-44b89b5b059e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511dffa5-5e7c-4089-b978-a2e7266cf38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56024b8-0e0a-4bd5-a102-c2e4db9d7582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328d42de-c3ba-4704-bfe9-3a3bbf9c86d9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d49a2-cec3-4772-be68-2242bebe898a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "446c4db1-72f8-4476-ab07-f0c3464c8ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01dce5c-9e6a-477e-a502-aa05e54dfbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffecbe8b-5c21-4791-898d-8bb78a14649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6167e792-6524-4cc0-8483-96832bf19572",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6f3ab0-e436-40de-a563-aa79df8d1867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced33e7a-f12a-4f28-bfa5-ce83a8173daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fdde9d-bfed-4304-ab49-7b035116ef1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1048fe-5d86-40df-a9e5-b3356c26cd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6d76d7-4d6a-4c10-a229-6105d6471c07",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826186a5-1847-4549-a677-5e3ef078f2cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be46a4f-aa9c-46f4-8c11-190eebec84f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacd1bea-0e84-4ecc-9416-845fb3c3ebd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5988aa0d-65e8-4faa-8687-a3eb8cf6adab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31d5118-a12c-4971-bac8-6cd200e5319c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bb93cd-ff3d-48ad-ba25-ff58164084a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ec6dcb-8bff-4272-821f-2ff016ac9861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef4bf90-f4cd-4998-aad2-dff7a01e795f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da51dc43-80e3-4d60-a8d3-8c5eff592d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8722bdf-0eac-49c8-9403-223f8e782bfe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dc9d7e-5621-463d-8051-b951bcbdc153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb49bf5-67b2-4225-8e37-e959ce0268a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bed24c-caed-4349-9107-34e4b785ff17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dbb5c8-9420-4134-9a54-1b30a8592ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f756df7-9df9-49b8-a9b3-93a63792d041",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fe8ebd-667e-4c61-942f-1e06d8445505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60205fa-4387-414e-aeb5-c9b2cd233861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb71f6a-988e-49ae-9014-380ad575faea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19762272-a411-49e3-86fb-86e199919297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa243721-540a-4073-9bb8-45aa05955312",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156a8565-04c4-47ca-bac1-f616770b66b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae549e86-9f86-4f04-b2bd-6ae1043f5c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a616cd-ede9-477b-8af1-6db8d5652ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f364469-41ae-4e16-9f10-a3c1d4c816d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfbc68b-735d-4261-aa13-f8a8782d14f6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cbecb1-229f-4f3c-88c0-bdccf78cfdbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484fb9d3-2be9-45af-a800-fdaa9ea2f211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eca4465-50e4-4bec-a209-e123df3d5222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02403951-c0e6-4bcd-8db9-a3255f0c6d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb447e58-c7a3-4244-b3c7-1186f91916d2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d809ab16-f0cf-4f22-ab2d-f8dc4823d611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26e12aa-9c36-4d03-a0ee-5debcfabc0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7603d3-f399-40ed-bb87-e3ccfbee007f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157f5310-d644-49a6-8bf5-1830ad88a110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15ea9ff-1597-4121-873c-0801dfd1f834",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25977a87-3c5f-47d6-a52b-4367154c40b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eec4aa5-8c10-40a2-97a1-d2a3ee1d4df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea09e04f-024f-462e-8e92-00df6da68d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af2fbea-ff58-4f48-9c4a-097bdf0e082d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920fff18-6032-4ae8-9c46-34adaf27fc01",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd9f92-8e1d-4530-9d4d-c92457809476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10d05b7-e946-4145-beba-88960e83fc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5891bc-3095-4197-8017-b9e2e03c876f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257d6117-d584-4883-a460-7d371c870834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b94fed-f6d4-4338-a98d-3a452a8a15f0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254e96e2-c19b-4009-95e8-7190d9e144eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c179ca4-b972-4308-ae06-2163a637265e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bbc3ad-27a3-4b06-9caf-9bbeae1425a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348471e0-1fb4-46d5-9830-0fa3216dc553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71fc07b-10af-46e7-8ecc-a29106d7831b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0a6afd-e969-4db4-ab74-ba872f301871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00847eb-d7e8-46b1-943a-5f0178f272a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dec1075-dcf4-485f-abee-a3087ec46a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5591195-c84f-4f78-9dcd-f990c2f5d9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47ac93d-66b9-4954-b7fb-0d0d209f83e4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162d4a8b-a586-4a73-aff7-49ac696871f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85b67ca-8dc3-4bdb-bd8f-9ed421e651bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacb60b2-bd2c-4d55-aae5-5df4120c98a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be13817d-e445-4d8e-9ed1-c256da2c89dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8877c293-022f-476a-854f-496afe23d57e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836da424-0064-4522-8329-c18aacf963ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a507075d-bfd5-47ba-954b-b42db7b28f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff71fa3-8866-45ab-bd53-058e7f67cd5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c733c52e-2408-466c-b9db-26c79df08946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6516c841-e63d-49f2-a22f-af8f1df852c0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb229807-ecbc-4327-afa7-447ea9d5a6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a48765-8232-4c44-95ec-b25abd0425d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91aa02d6-afd4-4618-809f-ec03b5fe6814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c015f23-14f9-444f-aac3-be119dbab3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027501ee-af74-42c8-8c68-6c07db0f901a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b121e2-559b-46ec-b944-52acf6b18d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57e6158-4c21-462e-a468-5436c149bac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcc6ee9-a2b4-4c90-9b03-5ad50eee597f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d903c87-e1be-42e6-bc29-c1630866386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43be5ec6-dca3-427e-b39a-b06610688472",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6186b926-8b8c-4121-a4a8-80252a7e22f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ba0648-b037-4723-a965-271c5089775e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d3839b-5494-49aa-b2d9-4cacd17b6f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3c55bb-a575-4bfe-830c-299547913547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4beacedb-74e3-4ad1-b790-6ea9f84309c1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e36fe2-987b-4604-9e5b-54692d86ace6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfdeabf-906a-4767-8821-5cc44d516a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0bc0da-10a9-47da-ad71-fad26716360d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de76b2d-3fea-4f2e-8176-df5d151c06e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d80e3b9-60aa-4a4e-b995-76af8f8ba3a0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae16c45-c8f1-4938-8921-50437e9b2c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5e6617-9f21-4222-bdb7-c82d575763d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25d370b-6a47-4dc3-8887-bcb3c70b04f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad5cc09-1348-4645-b503-a3ccf0d06267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5c837c-05f1-467e-9779-8e47e70c8133",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f32e7f-1ce7-48d6-bb72-280f464302e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b44be0b-88cc-4bc7-bef4-6d34f886c90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bf1258-385e-46c2-9eff-62b524714b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be43724-da77-409c-bdc3-010107ba7020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821fb90c-5237-4522-8a06-8fb15441b307",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a0742b-f545-408c-8e16-4ec9b284c844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296e1849-ae46-4b17-82e7-5884e7bd77e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430fb5e8-0924-4b3c-b00a-c436a49ba982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904700fe-f3c1-4450-a9e6-de9f6a3a7eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ed4e99-88f8-4c67-b958-08aece0b13cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23ed5c0-01ec-461f-a6a4-c1cd1d31af6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bc5b99-94d0-41b2-acaa-f16ebf7a5404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4c0654-8853-40c8-88ea-9a023bb72934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdd5bd4-26cf-4748-a208-29f6c82ab46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d409be-6c3d-4ef2-9472-9ee42713459d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4092feea-65b0-4290-bc11-f637f2beb8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa6ec56-c3f5-4c7e-8f39-15227c9bfb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793968d9-f4b8-4e0c-a3ef-d72bec602d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6812c012-b329-4c81-af27-28d42171c9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7e6ec5-7072-40ad-ab3e-75881476e43d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cec63e-a84f-4a1f-bfc2-a6351882997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da32126-3b87-435e-9b4b-2c9c5e823acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce307992-1e2c-478b-9a27-8ce8e9ff17a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87488758-ec3c-4909-9e1d-3f558f54e3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb295ff5-03ce-4caa-8ebb-32ff0c960193",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15430c63-b7e2-4642-b7b6-044567a21bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09476732-242d-4114-be0d-4e4c59346730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9398e5-4995-4051-9919-199036d08624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a276d1-a35d-4f47-ab28-1989480becfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a17cab-2445-49b6-b107-ca7ec7c51534",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb88b6f-a354-4a2b-a63d-53e02e9bb7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99d1176-2017-4e3b-9f24-290de6344618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe16002-a289-408b-a866-3d3a34b12913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec5c124-cf2c-4d50-b721-e6ca17c7b2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e12c522-8777-4adf-bc12-2ffb581e6c7f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe508f5-39a4-4590-8f0c-fbdea728bc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499e139d-178e-4f16-8d66-10417d92ecd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a87ab5-17fb-4edc-a908-407d5a1628a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353020e8-94ad-4add-b537-87ae082d259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92676170-962f-4c17-a148-8164ff7ac354",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ffebbd-d3a6-4b53-85b1-db3ae719be1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201469ee-a6e9-4a51-b4ba-9a105c5edd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327910b6-1e81-453e-96bf-7ae7dadf8303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dddae9b-3118-462b-b2d1-a75eaeef4e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e00b9a-9610-4364-b754-5766bded0f76",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1ac1e1-af37-48c2-aa39-9665f6a174a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695e3c52-a7d5-43d2-a60b-abd7ebcd51c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d434885a-ff00-4ca8-b115-f30067c5ca2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1c681d-528f-4896-82e3-77de992be650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d11b7ed-1d6b-4ad5-9e17-33885c0f68f1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2496f891-e1fb-4ecc-8380-fb86f80465e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918bf5f4-09cc-4d7f-92ec-6a7f41a29a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62b3aee-8979-4eaa-a5af-cf5c4a17ead1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ff9cc7-d260-4933-b3ad-6bbd9acbef50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1197edaa-fe21-4a78-b06f-ca335211f44d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72854d6-db64-4020-beae-aae4fec2a0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4cf568-4a2e-4b7e-bf25-4e21dbfc5c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e949f955-352e-4633-a993-505958c86060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0129bba4-bcab-4f10-ac12-af09d6a761e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc04d55-8baf-4ecb-89c8-7efff9154247",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca0ac91-534c-4eb1-95ac-c74cd1d23bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdffe1d5-739b-483b-a7b0-e44da90ab7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6c1509-b97c-42e3-84ca-92c768ecf18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0eaba4e-f369-48fa-923c-70772f1aa131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04311e2d-ffb6-4465-9b7a-82a1fb5fc90f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e178a5-5523-473a-8809-b5c71756e2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6402b554-abe0-4262-83ac-c23658b1b3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8b1310-bd54-4ea6-9169-b87687ca910c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80623c44-88df-4c22-82b4-9a5618c2a875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0850610-d2d2-44ae-8efb-7a752ab5958f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad704d-64c4-4c57-b3f9-fbf517b88147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a3d940-37e1-4d86-9b34-52c0d430b5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f016bcc-be53-4436-8837-c59c474eabbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1988741-e49b-4f89-9eec-20fabf33f924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990d0335-e247-4662-9a1f-731cdd89bdfd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77a35db-7a6a-46ac-b03a-1a147c1b360a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712ba6d8-3112-42a3-885f-16ccbe5eff07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddd5a06-6840-44d3-ab3b-86d06474da7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4b7a02-6967-4562-aaa1-105a15cdeb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79afcc3d-d665-430e-a653-b08fb1f7c6e3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d19abcd-68e5-4173-bae8-5b1a6c50a996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a7fe9e-d600-4a77-a7fa-bf690b2170af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6031e1b-4ae1-451f-b751-b46fd1280fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74373add-ea18-4fc5-bb57-78f58d25b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a84a8df-2620-48ab-a501-a3994dd4d335",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e85e7a-7a93-4848-95ad-607a88fb54cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac158d2-4f80-4209-a458-1526f0d8b830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e9ecd0-bedd-487a-9c24-30704cb6a87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74084fc-e861-4944-aa45-0ae6d2f48abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d0c2a5-7cb4-4b61-8905-60e8c29a72fe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01adf1f-ca8c-4862-a8cf-b2fd657c5a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98527af8-7a16-4514-9a75-83765ea389f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37639ca1-41b2-4557-bfe7-38ecec4c3e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74a97b5-a049-4f41-be59-8fa6e8dd48f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1615815-887c-4ef1-95cb-9aa5a8d85699",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925455df-31e6-4a18-85ad-98757c6d4718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a1a727-1b45-4eaf-9ab2-9c9996f250fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914232b3-e70d-4f60-a403-fbe826fedd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de5b1d0-e945-43af-80f1-a3097a1937a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defcb530-e36d-47a8-98ed-6b9e914ff8b8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b74ee4f-eeb4-4d91-addd-c9fad332bdeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18fc22fa-6c3b-4563-bbf3-a410f88097ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c21af36-7d8e-4191-b320-53f2d0caadda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1e1058-62ae-4eb4-a32d-c89d8b21039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e80aa3-11da-427d-85b1-78b8380169f2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237fb44e-7fda-4b33-9087-611c40aed503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d9a38b-c4b4-452e-b43a-81d17d6b171a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ea063e-f87b-409e-880e-ff822bc5e656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ca8019-3664-4f87-8e0a-f8af5289fd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b85088e-aab3-4884-93a9-29308e462cf5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474e0be8-7ec9-4035-81de-a612f60edd6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8fc200-f80b-4014-9779-8b94184619cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c32bf60-bb9d-44ad-aa29-95f253814daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b70fc0-15d5-4cc1-b668-0692c5581869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32099ed6-7e1f-4cb3-8bfc-54ac1c4abebb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b69207d-9fe6-46c4-b462-a71f9a001c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "badbfbe4-b9e1-4a77-9150-28a0330255f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39fc687-715a-43b6-bbad-1d104f8a3186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a084ea1-15c9-4e54-8859-a143a8878699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73641a98-c6bf-4c5c-8d5d-dfb631b1a4d7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0105b4a-7bd3-4620-9c4c-b69a989ea738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccc1892-cbfc-4fb0-b7d4-419b29de0086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90de726-1673-48a5-b69c-f06a1b678d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ee4a52-a5c0-43e3-9282-3a2ed22dd9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56532e96-c249-4dd9-bc2a-273c0672a189",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e402f4f5-fb1b-4918-8207-41762034d362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999fe713-3db4-42c0-8ba5-c08569b4c273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd3ede7-28f0-41cf-8edc-9202045aa322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09464d90-9b9e-4a3f-bab9-dbeabc1f2b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f11e36-c228-44ce-94fd-7ae38aaacb90",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d61d8ec-30f8-4322-ad86-88b6c126c465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0093319-91fe-4051-8834-630c720e7dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe60372-e095-480a-befa-fa088ebfc127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0ef92d-21fe-48bf-9b23-bf6023af7b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7724a2-f28d-4f7e-bc55-16c99b65da3b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15b66f9-5850-4915-ac41-4e5bda8a64e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6dbe3f8-1d92-4ed3-9f5c-626b9f3aeba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75e2f2b-c630-413d-8ec3-07a440516b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e62865-1ff5-4ca9-8782-e42f9c581f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b04c829-06e8-4b23-b6da-9d7aeca2cb14",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efacc965-6192-4cea-8fa6-1ac7b652a368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed21d8e3-b9da-4386-86e5-114e02280ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf986ac-8696-49bb-ba81-417e3b7a4d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28faddb-e642-4c1e-95ab-436eceb087d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5674f6f4-677c-4006-9f7f-ec33afd8e577",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0914c1-ad7c-4a9c-ab05-3581642a6b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc3fde9-79e6-4c3a-94cb-5635281ec347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc562111-7357-4e3a-8e3e-648479862533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5833514a-adb7-4af4-9a53-f9c23ce6c856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7298e2ab-d63f-4a4d-854f-2928c34c096c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c78ba0-8e06-4675-8618-04aeea5a0c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa240df-7645-4b5b-969e-91870a1a6a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b1a11b-6255-46a4-afaa-d673b948706e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82312019-f58e-4ea8-9bcc-aefade6e5eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31accd09-256d-4927-b8f8-98f8461af9bc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7cd060-da2e-4e18-a27c-d0e51b5d5793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe1a308-2576-423e-8531-387b6830598b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aef3bf-97bf-4f96-bf36-6b6e4cb7b055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a72349b-7f27-4e57-86b6-f507d8354805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e310700-fa1b-4378-87e5-2483790aac0b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62dab51-d2f4-469d-9deb-be00a5de3455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50639c74-723f-4a2b-a086-fa7e4505060b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e8a78-aa3a-499b-a955-5b4e062196e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22733c01-fc6a-4728-a091-7581f87962db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4975037-d9d2-45b1-b600-6cc120a59fdc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9d0651-5cb8-4bac-bb85-6e02a6ba626c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0499c5-9451-4961-8e9f-6d1a47ac90e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1715e813-79d5-4a60-812d-e9bcc4767ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb09b19-7c0d-4984-ad5f-f3920e5098c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a850fdb-0da9-4358-a378-7011df3ec63b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4720e3a4-9575-450a-85fd-34588f949063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0e386d-ddeb-4094-bde9-291fcfc11e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847189a2-467b-44c4-998c-a1b7b919a151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c86b6a-5ed8-4034-814b-30c496be43c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18fa97e-279a-4636-a216-46c6c3e95fd5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e405e6-8785-41bf-96b9-b2a803e8dce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31b5023-ec3f-45b1-b732-fc82ca553154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06246f50-6484-44e2-8706-42844ab956ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3351d8-dc75-4842-b4ee-103cac2e2838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4629db-8503-4e1d-9a16-4e12127d6737",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330af23d-d665-4062-9009-850beb71b710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062d2045-a259-432a-9bb9-5bb9707755b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1594767a-2707-4465-9974-6f3d1f2663f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe30131-4b5b-4c6d-b19e-b36860c3bb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7661bf85-ef9e-4c50-9214-66190af4d625",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b1174e-6753-40bc-8954-9b3211fe98e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8ec634-9ff8-4087-bd5c-f358e0c1c1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9fc857-3f29-46e9-95ec-db2d4f9fba97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bdbc19-b826-492f-8c46-f7b15c7d7cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215c9a7d-aac6-44e1-9559-d609e3759e51",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b35627-4515-4ab8-a165-1103599d1ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a2e7d11-d477-4e7a-84f1-8f69bc18b5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e29f95f-13ba-4bfd-8220-ac0794540df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb1828a-f23c-49b9-a724-9a4b3f47471d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add9867d-0c6d-4c4d-ad6d-258ca2d955e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be02e308-fe10-45b3-8ac8-20edf17742c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef92e0a9-c60b-4c17-abbc-bcbb475ba447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf9c280-0a7c-4220-a5f0-3753b8e21bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bde803-8cca-4db0-8e49-a65770baee20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5542b386-4c37-4dda-90b2-46551d3a50c9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a53b37-accb-4fdb-9b4d-49738d6ba65f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca54dae9-772a-49b8-8e13-9e8aa5599bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad55edf5-2f89-44eb-8194-9e80c8ad86a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08176bff-c13e-4105-b5e5-d51ebd7d9f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c384aeb4-394a-4a2f-87b9-ef3f2b6d032a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f87a749-bd78-4d71-847d-07d297c681b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39c8ef1-4b1a-4cd1-b304-291c9bd01fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d141739-ad73-4d7c-930d-77cc54ba1351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1771f81d-bcd0-4e42-a520-d1710ff72ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a707816c-564b-453d-a932-a360ab7d6c8f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5331951e-f942-4d06-a0df-59b40d4297f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52defa8-fe0a-4bb6-8281-dcf52ae2691a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bc563d-304c-4f67-acbf-15b0e387e5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755da9c7-2457-43f6-98dd-4d82e3932667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc76ef8d-0acc-492a-9798-2c16f1b127f8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0dd38e-4f3c-43bb-83b3-71bb4c4bece5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849df88a-bcc9-4101-af29-88105a377244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac55ae10-99b6-49c4-9c97-7daadad821e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c2e681-594e-4896-a10b-8ee9f0653728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08961e44-1102-4074-8d26-261b724fd45f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7c4422-a246-45d6-8fff-8bfb84ca1e26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3effb43-c95b-4bd3-966a-0aeeb932e1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97b4fc0-afe9-400e-a159-fb9ff02cc844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea458731-e86a-4aff-9c9f-dd4ee0c953bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6c177e-42ee-4ffe-a0bf-6bdcb1f700ea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa51f94-3e64-42fb-b994-ffbff7b3d6c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e9c9d13-76bc-4c8f-b4fe-00ac755ef217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a756a5-e5fe-4443-83ef-facd56642b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746c2c3c-dec1-473f-b4a0-c5415a8d58ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae118f1-fa49-45f3-a589-cbefc069420d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fd8a1a-113c-40e0-a36e-f973ce4e53ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c78e7b-4fd4-4310-9040-4b542cbd3f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e84bd8-741c-43b8-99ae-34675e7ddf05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bcab9f-86d7-47c2-a325-534d6bffa841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1df9311-6f3b-4cf0-a53f-ca87541b88d6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b7cce9-6434-4a8f-9a8a-21858a41e687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d34417b-e902-4559-88c3-1b7bb32f1097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6898b330-0368-4b08-9b63-2ff903b58197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7077aa27-2118-4a9c-bd3b-512d16aad367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caba2333-a051-4773-829f-f07e2b5de905",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411b8d6b-7307-4283-bfe3-883ddc9ad9b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f4055b-6446-4384-b9d2-b1701d2cf0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f06cb0c-570a-4073-87dd-1a733bea208f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3054e9a0-5aaf-44db-8d76-dc7964fbc918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da96da7e-ae89-4bb9-8b1c-9b9fe2c4dc6f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3370db28-da54-40fb-824b-412b3068169c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8562c5e6-06ab-45e9-99f1-36702e3c42f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700c1ac4-44f4-409a-a133-059ea7598dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ce51de-5ef0-4461-b470-526630628b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2475610d-5b64-4c99-8c8d-21e29aaf7356",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df1367e-db6a-4c02-bf9e-93a6e377b352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d3ce82-5b31-4751-baa9-d30ce07dcac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee423800-2123-4dab-846a-47e2757c840a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4c3dbb-6c21-4611-b935-46b501074c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1fd413-7433-4c0d-9b82-0e1874545e46",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7673de80-c369-42e2-aa1a-27760a27e702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1938aa5d-636a-4af0-8dbc-add51a68be69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d266fe4d-537e-48cb-a068-8d966a157c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ab8273-ad1e-4d72-9628-10cdc55185ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3871d842-cb1e-4704-9d0f-86adfee93d57",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad09879-9de7-467e-9e3d-9da61490dc5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "758d7663-5b3c-43da-8268-901b9d02e3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2633a3-9597-4502-a2e6-49c1a637cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc9b31d-bd68-46ba-9454-546f17573076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b3d787-80d0-4a19-88e8-66a6a28a4465",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd02fe7c-e652-4b4d-9c53-9fed16496ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd02cc0-69db-4f6b-8be2-8e129dac7c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b058e540-4d37-4cbb-ab5a-69c8f493e222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e51973-1843-46b8-ac0a-4d1b0b5d4fc0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d683836-de8a-4c73-9781-d38a57c1c30b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "309c85e3-920b-4a53-9c89-103ed2d13dfd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d7b58fd-4018-4ff7-9330-367b0b5c4189",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "095beaf1-0ddd-4b2f-b6e9-ccdd19fa6d4a"
                    }
                  }
                ]
              },
              {
                "id": "9e8b58e5-396c-4a35-bbfc-57008744d6ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e77a53f0-4e6b-42d2-a54b-c970803a8f48",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5793ff6-3ec8-443e-9144-639aa13938a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cc132118-e3e9-441f-b694-8efe1204aacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7859853a-292c-4c3d-9c06-6b9581377bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e60c0b5d-4710-4ec4-a1c2-2d2331c5e149"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17dc0e5c-94f5-4564-8d1e-1a048050cd5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb2ba3f6-9d97-48c0-bebd-ac13451fcd0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d885dbea-6980-45ce-b5ec-93c42ef4b2bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3d7378f-4504-450e-a2cb-703c067ba4bc"
                    }
                  }
                ]
              },
              {
                "id": "a3218e51-d10f-4ec1-9910-0b4393911766",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e4fff82f-eb42-4573-aac0-c996a973d329",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f0b94b-b2a4-464d-a6b2-c1db51e196db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6b307afb-8c1a-4c6c-902b-c330293b74a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a40c46-a33a-4dd7-80f5-f1d79fccdc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319fc60f-82a4-4682-a435-7c88a394bb72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "000a532b-c677-4233-975c-488a17e3f507",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fd4f993-de8b-426b-8a8b-c05d5f6bdc37",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "653e7db7-40e6-469e-b9be-13d46171d485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3cf5b58-ea7a-4d69-a4e1-7d7fba0dad1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08f1cbed-0f06-43dd-a8cb-cfabe1920e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30711f53-0508-46c9-bc84-ea9d59371b21"
                    }
                  }
                ]
              },
              {
                "id": "3f92a9f1-9a3b-4203-87bc-0b5862fe5557",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73ce0ed4-7290-4782-a9b3-b51052a8dd75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f7fb138f-1f7d-4900-829d-07e314a5c8b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab4286c1-3d35-44bb-9f59-b871c15af7f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9609dba3-80d4-4e42-a7c2-2e70817817d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3788be1d-7531-44ab-9c58-d0d77c8b5b5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1b6e035a-cfcd-41a5-b241-a65a191888a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d1a4c36-4155-4226-b1b3-c138dbcce950",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cb47680-c8ba-4bf8-9816-3ac57431c4f4"
            }
          }
        ]
      },
      {
        "id": "12d8ac36-9391-4e07-b274-fb353283ee4d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6ffe0a54-3517-40f1-b1da-af258686748e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7b2d514-258f-44a6-9844-84150f58f458",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99558093-fe30-412f-a3c4-fbe87ad9ca7d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa415f4d-2787-4075-baf6-e158ebc2ef52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32681cea-259d-4a6e-9fdc-0dbe3bba1f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bdd8c4-4ccb-439a-8d6b-23e368d75a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f1c83ba-442f-4ac7-b6f3-92db16bbfa86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5fd8deb-3abe-4659-a08a-46e8db582525",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c36e0fd5-24eb-459d-9bf0-60de744542f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8379f0e-65cd-409f-8580-b9728a73ea20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "269b483e-4585-44bc-bc8b-43dbf6a6567a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8470fbf1-f9e3-4b7a-9360-d1763141eeed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "88917650-c5c2-4186-ae63-8acf2645920d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35b957c6-974e-4f76-b94e-60ffebfd6202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb321791-8b30-49b1-81a2-310829948113"
            }
          }
        ]
      },
      {
        "id": "10ce815a-f7be-47f5-a61a-a3b86c75b64c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fa248c72-6e0f-46e5-94bb-c36ace43ae18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a7d9851-ec8f-414c-815d-1b3a52f4f77a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "705ba83e-5d8a-497a-9f6e-c3cebfeddb89",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c805ca-623c-4903-a23a-8f63b645b6a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19258a37-8841-42d0-9348-0f173bc27b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69dad30-11a5-4577-b79f-fa67766df35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cebff4d0-55ca-47dc-a165-652ae28da7cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "692f9b9b-b45c-42b6-a7ca-09978b0c0b13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbd7b2f5-a623-4b19-9379-fde060ba0d97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a5d995-55c5-4b1f-8756-3da7ca772bb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecc1b02e-ba85-4c08-b0b3-5e65efd00afc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d618b73-b3a2-4b2f-ace8-1278acff6530",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab295e73-61e3-45c0-a63c-6b10193c13b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "386357d9-ee70-4848-8f19-6704f5f9035f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "783d3c6c-60cd-4f29-a2f1-b15e93869c19"
            }
          }
        ]
      },
      {
        "id": "fc278a16-5040-4953-961c-56bf58ea94a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5ea404a7-4942-4fcb-b2ce-9a0a70c9283d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f298fafe-53c6-4d3c-863b-f8fa7d4a5a76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4109c2b7-e829-4754-b6e3-56f1c81f91c0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33147d35-ed42-4539-992a-5822d2b4d394",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00783be3-9c43-4027-bff6-9672d5475ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3bc1d6-5d33-4766-bbcd-72b18e1c8209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2844b326-ade3-4a7e-90cf-9426e92fabbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9536cd2a-f77b-4f6a-b65e-ed3a59a4b17d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef5f04c-b5f2-42b2-b746-0fb793b4b8cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c98f05c3-2e8b-491e-88de-c0d861baf6f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bf63550-abe3-4401-965a-fc08c4969023"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83218014-64f8-40ee-bbb1-add0fe6a964b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b2fb822-a273-4887-8b05-a271e60fbcd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dff576a8-b7b3-44b1-babb-ee1d400b9199",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d9c48d6-1141-4369-84a5-3387adece101"
            }
          }
        ]
      },
      {
        "id": "c9646209-6520-42dc-8d8a-05c677e37dba",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e3f7a31-152d-4c3d-bee5-501447339ec8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91033a4a-d915-4ce9-8e19-070d3317a2e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "23935a91-a4f9-4871-94d8-10514b95c563",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75739207-315e-41ed-a499-9aa74753b388",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49208544-f2bc-4b67-a3cb-00f72885222a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.284210526315796,
      "responseMin": 3,
      "responseMax": 261,
      "responseSd": 21.849884896510716,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698194003712,
      "completed": 1698194017593
    },
    "executions": [
      {
        "id": "be90ad33-b121-43f0-a24a-5029e7c66c59",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7fd62b75-45c6-4118-ba21-1fa9ff99c21b",
          "httpRequestId": "d431b467-3801-4af9-bb4a-3daa802a5b21"
        },
        "item": {
          "id": "be90ad33-b121-43f0-a24a-5029e7c66c59",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "19ad81ed-ddbf-451e-a866-60ffd71cbcce",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "02570318-6e41-4aea-b941-7e4a97008856",
        "cursor": {
          "ref": "acea9dd2-6209-4ff4-ad68-6c8d360c1926",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fca9e178-6be4-4e77-9d1e-3dfa837d927f"
        },
        "item": {
          "id": "02570318-6e41-4aea-b941-7e4a97008856",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7dcaaf41-5466-4d9a-a8c7-77b0dde3bf56",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "d1183583-15e0-46be-8af3-8de8dedf1e4f",
        "cursor": {
          "ref": "466ea715-a8bc-4ab3-b33e-b557c0ef1205",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d893cd6a-fb63-451f-8dad-62b558fb73ca"
        },
        "item": {
          "id": "d1183583-15e0-46be-8af3-8de8dedf1e4f",
          "name": "did_json"
        },
        "response": {
          "id": "c6076c07-7485-48ae-9470-a1cfe89f1b06",
          "status": "OK",
          "code": 200,
          "responseTime": 204,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f383d7-a882-42ae-8320-a33c070cef4a",
        "cursor": {
          "ref": "f3cecf93-782e-4667-afaf-7e4cf161a9c1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e95531e5-8793-40b4-8b17-73d3bc79b101"
        },
        "item": {
          "id": "15f383d7-a882-42ae-8320-a33c070cef4a",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b2c5634-95db-458e-b417-b01308ea29bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f383d7-a882-42ae-8320-a33c070cef4a",
        "cursor": {
          "ref": "f3cecf93-782e-4667-afaf-7e4cf161a9c1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e95531e5-8793-40b4-8b17-73d3bc79b101"
        },
        "item": {
          "id": "15f383d7-a882-42ae-8320-a33c070cef4a",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b2c5634-95db-458e-b417-b01308ea29bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadf2a1a-366a-4ca4-be3e-71b7e6e092a0",
        "cursor": {
          "ref": "c4375965-089a-40e5-a7a3-2bc67e9f0404",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7ef5a8bc-9cae-41b9-b4b8-d0abce228c4b"
        },
        "item": {
          "id": "fadf2a1a-366a-4ca4-be3e-71b7e6e092a0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0fc6f910-7165-4f27-89fb-487c05b6832d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3b18f2-e918-4f03-9c83-6464efbec440",
        "cursor": {
          "ref": "0de1735b-4f3c-49e7-9bbc-718c9c585d8e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f104d003-969e-48b0-9f4a-c4afb5dd5046"
        },
        "item": {
          "id": "7f3b18f2-e918-4f03-9c83-6464efbec440",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8ac8e1bc-8354-4b18-a331-42a3a6a8bec1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad471d4-f30e-4601-b137-99bd4a05777e",
        "cursor": {
          "ref": "bf67fa94-8a33-48ba-a341-62033d117337",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "73dbca20-0f26-4011-b257-5dc91d870b1c"
        },
        "item": {
          "id": "aad471d4-f30e-4601-b137-99bd4a05777e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d685d5cd-5d46-4532-8667-fe54d2397330",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ea9bb3-4921-4b99-b72c-3a4d10566d58",
        "cursor": {
          "ref": "34c0a1ef-9a8f-45d7-9723-1ee0dbde9753",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "09e7dc00-9b97-4a89-83e9-02c20779dad4"
        },
        "item": {
          "id": "e8ea9bb3-4921-4b99-b72c-3a4d10566d58",
          "name": "identifiers"
        },
        "response": {
          "id": "d3450bbf-0b91-4afc-b28a-2886ca25c3ee",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f0a13d-c962-4441-b3b0-a7dfd280f10f",
        "cursor": {
          "ref": "b874a91f-c656-4833-9893-8460a5a9706e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b106fb86-6de6-43a5-9b37-02fb8e66ef9e"
        },
        "item": {
          "id": "d6f0a13d-c962-4441-b3b0-a7dfd280f10f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bae31283-bcac-4a99-a05d-e6c18d86d9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a76022-e281-454d-979b-741f40f63d77",
        "cursor": {
          "ref": "e6792714-02b7-42ac-bd28-959c42ff0de2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d244d1cb-5b0e-4aa6-9255-3b5f4efa09f8"
        },
        "item": {
          "id": "04a76022-e281-454d-979b-741f40f63d77",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae67533f-0a02-4bad-8932-b6f8f6a24091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9c5021-3426-4926-8421-d4de58464254",
        "cursor": {
          "ref": "6c83c893-f654-4631-8fd6-4ab9fdfc217a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4e14ec31-50ac-4e7a-862a-9ae2487af2fe"
        },
        "item": {
          "id": "7e9c5021-3426-4926-8421-d4de58464254",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "babdf743-b5ba-4551-9140-dcb70c9c34f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f27f57-a75f-4f49-8af2-dac607f6cf33",
        "cursor": {
          "ref": "faa37177-54a4-4465-a522-07971b1f8837",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "52cd9c48-def2-4b61-9829-e2eff3433c86"
        },
        "item": {
          "id": "a7f27f57-a75f-4f49-8af2-dac607f6cf33",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e744f9d8-4542-4f9c-8520-8c76957347fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fbea75-35d0-475d-8f1d-8018317b0daf",
        "cursor": {
          "ref": "94dfc549-9adb-4ab9-8d6c-bdad614de34d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6db2caa8-45fa-42aa-b97b-00b261e1dabe"
        },
        "item": {
          "id": "30fbea75-35d0-475d-8f1d-8018317b0daf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8cc7c095-9805-4795-9e27-df22fe374fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87099b96-a534-4cd5-9ffd-a282f9553833",
        "cursor": {
          "ref": "e36c9758-4fc5-4e24-a2cc-6a5958da3c3f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "82170a68-1f89-4712-9886-08a7b5ed4b9f"
        },
        "item": {
          "id": "87099b96-a534-4cd5-9ffd-a282f9553833",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0d56a5dc-9ea9-42e2-9634-a2632d2c6ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f41d64-df27-4910-8a3c-fb508fc78dd1",
        "cursor": {
          "ref": "637f5500-b20c-442e-8f66-25e2ace069aa",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c0b44263-6ca2-4c6e-82dc-0ca3b3fa41a1"
        },
        "item": {
          "id": "26f41d64-df27-4910-8a3c-fb508fc78dd1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8c015c76-9e69-400b-ab7c-7c91bbc0cf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec08505-769b-49d8-aaef-15c781ef0576",
        "cursor": {
          "ref": "0ce7ce94-86d2-440d-904b-97de9cfb6f10",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e83b83a-e52c-4ddc-ad9e-387e98aec790"
        },
        "item": {
          "id": "fec08505-769b-49d8-aaef-15c781ef0576",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ad51c842-73d3-4955-9790-555a53204358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529c8b80-9c52-4015-a14d-78d55d80b528",
        "cursor": {
          "ref": "57d3a2aa-d296-4984-ad7d-f242a730acf7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04ffa9e1-c4cb-4344-9678-7e7e5cc8ed7c"
        },
        "item": {
          "id": "529c8b80-9c52-4015-a14d-78d55d80b528",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a0d68537-a82b-4f07-be29-1429862fc40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06a6316-0241-4630-81c7-58f845de3d13",
        "cursor": {
          "ref": "3d4855a9-0e70-4856-856c-8884f376973d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c0ddca9-44a6-49ad-8281-405c5374714f"
        },
        "item": {
          "id": "e06a6316-0241-4630-81c7-58f845de3d13",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8107bdc8-13ce-4fb5-9591-725f40c85b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453c1d77-3dd2-4f01-9e71-48d2293bba53",
        "cursor": {
          "ref": "74a760f7-e31d-4f57-b0d6-2e77d0f6221b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6a87235d-eeea-4cf3-9b94-cccdc15cdf83"
        },
        "item": {
          "id": "453c1d77-3dd2-4f01-9e71-48d2293bba53",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b45cac28-a656-40c3-9084-c1b04be58ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8795ee24-2831-4d3b-83d9-bb8a01688751",
        "cursor": {
          "ref": "318c3ce5-6c8a-484f-b42b-307293616016",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8ee12019-1d7b-498a-ab5b-ce9f6ff754c5"
        },
        "item": {
          "id": "8795ee24-2831-4d3b-83d9-bb8a01688751",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "64130b2d-fd6f-41fc-ac83-d0eb078af5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdf9bbd-5888-4af0-a235-4be95081a884",
        "cursor": {
          "ref": "fdb767ac-79d0-4580-94a2-4d31b880da15",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8899b598-5aad-4bc6-8612-8eb6e75c5a47"
        },
        "item": {
          "id": "7cdf9bbd-5888-4af0-a235-4be95081a884",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c3d34f58-8edf-4e77-9fea-ee801bd9357f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac7f403-b27d-4a48-933f-785aa20d2b7f",
        "cursor": {
          "ref": "cd017965-8e12-48e6-b160-d85af460d357",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2e7fe7b3-3f27-4dd1-bc6b-3a671785f5cb"
        },
        "item": {
          "id": "bac7f403-b27d-4a48-933f-785aa20d2b7f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7498aab6-579c-4061-860a-1035161a1be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b8b986-381f-40fc-a5ff-d75cd34fdf11",
        "cursor": {
          "ref": "04d3cb60-a6e6-4ee0-a965-219a37782413",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1e11b1b8-2aa6-4365-bbec-3838bda839f0"
        },
        "item": {
          "id": "61b8b986-381f-40fc-a5ff-d75cd34fdf11",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "545c02b3-6b3d-4c7f-b8b3-91803e434dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafefef1-e57f-4eee-a47a-459bc33394ef",
        "cursor": {
          "ref": "debfd33a-c9b7-4fd2-8d08-2ae9b08797ea",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5107c65d-640c-452f-b0d7-835893147c34"
        },
        "item": {
          "id": "eafefef1-e57f-4eee-a47a-459bc33394ef",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9e52aa83-316c-47ef-80f8-a10d62eac4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96600c8-c017-4429-9424-c841ab25a399",
        "cursor": {
          "ref": "548f4b16-3f46-4314-a755-7a8a2b8771c3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d0220f84-4df4-4c0d-85c6-ebfa6ce9c05f"
        },
        "item": {
          "id": "f96600c8-c017-4429-9424-c841ab25a399",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6f88bb08-2487-401d-b2ee-e689ea878a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c78007a-0c9f-4022-a9fa-7dde964708c8",
        "cursor": {
          "ref": "c15a1944-f6f0-4758-bb2e-0ba7a2c9b6c4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ee57086d-8671-4cb4-add1-a3d6bc0a78f9"
        },
        "item": {
          "id": "2c78007a-0c9f-4022-a9fa-7dde964708c8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8393d498-ea73-4d89-a9e5-711d70a86eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe63b60-d2e9-49c8-a4b8-6674990bbb70",
        "cursor": {
          "ref": "6c23eecb-65f5-43c2-82f5-dfb27c04b664",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "af7985d5-0e6c-473b-a2cc-06d6399fd4bc"
        },
        "item": {
          "id": "3fe63b60-d2e9-49c8-a4b8-6674990bbb70",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "65aaead7-7174-47b4-b139-6b59c4d2bae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1edb60-f225-4591-bee2-91a6d9b64c21",
        "cursor": {
          "ref": "d0c7a301-b1e6-4174-a763-a97e8e150aea",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e8fe4a6e-5791-4dfa-8ff6-0831581cc610"
        },
        "item": {
          "id": "8e1edb60-f225-4591-bee2-91a6d9b64c21",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cacef401-d03c-4ac1-a406-53b39e5ad765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcac7c7-79dd-4ac4-b086-41b5c0d2dc89",
        "cursor": {
          "ref": "fc890c23-86a8-49d8-b3c0-5f4924f7fe67",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "161f0988-48bb-4260-8c24-68e564579550"
        },
        "item": {
          "id": "ebcac7c7-79dd-4ac4-b086-41b5c0d2dc89",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6dc154b5-2d2a-4145-a2c5-d8f60060e6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec68639-c33b-4225-a16b-33f20f94fade",
        "cursor": {
          "ref": "003dfddf-9fc4-45b3-86b6-af0eb6c00816",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1f9df10e-66cf-44b6-9491-04346a185191"
        },
        "item": {
          "id": "2ec68639-c33b-4225-a16b-33f20f94fade",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8a8aae1b-2a65-4ea9-8434-4a0cf8f1f8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a19668-93a6-4f5b-aebf-15b9316933a6",
        "cursor": {
          "ref": "8513db5b-9787-4981-9190-90fc10762960",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "40d26cc7-50fe-4ff9-8e62-efeccce52034"
        },
        "item": {
          "id": "87a19668-93a6-4f5b-aebf-15b9316933a6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5818ad17-a24b-4cd5-b1c9-56bc348dfeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d9db6f-e43d-4fac-ba59-ac247d9ab760",
        "cursor": {
          "ref": "f25a91e5-d06b-4fa9-a2c1-f807b00415fd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0350df21-12ce-47aa-91b5-86694e5f446a"
        },
        "item": {
          "id": "15d9db6f-e43d-4fac-ba59-ac247d9ab760",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e16b1ae8-3326-4afa-916d-e1fa30f90861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce68cddf-2303-45fe-9603-4195b4f29803",
        "cursor": {
          "ref": "9d059d78-221e-4fb8-8ba0-dcdb8eb12d32",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "032205ca-7094-4e20-9ea3-e01f7ca3f89c"
        },
        "item": {
          "id": "ce68cddf-2303-45fe-9603-4195b4f29803",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b274646f-ba92-4cfe-8361-44d17f7d9468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4043fd42-99c7-4f00-8677-73d44b919fb6",
        "cursor": {
          "ref": "6f2caa2c-981b-4d59-9e94-0ae9b36b90e9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9f99d276-6845-43dd-a521-9607420fbd42"
        },
        "item": {
          "id": "4043fd42-99c7-4f00-8677-73d44b919fb6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f7e3b8e0-c564-4913-b4af-8842918e145c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6944b24-07d0-4a77-ac0f-ea33efd38c68",
        "cursor": {
          "ref": "d050fc55-0946-4bb6-9770-8a853a808b04",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a2964564-cf75-4fdf-ba11-a3c8ec50ad5f"
        },
        "item": {
          "id": "c6944b24-07d0-4a77-ac0f-ea33efd38c68",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "beb0c36f-aeb7-41d0-9cfc-dc3c94154e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521aa147-ac7b-4432-965f-6a99eda3cacc",
        "cursor": {
          "ref": "31734750-3662-4e14-b9bf-d887df1621df",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0a79a5ef-686c-41bf-a1c0-1c325c0d9fac"
        },
        "item": {
          "id": "521aa147-ac7b-4432-965f-6a99eda3cacc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b054df2b-9f5c-4e8f-ba8c-9287f68e92b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff4bf2b-4d91-41fc-902b-146af8191db9",
        "cursor": {
          "ref": "7cb6e88a-e61f-4b1c-b2b5-616cdbe16854",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "02a57593-d3c1-4d6e-823c-0dc23565f616"
        },
        "item": {
          "id": "1ff4bf2b-4d91-41fc-902b-146af8191db9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca9c66bc-b4b1-4750-a282-2bfadcb90136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7060c705-1289-494c-b36d-8963a6981c34",
        "cursor": {
          "ref": "cd788a45-5b05-41a7-bbca-5e7dd3da6058",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cf9e37a6-85af-4377-b5a1-f3a7fe7d7e9b"
        },
        "item": {
          "id": "7060c705-1289-494c-b36d-8963a6981c34",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3379bb48-5cd1-4d34-90fc-9df3f3da1a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4552d73a-64a5-4e08-bf00-ca48a945e04a",
        "cursor": {
          "ref": "893fc01d-7362-45e8-80e1-a7f70c82d7c8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5a41b14d-107e-44c5-92c4-f02f5935ea97"
        },
        "item": {
          "id": "4552d73a-64a5-4e08-bf00-ca48a945e04a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cf09d9d9-24ba-4eae-bf6a-3b4e5e345c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6db90f-c951-418b-b5b4-b8a0e6cfcdd3",
        "cursor": {
          "ref": "c2186064-f0dc-4195-b294-118fe8797217",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2384fce2-eadf-48d5-beb0-7dab4d422179"
        },
        "item": {
          "id": "3c6db90f-c951-418b-b5b4-b8a0e6cfcdd3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d67ba7cf-df3b-46b7-a803-deb32598ed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21ac422-5d2e-4b08-a3ca-da5dabd75915",
        "cursor": {
          "ref": "cb4572af-1784-4659-a01c-6eb7362e77bc",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e0f60dd6-45c2-4a6c-adf0-b4acf0e63d05"
        },
        "item": {
          "id": "f21ac422-5d2e-4b08-a3ca-da5dabd75915",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0f543eab-b5e4-4860-98b8-5b5d8e5d9f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f8cb03-8f20-4b6a-96d7-4cbced118429",
        "cursor": {
          "ref": "82a81c23-860e-4638-a014-39515523f94d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "add01066-9cb9-44a7-b05d-c8e8ca79a168"
        },
        "item": {
          "id": "04f8cb03-8f20-4b6a-96d7-4cbced118429",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8a8b3983-2403-45b7-86b7-f9747afa711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378b6eef-e8a6-4ca4-a72f-a37c9aa7d0a0",
        "cursor": {
          "ref": "ffd68592-761f-4f18-9467-6db726ca27c2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6f34ce14-363d-4c16-850e-33e4fc550b53"
        },
        "item": {
          "id": "378b6eef-e8a6-4ca4-a72f-a37c9aa7d0a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "af887834-98c5-474a-9283-74df2422cb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eff99fa-a8e6-449d-8d70-c5a09b27254c",
        "cursor": {
          "ref": "8a391705-3126-419a-a66b-a0f47c302209",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9a98243f-6da2-4449-bd7c-9f8f60a72358"
        },
        "item": {
          "id": "1eff99fa-a8e6-449d-8d70-c5a09b27254c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "82eab116-2f5e-4d5a-963f-189a66afcbd8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf51805-6f9c-4931-bd66-33660ef36f74",
        "cursor": {
          "ref": "95fe08ad-f863-4344-8b7e-ea02620528f2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7fe36a63-3a0c-486d-b700-2b76a02f3a9f"
        },
        "item": {
          "id": "ddf51805-6f9c-4931-bd66-33660ef36f74",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0a101fef-5487-4a6c-a313-8cfacc7fe898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c319ccdd-6649-4f04-a3e4-5e55509f9dcd",
        "cursor": {
          "ref": "3113ba0f-e441-488b-8795-a8cd20f5a7f4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e0cb5b13-4c16-4b03-a8f8-7d8729e7db44"
        },
        "item": {
          "id": "c319ccdd-6649-4f04-a3e4-5e55509f9dcd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "686cb9d7-76a7-4568-b4a6-9ff42f37f8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a79b8b-c5db-418b-98fa-ff57c3eae350",
        "cursor": {
          "ref": "a65b0ba6-c5a4-4bd8-a043-081d8e22f3e4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ca0dde79-2e93-4fe1-875f-a82d50e3092e"
        },
        "item": {
          "id": "a9a79b8b-c5db-418b-98fa-ff57c3eae350",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c1edb031-88f2-489c-a4bf-b76387b4dd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a51a5a-4c04-4e19-a42d-a39d19d59785",
        "cursor": {
          "ref": "b4a7df8e-74c4-4f64-ac2a-2fed79022ff8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cd1e103e-20f2-42cb-a9be-3974e67d1304"
        },
        "item": {
          "id": "f5a51a5a-4c04-4e19-a42d-a39d19d59785",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "be3fb8d7-2980-45ab-947c-cb912950a616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12f80e5-80d7-4920-b0e8-0ee554cae26a",
        "cursor": {
          "ref": "3459e85e-646e-46a8-b47b-11f1bd7dc66d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "18c271e4-7f69-485d-ae2c-759b3f1d4c0d"
        },
        "item": {
          "id": "d12f80e5-80d7-4920-b0e8-0ee554cae26a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "552d9203-208c-4329-82e0-3acd588f221b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e85fb1d-ba2a-4697-af68-c0a8a3fab641",
        "cursor": {
          "ref": "7f93205b-fa2c-4830-8742-28741142fafa",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "81ecda9a-70e4-48c2-b378-fa2899d8f37e"
        },
        "item": {
          "id": "0e85fb1d-ba2a-4697-af68-c0a8a3fab641",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1279ceee-9610-4842-9324-6edcc73d99b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f052002-6458-464e-8f6f-47076e7ca30c",
        "cursor": {
          "ref": "70c4db9c-edb8-4b0d-9ec9-983735ac3d69",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "80276cd8-a511-4a0a-a23f-99db1beca642"
        },
        "item": {
          "id": "4f052002-6458-464e-8f6f-47076e7ca30c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3362ca56-e8a5-409c-98a7-3f94f90d63b6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d456a81-9b42-4055-acd4-2fba775f3fe2",
        "cursor": {
          "ref": "43171070-7b40-49cb-9721-b510f28f846e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "62be72cb-6d5d-41eb-9302-c49dfcbe9e7a"
        },
        "item": {
          "id": "6d456a81-9b42-4055-acd4-2fba775f3fe2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d8319f3a-13ef-472b-a5f2-4f3253395da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d16840-6540-48e7-bf48-cbebccaef009",
        "cursor": {
          "ref": "b9d770a8-fc53-461d-8abc-785ee8ae463f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df698122-8ba7-40f0-a180-be98abdf142e"
        },
        "item": {
          "id": "22d16840-6540-48e7-bf48-cbebccaef009",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "87fead46-8de8-4b77-8a99-2bd9a7c85025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bfc4b1-c8e2-42e9-aba0-eb17ad28eb33",
        "cursor": {
          "ref": "8cf50bd1-88cf-4de5-9d99-be2a6b971b58",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dd0e4c39-36c1-4683-af30-0fe92767b96c"
        },
        "item": {
          "id": "59bfc4b1-c8e2-42e9-aba0-eb17ad28eb33",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f5387c61-b449-456f-9610-2c2152a74758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddb743f-086f-4b94-9b70-c09a91cac8c3",
        "cursor": {
          "ref": "98fd43c8-3a89-4f7b-a9b4-b4d0f1a73d63",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "591ef855-74ff-4381-bbe2-8e3abe186893"
        },
        "item": {
          "id": "bddb743f-086f-4b94-9b70-c09a91cac8c3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "00fbbc3b-0484-4d27-bc26-1555e43a2e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce404e7-2aaf-4561-b463-1383ba884ffa",
        "cursor": {
          "ref": "cf45f23c-127c-4e20-b395-374abfcb6fec",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "42cd5516-e240-47ea-8d8b-cbd15417eaed"
        },
        "item": {
          "id": "7ce404e7-2aaf-4561-b463-1383ba884ffa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "111eb063-2e01-4598-9d95-d8e1a3391e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22761ca8-017b-40c2-9fe1-3747f2b125bd",
        "cursor": {
          "ref": "44510e28-8661-47b9-8b57-7010b4d486ab",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3a220fb7-8dc3-4b0b-b654-907b5d879269"
        },
        "item": {
          "id": "22761ca8-017b-40c2-9fe1-3747f2b125bd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "df5cfcda-a8d9-4b89-9c1b-7786f2b1cffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a59b38-c4ea-4699-a85a-55583f34c57f",
        "cursor": {
          "ref": "95934684-29b3-4789-83be-c941c79659a0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "603af636-c70c-4124-a01b-7127b93c654d"
        },
        "item": {
          "id": "74a59b38-c4ea-4699-a85a-55583f34c57f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "beba5ef3-a44d-42e0-afa5-9f043778efde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0d42cc-daff-49cb-a276-450503359324",
        "cursor": {
          "ref": "d244e385-92a8-4286-9e39-56bdd2aac8fc",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fa1717f2-dc14-48e2-b681-2627b7af9874"
        },
        "item": {
          "id": "bd0d42cc-daff-49cb-a276-450503359324",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2d865566-0f05-449c-af0b-f2f9f36c1a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cbba37-fd7d-4e44-9b2b-6ac8d642cb12",
        "cursor": {
          "ref": "2aaeeb7b-116e-41b7-a8b1-c197724360f5",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "469613fe-f94c-454b-aaab-9d9382283914"
        },
        "item": {
          "id": "30cbba37-fd7d-4e44-9b2b-6ac8d642cb12",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2aca6933-2cb1-4114-8ca5-e07368b28dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036265d7-b71d-4d0f-a3cf-fee443f4ee77",
        "cursor": {
          "ref": "3f376820-a694-4088-bfef-eb7e965a4d38",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "93da6d4b-6aa8-4b81-bcce-ddfebf8ef14a"
        },
        "item": {
          "id": "036265d7-b71d-4d0f-a3cf-fee443f4ee77",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7eba6e34-3755-4b98-b1d5-67dcb8ee756a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e53d04d-9d4b-4d21-8663-669cd75abff0",
        "cursor": {
          "ref": "225cb187-b678-4cbb-9eb4-cf5ac898596f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "424cd94b-76d8-4fa0-869b-1a0d36963abd"
        },
        "item": {
          "id": "4e53d04d-9d4b-4d21-8663-669cd75abff0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a9327c19-7adf-4520-b98a-d3ddf757e8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec8edbf-233f-4e09-93ec-3289998bd511",
        "cursor": {
          "ref": "47721790-59dd-4736-838c-dba775737499",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1a3f4b47-841c-4c5d-ac05-2b8465baaf69"
        },
        "item": {
          "id": "8ec8edbf-233f-4e09-93ec-3289998bd511",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b6a575c5-83b3-41f1-bfd4-02382a939e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a80d435-3642-4d65-a8e3-3246b67f3700",
        "cursor": {
          "ref": "e25c7c06-d2be-4b24-ac1e-71672081f530",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "05da1c68-a5d2-43fc-a1aa-c6f28c56b73c"
        },
        "item": {
          "id": "7a80d435-3642-4d65-a8e3-3246b67f3700",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fbc72821-d4db-4987-9941-470eb95fa662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92923f04-3742-45d1-be5c-7fb0877eb906",
        "cursor": {
          "ref": "d14ddc06-8b08-41d5-a35b-717833529e46",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "891ffea2-dc19-4b6a-9b9b-ce6a1312f9ac"
        },
        "item": {
          "id": "92923f04-3742-45d1-be5c-7fb0877eb906",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "07465852-759f-4a18-9fe4-5dbffead880c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c85210-f274-4698-ad10-4143025038cc",
        "cursor": {
          "ref": "7a397ed1-cfc1-4b84-9eb6-ef6af708058f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6aae3f71-e60f-455a-8ea1-7321c8096cda"
        },
        "item": {
          "id": "34c85210-f274-4698-ad10-4143025038cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8c05a80c-fdd0-4369-963d-39d7335f9609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07d17ef-ba99-4b68-9405-cd7da5a177c2",
        "cursor": {
          "ref": "c0877708-de0e-4cc0-a7d4-c6d158828f93",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b42ebace-a548-479a-be7b-34cd5a36ac4b"
        },
        "item": {
          "id": "f07d17ef-ba99-4b68-9405-cd7da5a177c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "871f2b4a-44de-44a3-a065-ff007e6ac3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff48c5c1-118a-4d44-9fea-daf37e4e356e",
        "cursor": {
          "ref": "703c3985-a890-4dd7-95be-8aa61a9151a0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8bf1de32-bf09-4ba0-9740-6022df9d11ad"
        },
        "item": {
          "id": "ff48c5c1-118a-4d44-9fea-daf37e4e356e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "38a19577-d940-406d-906a-63fa2cfeb1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe58b393-bdbf-4eab-aa84-5e8006d100ae",
        "cursor": {
          "ref": "a651c4ec-7d46-4a56-b6d3-db6780d06dcc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bca9b01b-2b3e-4b95-9f5d-e0f3a57e5ee9"
        },
        "item": {
          "id": "fe58b393-bdbf-4eab-aa84-5e8006d100ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a76618d1-dce0-4caa-9331-81134877f4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b639f65-9a00-438a-a0ba-92bf7074538e",
        "cursor": {
          "ref": "4cc64e77-9ce0-4a1e-9914-8f13066566d7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b2290dca-2d56-4021-82ce-07cd6b5d6d73"
        },
        "item": {
          "id": "1b639f65-9a00-438a-a0ba-92bf7074538e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "16c1c831-0b7d-409e-9fe7-d24ff19a462b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb60b42-b6a1-445e-b49f-0894b4de9cbc",
        "cursor": {
          "ref": "6e6f36e8-4db0-4402-8d56-ad7acf312dff",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b10cdc98-85da-46f9-b60b-c676a3aabb4b"
        },
        "item": {
          "id": "1bb60b42-b6a1-445e-b49f-0894b4de9cbc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ea7adfb1-bc20-465b-9f19-a416dea091f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a02cd06-df63-4e82-9ba1-7549542e67da",
        "cursor": {
          "ref": "fe0a7eaa-7112-4173-82a8-e1d48ae05bf8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "40feb5b4-66b8-42d4-84f1-012c854383b3"
        },
        "item": {
          "id": "4a02cd06-df63-4e82-9ba1-7549542e67da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4fa8b7bd-6ede-4f9b-a476-1a918ed76f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f67dcb-e68e-4ee7-8ac9-6a565a4ea26e",
        "cursor": {
          "ref": "ce94a65d-06f3-4928-8739-2d7e671b5002",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "988db56b-94fc-442c-b6df-902e17174789"
        },
        "item": {
          "id": "e9f67dcb-e68e-4ee7-8ac9-6a565a4ea26e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6e9620c1-db87-4f30-bc96-80eef33e460b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0361ac87-8941-4eff-9346-ab4aac5ff8b1",
        "cursor": {
          "ref": "7a7e3e9c-3ca5-48e2-bf1f-a05ee6b0bf7a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1fca9bfe-4e19-4fac-9bbb-a64036114c7b"
        },
        "item": {
          "id": "0361ac87-8941-4eff-9346-ab4aac5ff8b1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c336ab3a-4c47-4f1f-a495-6f7f5fda9732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d30612d-ae59-4c5f-bdf8-2e6fce636515",
        "cursor": {
          "ref": "9a4ef4ff-a34e-4243-b732-eca51dcadada",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1f407c7a-e367-4db3-b839-7e8204b436d7"
        },
        "item": {
          "id": "7d30612d-ae59-4c5f-bdf8-2e6fce636515",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f03f60dc-de7a-4606-8c4e-af658391a62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7ae283-1efe-44a8-96f9-e04d5340b179",
        "cursor": {
          "ref": "a652007b-1fa2-4ac4-9844-a77163640a88",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3e287de7-35fb-49a2-9909-49ef4defac59"
        },
        "item": {
          "id": "8b7ae283-1efe-44a8-96f9-e04d5340b179",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "958d2935-d3f2-4c57-a087-1840b6dbebdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0dee89-53b1-4bbe-905d-a0e4d7da00d2",
        "cursor": {
          "ref": "d7f2429e-330e-4e11-97d6-e5c09504d9b7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "72315269-6fc5-4a38-8103-4e686007d395"
        },
        "item": {
          "id": "6e0dee89-53b1-4bbe-905d-a0e4d7da00d2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "58b48dcb-650f-4bbe-a91f-6ff6d71d5858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b024d8-2fcb-4d5f-bea4-ef164fa53a17",
        "cursor": {
          "ref": "e32ba433-92eb-499f-a195-725225d9e3fa",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "001b2803-5d83-41f2-9eab-6445ccda1b73"
        },
        "item": {
          "id": "c7b024d8-2fcb-4d5f-bea4-ef164fa53a17",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cfca4bf2-556b-43fa-b2ff-43e69e6a490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a3c83d-e321-487b-add8-101bf3577fc3",
        "cursor": {
          "ref": "3ece4e83-5e36-4f69-8290-3140ac78f237",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1fa0e07a-c1b5-4460-b9d6-5f63d383c259"
        },
        "item": {
          "id": "90a3c83d-e321-487b-add8-101bf3577fc3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "11ecba9e-24bd-48d3-b45a-a292d662400b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a207f3d-bbe7-4618-b644-b9a710a80be2",
        "cursor": {
          "ref": "d0b4e4eb-7432-4bb3-9f62-73129b276a5a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "742903b6-8ae8-4d57-b4be-d6c648c687a7"
        },
        "item": {
          "id": "6a207f3d-bbe7-4618-b644-b9a710a80be2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bb67e511-2001-4d3c-ae02-4751a51831bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa7e0a-93a1-4515-b277-743e50cc51b8",
        "cursor": {
          "ref": "4448abde-ce49-4349-ad97-2b17a6997d4f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b35b93be-f43d-4ac5-98f6-ae7cd354f869"
        },
        "item": {
          "id": "10fa7e0a-93a1-4515-b277-743e50cc51b8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cab6ab9b-a194-4440-bfbe-ec9a1a4a3c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148c255-ac80-48c2-864f-2571dd2e470b",
        "cursor": {
          "ref": "404e626f-e97e-4492-bd82-2d14b6b65c98",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "48860dc6-b622-45fb-9dc2-4229aa3bf34c"
        },
        "item": {
          "id": "f148c255-ac80-48c2-864f-2571dd2e470b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "61130c0e-32f0-4c8c-a82b-41aeeca861c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4eab63-ce87-4a81-baf5-42018120c0e3",
        "cursor": {
          "ref": "a5a1fe3f-c4f9-44e4-a680-c2bb3c319d60",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "74a30d50-c617-42c5-a80e-cc14d5118f9f"
        },
        "item": {
          "id": "6a4eab63-ce87-4a81-baf5-42018120c0e3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8a63c562-40bd-4ca6-819f-67a38b4355a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7294430b-a3f6-4021-9355-45b58a2ea8fe",
        "cursor": {
          "ref": "d30f132c-5777-4e34-9b43-97b24a825f18",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c1f9c93e-f5f3-456e-b7c2-66e07a6e0011"
        },
        "item": {
          "id": "7294430b-a3f6-4021-9355-45b58a2ea8fe",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4c8c2246-228d-42b0-9cff-00b5cdc11736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf490ed-2e9c-4169-9441-f7724f40d380",
        "cursor": {
          "ref": "792ea06b-a8b9-4701-9432-0db2c0a246c3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "960bef42-f96f-4d84-8dda-f2e632823ba5"
        },
        "item": {
          "id": "aaf490ed-2e9c-4169-9441-f7724f40d380",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b7ee1c45-686b-43bb-8e94-7d3b99c1dbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dffd5c-36c6-44ea-bb0d-09f2e8b81c71",
        "cursor": {
          "ref": "5fe1a866-58e7-4fab-955a-d85e8b4697a2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7262aa1a-1db4-4bc9-9ff8-9c9ae5d68b57"
        },
        "item": {
          "id": "c9dffd5c-36c6-44ea-bb0d-09f2e8b81c71",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ac85dd10-c4fd-48ea-a700-f7210b478a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb5cf8c-f492-4c44-a6e0-65e756dbdf78",
        "cursor": {
          "ref": "1039282a-3b1a-4e9a-a7d1-7e14c353fd39",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a022aa59-1d23-481e-a48e-cf3daf950454"
        },
        "item": {
          "id": "5bb5cf8c-f492-4c44-a6e0-65e756dbdf78",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7d7df4ae-030d-48ed-92a1-8355d28cd18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96d9ce6-b111-40a1-bb4e-30d228d92056",
        "cursor": {
          "ref": "31c980c3-a8da-43d0-9b71-e8538ae636e4",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5bf8447c-59d1-4666-8838-f941ba4b7047"
        },
        "item": {
          "id": "d96d9ce6-b111-40a1-bb4e-30d228d92056",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8451eb3e-dfaf-4a06-b7ce-9c8f75dba610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5d18cd-80b5-408b-a1d6-0ea3b9a4a341",
        "cursor": {
          "ref": "93643919-379f-4bdf-8485-1b499f69e471",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd8017fb-cd1a-48c4-b109-15886da4d814"
        },
        "item": {
          "id": "6f5d18cd-80b5-408b-a1d6-0ea3b9a4a341",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5e5b99c5-1b2c-4ba4-9995-760a0ad0e1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8be3b07-97aa-4c84-b9d1-044ba41c0302",
        "cursor": {
          "ref": "924fcf2b-1917-487c-a861-08e1ed7b852b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2ed967e6-f31d-4670-9c28-df73ce0ca7b3"
        },
        "item": {
          "id": "c8be3b07-97aa-4c84-b9d1-044ba41c0302",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fc0ceea5-d024-4314-8283-d338ba866f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23230fe-0efe-4324-8194-7d61684188ae",
        "cursor": {
          "ref": "849f01e8-d846-44b1-be1c-43383c5050af",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "95bd0930-3d37-40c5-81b0-4327a68f10c9"
        },
        "item": {
          "id": "f23230fe-0efe-4324-8194-7d61684188ae",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "529f78e8-0637-4f79-bbda-5220894da337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16609875-7644-4345-b746-9ccaf29bb463",
        "cursor": {
          "ref": "5490d4f8-45d1-48e5-b4de-7485325fc051",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f364137-2ba1-45b3-86a8-70e682e51238"
        },
        "item": {
          "id": "16609875-7644-4345-b746-9ccaf29bb463",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d3d82dd8-2c8c-402d-ba2b-c14185a461fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc503887-34f2-4818-b4e5-dcf60ed08ac2",
        "cursor": {
          "ref": "050c78bf-0476-40fb-a291-dc11d59ccf85",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3da8a3e4-8c3d-48d6-b713-571360c1db9b"
        },
        "item": {
          "id": "fc503887-34f2-4818-b4e5-dcf60ed08ac2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1eb3dd4b-eb38-47ca-ae98-fec0e2ae2e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7a8772-e76a-400c-9b4d-b1acea8ad87b",
        "cursor": {
          "ref": "5fe8f819-e409-4cf1-9cf5-e64fc2041a72",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4e3f7838-7ff9-499c-bb3a-f8d2ba7a55bc"
        },
        "item": {
          "id": "2a7a8772-e76a-400c-9b4d-b1acea8ad87b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "66873891-3a3c-4ab2-bc8a-d97a5532c628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7831e78d-6523-4d3e-b8ca-a4d305e9211f",
        "cursor": {
          "ref": "3c3689db-156f-4b3b-95cb-1f41567dcce8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "01e8db78-5c4c-4bbe-a731-f5b9190bec74"
        },
        "item": {
          "id": "7831e78d-6523-4d3e-b8ca-a4d305e9211f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "155e627a-b7ab-4c24-a929-34b994f30e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed83076-5aea-40f7-a6f7-9e80a57e6313",
        "cursor": {
          "ref": "dfb7cf31-2f2c-452c-a088-03cfdd4198e3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "baef264b-66e9-4311-a85a-5343ab312cee"
        },
        "item": {
          "id": "4ed83076-5aea-40f7-a6f7-9e80a57e6313",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4584bebb-6b2d-416b-8632-e6e7f5026550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9178fe-74d9-49bc-b677-f85bf20f8323",
        "cursor": {
          "ref": "8380a7df-9ea5-4126-95b8-c550ff9a92c8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "724d17f4-3bd0-4d6a-925f-3b310e3aa2a6"
        },
        "item": {
          "id": "cb9178fe-74d9-49bc-b677-f85bf20f8323",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5a24fcfb-7d52-4616-b569-4abaca2b7172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a0dde0-8015-4458-b1b5-7de0101805d9",
        "cursor": {
          "ref": "9ee51b1f-31b1-42ea-a9a5-d6617ecdbfa0",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "583d2659-5169-4df5-8c45-7431028f0839"
        },
        "item": {
          "id": "68a0dde0-8015-4458-b1b5-7de0101805d9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6f1e5b8b-2c51-4d75-a811-cbf75b0f3af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e155493-6cf8-4c34-a328-574399269f11",
        "cursor": {
          "ref": "b134d8a0-6c3c-49f3-a2ff-e809b8ab5528",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c464a393-a3f5-4160-b4c3-a2f8aa5f256d"
        },
        "item": {
          "id": "2e155493-6cf8-4c34-a328-574399269f11",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e495acfd-9871-4aad-b5f2-c3e8a3df124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8399131a-a604-4b46-ac35-b3ec06dad712",
        "cursor": {
          "ref": "142430a4-ce05-4021-9e62-cad7c277d2aa",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "02f24547-6b5c-4cca-a3cd-a80eb2803f99"
        },
        "item": {
          "id": "8399131a-a604-4b46-ac35-b3ec06dad712",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7c3f2472-ed82-4dc9-98d6-a831e8d50028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3bc60d-090a-4acf-9c21-6573a8ee54cf",
        "cursor": {
          "ref": "c0025e6d-cc09-4351-8163-14c5ffd5c65b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "92a41508-5cfc-4184-9c69-da0bfd4e70bb"
        },
        "item": {
          "id": "7c3bc60d-090a-4acf-9c21-6573a8ee54cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d78f0df6-8a20-47e3-a004-1ab617da0389",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbb6b65-e210-4cc4-a7c7-f3b2b87d7448",
        "cursor": {
          "ref": "e5e7e6a2-7a10-4cbd-b6cf-f1c03b51a11c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aeeb7039-f157-4bbb-b6c4-133e8664af70"
        },
        "item": {
          "id": "2dbb6b65-e210-4cc4-a7c7-f3b2b87d7448",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7b6544be-c441-4628-97f9-bd8fc531946d",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d075d23-7973-4709-aa14-093fe8a52e93",
        "cursor": {
          "ref": "1b85b179-47e6-44e0-b677-88bf4be56883",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2fb75151-133c-4ce1-a9eb-4ec7871f3079"
        },
        "item": {
          "id": "0d075d23-7973-4709-aa14-093fe8a52e93",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b6ca2abd-766b-4748-a2e7-1c77e62dc96c",
          "status": "Created",
          "code": 201,
          "responseTime": 134,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "21abd775-8432-40f1-8329-53a970d88de1",
        "cursor": {
          "ref": "b0c7527e-e01f-40ad-bcd5-e2af1ed2ee75",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "afad7765-bf8f-44df-8d9f-8bad0110b1e5"
        },
        "item": {
          "id": "21abd775-8432-40f1-8329-53a970d88de1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b1c468c3-8238-45c9-bfb9-c0d43f2352b8",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cdf7ba-8d67-470b-9de5-e65fe377553e",
        "cursor": {
          "ref": "70b48465-ef99-4375-a2a0-925cfeb4b235",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "92ceb7ee-fa7d-4c25-aa09-c89ba1755037"
        },
        "item": {
          "id": "f9cdf7ba-8d67-470b-9de5-e65fe377553e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a59a926-eb0f-4abd-8abf-22465ad8a5b4",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e25a688-1e9d-4699-9736-80df1ab03f59",
        "cursor": {
          "ref": "22e1c2ee-7356-4187-a28e-3658e08fe69a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dca63f46-26f8-4d2b-9266-bd325dcb2a87"
        },
        "item": {
          "id": "0e25a688-1e9d-4699-9736-80df1ab03f59",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "03d50fb3-6911-41d5-9d95-cb189bcbe9a5",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a435e2-969b-450c-8e86-783fd738889a",
        "cursor": {
          "ref": "5d405fda-1562-4a46-b505-d165a52fbd2f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a064ac39-1845-4d6b-8dac-23d2389967ab"
        },
        "item": {
          "id": "49a435e2-969b-450c-8e86-783fd738889a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "406a988d-c570-4897-86be-7faccdc818d2",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f640338-9f1e-4ec8-b235-4164f626ce0a",
        "cursor": {
          "ref": "770d6c89-193f-4111-8b2a-f78416e666a0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e88edc6c-e270-43de-a34a-aebcb8ae1572"
        },
        "item": {
          "id": "7f640338-9f1e-4ec8-b235-4164f626ce0a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a9770452-2eb4-491b-aac3-35857d05b5ba",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafe8649-2165-44c4-9360-f5144ad75155",
        "cursor": {
          "ref": "42d9d87d-0a28-415a-a188-ba3cd41cfce7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2ae2f53a-c5a8-48c8-874d-2191381df5a3"
        },
        "item": {
          "id": "aafe8649-2165-44c4-9360-f5144ad75155",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "143fd6a4-66f3-4db4-b92e-22ad280e3bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b67878c-8288-427f-bdac-cda673e0f544",
        "cursor": {
          "ref": "bc0f1612-d785-4795-9a97-2a266dc5710e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f27bc35c-8461-4e8a-b6e4-1d2902bba93f"
        },
        "item": {
          "id": "2b67878c-8288-427f-bdac-cda673e0f544",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a11db1e-5587-479f-ab38-90e62993d54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b0dc07-c8af-4680-8bd0-0b77110819f1",
        "cursor": {
          "ref": "742d7bc2-8573-4320-9a42-97ff99d48448",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "76c6304f-e808-448e-a3cd-74c635378e53"
        },
        "item": {
          "id": "45b0dc07-c8af-4680-8bd0-0b77110819f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "356a0b2b-6820-42b4-954c-fbe940f5636d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df12ac5-c396-4413-875d-b6af279e86ab",
        "cursor": {
          "ref": "762cb955-aee1-4971-a52d-455437b67bd6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "40f8810b-0858-474c-b529-fa612811b83d"
        },
        "item": {
          "id": "6df12ac5-c396-4413-875d-b6af279e86ab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "50b71426-6a26-42f7-8fb8-bafb9305bf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d2186b-148b-49c6-b333-0d2d08e59d7d",
        "cursor": {
          "ref": "75adbfc5-d472-4721-b8c6-c3c15e52248b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "70a8c5b8-91ea-4663-a986-a082ce9dbc81"
        },
        "item": {
          "id": "34d2186b-148b-49c6-b333-0d2d08e59d7d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "212a2c37-20fd-4dca-85fb-ed96f19a4d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32ebf30-bf23-4b13-b9c3-9fb1277c553f",
        "cursor": {
          "ref": "97724238-1d30-428e-a12b-2742362b5cf5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a9e74faa-8fa1-4356-ba52-b5385c49f098"
        },
        "item": {
          "id": "f32ebf30-bf23-4b13-b9c3-9fb1277c553f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "607c6f5f-12bf-49a1-9c7d-54f1f032f534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c5288e-6cde-41d4-8d88-a4ef157688dc",
        "cursor": {
          "ref": "42ad8913-1599-4e1a-9e31-6c4209909b41",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b21dade0-b65e-4f13-946b-7ca9bd79d927"
        },
        "item": {
          "id": "c6c5288e-6cde-41d4-8d88-a4ef157688dc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a22878c9-f4eb-417d-80fb-1d741c98712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf53c9f-edbd-4bb3-b48a-c79821fa8113",
        "cursor": {
          "ref": "25553649-4f5f-4017-bec3-45704a668362",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b314a89c-436c-434b-bf67-3b59eed92900"
        },
        "item": {
          "id": "fbf53c9f-edbd-4bb3-b48a-c79821fa8113",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fc169ef3-b40c-4ac1-ae7a-dcbbdfd78d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc947b8-1d7a-4913-a0ae-9e35479418c4",
        "cursor": {
          "ref": "9f212e72-6620-4c1a-81fb-81b1271be709",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a842c02a-9523-478a-90f9-47b60b22d160"
        },
        "item": {
          "id": "0bc947b8-1d7a-4913-a0ae-9e35479418c4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2d14b12f-5862-413d-a056-a99baeebc6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa5dcd4-e2e5-4574-bc75-ae9a9292afec",
        "cursor": {
          "ref": "a168c62b-38d4-4ee4-869e-6af2a63b80ec",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8fa1f5d1-9639-4f2a-9ee0-c9aba84974b2"
        },
        "item": {
          "id": "8aa5dcd4-e2e5-4574-bc75-ae9a9292afec",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bed4b395-402c-4d38-abd9-f9e7e799f331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d541c62-b853-4ce7-bb16-508691c5a07e",
        "cursor": {
          "ref": "141a4d0d-1482-4a72-ba63-a0fe0a40f8df",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8a4d2d3e-aad3-41fc-888e-89fae52b134c"
        },
        "item": {
          "id": "7d541c62-b853-4ce7-bb16-508691c5a07e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "18957063-2c4a-4681-a792-5ea8413f1b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb488b0-1f35-4bfa-aafe-4c28bed37411",
        "cursor": {
          "ref": "1d3a6fbd-8ec8-4e13-817b-41c03fceb5c7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5f08f7d3-6eef-4269-807f-c08be635ed5b"
        },
        "item": {
          "id": "8eb488b0-1f35-4bfa-aafe-4c28bed37411",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7db94737-ba40-4e91-a844-c102ffa44a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ae71f4-bb85-4278-87cd-16abdf2e055e",
        "cursor": {
          "ref": "060191c8-4589-47fc-87d6-b14d27b043f5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3a9d214e-fd5d-4d60-a013-3e1fe84bd21f"
        },
        "item": {
          "id": "42ae71f4-bb85-4278-87cd-16abdf2e055e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "87eed2f4-fd5b-4020-976c-09115ac930e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f398ec2-79fe-4c03-9c46-d303249fabbc",
        "cursor": {
          "ref": "cada1d77-5a18-4976-990c-e0526114bb8e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8364edb4-4eef-43a4-b934-e6f6268a9ff1"
        },
        "item": {
          "id": "0f398ec2-79fe-4c03-9c46-d303249fabbc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df5c7d93-1b89-4d04-9b87-d11855423454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bdcf71-336e-4c3f-9ce4-70a94b7196e8",
        "cursor": {
          "ref": "8a20ab2e-a1cb-4e1c-9289-5fe9a0bd176b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "89d659e8-3378-4a61-bca7-9ce2c8b599cd"
        },
        "item": {
          "id": "b8bdcf71-336e-4c3f-9ce4-70a94b7196e8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2bbc72db-812c-452a-899a-f364d9627c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77002e26-113e-4473-ab91-383340d84f93",
        "cursor": {
          "ref": "ef012f18-f2d7-4976-86cf-673c68d045ce",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "49942900-a263-40ce-8110-6ffcb58ce9a1"
        },
        "item": {
          "id": "77002e26-113e-4473-ab91-383340d84f93",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9a6222f-6146-4c67-b42d-1c5b0f88bf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf597826-64cb-41fa-8e42-d531e095e4f9",
        "cursor": {
          "ref": "16728ed2-8137-467b-a8e2-2e83617f3ac5",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "04a477b9-a584-4b09-b6c1-c22158847fe1"
        },
        "item": {
          "id": "cf597826-64cb-41fa-8e42-d531e095e4f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "451059d8-f9a8-42e5-9a8e-9b543a1c220f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afc8473-3d63-49df-85e3-6c7dfe3afbab",
        "cursor": {
          "ref": "4cad0e1c-d578-4c4c-b9fb-e0adf85ffe71",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be20fd96-dc7f-40ba-9787-574b71fc2557"
        },
        "item": {
          "id": "7afc8473-3d63-49df-85e3-6c7dfe3afbab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0cdfaa79-d0cf-4bd1-87e4-056a1125249b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfc7324-49bc-49e2-8e4d-ba2432f2d529",
        "cursor": {
          "ref": "bb1cccfb-dd1f-492f-949d-2ec7426507bd",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4acdf15e-23a8-4ee3-892b-78341d310c2f"
        },
        "item": {
          "id": "2bfc7324-49bc-49e2-8e4d-ba2432f2d529",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "623f3622-2565-4964-9811-00d5e4f9e94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb816796-a290-4fbd-b6fd-f6ac068b3cc2",
        "cursor": {
          "ref": "12a03e37-6f99-436e-a6b2-9cb954d43ca6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3d230632-26e3-4d96-9b4e-bd2a449ff289"
        },
        "item": {
          "id": "bb816796-a290-4fbd-b6fd-f6ac068b3cc2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ecab4d14-3c2d-4c8b-8c98-462f3ae6f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14eabfd-e1c0-4308-acef-442f2b9b1766",
        "cursor": {
          "ref": "dbcd4955-b8be-407a-9787-d91148990caf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2cfbe377-20ce-4920-98dc-ab042896cfde"
        },
        "item": {
          "id": "b14eabfd-e1c0-4308-acef-442f2b9b1766",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d9945a76-4dc8-4a98-bdb7-cedfcd160e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aceeda-c178-4dd8-8a76-294474ee6e7a",
        "cursor": {
          "ref": "b224835d-a1d3-46e5-aea2-581134a840e5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b60b2426-cd6d-4bd2-a46b-e24d7055b88e"
        },
        "item": {
          "id": "d9aceeda-c178-4dd8-8a76-294474ee6e7a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4fa289fc-29c8-47b5-8126-9a1ebaf06f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fc3498-74ee-473c-96a3-c35e1bab3600",
        "cursor": {
          "ref": "7f71df21-b9f7-466d-94fc-2e2f0111cd3d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f93d559d-9ff4-43fe-aafd-1273b43cb8eb"
        },
        "item": {
          "id": "61fc3498-74ee-473c-96a3-c35e1bab3600",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "81a13f34-ea60-429a-9e9f-bf4ed3c5e3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c7ac38-11d4-441e-833e-d73b8841667a",
        "cursor": {
          "ref": "bc200121-64b3-470a-a0db-ca9e086c3587",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "30d54222-81d1-4ab7-9c8e-9c611bbe3aac"
        },
        "item": {
          "id": "f6c7ac38-11d4-441e-833e-d73b8841667a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "76b87f24-a570-4476-bd92-011c6dfe96ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e718f2-9bdb-4022-a62f-8013d58f4483",
        "cursor": {
          "ref": "a0a9ec21-87d5-476b-b865-316faf2a7c9f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "49b1f37d-2ad0-4c9b-81fb-24d751f579a5"
        },
        "item": {
          "id": "45e718f2-9bdb-4022-a62f-8013d58f4483",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34e6da49-03ae-404e-a773-a6e295ae0bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22fee29-b27b-472c-80ec-bd346c729c38",
        "cursor": {
          "ref": "ba843c04-e5c5-435d-8412-f028c5dc61d1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f59c97a0-5902-4644-8b31-37d9f84cd87e"
        },
        "item": {
          "id": "f22fee29-b27b-472c-80ec-bd346c729c38",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "712635e7-048c-4907-a519-abfaf226b4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b050512-dbf6-4f3e-9ace-998a441ba073",
        "cursor": {
          "ref": "d8a472dd-812f-4558-8e6e-4e9da03a37cc",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4da16f8b-877e-49c7-b90e-7c0903e2ae15"
        },
        "item": {
          "id": "1b050512-dbf6-4f3e-9ace-998a441ba073",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e2ffbf4c-ec93-4023-8d5f-6c67101bb089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee83f31-4238-4698-b5fc-00f305e63239",
        "cursor": {
          "ref": "c9c66446-d315-4132-ae22-368e24c05a10",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3fcaa284-824e-4273-940a-a7d8b7abf43b"
        },
        "item": {
          "id": "bee83f31-4238-4698-b5fc-00f305e63239",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "81ab77a5-c9b7-44ac-a04f-69f6a3c55e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa01345-1bdd-44a5-aa79-84561634056f",
        "cursor": {
          "ref": "a0406548-abb4-4a21-8510-b1257ad6872b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b5cc440b-5204-4615-882d-6b8e51af46fb"
        },
        "item": {
          "id": "dfa01345-1bdd-44a5-aa79-84561634056f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c293a442-79ad-41d9-8db1-13395bb1002a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c4cbb4-65bb-4159-885c-8416a9542275",
        "cursor": {
          "ref": "74202c2d-981d-4d45-9370-ec814643b835",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b7c3f2c5-0bcb-4e3a-b2f6-81042e65af20"
        },
        "item": {
          "id": "81c4cbb4-65bb-4159-885c-8416a9542275",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c200194f-c9b4-43b7-89f3-470ed361662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc50a780-9438-4e5d-a9ad-7a4655ada48c",
        "cursor": {
          "ref": "acaf34ba-3add-4243-97ce-b68ec2a6a60c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "889876b8-9af6-4ab0-ba10-14195fcd9c0f"
        },
        "item": {
          "id": "bc50a780-9438-4e5d-a9ad-7a4655ada48c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0460c12e-a697-44e9-bc0a-04d59be2c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fb78b0-cb42-45e1-a3d4-1d6260448b2d",
        "cursor": {
          "ref": "f85f5eba-bc7a-4a78-b045-e5b8354099e7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d5475c1f-a97e-45e8-9ab2-0d7df04ce675"
        },
        "item": {
          "id": "22fb78b0-cb42-45e1-a3d4-1d6260448b2d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e1f4e218-3495-4655-8a9a-8859dadae637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a069020-57e2-4acd-b5dc-2f4d299d7889",
        "cursor": {
          "ref": "e7bbf97a-745b-4015-9c7b-03e5902a329e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b7583b66-1122-4a9a-8b52-9abc2963297d"
        },
        "item": {
          "id": "5a069020-57e2-4acd-b5dc-2f4d299d7889",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ed29eab-ad88-4382-a168-bfc81ac8e04b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7f0ce3-ea13-422f-a495-6bdf76797443",
        "cursor": {
          "ref": "2c9968bc-fd4b-4cc0-a5b8-7bce768208e9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "610f1fe3-40ae-4080-82c8-22dc6a9eefbe"
        },
        "item": {
          "id": "ef7f0ce3-ea13-422f-a495-6bdf76797443",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "73062a47-5daf-4032-9b31-bc74a5ebec68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b17edd1-22f0-4a24-ba5a-5b2b5c0c0866",
        "cursor": {
          "ref": "a9f8dcf5-b157-4b01-8bf2-988698b4d3fa",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "90589b22-0660-4eac-915e-33d548beaf0a"
        },
        "item": {
          "id": "8b17edd1-22f0-4a24-ba5a-5b2b5c0c0866",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bb331587-ee07-4937-8263-959ba7b4328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecec6ef0-57a2-472b-a8c2-efc3b2f5c9cf",
        "cursor": {
          "ref": "2a30e278-41a6-4c86-8822-3ac5fa595079",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c3fe75e5-2b7a-4eb8-8aa2-0891b8fb49a1"
        },
        "item": {
          "id": "ecec6ef0-57a2-472b-a8c2-efc3b2f5c9cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5de85a2e-3f77-42f6-a95e-48a5a78d0e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a012a9-0ec7-4e30-9817-53b854c4a433",
        "cursor": {
          "ref": "5fb4be79-088a-4158-93a1-d0f3c56deb6d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6835530a-b1c6-4a16-8d7b-550ef0691d09"
        },
        "item": {
          "id": "c6a012a9-0ec7-4e30-9817-53b854c4a433",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4914c2ce-f65a-47a7-996d-8e2b65180741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fec9627-3151-4674-b606-848b22b8d917",
        "cursor": {
          "ref": "3f6f64c9-d958-48e4-8836-854090e1c103",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f2c26c1c-adf2-49d9-841c-d89973381e28"
        },
        "item": {
          "id": "0fec9627-3151-4674-b606-848b22b8d917",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0c7e9a31-5405-4b17-b657-c8b610610591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382f650d-3dbf-4a23-bd81-4767d3f93e96",
        "cursor": {
          "ref": "1bfd1a6d-755a-4199-a1d4-cbf070884910",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b1870864-308a-4f40-9e77-7cccd63de4d7"
        },
        "item": {
          "id": "382f650d-3dbf-4a23-bd81-4767d3f93e96",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e2870f83-e41d-445a-b48f-9a384ce9f66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e0cb95-6a3d-45f7-8e56-5fc64fbe42c0",
        "cursor": {
          "ref": "7efb89c7-1a86-4ea8-86ae-3cba94176d2c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3570da95-dcba-4a48-a008-be1b53a65922"
        },
        "item": {
          "id": "23e0cb95-6a3d-45f7-8e56-5fc64fbe42c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "539e11eb-e8e6-4f09-9742-12d496ca2ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff476f5-4e37-4bd4-a432-386e5f201223",
        "cursor": {
          "ref": "eb84d8fb-10ee-44da-bb0d-b47d880815ea",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "253cd9f8-6c6b-4e1d-8e47-38e69b2f1b9a"
        },
        "item": {
          "id": "5ff476f5-4e37-4bd4-a432-386e5f201223",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "49563f8b-8c00-435a-a99b-5cf9022c0b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee487dcf-1ca7-45ee-bdf4-be6175f5d697",
        "cursor": {
          "ref": "0e93042d-61eb-43e3-bc9f-afc73a2cd5af",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b423d096-7c06-4ecf-8a0d-265471a56a90"
        },
        "item": {
          "id": "ee487dcf-1ca7-45ee-bdf4-be6175f5d697",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fde2137d-0726-4a69-8b0f-82db1cff6a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0611067-ebee-4190-a842-59b1dda9354d",
        "cursor": {
          "ref": "0f6895e3-efe3-4e2d-a3ce-58d7a88c88ef",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e5b2eff8-adee-4b57-8cfe-0a9e503ddcf8"
        },
        "item": {
          "id": "f0611067-ebee-4190-a842-59b1dda9354d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0c3345a-7daa-4e37-8edf-7dabbd2a2dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c9c66b-8462-4c85-908d-07a00694bb48",
        "cursor": {
          "ref": "09939314-8b0c-4bea-9276-d8c48218f9d2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bf09eaff-7d66-4abb-8657-c219998f930c"
        },
        "item": {
          "id": "72c9c66b-8462-4c85-908d-07a00694bb48",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a8b1e556-c904-45e2-8f63-6bf0ce16f2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc953158-54fa-4aac-b57b-e4c49fb2a176",
        "cursor": {
          "ref": "f3ff7319-8051-4bff-8e69-9ff1567a8117",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4a472249-12da-441e-878b-0eefa8076b77"
        },
        "item": {
          "id": "dc953158-54fa-4aac-b57b-e4c49fb2a176",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f1ecde52-a228-4f83-aa17-f4fd3be5afe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dad5c1-6ac5-4edc-a89a-ad4e5e31271f",
        "cursor": {
          "ref": "7cf6a4ae-f87a-4f25-9c2b-148b095d9d10",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b685b70f-8f2d-4227-a205-be01e86e24fa"
        },
        "item": {
          "id": "31dad5c1-6ac5-4edc-a89a-ad4e5e31271f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2429209e-c403-4ccf-a91a-9fe4f4dd29a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac50bab-fec1-486f-9b5a-01b6d4347278",
        "cursor": {
          "ref": "a95bfef1-40b0-46df-9bb3-3d36518b1ae1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "40a2b78c-70fa-43d8-b438-eee505e67ee2"
        },
        "item": {
          "id": "cac50bab-fec1-486f-9b5a-01b6d4347278",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "022db87b-dc62-4727-87df-0cbc45be1ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef21af5c-83cc-4594-8e9e-e534d64a0d8b",
        "cursor": {
          "ref": "c88caab2-7188-45cf-a354-0eabc901fc9d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd1e0c59-e9cf-4663-ad59-a0b88cbb642d"
        },
        "item": {
          "id": "ef21af5c-83cc-4594-8e9e-e534d64a0d8b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "25460262-6706-46fa-96a9-f18b50e1eb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69391303-7611-44c2-bb76-aac97c70a1fe",
        "cursor": {
          "ref": "fc781f23-b2a5-45b7-a400-4be41a38cb73",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "99629bd1-ac85-4056-80ec-1a7989abb1ea"
        },
        "item": {
          "id": "69391303-7611-44c2-bb76-aac97c70a1fe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6a051414-fd56-43c4-9c04-30500dccd1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dcb9d9-930f-4bb6-831a-87367b81bda2",
        "cursor": {
          "ref": "0e29618e-d2eb-4e84-85c0-60bd4464fe8d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "75edc788-3073-40a8-a4cd-30840e242d71"
        },
        "item": {
          "id": "44dcb9d9-930f-4bb6-831a-87367b81bda2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fa3674ad-b59d-443b-8fc2-d9098b2b149d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743d4a70-9770-472e-a67f-b4c253b7495b",
        "cursor": {
          "ref": "121a3d5a-121c-4439-8579-22ab008f3f03",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e9cbaa5c-2240-4783-a06d-51c44eb90d1c"
        },
        "item": {
          "id": "743d4a70-9770-472e-a67f-b4c253b7495b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "90591796-aefa-4002-bbe2-c1594cb82f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35169f0f-3e48-4c66-970e-13de49a775d8",
        "cursor": {
          "ref": "c4d3b878-b8c3-4882-8082-ba2b7be3ee6e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "704de2e7-38e1-44ef-8796-9e361ceabc49"
        },
        "item": {
          "id": "35169f0f-3e48-4c66-970e-13de49a775d8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "525de549-713c-477b-937a-bb029514ee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70053c43-9de0-4b07-8846-2a2b13bec0df",
        "cursor": {
          "ref": "ea96112f-b33c-4db1-8a6c-76bb9d4c08a2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "974289e1-88c2-4fe2-b100-45ff4a9a469b"
        },
        "item": {
          "id": "70053c43-9de0-4b07-8846-2a2b13bec0df",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0545d851-2d87-48ba-925f-5d876a58a99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ce91bd-cab0-4d90-bb5e-0775e9fff785",
        "cursor": {
          "ref": "3ed89789-b302-42bc-b6c1-0c2bb9eb2b1f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b114d3de-bddf-4ca2-8b22-1a459cf5e378"
        },
        "item": {
          "id": "d6ce91bd-cab0-4d90-bb5e-0775e9fff785",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29fec32d-32db-4cfd-8b0b-327142fbc389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4174fe2c-7762-4b84-86aa-02fee696e2f0",
        "cursor": {
          "ref": "f72a0b1a-ca00-48a5-91cb-cb25ec39a693",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7aa5c498-05a1-480c-bc98-9da722aa9592"
        },
        "item": {
          "id": "4174fe2c-7762-4b84-86aa-02fee696e2f0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3a87ff2f-4f07-4f0f-bfba-49799a97f1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9642a1-476b-4fb2-ba3c-ecd6efbaaf9d",
        "cursor": {
          "ref": "fe53d86e-feb0-4a13-bb1f-241c699e1822",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e1bef2a9-8265-4201-9dd3-1b2eef4e759f"
        },
        "item": {
          "id": "8f9642a1-476b-4fb2-ba3c-ecd6efbaaf9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cc5cf3e6-15fa-4c23-b296-55f8197de271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc43052-f061-4784-9aa0-2033afe843c5",
        "cursor": {
          "ref": "16a9e61f-a931-4a07-9523-4f9399145c27",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cf47a564-e09c-4944-a977-60059328cccf"
        },
        "item": {
          "id": "7bc43052-f061-4784-9aa0-2033afe843c5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9a972d8c-353f-463c-833d-c9a5cdf5c041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac10cb06-3bb4-465c-b82f-fe2ce3c019c9",
        "cursor": {
          "ref": "53c3cfd5-00a7-43f3-bfb5-da60176cd388",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ba0cb0cb-73f8-4995-a3cd-8e88b78fa79c"
        },
        "item": {
          "id": "ac10cb06-3bb4-465c-b82f-fe2ce3c019c9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "694f9898-429b-4689-a8ee-232ab5ad8496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9817e48-446f-4ef1-aa71-4a8e8759eb9d",
        "cursor": {
          "ref": "f141ac17-454a-466f-a2be-a5cfcbd99919",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ceeedf31-3e84-48f6-b1b9-dc4c22f1232f"
        },
        "item": {
          "id": "e9817e48-446f-4ef1-aa71-4a8e8759eb9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6dfdbd6a-abbb-4814-8b69-22bf51e9dd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd70ac1-4933-4e7c-8b8c-52ec0ae1464d",
        "cursor": {
          "ref": "516026e7-a5db-47fa-b557-b59d70789336",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "37c832ea-236a-4cd5-b73e-764ddbc8cd9f"
        },
        "item": {
          "id": "4fd70ac1-4933-4e7c-8b8c-52ec0ae1464d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7e9febab-4108-49c3-a661-49841e80af3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ba7f0e-1257-408e-88ba-23ccf7fd86b5",
        "cursor": {
          "ref": "a7777dca-413d-4fb1-acda-1e94dc8ae227",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "139ae6bc-d1fb-416d-acdb-b4bb5eb8de96"
        },
        "item": {
          "id": "27ba7f0e-1257-408e-88ba-23ccf7fd86b5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b2a51f6-106e-41d9-8712-ad6058b86dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b91aaef-94ce-4403-a476-f6ffc2c03b7f",
        "cursor": {
          "ref": "60c72928-d236-4560-b2ab-6a1915332a48",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dc41e68e-5aa4-4b2e-810e-83c1d8ff4e11"
        },
        "item": {
          "id": "5b91aaef-94ce-4403-a476-f6ffc2c03b7f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dd34a031-2b71-4a8c-bf0a-2bf8c008ec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13d7059-99e4-4a58-ba08-379b7e5604d7",
        "cursor": {
          "ref": "f97a7e02-5e22-4834-9973-c341656127f4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fc65a31d-4572-4856-bf71-6d88ea0796a0"
        },
        "item": {
          "id": "c13d7059-99e4-4a58-ba08-379b7e5604d7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "26411ec1-b45c-4e81-8e80-23b62cbbbd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ba5ea6-f634-44cb-b22b-7fd8f45943ac",
        "cursor": {
          "ref": "f0a914ae-4e41-49a8-99d0-0b81e3c2e6a7",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a263232b-1897-4790-9e73-bd3f06018843"
        },
        "item": {
          "id": "32ba5ea6-f634-44cb-b22b-7fd8f45943ac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e0b31636-f383-4b2c-b182-64088af1c92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdcb08a-386c-45fe-9308-836ae87561b9",
        "cursor": {
          "ref": "bc39ee3c-5d93-4ed9-9e80-3c29a3cf7f55",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "87aa70b5-c0b8-4b14-bd07-3e4909b98eda"
        },
        "item": {
          "id": "5bdcb08a-386c-45fe-9308-836ae87561b9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "76440df5-de57-48fe-ba4a-6847c33d49d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa406fc5-a3f0-4ad0-b22e-8883409e9e43",
        "cursor": {
          "ref": "42f27d3f-7a4d-4e86-992f-82108a9d3a30",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3c4cdef0-2143-4435-b1f3-83a977b15738"
        },
        "item": {
          "id": "aa406fc5-a3f0-4ad0-b22e-8883409e9e43",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a09fe3e6-38d8-4643-9cd2-68739ba2fe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee5ba8a-8a70-432d-b76f-754d8e0e21d5",
        "cursor": {
          "ref": "3f92c169-5402-4cd9-ba3b-7ae903b8fe6d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "45a84dc6-32a6-4497-8d04-7771bbc7f614"
        },
        "item": {
          "id": "3ee5ba8a-8a70-432d-b76f-754d8e0e21d5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0b5fdf95-f673-406a-bd5b-eedbe2995ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d27b59-b1db-48f1-b5cd-732d02a649c4",
        "cursor": {
          "ref": "edf1e936-4359-4291-8eee-c5d64d83ee2a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e9e25403-9e5d-4abd-a745-0004ed9f3340"
        },
        "item": {
          "id": "f3d27b59-b1db-48f1-b5cd-732d02a649c4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "928e4755-1c7d-4240-9d17-f9718c6e5733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb2aaeb-1efe-4f82-82a3-d82141001aee",
        "cursor": {
          "ref": "54d9a1db-d5f4-4bc3-bbde-cddd9a52e501",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e025ce8a-f15f-4f46-9cf5-ba9d852988ff"
        },
        "item": {
          "id": "9fb2aaeb-1efe-4f82-82a3-d82141001aee",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "abf71e90-f1ab-4cbe-910c-8c414f7e61e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e6d070-c4c3-46c7-bc86-4e0d67228db6",
        "cursor": {
          "ref": "d315130d-21e6-48b9-a780-71c982b36c32",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f7fc8a0a-c721-402f-86e0-654021821456"
        },
        "item": {
          "id": "26e6d070-c4c3-46c7-bc86-4e0d67228db6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4df1ee40-8d58-48b3-bba3-130c4b97027a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b825e9-4f10-485a-80b9-13a7223dc90e",
        "cursor": {
          "ref": "2ebd1694-f11d-4ffc-ba1b-b30b53f4dc7a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "51df0d8f-1054-4b2c-9ba0-ab417adeb704"
        },
        "item": {
          "id": "c2b825e9-4f10-485a-80b9-13a7223dc90e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af182021-a279-4d98-9781-6c241ca318ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08dbc9a-d3f7-4e7e-858e-821a8abc8193",
        "cursor": {
          "ref": "246faf86-d1ca-43b5-b99c-515047ac6e56",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e72c15cd-3737-42bf-b85d-59cbda99c819"
        },
        "item": {
          "id": "d08dbc9a-d3f7-4e7e-858e-821a8abc8193",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aaf588c1-a736-4e5d-8a77-6c007b5c4538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413089df-a291-4e76-8ad2-e0d13e733ec5",
        "cursor": {
          "ref": "d6d94503-0b8c-4b5b-af19-c679de113339",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "365e28fa-ae10-4820-b3fc-868babf25800"
        },
        "item": {
          "id": "413089df-a291-4e76-8ad2-e0d13e733ec5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a560c89f-c37c-4d17-b6da-c6a2f8a093c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7f3c1a-1286-4592-981b-e9a9a498dda7",
        "cursor": {
          "ref": "df0e0869-2ca0-47cf-a198-a0d5d4bba4f5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ae45ce0e-7ceb-4cdd-b010-328e926c9cb8"
        },
        "item": {
          "id": "0d7f3c1a-1286-4592-981b-e9a9a498dda7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9f288cda-ec69-41fb-a655-99223254e368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2add0e-cc3d-4008-8d91-d7cb62703467",
        "cursor": {
          "ref": "1ca63007-cafc-42fd-b528-281bfba300d1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6305c56e-3259-4d52-bda1-b74ecb1949c1"
        },
        "item": {
          "id": "7f2add0e-cc3d-4008-8d91-d7cb62703467",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "242be146-4267-46d0-aa45-a99740b8e44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06999ae9-32e4-4bd2-8c21-5e5f59ebe08d",
        "cursor": {
          "ref": "f9104665-cf43-4d17-9b73-02dc0fd7b442",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b5258c3-c4c2-435a-a03c-4d75dd7882b1"
        },
        "item": {
          "id": "06999ae9-32e4-4bd2-8c21-5e5f59ebe08d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9cfe820c-f504-4244-a480-ecc6c8eb62c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe09024-95e3-440d-b908-22a8a59d4347",
        "cursor": {
          "ref": "71be3748-5e93-49a5-8bc6-47856ecb9b0e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ff942ba8-4948-476f-b90a-14506ea1d0f2"
        },
        "item": {
          "id": "dbe09024-95e3-440d-b908-22a8a59d4347",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "48bbf61d-cdc4-427f-ba78-8882b0c35f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c79fa4c-87d6-4ace-9521-17e7714a5d1f",
        "cursor": {
          "ref": "2708c525-9973-4fcc-b449-462e7e0bd030",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "797d8a1e-d4ce-4812-b282-adb6d3351e40"
        },
        "item": {
          "id": "1c79fa4c-87d6-4ace-9521-17e7714a5d1f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7ddff133-9caa-4cb2-b4a1-972281b43c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958f20e7-1267-4a78-9c50-077730fb505d",
        "cursor": {
          "ref": "d67fa20a-6bd5-483c-94ce-827e39232592",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4859a193-37bd-407f-920a-5b1a8883e4a1"
        },
        "item": {
          "id": "958f20e7-1267-4a78-9c50-077730fb505d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "717bf714-2847-45b3-a624-e26b4e6033f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f10ab-4bca-48c3-98cf-098db2a53509",
        "cursor": {
          "ref": "f3daaa85-feaa-465a-8bd2-2551cf9599fb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1bec31f0-54b5-431f-927a-14752da36f65"
        },
        "item": {
          "id": "b85f10ab-4bca-48c3-98cf-098db2a53509",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2509a312-ef72-4c48-ad66-be957bbe8f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a07fd24-9ec8-4fbb-a73c-90076422d4e3",
        "cursor": {
          "ref": "1a505c4b-890e-4e57-98d5-81ce66be7f7d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "daed5072-ab2f-427f-aee2-1246e03556dc"
        },
        "item": {
          "id": "5a07fd24-9ec8-4fbb-a73c-90076422d4e3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6af731e5-0d20-4e69-81f9-3e2356bb15c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e856c51b-db5e-4f2f-8558-04e4a73f6d46",
        "cursor": {
          "ref": "ada6f505-ce02-4c41-807f-5fed4b5caa79",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4af00e8f-13e4-4dda-9f40-16a165dc9f2e"
        },
        "item": {
          "id": "e856c51b-db5e-4f2f-8558-04e4a73f6d46",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "563405b0-48e6-47ae-bd70-dc16d37a345a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed11af8b-6584-4eab-92b0-32a9e0916a4f",
        "cursor": {
          "ref": "7dba77de-8886-4411-8e5e-64102487ac19",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d41e597b-dbb5-4b77-abae-578200bfcb35"
        },
        "item": {
          "id": "ed11af8b-6584-4eab-92b0-32a9e0916a4f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6105b888-51a4-4f38-9164-8f0e0f8686e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e62fe0-1fed-457c-8a0d-fd9e44128591",
        "cursor": {
          "ref": "1ca9f2b6-ef8a-4aa2-a195-118bbdb0f1ff",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f8c570cc-443d-4824-a6f0-0b84804a8f5e"
        },
        "item": {
          "id": "26e62fe0-1fed-457c-8a0d-fd9e44128591",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b6fa116c-1eaf-4673-8578-61b2284bf74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0122b8d-3dd4-4abb-a785-2a4ed0b2efdc",
        "cursor": {
          "ref": "2b4e3042-0811-44d6-99cc-e115d9c5fc83",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4f674db0-9d4b-4446-8672-72707e7137b3"
        },
        "item": {
          "id": "f0122b8d-3dd4-4abb-a785-2a4ed0b2efdc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a9908b2b-08f0-495a-9298-012d627a56ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defddcbf-4b6f-4ad9-9d65-2388e3dc9065",
        "cursor": {
          "ref": "ffec531a-ec20-4ba9-9784-7c0a1ba67906",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f577435e-e942-4cd8-ac40-bb8657549c01"
        },
        "item": {
          "id": "defddcbf-4b6f-4ad9-9d65-2388e3dc9065",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a6ccfecd-9c4f-48da-84ab-2200feec55ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388feade-22ab-4f96-9b1c-ae7609ab186c",
        "cursor": {
          "ref": "e4c84dfe-d2b9-4770-8aa5-2bbe48e379e6",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4af36607-37e6-4c20-aebe-77832f0128cb"
        },
        "item": {
          "id": "388feade-22ab-4f96-9b1c-ae7609ab186c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a5102639-aadf-4cd3-b442-fe254399dc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2031488f-6260-4fdf-9f0f-c2fe485baf9d",
        "cursor": {
          "ref": "a81c450d-1b8d-4264-b9c3-62f60bbbce2b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a15678b0-9073-4631-9536-ff3c5c32c730"
        },
        "item": {
          "id": "2031488f-6260-4fdf-9f0f-c2fe485baf9d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "23445204-4018-468d-8ae0-c69e441195b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db92f9d7-5df2-49b4-ac53-4300743ed120",
        "cursor": {
          "ref": "a17d131f-3aa7-4ef2-ac8e-450dd6bae1c1",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "86d67cdf-0327-4c98-affb-c44ed66377d5"
        },
        "item": {
          "id": "db92f9d7-5df2-49b4-ac53-4300743ed120",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f8b74a88-c030-4565-9e05-d942f8817d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c642bb-3a8a-4017-9b8d-67256d1470f2",
        "cursor": {
          "ref": "d62fb261-5557-462f-9edc-508e663b0937",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "38c989ad-9bac-405b-8c21-5e1d495ee785"
        },
        "item": {
          "id": "13c642bb-3a8a-4017-9b8d-67256d1470f2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fa923789-3e35-44cd-81b4-cb364fdcadb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b97db8b-cb31-4ba4-a9ae-e9d217ffebf1",
        "cursor": {
          "ref": "42995686-5d5a-4863-a509-edff8139434a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a706f885-6098-443d-8662-dc764b13f2bc"
        },
        "item": {
          "id": "7b97db8b-cb31-4ba4-a9ae-e9d217ffebf1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "84d36922-1f42-4777-8f66-7ff520c37302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854f8cca-5c1c-462b-8ba8-90fded385d45",
        "cursor": {
          "ref": "909d39ec-3230-4aa1-8515-3f08b52b6f46",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b5b66395-c36f-41a8-87bd-939d0a09a66d"
        },
        "item": {
          "id": "854f8cca-5c1c-462b-8ba8-90fded385d45",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7b17cb9c-bfe4-4a28-b0c2-6fcc81b530fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e54ecb4-410e-4dc9-b628-2ed4ee5846b2",
        "cursor": {
          "ref": "81168563-1309-42ea-a460-dad705c10745",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ab98024e-a50a-4979-9513-6afb160c43fe"
        },
        "item": {
          "id": "8e54ecb4-410e-4dc9-b628-2ed4ee5846b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7762f00a-aa0b-4d88-a64a-07bca8d03088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccd33fd-0298-4f4f-8bc0-b49b50d2cdf3",
        "cursor": {
          "ref": "c8d033b8-7f73-4e1b-b800-840e7766b83e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a7f3c872-e6fc-4a5e-823a-513abc025fee"
        },
        "item": {
          "id": "4ccd33fd-0298-4f4f-8bc0-b49b50d2cdf3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d6ac73a-9f5a-44de-a433-65f8f0d87fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328d42de-c3ba-4704-bfe9-3a3bbf9c86d9",
        "cursor": {
          "ref": "f1011cb0-58e3-472e-a77e-084f38d9ec23",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "72784b83-bdc8-4153-a7cc-432c4587e0c7"
        },
        "item": {
          "id": "328d42de-c3ba-4704-bfe9-3a3bbf9c86d9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7ddf3ddb-a9ad-42d3-bba2-caa9814a347b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6167e792-6524-4cc0-8483-96832bf19572",
        "cursor": {
          "ref": "e709bf73-8f95-43f8-befe-4d3200cd8964",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eb0fb771-4717-4a49-9234-49c0fd7e1c5b"
        },
        "item": {
          "id": "6167e792-6524-4cc0-8483-96832bf19572",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fed8f912-3f03-42ce-9dd6-2749a9f16865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6d76d7-4d6a-4c10-a229-6105d6471c07",
        "cursor": {
          "ref": "6cac70eb-dc98-4202-b5db-7f33144f8b5e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bd469cdc-7e51-4d49-80a1-435cb9f220bc"
        },
        "item": {
          "id": "6f6d76d7-4d6a-4c10-a229-6105d6471c07",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "25e73e91-a927-44e6-99e1-c65276bc8244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31d5118-a12c-4971-bac8-6cd200e5319c",
        "cursor": {
          "ref": "9194e54c-b8f4-4a69-8c8c-05f8d7db7bcd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "96356146-1591-47f5-bc21-d70c6d74ee91"
        },
        "item": {
          "id": "f31d5118-a12c-4971-bac8-6cd200e5319c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "08914f66-6e17-4f30-b998-26c294852663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8722bdf-0eac-49c8-9403-223f8e782bfe",
        "cursor": {
          "ref": "9c2fddad-4b4a-48f0-bf3f-5a730341a24f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "642f7315-f726-4da1-8310-a0f9ab323ac4"
        },
        "item": {
          "id": "a8722bdf-0eac-49c8-9403-223f8e782bfe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2c155248-7b37-47b3-9282-4b85094420f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f756df7-9df9-49b8-a9b3-93a63792d041",
        "cursor": {
          "ref": "d0b1e2d1-19af-4c2b-b96a-87e222971c51",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f8840ca4-2f1d-42d3-9b85-e5539aa22556"
        },
        "item": {
          "id": "9f756df7-9df9-49b8-a9b3-93a63792d041",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5c8fc915-388b-441e-8033-6f26e5d14a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa243721-540a-4073-9bb8-45aa05955312",
        "cursor": {
          "ref": "b0b9f62a-751d-48b6-9dee-37228ea2e4f4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "af6e524b-df26-4349-b8cc-3f49cf053e81"
        },
        "item": {
          "id": "fa243721-540a-4073-9bb8-45aa05955312",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "57bdbb19-506c-43c6-baf9-b00faea1f6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfbc68b-735d-4261-aa13-f8a8782d14f6",
        "cursor": {
          "ref": "ae89be9e-bb7a-454a-b0d5-331e1e792e43",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "907a3a92-b50c-4310-bd75-b518dad43cb9"
        },
        "item": {
          "id": "4bfbc68b-735d-4261-aa13-f8a8782d14f6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e4c8448b-7204-43e8-80d6-102da01c726a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb447e58-c7a3-4244-b3c7-1186f91916d2",
        "cursor": {
          "ref": "db6e9d89-b932-4a64-bd3a-25a7cc3c2df0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "75c3b4df-ed55-415b-ae04-008cf9d8f409"
        },
        "item": {
          "id": "eb447e58-c7a3-4244-b3c7-1186f91916d2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e6dcfe29-c704-46a4-84e7-82cb573f51e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15ea9ff-1597-4121-873c-0801dfd1f834",
        "cursor": {
          "ref": "0f086978-b254-4f74-a17f-582bf5a75708",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "66aba68c-3819-4fc3-88d6-92aeef650934"
        },
        "item": {
          "id": "b15ea9ff-1597-4121-873c-0801dfd1f834",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cd00792c-5398-4d0a-bb16-909d734ab44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920fff18-6032-4ae8-9c46-34adaf27fc01",
        "cursor": {
          "ref": "86fc1475-7ccf-4e63-a768-3cae9043a0c8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "607ecf68-4dd9-4b05-9261-3def3b98282d"
        },
        "item": {
          "id": "920fff18-6032-4ae8-9c46-34adaf27fc01",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2b9a8385-0315-4208-93f4-e83454622874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b94fed-f6d4-4338-a98d-3a452a8a15f0",
        "cursor": {
          "ref": "c19d4e56-b645-4cf0-b601-06e82213eb7f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a0aa5b1a-5f0d-45ba-95c3-6755ddab3ebd"
        },
        "item": {
          "id": "c7b94fed-f6d4-4338-a98d-3a452a8a15f0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1c5aabd9-afe0-44ac-96a5-c4a7a74ada92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71fc07b-10af-46e7-8ecc-a29106d7831b",
        "cursor": {
          "ref": "12e2915a-db65-4e5a-9d4d-cc5fdf34d3a5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "31050c97-a0d0-4b81-9ebb-bac3afc14741"
        },
        "item": {
          "id": "e71fc07b-10af-46e7-8ecc-a29106d7831b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dff996de-0e1c-404e-85f4-eecd7f4cb2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47ac93d-66b9-4954-b7fb-0d0d209f83e4",
        "cursor": {
          "ref": "4694468b-ec89-453f-a8bb-b232c40ff2bf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "222f88a7-5640-4f91-85dc-d0e2267fbfc8"
        },
        "item": {
          "id": "f47ac93d-66b9-4954-b7fb-0d0d209f83e4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e0c5b3b2-51cc-4fea-9abf-a184c89a5abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8877c293-022f-476a-854f-496afe23d57e",
        "cursor": {
          "ref": "08194c39-bdb4-49d0-872b-14e5ae5df29e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "63bc398f-9829-4c91-bb54-fe1a6e3b3a49"
        },
        "item": {
          "id": "8877c293-022f-476a-854f-496afe23d57e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4a0f9839-1421-4d1b-b5c5-942129544832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6516c841-e63d-49f2-a22f-af8f1df852c0",
        "cursor": {
          "ref": "5112e712-c416-415f-aa1e-097cf4dbe1d5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2f4422db-ac5f-423e-ad68-a52190857f32"
        },
        "item": {
          "id": "6516c841-e63d-49f2-a22f-af8f1df852c0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7a437f91-b385-4a0d-978c-6df6faa9aae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027501ee-af74-42c8-8c68-6c07db0f901a",
        "cursor": {
          "ref": "00f751d9-6f2f-413b-813d-5eb49ab5daf2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a1ad5b65-3acb-486c-9e1e-885e3e0e0f0b"
        },
        "item": {
          "id": "027501ee-af74-42c8-8c68-6c07db0f901a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "db6e4fdd-17ed-487c-ae54-39b9d9063604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43be5ec6-dca3-427e-b39a-b06610688472",
        "cursor": {
          "ref": "ddfbaf0f-3c9f-4c2f-be1e-e82e4cc42d87",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "89602058-b58c-40f4-aeed-b4923706a107"
        },
        "item": {
          "id": "43be5ec6-dca3-427e-b39a-b06610688472",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "66e7131e-e118-48d4-96d8-b56c0f1190bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4beacedb-74e3-4ad1-b790-6ea9f84309c1",
        "cursor": {
          "ref": "6d214693-39c0-4800-b150-16b2d387b553",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4867ec37-ece4-4b5d-9828-2841cb61e411"
        },
        "item": {
          "id": "4beacedb-74e3-4ad1-b790-6ea9f84309c1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b55bf4b4-dd2d-4252-94a7-e1aee1fe1d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d80e3b9-60aa-4a4e-b995-76af8f8ba3a0",
        "cursor": {
          "ref": "24278e83-89da-4fd6-9087-38a218adae6d",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9e652699-95f4-444c-b860-56a57113132a"
        },
        "item": {
          "id": "3d80e3b9-60aa-4a4e-b995-76af8f8ba3a0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4a33ae26-270e-494d-a2e3-eb9549e68b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5c837c-05f1-467e-9779-8e47e70c8133",
        "cursor": {
          "ref": "2b345b2f-7dfe-4ebb-828a-aa39c00f284d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b024d913-4828-4341-aee7-a2b7aa623ad8"
        },
        "item": {
          "id": "cf5c837c-05f1-467e-9779-8e47e70c8133",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9d5c5593-ef37-437a-b0a3-40c50ba630c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821fb90c-5237-4522-8a06-8fb15441b307",
        "cursor": {
          "ref": "9e3b2b1d-49d8-4744-a6ae-2127ee3da29a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5d894e45-a6e0-4007-a4cb-3e20c2f0a098"
        },
        "item": {
          "id": "821fb90c-5237-4522-8a06-8fb15441b307",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "818970a8-41b9-4bd8-a97a-79c9212e9c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ed4e99-88f8-4c67-b958-08aece0b13cc",
        "cursor": {
          "ref": "af356afc-2b4d-4374-8eda-b2cd12a92a45",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1b54656b-d470-4001-9310-1a69a0992178"
        },
        "item": {
          "id": "68ed4e99-88f8-4c67-b958-08aece0b13cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5454f692-5890-494d-b7e7-be9e812c4d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d409be-6c3d-4ef2-9472-9ee42713459d",
        "cursor": {
          "ref": "cb42aee8-78dc-4cd2-83b7-c3dea7d9c9c7",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f8424a65-10ac-44af-9352-3ea8077cb63f"
        },
        "item": {
          "id": "46d409be-6c3d-4ef2-9472-9ee42713459d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e0105f97-d0d3-40bf-88b4-fb37679a6272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7e6ec5-7072-40ad-ab3e-75881476e43d",
        "cursor": {
          "ref": "ce2f3b2c-9c1e-4ce2-ba97-6fd15bfabeeb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1c8f2328-3f49-4a9e-90d1-ba0948f06b52"
        },
        "item": {
          "id": "7a7e6ec5-7072-40ad-ab3e-75881476e43d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3af4c2f6-b029-4d10-ad63-b80f789627a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb295ff5-03ce-4caa-8ebb-32ff0c960193",
        "cursor": {
          "ref": "d66922a5-e481-467f-b463-000b9b357ae7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f2c50147-74fc-484d-a267-4711037042d9"
        },
        "item": {
          "id": "cb295ff5-03ce-4caa-8ebb-32ff0c960193",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "286fa903-2595-4caa-ba2b-f5d105093c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a17cab-2445-49b6-b107-ca7ec7c51534",
        "cursor": {
          "ref": "aa43aea2-66e7-4c34-9e19-126662d09264",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3b416e16-9f62-4442-9974-fd64c25a0284"
        },
        "item": {
          "id": "74a17cab-2445-49b6-b107-ca7ec7c51534",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a6f3f779-9ba4-4aae-889b-83b664eb2397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e12c522-8777-4adf-bc12-2ffb581e6c7f",
        "cursor": {
          "ref": "414800b4-5e28-47ef-a4a2-fe80bf0d2048",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a6d254c2-6795-4ec7-b0a0-9f258da77341"
        },
        "item": {
          "id": "7e12c522-8777-4adf-bc12-2ffb581e6c7f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9b7b4a56-edf1-403e-a0ea-915f61e6900c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92676170-962f-4c17-a148-8164ff7ac354",
        "cursor": {
          "ref": "15d14a08-81b4-4e63-9eb0-f3145adc275d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f2330be-1d87-4b7b-aa73-0c12b7eb2b92"
        },
        "item": {
          "id": "92676170-962f-4c17-a148-8164ff7ac354",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a791ef7-3c0b-4a69-bcf5-1a5ae11a0739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e00b9a-9610-4364-b754-5766bded0f76",
        "cursor": {
          "ref": "2259cf33-2866-4acb-9083-586c883d1c38",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5bceac58-4972-4bb4-91a5-66798335abe1"
        },
        "item": {
          "id": "f8e00b9a-9610-4364-b754-5766bded0f76",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a05b6805-cf02-4d81-98ed-cf986e3d47ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d11b7ed-1d6b-4ad5-9e17-33885c0f68f1",
        "cursor": {
          "ref": "1d83a0a2-c46c-48db-9bea-2716c6d75e97",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "982c0964-30a9-4c7c-9d5e-2237a26c8da6"
        },
        "item": {
          "id": "4d11b7ed-1d6b-4ad5-9e17-33885c0f68f1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87055229-1440-4844-a31b-8a27d9b9f660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1197edaa-fe21-4a78-b06f-ca335211f44d",
        "cursor": {
          "ref": "49606754-c4b8-4ba2-96ab-b306e0151522",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c4aff5fb-6955-45ef-8278-dd9466c095e2"
        },
        "item": {
          "id": "1197edaa-fe21-4a78-b06f-ca335211f44d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d7c8ddc0-83ba-41f8-8460-738ff2f31b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc04d55-8baf-4ecb-89c8-7efff9154247",
        "cursor": {
          "ref": "dd5a0aa8-73a6-4def-9f66-2c15a52430ff",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "363d726a-11a1-414f-857a-0e4380adbbea"
        },
        "item": {
          "id": "dcc04d55-8baf-4ecb-89c8-7efff9154247",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee79492c-a52a-4178-9503-f025f93231e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04311e2d-ffb6-4465-9b7a-82a1fb5fc90f",
        "cursor": {
          "ref": "5108ed74-b421-4e63-9ab7-9f729ec8e6a0",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7d8abc8b-46a6-4aec-8a8c-966b70b0d149"
        },
        "item": {
          "id": "04311e2d-ffb6-4465-9b7a-82a1fb5fc90f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8931bbc7-25ed-469e-90d4-43f1fb5fce10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0850610-d2d2-44ae-8efb-7a752ab5958f",
        "cursor": {
          "ref": "f18c333e-8b65-4a16-9d37-5f882d818542",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c6f12631-f121-4e8f-b61a-a6f1ee31fdcd"
        },
        "item": {
          "id": "d0850610-d2d2-44ae-8efb-7a752ab5958f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3e820f8f-c1f1-4384-961c-31ec17415ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990d0335-e247-4662-9a1f-731cdd89bdfd",
        "cursor": {
          "ref": "f0164fde-053b-47bc-bbb0-b9425d50a1ac",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c8171596-ccc8-4874-9f23-044fd081f207"
        },
        "item": {
          "id": "990d0335-e247-4662-9a1f-731cdd89bdfd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28e80633-2b95-4880-877d-c51c2fe97dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79afcc3d-d665-430e-a653-b08fb1f7c6e3",
        "cursor": {
          "ref": "42c2f8bd-dfac-4674-b299-641c590f6b9a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7bffb981-bc2e-4b81-8daf-d9d622c3c179"
        },
        "item": {
          "id": "79afcc3d-d665-430e-a653-b08fb1f7c6e3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "37df7918-0950-497e-a0cb-15df0cfe95c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a84a8df-2620-48ab-a501-a3994dd4d335",
        "cursor": {
          "ref": "e5f4be7c-de98-4de8-bf8f-eff8a3f624c1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d2175a08-8978-450a-b9c0-703b1de8512d"
        },
        "item": {
          "id": "0a84a8df-2620-48ab-a501-a3994dd4d335",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d86c488e-7ab5-4883-99c7-88bae8eb0ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d0c2a5-7cb4-4b61-8905-60e8c29a72fe",
        "cursor": {
          "ref": "33dc4058-651e-4ac1-a7f3-671b52272b0f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b4fbcab-683e-46c1-bff2-0fd8b23be0fc"
        },
        "item": {
          "id": "85d0c2a5-7cb4-4b61-8905-60e8c29a72fe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "82f63626-b904-4930-80a8-a8a5114fe1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1615815-887c-4ef1-95cb-9aa5a8d85699",
        "cursor": {
          "ref": "e321dc78-199f-47fa-9217-b7c91e081b5f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f161e1e9-3bf0-4625-b916-36dbeb51c7cc"
        },
        "item": {
          "id": "e1615815-887c-4ef1-95cb-9aa5a8d85699",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "be94e5cd-c578-4d3e-84c7-959d6c9d28c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defcb530-e36d-47a8-98ed-6b9e914ff8b8",
        "cursor": {
          "ref": "687300e4-9514-4214-ac32-55cdf4b5912a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "404d1819-35b4-4d34-8f1d-732ea93690fb"
        },
        "item": {
          "id": "defcb530-e36d-47a8-98ed-6b9e914ff8b8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "81057556-ec1b-4607-819b-ddb766cb6e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e80aa3-11da-427d-85b1-78b8380169f2",
        "cursor": {
          "ref": "88a74d59-f832-4f36-8341-50a7612051f2",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dd5d58d9-3062-4781-86a6-94f6b2c55f51"
        },
        "item": {
          "id": "f7e80aa3-11da-427d-85b1-78b8380169f2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1ce5b7cb-7503-442c-b8c1-bbda3831970b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b85088e-aab3-4884-93a9-29308e462cf5",
        "cursor": {
          "ref": "99469276-e23f-430a-950a-ffd6fa629dc8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "734013be-148b-4036-acc3-1b27ee20a666"
        },
        "item": {
          "id": "9b85088e-aab3-4884-93a9-29308e462cf5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "285175b1-b910-4742-aaeb-fcf19a7172a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32099ed6-7e1f-4cb3-8bfc-54ac1c4abebb",
        "cursor": {
          "ref": "992ce1a5-ab3e-42db-9c31-08b9c3812811",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6576c6ff-c890-4af8-be0c-0fdf0fa1553a"
        },
        "item": {
          "id": "32099ed6-7e1f-4cb3-8bfc-54ac1c4abebb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "26eec492-e749-4cf5-8406-81b4dcce771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73641a98-c6bf-4c5c-8d5d-dfb631b1a4d7",
        "cursor": {
          "ref": "f4c4b7e6-5696-4b9e-9656-9bca64a27fde",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1aab7400-b13b-4be9-a7ad-ae884e48b390"
        },
        "item": {
          "id": "73641a98-c6bf-4c5c-8d5d-dfb631b1a4d7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "42990be8-ddc3-46a3-a1e7-f76e823e4b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56532e96-c249-4dd9-bc2a-273c0672a189",
        "cursor": {
          "ref": "f06f2639-43a9-4ecd-89cb-dd837578cf3d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "804d244c-4607-4d92-8c0c-3237f7b12870"
        },
        "item": {
          "id": "56532e96-c249-4dd9-bc2a-273c0672a189",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "541af56e-be03-4df5-b1ab-109c17ed6c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f11e36-c228-44ce-94fd-7ae38aaacb90",
        "cursor": {
          "ref": "58223842-01bf-4deb-afb1-078a15a23abc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d9e0d430-d5a6-43cf-9987-649870b49045"
        },
        "item": {
          "id": "48f11e36-c228-44ce-94fd-7ae38aaacb90",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c8beb8a4-e660-4fae-93df-c7b2cdd38b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7724a2-f28d-4f7e-bc55-16c99b65da3b",
        "cursor": {
          "ref": "a90ca6d9-2f6f-4155-9e1f-4f7513f68885",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "562ed10b-c313-4e10-84b9-4a45277985bf"
        },
        "item": {
          "id": "0b7724a2-f28d-4f7e-bc55-16c99b65da3b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b53bc608-b48e-4705-84b6-fcd5cd089537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b04c829-06e8-4b23-b6da-9d7aeca2cb14",
        "cursor": {
          "ref": "189e0a86-221c-4be0-83b0-f1e1b9f3a8e1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1c90a5e4-2b95-466c-be7f-59f462be8d24"
        },
        "item": {
          "id": "7b04c829-06e8-4b23-b6da-9d7aeca2cb14",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8b11af5a-8855-4cf5-a309-838405f89096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5674f6f4-677c-4006-9f7f-ec33afd8e577",
        "cursor": {
          "ref": "2311651e-7fc8-4437-a020-df8831ec02d3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dc6e2acb-3b95-47a8-8602-5ab7abd3bba5"
        },
        "item": {
          "id": "5674f6f4-677c-4006-9f7f-ec33afd8e577",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6594f46f-156a-4a23-97fe-215819526e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7298e2ab-d63f-4a4d-854f-2928c34c096c",
        "cursor": {
          "ref": "2d0c63f8-5a1a-40f6-9d81-97e1440bd030",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "158c9a18-1286-4a6c-b4aa-5eb604cd7b01"
        },
        "item": {
          "id": "7298e2ab-d63f-4a4d-854f-2928c34c096c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "82537334-a92b-4ea4-ad58-e478d07498f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31accd09-256d-4927-b8f8-98f8461af9bc",
        "cursor": {
          "ref": "c62d9dfe-40ee-4973-a897-00ca611ad2bc",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0a5de1fc-3549-4193-8b07-335ad8bd83a7"
        },
        "item": {
          "id": "31accd09-256d-4927-b8f8-98f8461af9bc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7849cc5e-caa2-473b-90ab-debc9e8f196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e310700-fa1b-4378-87e5-2483790aac0b",
        "cursor": {
          "ref": "f34f5b7d-fc31-4f33-810d-78d5727261b1",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e70d5626-e331-474f-bde1-5a9f79ea2747"
        },
        "item": {
          "id": "8e310700-fa1b-4378-87e5-2483790aac0b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2e4fe4c6-40c2-4743-8a32-017968c63fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4975037-d9d2-45b1-b600-6cc120a59fdc",
        "cursor": {
          "ref": "59340257-90ac-4e3c-99dd-351d59aa691c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6838c802-c1ec-4b1e-aa66-cb6179311f2a"
        },
        "item": {
          "id": "f4975037-d9d2-45b1-b600-6cc120a59fdc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f9dc8a95-07e6-4b0c-89e3-6e6f3e73c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a850fdb-0da9-4358-a378-7011df3ec63b",
        "cursor": {
          "ref": "a5c0dda8-39f4-4f08-ba3b-cf3a3aca3741",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f5420300-1406-4253-b8cd-2a57b470b258"
        },
        "item": {
          "id": "4a850fdb-0da9-4358-a378-7011df3ec63b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "44f1ee79-7be4-409c-9bc4-0ecda8a1a547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18fa97e-279a-4636-a216-46c6c3e95fd5",
        "cursor": {
          "ref": "0501389e-45a3-43e3-b23f-5837fed85096",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ccfcedd8-9a59-4323-aa08-33232ddbb809"
        },
        "item": {
          "id": "c18fa97e-279a-4636-a216-46c6c3e95fd5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c643fab4-f626-468d-9425-fea1de69085b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4629db-8503-4e1d-9a16-4e12127d6737",
        "cursor": {
          "ref": "6bacfe3b-eb8c-4e09-8e22-ac7adc325273",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4e6338c1-c161-43e4-871d-dac1839dddbf"
        },
        "item": {
          "id": "7e4629db-8503-4e1d-9a16-4e12127d6737",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e0fc40ed-2669-4341-8d32-7567eaca069f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7661bf85-ef9e-4c50-9214-66190af4d625",
        "cursor": {
          "ref": "46351300-e2af-4097-b87c-3c342e8c703a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "77a6f546-1da8-4559-a6e6-9e3c9c1b3b20"
        },
        "item": {
          "id": "7661bf85-ef9e-4c50-9214-66190af4d625",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7940efbd-83d7-4802-bb39-5f8bd859fd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215c9a7d-aac6-44e1-9559-d609e3759e51",
        "cursor": {
          "ref": "b2d847a4-02e5-4023-81c5-bbaa49d43642",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f36c1153-67f3-4eb3-b6e8-f5c020b01dc4"
        },
        "item": {
          "id": "215c9a7d-aac6-44e1-9559-d609e3759e51",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "429782da-6954-45bc-aed6-69c4724cead0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add9867d-0c6d-4c4d-ad6d-258ca2d955e5",
        "cursor": {
          "ref": "08442db6-4cdd-41be-ac2f-68c1a784b3ed",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a93b498b-f106-48e6-9a82-bb6d59679a9e"
        },
        "item": {
          "id": "add9867d-0c6d-4c4d-ad6d-258ca2d955e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6c9659d6-6916-4a68-bf6c-f2a1e3d8c87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5542b386-4c37-4dda-90b2-46551d3a50c9",
        "cursor": {
          "ref": "917e73a3-d728-4838-b6a6-50069c177fb6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d45dc831-6461-44ed-bcec-5f4e642ffca1"
        },
        "item": {
          "id": "5542b386-4c37-4dda-90b2-46551d3a50c9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8064a2be-13a4-4c4c-adcc-30bef2114cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c384aeb4-394a-4a2f-87b9-ef3f2b6d032a",
        "cursor": {
          "ref": "473ac2a9-7a9e-4fc0-b1d9-f10fd8d85696",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "49b045ea-abf2-4cc6-a3df-8d83cbbc2230"
        },
        "item": {
          "id": "c384aeb4-394a-4a2f-87b9-ef3f2b6d032a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "df9cdc52-cc80-4338-87f4-13dc0e1d98dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a707816c-564b-453d-a932-a360ab7d6c8f",
        "cursor": {
          "ref": "e9cc6cd0-466f-40df-90b5-77b689802f1e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9d2b48c8-ece7-4183-aa8f-359a4acd12a8"
        },
        "item": {
          "id": "a707816c-564b-453d-a932-a360ab7d6c8f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "51524e9a-e97c-4599-b635-dc885e5d7c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc76ef8d-0acc-492a-9798-2c16f1b127f8",
        "cursor": {
          "ref": "5299ca0c-08fc-46f0-b535-e780cc868c29",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "05563090-5878-49b3-84a3-9c8465655e45"
        },
        "item": {
          "id": "dc76ef8d-0acc-492a-9798-2c16f1b127f8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d5ba233e-1bfb-4355-9521-b43a4406ad0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08961e44-1102-4074-8d26-261b724fd45f",
        "cursor": {
          "ref": "398cc54f-6a3b-44a2-8bcc-7202825f42d5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4ad6f02e-cad6-4bc7-908e-d03db0f99cdc"
        },
        "item": {
          "id": "08961e44-1102-4074-8d26-261b724fd45f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "08ee4c21-fab7-464a-8c9d-50cfb6177659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6c177e-42ee-4ffe-a0bf-6bdcb1f700ea",
        "cursor": {
          "ref": "21e6cd53-366f-4f5e-9122-1ce8720eae72",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "aa6e9ae6-0a15-466e-a5c9-91cf6e4e167c"
        },
        "item": {
          "id": "8a6c177e-42ee-4ffe-a0bf-6bdcb1f700ea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "671b8def-5c3d-422c-bc78-30d76e57aeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae118f1-fa49-45f3-a589-cbefc069420d",
        "cursor": {
          "ref": "1082dd03-725c-4030-ac4f-175b1740761e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f9701783-762b-4093-8dfc-4c1f84a5406d"
        },
        "item": {
          "id": "9ae118f1-fa49-45f3-a589-cbefc069420d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ada2617b-c528-438f-84c8-df4bca162ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1df9311-6f3b-4cf0-a53f-ca87541b88d6",
        "cursor": {
          "ref": "1d4817ae-ec17-44c8-8da7-bdfad6460793",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dc17c391-0f67-4d5c-a9cd-c138972b7e45"
        },
        "item": {
          "id": "f1df9311-6f3b-4cf0-a53f-ca87541b88d6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4bcaa6d3-6661-4b30-9db6-1a2bf440c304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caba2333-a051-4773-829f-f07e2b5de905",
        "cursor": {
          "ref": "3f5e3243-87b5-4580-951f-a4de020afdba",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "091bdf34-31f1-4d66-8239-2f4307e05ab7"
        },
        "item": {
          "id": "caba2333-a051-4773-829f-f07e2b5de905",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3e610ddd-e870-446f-a355-60eda9455590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da96da7e-ae89-4bb9-8b1c-9b9fe2c4dc6f",
        "cursor": {
          "ref": "447fb22c-976a-4710-afde-b7243e26bce8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "38e65a03-6b36-4125-ad56-f639be9fcf24"
        },
        "item": {
          "id": "da96da7e-ae89-4bb9-8b1c-9b9fe2c4dc6f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "89c3aab6-bba0-403e-be58-3f867c980cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2475610d-5b64-4c99-8c8d-21e29aaf7356",
        "cursor": {
          "ref": "9b761430-55a5-4e97-b9f4-0b1835952671",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "15c223cf-3d6f-4563-9d61-368d7bf9d246"
        },
        "item": {
          "id": "2475610d-5b64-4c99-8c8d-21e29aaf7356",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c44c9a75-6c94-480a-a4d8-13a0587f37af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1fd413-7433-4c0d-9b82-0e1874545e46",
        "cursor": {
          "ref": "9c1019b9-9e74-4991-bff3-9338e1dac14c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "174cb7e2-c761-46b5-bf77-e84375d4c032"
        },
        "item": {
          "id": "1a1fd413-7433-4c0d-9b82-0e1874545e46",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4754876a-f509-477b-a755-56790c7bdba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3871d842-cb1e-4704-9d0f-86adfee93d57",
        "cursor": {
          "ref": "ea437ac4-4f57-496f-997d-c4b243ef718f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ad834f00-fdc6-4740-b78a-118d820364fc"
        },
        "item": {
          "id": "3871d842-cb1e-4704-9d0f-86adfee93d57",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "09f99f15-e1ca-4eb1-b8c2-88365eed9b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b3d787-80d0-4a19-88e8-66a6a28a4465",
        "cursor": {
          "ref": "8e11dc81-ca88-4afc-8984-2425f84cd2d4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "daf0781d-7014-4006-bb5a-037d37d4d701"
        },
        "item": {
          "id": "b6b3d787-80d0-4a19-88e8-66a6a28a4465",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "538fb825-fe6e-4c85-9987-1888461d66c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77a53f0-4e6b-42d2-a54b-c970803a8f48",
        "cursor": {
          "ref": "ac695fb3-24d4-4d6c-9f7b-34fc4b5dbfb4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "501963a0-d5f4-433f-9106-cea1b0a603a1"
        },
        "item": {
          "id": "e77a53f0-4e6b-42d2-a54b-c970803a8f48",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6c0bb3ea-9c4c-4590-84ac-96937240b923",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fff82f-eb42-4573-aac0-c996a973d329",
        "cursor": {
          "ref": "a14a54ec-2e64-4b8d-9af7-08742e9c219d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f9adb242-6ab0-4bd9-921c-b0e9e6f5358a"
        },
        "item": {
          "id": "e4fff82f-eb42-4573-aac0-c996a973d329",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8a7af263-d8ba-4a7d-9d07-e58ad96c6e13",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd4f993-de8b-426b-8a8b-c05d5f6bdc37",
        "cursor": {
          "ref": "9ca2e59c-67af-4d19-b0d8-834b66fdabb0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6553f5d0-db8a-48c5-80f6-2db1c4bf8bb7"
        },
        "item": {
          "id": "7fd4f993-de8b-426b-8a8b-c05d5f6bdc37",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5f36ff26-720b-40a9-91c4-99253ac074d0",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f92a9f1-9a3b-4203-87bc-0b5862fe5557",
        "cursor": {
          "ref": "2cabfcfa-b8ce-4e53-881c-57f243f16c0c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a19a8c2c-2861-4f70-bbc6-4f17e4370c67"
        },
        "item": {
          "id": "3f92a9f1-9a3b-4203-87bc-0b5862fe5557",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b020ef7f-5fa9-46bc-8509-d768849a1cff",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99558093-fe30-412f-a3c4-fbe87ad9ca7d",
        "cursor": {
          "ref": "8ded32e8-25e8-4810-9675-9df3baa52831",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6ea7b532-1fe1-48a2-bb6e-ea645367bd86"
        },
        "item": {
          "id": "99558093-fe30-412f-a3c4-fbe87ad9ca7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c47ce1fa-cda1-4c49-a7f2-1bea69b65e43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99558093-fe30-412f-a3c4-fbe87ad9ca7d",
        "cursor": {
          "ref": "8ded32e8-25e8-4810-9675-9df3baa52831",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6ea7b532-1fe1-48a2-bb6e-ea645367bd86"
        },
        "item": {
          "id": "99558093-fe30-412f-a3c4-fbe87ad9ca7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c47ce1fa-cda1-4c49-a7f2-1bea69b65e43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705ba83e-5d8a-497a-9f6e-c3cebfeddb89",
        "cursor": {
          "ref": "7e843be3-f86b-4f39-a9cc-4a995ef1614c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "62cee40b-2b59-44a6-bd11-1d8295a6c88b"
        },
        "item": {
          "id": "705ba83e-5d8a-497a-9f6e-c3cebfeddb89",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fa0a2977-3eba-4d24-83a7-b53cce6b66bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4109c2b7-e829-4754-b6e3-56f1c81f91c0",
        "cursor": {
          "ref": "1819d5bc-5931-499f-bb28-d8db1f114e13",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b0e279dd-8c99-422c-a87b-498733faa9e7"
        },
        "item": {
          "id": "4109c2b7-e829-4754-b6e3-56f1c81f91c0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9deba464-08ac-4e55-8d73-a3e3cd2b7aa5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}